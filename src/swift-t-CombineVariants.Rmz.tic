
# Generated by stc version 0.7.2
# date                    : 2017/02/28 14:22:27
# Turbine version         : 0.9.1
# Input filename          : /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/CombineVariants.swift
# Output filename         : /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/swift-t-CombineVariants.Rmz.tic
# STC home                : /usr/local/apps/bioapps/swift-t/swift-t-1.1/stc
# Turbine home            : /usr/local/apps/bioapps/swift-t/swift-t-1.1/turbine
# Compiler settings:
# stc.auto-declare              : true
# stc.c_preprocess              : true
# stc.checkpointing             : true
# stc.compiler-debug            : true
# stc.debugging                 : COMMENTS
# stc.ic.output-file            : 
# stc.input_filename            : /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/CombineVariants.swift
# stc.log.file                  : 
# stc.log.trace                 : false
# stc.must_pass_wait_vars       : true
# stc.opt.algebra               : true
# stc.opt.array-build           : true
# stc.opt.batch-refcounts       : true
# stc.opt.cancel-refcounts      : true
# stc.opt.constant-fold         : true
# stc.opt.controlflow-fusion    : true
# stc.opt.dataflow-op-inline    : true
# stc.opt.dead-code-elim        : true
# stc.opt.demote-globals        : true
# stc.opt.disable-asserts       : false
# stc.opt.expand-loop-threshold-insts: 256
# stc.opt.expand-loop-threshold-iters: 16
# stc.opt.expand-loops          : false
# stc.opt.finalized-var         : true
# stc.opt.flatten-nested        : true
# stc.opt.full-function-inline  : false
# stc.opt.full-unroll           : false
# stc.opt.function-always-inline-threshold: 5
# stc.opt.function-inline       : true
# stc.opt.function-inline-threshold: 50
# stc.opt.function-signature    : true
# stc.opt.hoist                 : true
# stc.opt.hoist-refcounts       : true
# stc.opt.loop-simplify         : true
# stc.opt.max-iterations        : 10
# stc.opt.merge-refcounts       : true
# stc.opt.piggyback-refcounts   : true
# stc.opt.pipeline              : false
# stc.opt.propagate-aliases     : true
# stc.opt.reorder-insts         : false
# stc.opt.shared-constants      : true
# stc.opt.unroll-loop-threshold-insts: 192
# stc.opt.unroll-loop-threshold-iters: 8
# stc.opt.unroll-loops          : true
# stc.opt.value-number          : true
# stc.opt.wait-coalesce         : true
# stc.output_filename           : /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/swift-t-CombineVariants.Rmz.tic
# stc.preproc.force-cpp         : false
# stc.preproc.force-gcc         : false
# stc.preprocess_only           : false
# stc.profile                   : false
# stc.refcounting               : true
# stc.rpath                     : ./
# stc.stc_home                  : /usr/local/apps/bioapps/swift-t/swift-t-1.1/stc
# stc.turbine.version           : 0.9.1
# stc.turbine_home              : /usr/local/apps/bioapps/swift-t/swift-t-1.1/turbine
# stc.version                   : 0.7.2

# Metadata:

# rpath entries
lappend auto_path "./"
package require turbine 0.9.1
namespace import turbine::*


proc swift:constants {  } {
    turbine::c::log "function:swift:constants"
}

package require align 0.2


proc swift:main {  } {
    turbine::c::log "function: __entry"
    # Var: string t:7 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/CombineVariants.swift:37:33
    # Var: string t:9 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/CombineVariants.swift:40:25
    # Var: $string v:configFilename VALUE_OF [string:configFilename]
    # Var: file u:sampleInfoFile /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/CombineVariants.swift:37:0
    # Var: string[string] u:vars /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/CombineVariants.swift:34:0
    # Var: file u:configFile /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/CombineVariants.swift:30:0
    # Var: string[int] u:indices /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/CombineVariants.swift:40:0
    # Var: string t:24 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/CombineVariants.swift:__entry():74:26
    # Var: string t:35 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/CombineVariants.swift:__entry():81:39
    # Var: string t:37 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/CombineVariants.swift:__entry():82:11
    # Var: string t:40 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/CombineVariants.swift:__entry():83:18
    # Var: string t:43 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/CombineVariants.swift:__entry():83:45
    # Var: string t:49 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/CombineVariants.swift:__entry():84:45
    # Var: $file v:configFile VALUE_OF [file:configFile]
    # Var: $file v:configFile:1 VALUE_OF [file:configFile]
    # Var: $string$[int] v:configFileData VALUE_OF [string[int]:configFileData]
    # Var: string t:39 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/CombineVariants.swift:__entry():83:11
    # Var: string t:45 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/CombineVariants.swift:__entry():84:11
    lassign [ adlb::multicreate [ list string 1 1 1 ] [ list string 1 1 2 ] [ list container string string 8 1 4 ] [ list container integer string 1 1 6 ] [ list string 1 1 7 ] [ list string 1 1 8 ] [ list string 1 1 9 ] [ list string 1 1 10 ] [ list string 1 1 11 ] [ list string 1 1 12 ] [ list string 1 1 13 ] [ list string 1 1 14 ] ] t:7 t:9 u:vars u:indices t:24 t:35 t:37 t:40 t:43 t:49 t:39 t:45
    turbine::c::log "allocated t:7=<${t:7}> t:9=<${t:9}> u:vars=<${u:vars}> u:indices=<${u:indices}> t:24=<${t:24}>"
    turbine::c::log "allocated t:35=<${t:35}> t:37=<${t:37}> t:40=<${t:40}> t:43=<${t:43}> t:49=<${t:49}>"
    turbine::c::log "allocated t:39=<${t:39}> t:45=<${t:45}>"
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 3 ] [ list file 1 1 5 ] ] [ list 0 0 ] ] u:sampleInfoFile u:configFile
    turbine::argv_accept_impl [ list "runfile" ]
    set v:configFilename [ turbine::argv_get_impl "runfile" ]
    set tcltmp:init_rc 1
    set v:configFile [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:configFile ${v:configFilename}
    turbine::store_file ${u:configFile} v:configFile 1
    set v:configFile:1 [ turbine::retrieve_file ${u:configFile} CACHED 1 ]
    set v:configFileData [ turbine::file_lines_impl ${v:configFile:1} ]
    turbine::container_reference ${u:vars} "SAMPLEINFORMATION" ${t:7} string
    turbine::container_reference ${u:vars} "CHRNAMES" ${t:9} string
    turbine::container_reference ${u:vars} "OUTPUTDIR" ${t:24} string
    turbine::container_reference ${u:vars} "JAVADIR" ${t:35} string
    turbine::container_reference ${u:vars} "GATKDIR" ${t:37} string
    turbine::container_reference ${u:vars} "REFGENOMEDIR" ${t:40} string
    turbine::container_reference ${u:vars} "REFGENOME" ${t:43} string
    turbine::container_reference ${u:vars} "DBSNP" ${t:49} string
    dict for {tcltmp:ignore v:line} ${v:configFileData} {
        # Var: string[int] u:keyValuePair RENAMED [string[int]:keyValuePair] ./generalfunctions/general.swift:getConfigVariables():21:2
        # Var: $string$[int] v:keyValuePair VALUE_OF [string[int]:keyValuePair]
        # Var: $string v:alias:name VALUE_OF [string:__alias:name]
        # Var: $string v:alias:value VALUE_OF [string:__alias:value]
        lassign [ adlb::multicreate [ list container integer string 1 2 15 ] ] u:keyValuePair
        turbine::c::log "allocated u:keyValuePair=<${u:keyValuePair}>"
        set v:keyValuePair [ turbine::split_impl ${v:line} "=" ]
        turbine::build_rec ${u:keyValuePair} ${v:keyValuePair} [ list container integer string ] 0 1
        set a:name [ adlb::subscript_container ${u:keyValuePair} 0 ]
        set v:alias:name [ turbine::retrieve_string ${a:name} ]
        set a:value [ adlb::subscript_container ${u:keyValuePair} 1 ]
        set v:alias:value [ turbine::retrieve_string ${a:value} CACHED 1 ]
        turbine::container_insert ${u:vars} ${v:alias:name} ${v:alias:value} string 0
        adlb::write_refcount_decr ${u:keyValuePair} 1
    }
    turbine::rule [ list ${t:7} ] "__entry-call_foreign-input_file ${t:24} ${t:35} ${t:37} ${t:39} ${t:45} ${t:7} ${u:indices} {${u:sampleInfoFile}}"
    turbine::rule [ list ${t:9} ] "__entry-call_foreign-split ${t:9} ${u:indices}"
    turbine::rule [ list ${t:40} ] "__entry-optmerged-1 ${t:39} ${t:40} ${t:43} ${t:45} ${t:49}"
    turbine::decr_local_file_refcount v:configFile
    adlb::write_refcount_decr ${u:vars} 1
}


proc __entry-call_foreign-input_file { t:24 t:35 t:37 t:39 t:45 t:7 u:indices u:sampleInfoFile } {
    # Var: $string v:t:7 VALUE_OF [string:__t:7]
    # Var: $file v:sampleInfoFile VALUE_OF [file:sampleInfoFile]
    # Var: $file v:sampleInfoFile:1 VALUE_OF [file:sampleInfoFile]
    # Var: $string$[int] v:sampleLines VALUE_OF [string[int]:sampleLines]
    set v:t:7 [ turbine::retrieve_string ${t:7} CACHED 1 ]
    set tcltmp:init_rc 1
    set v:sampleInfoFile [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:sampleInfoFile ${v:t:7}
    turbine::store_file ${u:sampleInfoFile} v:sampleInfoFile 1
    set v:sampleInfoFile:1 [ turbine::retrieve_file ${u:sampleInfoFile} CACHED 1 ]
    set v:sampleLines [ turbine::file_lines_impl ${v:sampleInfoFile:1} ]
    set tcltmp:iters [ dict size ${v:sampleLines} ]
    turbine::read_refcount_incr ${t:45} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:24} [ expr { 2 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:37} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${u:indices} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:35} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:39} [ expr { ${tcltmp:iters} } ]
    dict for {tcltmp:ignore v:sample} ${v:sampleLines} {
        # Var: string[int] t:12 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/CombineVariants.swift:__entry():43:21
        # Var: string[int] u:chrSampleArray /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/CombineVariants.swift:__entry():51:1
        # Var: file u:gvcfSample /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/CombineVariants.swift:__entry():75:17
        # Var: file u:combineLog /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/CombineVariants.swift:__entry():79:84
        # Var: $string$[int] v:t:12 VALUE_OF [string[int]:__t:12]
        # Var: $string v:alias:sampleName VALUE_OF [string:__alias:sampleName]
        lassign [ adlb::multicreate [ list container integer string 1 2 16 ] [ list container integer string 1 1 17 ] ] t:12 u:chrSampleArray
        turbine::c::log "allocated t:12=<${t:12}> u:chrSampleArray=<${u:chrSampleArray}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 0 1 18 ] [ list file 0 1 19 ] ] [ list 1 1 ] ] u:gvcfSample u:combineLog
        set v:t:12 [ turbine::split_impl ${v:sample} " " ]
        turbine::build_rec ${t:12} ${v:t:12} [ list container integer string ] 0 1
        set a:sampleName [ adlb::subscript_container ${t:12} 0 ]
        set v:alias:sampleName [ turbine::retrieve_string ${a:sampleName} CACHED 1 ]
        turbine::rule [ list ${u:indices} ] [ list __entry-foreach-wait2 ${t:24} ${v:alias:sampleName} ${u:chrSampleArray} ${u:indices} ]
        turbine::rule [ list ${t:24} ] [ list __entry-optmerged ${t:24} ${t:35} ${t:37} ${t:39} ${t:45} ${v:alias:sampleName} ${u:chrSampleArray} ${u:combineLog} ${u:gvcfSample} ]
        adlb::write_refcount_decr ${t:12} 1
    }
    turbine::decr_local_file_refcount v:sampleInfoFile
    turbine::read_refcount_decr ${t:45} 1
    turbine::read_refcount_decr ${t:24} 1
    turbine::read_refcount_decr ${t:35} 1
    turbine::read_refcount_decr ${t:37} 1
    turbine::read_refcount_decr ${t:39} 1
    turbine::read_refcount_decr ${u:indices} 1
}


proc __entry-foreach-wait2 { t:24 v:alias:sampleName u:chrSampleArray u:indices } {
    set tcltmp:container_sz [ adlb::enumerate ${u:indices} count all 0 ]
    set tcltmp:iters ${tcltmp:container_sz}
    turbine::read_refcount_incr ${t:24} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${u:indices} [ expr { ${tcltmp:iters} - 1 } ]
    adlb::write_refcount_incr ${u:chrSampleArray} [ expr { ${tcltmp:iters} - 1 } ]
    __entry-foreach2:outer ${t:24} ${v:alias:sampleName} ${u:chrSampleArray} ${u:indices} 0 [ expr { ${tcltmp:container_sz} - 1 } ] 1
}


proc __entry-foreach2:outer { t:24 v:alias:sampleName u:chrSampleArray u:indices tcltmp:lo tcltmp:hi tcltmp:inc } {
    if { [ expr { ${tcltmp:lo} > ${tcltmp:hi} } ] } {
        return
    }
    while {1} {
        set tcltmp:itersleft [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
        if { [ expr { ${tcltmp:itersleft} <= 64 } ] } {
            __entry-foreach2:inner ${t:24} ${v:alias:sampleName} ${u:chrSampleArray} ${u:indices} ${tcltmp:lo} ${tcltmp:hi} ${tcltmp:inc}
            return
        } else {
            set tcltmp:skip [ expr { ${tcltmp:inc} * max(64,((${tcltmp:itersleft} - 1) / 16) + 1) } ]
            for { set tcltmp:splitstart [ expr { ${tcltmp:lo} + ${tcltmp:skip} } ] } { ${tcltmp:splitstart} <= ${tcltmp:hi} } { incr tcltmp:splitstart ${tcltmp:skip} } {
                set tcltmp:splitend [ expr { min(${tcltmp:hi},${tcltmp:splitstart} + ${tcltmp:skip} - 1) } ]
                set tcltmp:prio [ turbine::get_priority ]
                turbine::set_priority ${tcltmp:prio}
                adlb::spawn 0 [ list __entry-foreach2:outer ${t:24} ${v:alias:sampleName} ${u:chrSampleArray} ${u:indices} ${tcltmp:splitstart} ${tcltmp:splitend} ${tcltmp:inc} ]
                turbine::reset_priority
            }
            set tcltmp:hi [ expr { ${tcltmp:lo} + ${tcltmp:skip} - 1 } ]
        }
    }
}


proc __entry-foreach2:inner { t:24 v:alias:sampleName u:chrSampleArray u:indices tcltmp:lo tcltmp:hi tcltmp:inc } {
    set tcltmp:splitlen [ expr { ${tcltmp:hi} - ${tcltmp:lo} + 1 } ]
    set tcltmp:contents [ adlb::enumerate ${u:indices} dict ${tcltmp:splitlen} ${tcltmp:lo} ]
    dict for {v:index v:chr} ${tcltmp:contents} {
        # Var: $int v:varFlagPos VALUE_OF [int:varFlagPos]
        # Var: $int v:namePos VALUE_OF [int:namePos]
        set v:varFlagPos [ expr { ${v:index} * 2 } ]
        set v:namePos [ expr { ${v:varFlagPos} + 1 } ]
        turbine::container_insert ${u:chrSampleArray} ${v:varFlagPos} "--variant" string 0
        turbine::rule [ list ${t:24} ] [ list __entry-async_op-strcat ${t:24} ${v:alias:sampleName} ${v:chr} ${v:namePos} ${u:chrSampleArray} ]
    }
    set tcltmp:iters [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
    turbine::read_refcount_decr ${u:indices} [ expr { ${tcltmp:iters} } ]
}


proc __entry-async_op-strcat { t:24 v:alias:sampleName v:chr v:namePos u:chrSampleArray } {
    # Var: $string v:t:24:2 VALUE_OF [string:__t:24]
    # Var: $string v:location VALUE_OF [string:location]
    set v:t:24:2 [ turbine::retrieve_string ${t:24} CACHED 1 ]
    set v:location "${v:t:24:2}/${v:alias:sampleName}/variant/${v:alias:sampleName}.wDedups.sorted.recalibrated.${v:chr}.g.vcf"
    turbine::container_insert ${u:chrSampleArray} ${v:namePos} ${v:location} string 1
}


proc __entry-optmerged { t:24 t:35 t:37 t:39 t:45 v:alias:sampleName u:chrSampleArray u:combineLog u:gvcfSample } {
    # Var: $string v:t:24 VALUE_OF [string:__t:24]
    # Var: $string v:t:23 VALUE_OF [string:__t:23]
    # Var: $string v:t:29 VALUE_OF [string:__t:29]
    set v:t:24 [ turbine::retrieve_string ${t:24} CACHED 1 ]
    set v:t:23 "${v:t:24}/${v:alias:sampleName}/variant/${v:alias:sampleName}.wDedups.sorted.recalibrated.g.vcf"
    set v:t:29 "${v:t:24}/${v:alias:sampleName}/logs/${v:alias:sampleName}_CombineGVCFs.log"
    turbine::set_filename_val ${u:gvcfSample} ${v:t:23}
    turbine::set_filename_val ${u:combineLog} ${v:t:29}
    turbine::rule [ list ${t:35} ${t:37} ${t:39} ${t:45} ${u:chrSampleArray} ] [ list CombineGVCFs-app-leaf1 ${t:35} ${t:37} ${t:39} ${t:45} ${v:t:23} ${v:t:29} ${u:chrSampleArray} ${u:combineLog} ${u:gvcfSample} ]
}


proc CombineGVCFs-app-leaf1 { t:35 t:37 t:39 t:45 v:t:23 v:t:29 u:chrSampleArray u:combineLog u:gvcfSample } {
    # Var: $string v:javadir RENAMED [$string:__v:javadir] ./bioapps/merge_vcf.swift:CombineGVCFs():3:124
    # Var: $string v:gatkdir RENAMED [$string:__v:gatkdir] ./bioapps/merge_vcf.swift:CombineGVCFs():3:124
    # Var: $string v:reference RENAMED [$string:__v:reference] ./bioapps/merge_vcf.swift:CombineGVCFs():3:124
    # Var: $string v:dbsnp RENAMED [$string:__v:dbsnp] ./bioapps/merge_vcf.swift:CombineGVCFs():3:124
    # Var: $string$[int] v:variants RENAMED [$string$[int]:__v:variants] ./bioapps/merge_vcf.swift:CombineGVCFs():3:124
    # Var: $file v:outputfile RENAMED [$file:__v:outputfile] ./bioapps/merge_vcf.swift:CombineGVCFs():3:124
    # Var: $file v:outLog RENAMED [$file:__v:outLog] ./bioapps/merge_vcf.swift:CombineGVCFs():3:124
    set v:javadir [ turbine::retrieve_string ${t:35} CACHED 1 ]
    set v:gatkdir [ turbine::retrieve_string ${t:37} CACHED 1 ]
    set v:reference [ turbine::retrieve_string ${t:39} CACHED 1 ]
    set v:dbsnp [ turbine::retrieve_string ${t:45} CACHED 1 ]
    set v:variants [ turbine::unpack_args ${u:chrSampleArray} 1 string ]
    set tcltmp:init_rc 2
    set v:outputfile [ turbine::create_local_file_ref ${v:t:23} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:outLog [ turbine::create_local_file_ref ${v:t:29} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir "-Xmx8g" "-jar" ${v:gatkdir} "-T" "CombineGVCFs" "-R" ${v:reference} "--dbsnp" ${v:dbsnp} {*}${v:variants} "-o" ${v:t:23} [ dict create "stderr" ${v:t:29} ] ]
    turbine::exec_external ${v:javadir} [ dict create "stderr" ${v:t:29} ] "-Xmx8g" "-jar" ${v:gatkdir} "-T" "CombineGVCFs" "-R" ${v:reference} "--dbsnp" ${v:dbsnp} {*}${v:variants} "-o" ${v:t:23}
    turbine::store_file ${u:gvcfSample} v:outputfile 0
    turbine::store_file ${u:combineLog} v:outLog 0
    turbine::decr_local_file_refcount v:outputfile
    turbine::decr_local_file_refcount v:outLog
    turbine::read_refcount_decr ${u:chrSampleArray} 1
}


proc __entry-call_foreign-split { t:9 u:indices } {
    # Var: $string v:t:9 VALUE_OF [string:__t:9]
    # Var: $string$[int] v:indices VALUE_OF [string[int]:indices]
    set v:t:9 [ turbine::retrieve_string ${t:9} CACHED 1 ]
    set v:indices [ turbine::split_impl ${v:t:9} ":" ]
    turbine::build_rec ${u:indices} ${v:indices} [ list container integer string ] 0 1
}


proc __entry-optmerged-1 { t:39 t:40 t:43 t:45 t:49 } {
    # Var: $string v:t:40 VALUE_OF [string:__t:40]
    set v:t:40 [ turbine::retrieve_string ${t:40} CACHED 1 ]
    turbine::rule [ list ${t:43} ] [ list __entry-async_op-strcat-1 ${t:39} ${t:43} ${v:t:40} ]
    turbine::rule [ list ${t:49} ] [ list __entry-async_op-strcat-2 ${t:45} ${t:49} ${v:t:40} ]
}


proc __entry-async_op-strcat-1 { t:39 t:43 v:t:40 } {
    # Var: $string v:t:43 VALUE_OF [string:__t:43]
    # Var: $string v:t:39 VALUE_OF [string:__t:39]
    set v:t:43 [ turbine::retrieve_string ${t:43} CACHED 1 ]
    set v:t:39 "${v:t:40}/${v:t:43}"
    turbine::store_string ${t:39} ${v:t:39}
}


proc __entry-async_op-strcat-2 { t:45 t:49 v:t:40 } {
    # Var: $string v:t:49 VALUE_OF [string:__t:49]
    # Var: $string v:t:45 VALUE_OF [string:__t:45]
    set v:t:49 [ turbine::retrieve_string ${t:49} CACHED 1 ]
    set v:t:45 "${v:t:40}/${v:t:49}"
    turbine::store_string ${t:45} ${v:t:45}
}

turbine::defaults
turbine::declare_custom_work_types COASTER
turbine::init $servers "Swift"
turbine::enable_read_refcount
adlb::declare_struct_type 16 s:location [ list "rank" integer "strictness" string "accuracy" string ]
turbine::check_constants "WORKER\[WORKER\]" ${turbine::WORK_TASK} 0 "CONTROL" ${turbine::WORK_TASK} 0 "ADLB_RANK_ANY" ${adlb::RANK_ANY} -100
adlb::add_debug_symbol 1 "__t:7" "CombineVariants:37:33"
adlb::add_debug_symbol 2 "__t:9" "CombineVariants:40:25"
adlb::add_debug_symbol 3 "sampleInfoFile" "CombineVariants:37:0"
adlb::add_debug_symbol 4 "vars" "CombineVariants:34:0"
adlb::add_debug_symbol 5 "configFile" "CombineVariants:30:0"
adlb::add_debug_symbol 6 "indices" "CombineVariants:40:0"
adlb::add_debug_symbol 7 "__t:24" "CombineVariants:__entry():74:26"
adlb::add_debug_symbol 8 "__t:35" "CombineVariants:__entry():81:39"
adlb::add_debug_symbol 9 "__t:37" "CombineVariants:__entry():82:11"
adlb::add_debug_symbol 10 "__t:40" "CombineVariants:__entry():83:18"
adlb::add_debug_symbol 11 "__t:43" "CombineVariants:__entry():83:45"
adlb::add_debug_symbol 12 "__t:49" "CombineVariants:__entry():84:45"
adlb::add_debug_symbol 13 "__t:39" "CombineVariants:__entry():83:11"
adlb::add_debug_symbol 14 "__t:45" "CombineVariants:__entry():84:11"
adlb::add_debug_symbol 15 "keyValuePair" "generalfunctions.general:getConfigVariables():21:2"
adlb::add_debug_symbol 16 "__t:12" "CombineVariants:__entry():43:21"
adlb::add_debug_symbol 17 "chrSampleArray" "CombineVariants:__entry():51:1"
adlb::add_debug_symbol 18 "gvcfSample" "CombineVariants:__entry():75:17"
adlb::add_debug_symbol 19 "combineLog" "CombineVariants:__entry():79:84"
turbine::start swift:main swift:constants
turbine::finalize
