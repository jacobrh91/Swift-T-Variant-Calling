
# Generated by stc version 0.7.2
# date                    : 2017/02/28 10:45:49
# Turbine version         : 0.9.1
# Input filename          : /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift
# Output filename         : /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/swift-t-RealignRecalAndVC.OGi.tic
# STC home                : /usr/local/apps/bioapps/swift-t/swift-t-1.1/stc
# Turbine home            : /usr/local/apps/bioapps/swift-t/swift-t-1.1/turbine
# Compiler settings:
# stc.auto-declare              : true
# stc.c_preprocess              : true
# stc.checkpointing             : true
# stc.compiler-debug            : true
# stc.debugging                 : COMMENTS
# stc.ic.output-file            : 
# stc.input_filename            : /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift
# stc.log.file                  : 
# stc.log.trace                 : false
# stc.must_pass_wait_vars       : true
# stc.opt.algebra               : true
# stc.opt.array-build           : true
# stc.opt.batch-refcounts       : true
# stc.opt.cancel-refcounts      : true
# stc.opt.constant-fold         : true
# stc.opt.controlflow-fusion    : true
# stc.opt.dataflow-op-inline    : true
# stc.opt.dead-code-elim        : true
# stc.opt.demote-globals        : true
# stc.opt.disable-asserts       : false
# stc.opt.expand-loop-threshold-insts: 256
# stc.opt.expand-loop-threshold-iters: 16
# stc.opt.expand-loops          : false
# stc.opt.finalized-var         : true
# stc.opt.flatten-nested        : true
# stc.opt.full-function-inline  : false
# stc.opt.full-unroll           : false
# stc.opt.function-always-inline-threshold: 5
# stc.opt.function-inline       : true
# stc.opt.function-inline-threshold: 50
# stc.opt.function-signature    : true
# stc.opt.hoist                 : true
# stc.opt.hoist-refcounts       : true
# stc.opt.loop-simplify         : true
# stc.opt.max-iterations        : 10
# stc.opt.merge-refcounts       : true
# stc.opt.piggyback-refcounts   : true
# stc.opt.pipeline              : false
# stc.opt.propagate-aliases     : true
# stc.opt.reorder-insts         : false
# stc.opt.shared-constants      : true
# stc.opt.unroll-loop-threshold-insts: 192
# stc.opt.unroll-loop-threshold-iters: 8
# stc.opt.unroll-loops          : true
# stc.opt.value-number          : true
# stc.opt.wait-coalesce         : true
# stc.output_filename           : /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/swift-t-RealignRecalAndVC.OGi.tic
# stc.preproc.force-cpp         : false
# stc.preproc.force-gcc         : false
# stc.preprocess_only           : false
# stc.profile                   : false
# stc.refcounting               : true
# stc.rpath                     : ./
# stc.stc_home                  : /usr/local/apps/bioapps/swift-t/swift-t-1.1/stc
# stc.turbine.version           : 0.9.1
# stc.turbine_home              : /usr/local/apps/bioapps/swift-t/swift-t-1.1/turbine
# stc.version                   : 0.7.2

# Metadata:

# rpath entries
lappend auto_path "./"
package require turbine 0.9.1
namespace import turbine::*


proc swift:constants {  } {
    turbine::c::log "function:swift:constants"
    global c:s_-3
    turbine::allocate_custom c:s_-3 string 1 1 1 1
    turbine::store_string ${c:s_-3} ""
    global c:s__vcf-1
    turbine::allocate_custom c:s__vcf-1 string 1 1 2 1
    turbine::store_string ${c:s__vcf-1} "*.vcf"
    global c:s_sknownSite
    turbine::allocate_custom c:s_sknownSite string 1 1 3 1
    turbine::store_string ${c:s_sknownSite} "s/^/--knownSites /g"
    global c:s_sknown_g
    turbine::allocate_custom c:s_sknown_g string 1 1 4 1
    turbine::store_string ${c:s_sknown_g} "s/^/-known /g"
}

package require align 0.2


proc swift:main {  } {
    turbine::c::log "function: __entry"
    # Var: string[string] u:vars /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:200:0
    global u:vars
    # Var: string t:7 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:203:33
    # Var: $string v:configFilename VALUE_OF [string:configFilename]
    # Var: file u:sampleInfoFile /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:203:0
    # Var: file u:configFile /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:196:0
    # Var: string u:splitVar /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:__entry():213:1
    # Var: $file v:configFile VALUE_OF [file:configFile]
    # Var: $file v:configFile:1 VALUE_OF [file:configFile]
    # Var: $string$[int] v:configFileData VALUE_OF [string[int]:configFileData]
    # Var: boolean t:24 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:__entry():218:96
    # Var: boolean t:13 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:__entry():218:65
    lassign [ adlb::multicreate [ list string 1 1 5 ] [ list string 1 1 8 ] [ list integer 1 1 9 ] [ list integer 1 1 10 ] ] t:7 u:splitVar t:24 t:13
    turbine::c::log "allocated t:7=<${t:7}> u:splitVar=<${u:splitVar}> t:24=<${t:24}> t:13=<${t:13}>"
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 6 ] [ list file 1 1 7 ] ] [ list 0 0 ] ] u:sampleInfoFile u:configFile
    turbine::argv_accept_impl [ list "runfile" ]
    set v:configFilename [ turbine::argv_get_impl "runfile" ]
    set tcltmp:init_rc 1
    set v:configFile [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:configFile ${v:configFilename}
    turbine::store_file ${u:configFile} v:configFile 1
    set v:configFile:1 [ turbine::retrieve_file ${u:configFile} CACHED 1 ]
    set v:configFileData [ turbine::file_lines_impl ${v:configFile:1} ]
    turbine::container_reference ${u:vars} "SAMPLEINFORMATION" ${t:7} string
    turbine::container_reference ${u:vars} "SPLIT" ${u:splitVar} string
    dict for {tcltmp:ignore v:line} ${v:configFileData} {
        # Var: string[int] u:keyValuePair RENAMED [string[int]:keyValuePair] ./generalfunctions/general.swift:getConfigVariables():21:2
        # Var: $string$[int] v:keyValuePair VALUE_OF [string[int]:keyValuePair]
        # Var: $string v:alias:name VALUE_OF [string:__alias:name]
        # Var: $string v:alias:value VALUE_OF [string:__alias:value]
        lassign [ adlb::multicreate [ list container integer string 1 2 11 ] ] u:keyValuePair
        turbine::c::log "allocated u:keyValuePair=<${u:keyValuePair}>"
        set v:keyValuePair [ turbine::split_impl ${v:line} "=" ]
        turbine::build_rec ${u:keyValuePair} ${v:keyValuePair} [ list container integer string ] 0 1
        set a:name [ adlb::subscript_container ${u:keyValuePair} 0 ]
        set v:alias:name [ turbine::retrieve_string ${a:name} ]
        set a:value [ adlb::subscript_container ${u:keyValuePair} 1 ]
        set v:alias:value [ turbine::retrieve_string ${a:value} CACHED 1 ]
        turbine::container_insert ${u:vars} ${v:alias:name} ${v:alias:value} string 0
        adlb::write_refcount_decr ${u:keyValuePair} 1
    }
    turbine::rule [ list ${t:7} ] "__entry-call_foreign-input_file ${t:13} ${t:24} ${t:7} {${u:sampleInfoFile}}"
    turbine::rule [ list ${u:splitVar} ] "__entry-optmerged-4 ${t:13} ${t:24} ${u:splitVar}"
    turbine::decr_local_file_refcount v:configFile
    adlb::write_refcount_decr ${u:vars} 1
}


proc __entry-call_foreign-input_file { t:13 t:24 t:7 u:sampleInfoFile } {
    # Var: $string v:t:7 VALUE_OF [string:__t:7]
    # Var: $file v:sampleInfoFile VALUE_OF [file:sampleInfoFile]
    # Var: $file v:sampleInfoFile:1 VALUE_OF [file:sampleInfoFile]
    # Var: $string$[int] v:sampleLines VALUE_OF [string[int]:sampleLines]
    set v:t:7 [ turbine::retrieve_string ${t:7} CACHED 1 ]
    set tcltmp:init_rc 1
    set v:sampleInfoFile [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:sampleInfoFile ${v:t:7}
    turbine::store_file ${u:sampleInfoFile} v:sampleInfoFile 1
    set v:sampleInfoFile:1 [ turbine::retrieve_file ${u:sampleInfoFile} CACHED 1 ]
    set v:sampleLines [ turbine::file_lines_impl ${v:sampleInfoFile:1} ]
    set tcltmp:iters [ dict size ${v:sampleLines} ]
    turbine::read_refcount_incr ${t:13} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:24} [ expr { ${tcltmp:iters} } ]
    dict for {tcltmp:ignore v:sample} ${v:sampleLines} {
        # Var: string u:sampleName /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:__entry():211:1
        # Var: string[int] t:9 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:__entry():211:21
        # Var: $string$[int] v:t:9 VALUE_OF [string[int]:__t:9]
        # Var: $string v:alias:sampleName VALUE_OF [string:__alias:sampleName]
        lassign [ adlb::multicreate [ list string 2 1 12 ] [ list container integer string 1 2 13 ] ] u:sampleName t:9
        turbine::c::log "allocated u:sampleName=<${u:sampleName}> t:9=<${t:9}>"
        set v:t:9 [ turbine::split_impl ${v:sample} " " ]
        turbine::build_rec ${t:9} ${v:t:9} [ list container integer string ] 0 1
        set a:sampleName [ adlb::subscript_container ${t:9} 0 ]
        set v:alias:sampleName [ turbine::retrieve_string ${a:sampleName} CACHED 1 ]
        turbine::store_string ${u:sampleName} ${v:alias:sampleName}
        turbine::rule [ list ${t:13} ${t:24} ] [ list __entry-async_op-and ${t:13} ${t:24} ${v:alias:sampleName} ${v:sample} ${u:sampleName} ]
        adlb::write_refcount_decr ${t:9} 1
    }
    turbine::decr_local_file_refcount v:sampleInfoFile
    turbine::read_refcount_decr ${t:24} 1
    turbine::read_refcount_decr ${t:13} 1
}


proc __entry-async_op-and { t:13 t:24 v:alias:sampleName v:sample u:sampleName } {
    # Var: $boolean v:t:13:1 VALUE_OF [boolean:__t:13]
    # Var: $boolean v:t:24:1 VALUE_OF [boolean:__t:24]
    # Var: $boolean v:t:12 VALUE_OF [boolean:__t:12]
    set v:t:13:1 [ turbine::retrieve_integer ${t:13} CACHED 1 ]
    set v:t:24:1 [ turbine::retrieve_integer ${t:24} CACHED 1 ]
    set v:t:12 [ expr { ${v:t:13:1} && ${v:t:24:1} } ]
    if { ${v:t:12} } {
        # Var: string c:s__vcf-1 OPT_TEMPORARY
        global c:s__vcf-1
        # Var: string c:s_-3 OPT_TEMPORARY
        global c:s_-3
        # Var: string[string] u:vars /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:200:0
        global u:vars
        # Var: string t:27 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:__entry():224:27
        # Var: file u:recalfiles /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:__entry():224:60
        # Var: string[int] u:recalparmsindels /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:__entry():229:2
        # Var: string[int] u:realparms /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:__entry():232:2
        # Var: string t:31 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:__entry():225:26
        # Var: string t:32 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:__entry():225:33
        # Var: string t:35 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:__entry():225:60
        # Var: file u:inputBam /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:__entry():241:2
        # Var: string t:61 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:__entry():241:31
        # Var: file u:recalibratedbam /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:__entry():246:11
        # Var: file u:gvcfVariants /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:__entry():254:8
        # Var: int u:threads RENAMED [int:threads] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callVariants():169:1
        # Var: string t:2:1 RENAMED [string:__t:2] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callVariants():169:26
        # Var: string t:5:1 RENAMED [string:__t:5] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callVariants():169:58
        # Var: file u:haploLog RENAMED [file:haploLog] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callVariants():174:44
        # Var: string t:13:1 RENAMED [string:__t:13] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callVariants():176:36
        # Var: string t:15:1 RENAMED [string:__t:15] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callVariants():177:8
        # Var: string t:17:1 RENAMED [string:__t:17] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callVariants():178:8
        # Var: string t:21:1 RENAMED [string:__t:21] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callVariants():178:42
        # Var: string t:23:1 RENAMED [string:__t:23] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callVariants():180:8
        # Var: string t:27:1 RENAMED [string:__t:27] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callVariants():180:42
        lassign [ adlb::multicreate [ list string 1 1 14 ] [ list container integer string 1 1 16 ] [ list container integer string 1 1 17 ] [ list string 1 1 18 ] [ list string 1 1 19 ] [ list string 1 1 20 ] [ list string 1 1 22 ] [ list integer 1 1 25 ] [ list string 1 1 26 ] [ list string 1 1 27 ] [ list string 1 1 29 ] [ list string 1 1 30 ] [ list string 1 1 31 ] [ list string 1 1 32 ] [ list string 1 1 33 ] [ list string 1 1 34 ] ] t:27 u:recalparmsindels u:realparms t:31 t:32 t:35 t:61 u:threads t:2:1 t:5:1 t:13:1 t:15:1 t:17:1 t:21:1 t:23:1 t:27:1
        turbine::c::log "allocated t:27=<${t:27}> u:recalparmsindels=<${u:recalparmsindels}> u:realparms=<${u:realparms}> t:31=<${t:31}> t:32=<${t:32}>"
        turbine::c::log "allocated t:35=<${t:35}> t:61=<${t:61}> u:threads=<${u:threads}> t:2:1=<${t:2:1}> t:5:1=<${t:5:1}>"
        turbine::c::log "allocated t:13:1=<${t:13:1}> t:15:1=<${t:15:1}> t:17:1=<${t:17:1}> t:21:1=<${t:21:1}> t:23:1=<${t:23:1}>"
        turbine::c::log "allocated t:27:1=<${t:27:1}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 15 ] [ list file 1 1 21 ] [ list file 2 1 23 ] [ list file 0 1 24 ] [ list file 0 1 28 ] ] [ list 1 0 1 1 1 ] ] u:recalfiles u:inputBam u:recalibratedbam u:gvcfVariants u:haploLog
        turbine::container_reference ${u:vars} "TMPDIR" ${t:27} string
        turbine::container_reference ${u:vars} "REFGENOMEDIR" ${t:32} string
        turbine::container_reference ${u:vars} "INDELDIR" ${t:35} string
        f:find_files ${u:recalfiles} ${t:31} ${c:s__vcf-1} -100 "HARD" "RANK"
        turbine::container_reference ${u:vars} "OUTPUTDIR" ${t:61} string
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:recalibrationWrapper {${u:recalibratedbam}} ${u:sampleName} ${c:s_-3} ${u:vars} {${u:inputBam}} ${u:realparms} ${u:recalparmsindels}"
        turbine::reset_priority
        turbine::container_reference ${u:vars} "PBSCORES" ${t:2:1} string
        turbine::container_reference ${u:vars} "PROCPERNODE" ${t:5:1} string
        turbine::container_reference ${u:vars} "JAVADIR" ${t:13:1} string
        turbine::container_reference ${u:vars} "GATKDIR" ${t:15:1} string
        turbine::container_reference ${u:vars} "REFGENOME" ${t:21:1} string
        turbine::container_reference ${u:vars} "DBSNP" ${t:27:1} string
        turbine::rule [ list ${t:27} ] [ list __entry-async_op-strcat ${t:27} ${v:alias:sampleName} ${u:realparms} ${u:recalfiles} ${u:recalparmsindels} ]
        turbine::rule [ list ${t:2:1} ${t:5:1} ] "__entry-async_op-parse_int ${t:2:1} ${t:5:1} ${u:threads}"
        turbine::rule [ list ${t:61} ] [ list __entry-optmerged ${t:13:1} ${t:15:1} ${t:17:1} ${t:23:1} ${t:61} ${v:alias:sampleName} ${v:sample} ${u:gvcfVariants} ${u:haploLog} ${u:inputBam} ${u:recalibratedbam} ${u:threads} ]
        turbine::rule [ list ${t:32} ] "__entry-optmerged-1 ${t:17:1} ${t:21:1} ${t:23:1} ${t:27:1} ${t:31} ${t:32} ${t:35}"
        turbine::read_refcount_decr ${t:31} 1
    } else {
        # Var: string[string] u:vars /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:200:0
        global u:vars
        # Var: string t:79 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:__entry():263:27
        # Var: string t:83 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:__entry():271:28
        # Var: string t:89 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:__entry():272:34
        # Var: string t:92 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:__entry():272:61
        # Var: string t:118 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:__entry():289:32
        # Var: string t:2:2 RENAMED [string:__t:2] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callChrVariants():145:26
        # Var: string t:5:2 RENAMED [string:__t:5] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callChrVariants():145:58
        # Var: string t:19:2 RENAMED [string:__t:19] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callChrVariants():156:36
        # Var: string t:21:2 RENAMED [string:__t:21] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callChrVariants():156:53
        # Var: string t:27:2 RENAMED [string:__t:27] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callChrVariants():157:42
        # Var: string t:33:1 RENAMED [string:__t:33] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callChrVariants():159:42
        # Var: string t:88 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:__entry():272:27
        # Var: string u:LogDir:1 RENAMED [string:LogDir] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callChrVariants():151:1
        # Var: string t:23:2 RENAMED [string:__t:23] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callChrVariants():157:8
        # Var: string t:29:1 RENAMED [string:__t:29] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callChrVariants():159:8
        # Var: int u:threads:1 RENAMED [int:threads] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callChrVariants():145:1
        lassign [ adlb::multicreate [ list string 1 1 37 ] [ list string 1 1 38 ] [ list string 1 1 39 ] [ list string 1 1 40 ] [ list string 2 1 41 ] [ list string 1 1 42 ] [ list string 1 1 43 ] [ list string 1 1 44 ] [ list string 1 1 45 ] [ list string 1 1 46 ] [ list string 1 1 47 ] [ list string 1 1 48 ] [ list string 1 1 49 ] [ list string 1 1 50 ] [ list string 1 1 51 ] [ list integer 1 1 52 ] ] t:79 t:83 t:89 t:92 t:118 t:2:2 t:5:2 t:19:2 t:21:2 t:27:2 t:33:1 t:88 u:LogDir:1 t:23:2 t:29:1 u:threads:1
        turbine::c::log "allocated t:79=<${t:79}> t:83=<${t:83}> t:89=<${t:89}> t:92=<${t:92}> t:118=<${t:118}>"
        turbine::c::log "allocated t:2:2=<${t:2:2}> t:5:2=<${t:5:2}> t:19:2=<${t:19:2}> t:21:2=<${t:21:2}> t:27:2=<${t:27:2}>"
        turbine::c::log "allocated t:33:1=<${t:33:1}> t:88=<${t:88}> u:LogDir:1=<${u:LogDir:1}> t:23:2=<${t:23:2}> t:29:1=<${t:29:1}>"
        turbine::c::log "allocated u:threads:1=<${u:threads:1}>"
        turbine::container_reference ${u:vars} "CHRNAMES" ${t:79} string
        turbine::container_reference ${u:vars} "TMPDIR" ${t:83} string
        turbine::container_reference ${u:vars} "REFGENOMEDIR" ${t:89} string
        turbine::container_reference ${u:vars} "INDELDIR" ${t:92} string
        turbine::container_reference ${u:vars} "OUTPUTDIR" ${t:118} string
        turbine::container_reference ${u:vars} "PBSCORES" ${t:2:2} string
        turbine::container_reference ${u:vars} "PROCPERNODE" ${t:5:2} string
        turbine::container_reference ${u:vars} "JAVADIR" ${t:19:2} string
        turbine::container_reference ${u:vars} "GATKDIR" ${t:21:2} string
        turbine::container_reference ${u:vars} "REFGENOME" ${t:27:2} string
        turbine::container_reference ${u:vars} "DBSNP" ${t:33:1} string
        turbine::rule [ list ${t:79} ] [ list __entry-call_foreign-split ${u:LogDir:1} ${t:118} ${t:19:2} ${t:21:2} ${t:23:2} ${t:29:1} ${t:79} ${t:83} ${t:88} ${v:alias:sampleName} ${v:sample} ${u:sampleName} ${u:threads:1} ]
        turbine::rule [ list ${t:2:2} ${t:5:2} ] "__entry-async_op-parse_int-1 ${t:2:2} ${t:5:2} ${u:threads:1}"
        turbine::rule [ list ${t:118} ] [ list __entry-async_op-strcat-6 ${u:LogDir:1} ${t:118} ${v:sample} ]
        turbine::rule [ list ${t:89} ] "__entry-optmerged-3 ${t:23:2} ${t:27:2} ${t:29:1} ${t:33:1} ${t:88} ${t:89} ${t:92}"
    }
    turbine::read_refcount_decr ${u:sampleName} 1
}


proc __entry-async_op-strcat { t:27 v:alias:sampleName u:realparms u:recalfiles u:recalparmsindels } {
    # Var: $string v:t:27 VALUE_OF [string:__t:27]
    # Var: $string v:t:26 VALUE_OF [string:__t:26]
    set v:t:27 [ turbine::retrieve_string ${t:27} CACHED 1 ]
    set v:t:26 "${v:t:27}/${v:alias:sampleName}.recal_foundfiles.txt"
    turbine::set_filename_val ${u:recalfiles} ${v:t:26}
    turbine::rule [ list [ turbine::get_file_td ${u:recalfiles} ] ] [ list __entry-chain1 ${v:t:26} ${u:realparms} ${u:recalfiles} ${u:recalparmsindels} ]
}


proc __entry-chain1 { v:t:26 u:realparms u:recalfiles u:recalparmsindels } {
    # Var: string c:s_sknownSite OPT_TEMPORARY
    global c:s_sknownSite
    # Var: file t:44 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:__entry():230:25
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 35 ] ] [ list 0 ] ] t:44
    f:sed ${t:44} ${u:recalfiles} ${c:s_sknownSite} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${t:44} ] ] [ list __entry-call_foreign-read ${t:44} ${v:t:26} ${u:realparms} ${u:recalfiles} ${u:recalparmsindels} ]
}


proc __entry-call_foreign-read { t:44 v:t:26 u:realparms u:recalfiles u:recalparmsindels } {
    # Var: $file v:t:44 VALUE_OF [file:__t:44]
    # Var: $string v:t:43 VALUE_OF [string:__t:43]
    # Var: $int v:n:1 RENAMED [$int:__v:n]
    # Var: $string v:t:42 VALUE_OF [string:__t:42]
    # Var: $string v:o:1 RENAMED [$string:__v:o]
    # Var: $string$[int] v:recalparmsindels VALUE_OF [string[int]:recalparmsindels]
    set v:t:44 [ turbine::retrieve_file ${t:44} CACHED 1 ]
    set v:t:43 [ turbine::file_read_local ${v:t:44} ]
    set v:n:1 [ string length ${v:t:43} ]
    set v:t:42 [ turbine::replace_all_impl ${v:t:43} "\n" " " 0 ${v:n:1} ]
    set v:o:1 [ string trim ${v:t:42} ]
    set v:recalparmsindels [ turbine::split_impl ${v:o:1} " " ]
    turbine::build_rec ${u:recalparmsindels} ${v:recalparmsindels} [ list container integer string ] 0 1
    turbine::rule [ list ] [ list __entry-chain2 ${v:t:26} ${u:realparms} ${u:recalfiles} ]
}


proc __entry-chain2 { v:t:26 u:realparms u:recalfiles } {
    # Var: string c:s_sknown_g OPT_TEMPORARY
    global c:s_sknown_g
    # Var: file t:53 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:__entry():233:25
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 36 ] ] [ list 0 ] ] t:53
    f:sed ${t:53} ${u:recalfiles} ${c:s_sknown_g} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${t:53} ] ] [ list __entry-call_foreign-read-1 ${t:53} ${v:t:26} ${u:realparms} ${u:recalfiles} ]
}


proc __entry-call_foreign-read-1 { t:53 v:t:26 u:realparms u:recalfiles } {
    # Var: $file v:t:53 VALUE_OF [file:__t:53]
    # Var: $string v:t:52 VALUE_OF [string:__t:52]
    # Var: $int v:n RENAMED [$int:__v:n]
    # Var: $string v:t:51 VALUE_OF [string:__t:51]
    # Var: $string v:o RENAMED [$string:__v:o]
    # Var: $string$[int] v:realparms VALUE_OF [string[int]:realparms]
    set v:t:53 [ turbine::retrieve_file ${t:53} CACHED 1 ]
    set v:t:52 [ turbine::file_read_local ${v:t:53} ]
    set v:n [ string length ${v:t:52} ]
    set v:t:51 [ turbine::replace_all_impl ${v:t:52} "\n" " " 0 ${v:n} ]
    set v:o [ string trim ${v:t:51} ]
    set v:realparms [ turbine::split_impl ${v:o} " " ]
    turbine::build_rec ${u:realparms} ${v:realparms} [ list container integer string ] 0 1
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-chain3 ${v:t:26} ${u:recalfiles} ]
    turbine::reset_priority
}


proc __entry-chain3 { v:t:26 u:recalfiles } {
    # Var: $file v:f RENAMED [$file:__v:f] ./generalfunctions/general.swift:rm():33:6
    # Var: $void v:v RENAMED [$void:__v:v] ./generalfunctions/general.swift:rm():33:6
    set v:f [ turbine::retrieve_file ${u:recalfiles} CACHED 1 ]
    turbine::c::log [ list exec: "rm" ${v:t:26} [ dict create ] ]
    turbine::exec_external "rm" [ dict create ] ${v:t:26}
}


proc __entry-async_op-parse_int { t:2:1 t:5:1 u:threads } {
    # Var: $string v:t:5:1 VALUE_OF [string:__t:5:1]
    # Var: $int v:t:4:1 VALUE_OF [int:__t:4:1]
    # Var: $string v:t:2:1 VALUE_OF [string:__t:2:1]
    # Var: $int v:t:1:3 VALUE_OF [int:__t:1:3]
    # Var: $int v:threads VALUE_OF [int:threads]
    set v:t:5:1 [ turbine::retrieve_string ${t:5:1} CACHED 1 ]
    set v:t:4:1 [ turbine::parse_int_impl ${v:t:5:1} 10 ]
    set v:t:2:1 [ turbine::retrieve_string ${t:2:1} CACHED 1 ]
    set v:t:1:3 [ turbine::parse_int_impl ${v:t:2:1} 10 ]
    set v:threads [ turbine::divide_integer_impl ${v:t:1:3} ${v:t:4:1} ]
    turbine::store_integer ${u:threads} ${v:threads}
}


proc __entry-optmerged { t:13:1 t:15:1 t:17:1 t:23:1 t:61 v:alias:sampleName v:sample u:gvcfVariants u:haploLog u:inputBam u:recalibratedbam u:threads } {
    # Var: $string v:t:61 VALUE_OF [string:__t:61]
    # Var: $string v:t:60 VALUE_OF [string:__t:60]
    # Var: $string v:t:66 VALUE_OF [string:__t:66]
    # Var: $string v:t:73 VALUE_OF [string:__t:73]
    # Var: $string v:LogDir VALUE_OF [string:LogDir]
    # Var: $file v:inputBam VALUE_OF [file:inputBam]
    # Var: $string v:t:11:1 VALUE_OF [string:__t:11:1]
    set v:t:61 [ turbine::retrieve_string ${t:61} CACHED 1 ]
    set v:t:60 "${v:t:61}/${v:alias:sampleName}/align/${v:alias:sampleName}.wDedups.sorted.bam"
    set v:t:66 "${v:t:61}/${v:alias:sampleName}/realign/${v:alias:sampleName}.wDedups.sorted.recalibrated.bam"
    set v:t:73 "${v:t:61}/${v:alias:sampleName}/variant/${v:alias:sampleName}.wDedups.sorted.recalibrated.g.vcf"
    set v:LogDir "${v:t:61}/${v:sample}/logs/"
    set tcltmp:init_rc 1
    set v:inputBam [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:inputBam ${v:t:60}
    turbine::store_file ${u:inputBam} v:inputBam 1
    turbine::set_filename_val ${u:recalibratedbam} ${v:t:66}
    turbine::set_filename_val ${u:gvcfVariants} ${v:t:73}
    set v:t:11:1 "${v:LogDir}${v:sample}_HaplotypeCaller.log"
    turbine::set_filename_val ${u:haploLog} ${v:t:11:1}
    turbine::rule [ list ${t:13:1} ${t:15:1} ${t:17:1} ${t:23:1} [ turbine::get_file_td ${u:recalibratedbam} ] ${u:threads} ] [ list HaplotypeCaller-app-leaf1 ${t:13:1} ${t:15:1} ${t:17:1} ${t:23:1} ${v:t:11:1} ${v:t:66} ${v:t:73} ${u:gvcfVariants} ${u:haploLog} ${u:recalibratedbam} ${u:threads} ]
    turbine::decr_local_file_refcount v:inputBam
}


proc HaplotypeCaller-app-leaf1 { t:13:1 t:15:1 t:17:1 t:23:1 v:t:11:1 v:t:66 v:t:73 u:gvcfVariants u:haploLog u:recalibratedbam u:threads } {
    # Var: $string v:javadir RENAMED [$string:__v:javadir] ./bioapps/realign_varcal.swift:HaplotypeCaller():120:9
    # Var: $string v:gatkdir RENAMED [$string:__v:gatkdir] ./bioapps/realign_varcal.swift:HaplotypeCaller():120:9
    # Var: $string v:reference RENAMED [$string:__v:reference] ./bioapps/realign_varcal.swift:HaplotypeCaller():120:9
    # Var: $string v:dbsnp RENAMED [$string:__v:dbsnp] ./bioapps/realign_varcal.swift:HaplotypeCaller():120:9
    # Var: $int v:thr RENAMED [$int:__v:thr] ./bioapps/realign_varcal.swift:HaplotypeCaller():120:9
    # Var: $file v:inputFile RENAMED [$file:__v:inputFile] ./bioapps/realign_varcal.swift:HaplotypeCaller():120:9
    # Var: $file v:outputfile RENAMED [$file:__v:outputfile] ./bioapps/realign_varcal.swift:HaplotypeCaller():120:9
    # Var: $file v:outLog RENAMED [$file:__v:outLog] ./bioapps/realign_varcal.swift:HaplotypeCaller():120:9
    set v:javadir [ turbine::retrieve_string ${t:13:1} CACHED 1 ]
    set v:gatkdir [ turbine::retrieve_string ${t:15:1} CACHED 1 ]
    set v:reference [ turbine::retrieve_string ${t:17:1} CACHED 1 ]
    set v:dbsnp [ turbine::retrieve_string ${t:23:1} CACHED 1 ]
    set v:thr [ turbine::retrieve_integer ${u:threads} CACHED 1 ]
    set v:inputFile [ turbine::retrieve_file ${u:recalibratedbam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile [ turbine::create_local_file_ref ${v:t:73} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:outLog [ turbine::create_local_file_ref ${v:t:11:1} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir "-Xmx8g" "-jar" ${v:gatkdir} "-T" "HaplotypeCaller" "-R" ${v:reference} "-I" ${v:t:66} "--dbsnp" ${v:dbsnp} "-o" ${v:t:73} "--emitRefConfidence" "GVCF" "-gt_mode" "DISCOVERY" "-A" "Coverage" "-A" "FisherStrand" "-A" "StrandOddsRatio" "-A" "HaplotypeScore" "-A" "MappingQualityRankSumTest" "-A" "QualByDepth" "-A" "RMSMappingQuality" "-A" "ReadPosRankSumTest" "-stand_call_conf" 30 "-stand_emit_conf" 30 "-nt" 1 "-nct" ${v:thr} [ dict create "stderr" ${v:t:11:1} ] ]
    turbine::exec_external ${v:javadir} [ dict create "stderr" ${v:t:11:1} ] "-Xmx8g" "-jar" ${v:gatkdir} "-T" "HaplotypeCaller" "-R" ${v:reference} "-I" ${v:t:66} "--dbsnp" ${v:dbsnp} "-o" ${v:t:73} "--emitRefConfidence" "GVCF" "-gt_mode" "DISCOVERY" "-A" "Coverage" "-A" "FisherStrand" "-A" "StrandOddsRatio" "-A" "HaplotypeScore" "-A" "MappingQualityRankSumTest" "-A" "QualByDepth" "-A" "RMSMappingQuality" "-A" "ReadPosRankSumTest" "-stand_call_conf" 30 "-stand_emit_conf" 30 "-nt" 1 "-nct" ${v:thr}
    turbine::store_file ${u:gvcfVariants} v:outputfile 0
    turbine::store_file ${u:haploLog} v:outLog 0
    turbine::decr_local_file_refcount v:outputfile
    turbine::decr_local_file_refcount v:outLog
}


proc __entry-optmerged-1 { t:17:1 t:21:1 t:23:1 t:27:1 t:31 t:32 t:35 } {
    # Var: $string v:t:32 VALUE_OF [string:__t:32]
    set v:t:32 [ turbine::retrieve_string ${t:32} CACHED 1 ]
    turbine::rule [ list ${t:35} ] [ list __entry-async_op-strcat-1 ${t:31} ${t:35} ${v:t:32} ]
    turbine::rule [ list ${t:21:1} ] [ list __entry-async_op-strcat-2 ${t:17:1} ${t:21:1} ${v:t:32} ]
    turbine::rule [ list ${t:27:1} ] [ list __entry-async_op-strcat-3 ${t:23:1} ${t:27:1} ${v:t:32} ]
}


proc __entry-async_op-strcat-1 { t:31 t:35 v:t:32 } {
    # Var: $string v:t:35 VALUE_OF [string:__t:35]
    # Var: $string v:t:31 VALUE_OF [string:__t:31]
    set v:t:35 [ turbine::retrieve_string ${t:35} CACHED 1 ]
    set v:t:31 "${v:t:32}/${v:t:35}/"
    turbine::store_string ${t:31} ${v:t:31}
}


proc __entry-async_op-strcat-2 { t:17:1 t:21:1 v:t:32 } {
    # Var: $string v:t:21:1 VALUE_OF [string:__t:21:1]
    # Var: $string v:t:17:1 VALUE_OF [string:__t:17:1]
    set v:t:21:1 [ turbine::retrieve_string ${t:21:1} CACHED 1 ]
    set v:t:17:1 "${v:t:32}/${v:t:21:1}"
    turbine::store_string ${t:17:1} ${v:t:17:1}
}


proc __entry-async_op-strcat-3 { t:23:1 t:27:1 v:t:32 } {
    # Var: $string v:t:27:1 VALUE_OF [string:__t:27:1]
    # Var: $string v:t:23:1 VALUE_OF [string:__t:23:1]
    set v:t:27:1 [ turbine::retrieve_string ${t:27:1} CACHED 1 ]
    set v:t:23:1 "${v:t:32}/${v:t:27:1}"
    turbine::store_string ${t:23:1} ${v:t:23:1}
}


proc __entry-call_foreign-split { u:LogDir:1 t:118 t:19:2 t:21:2 t:23:2 t:29:1 t:79 t:83 t:88 v:alias:sampleName v:sample u:sampleName u:threads:1 } {
    # Var: $string v:t:79 VALUE_OF [string:__t:79]
    # Var: $string$[int] v:indices VALUE_OF [string[int]:indices]
    set v:t:79 [ turbine::retrieve_string ${t:79} CACHED 1 ]
    set v:indices [ turbine::split_impl ${v:t:79} ":" ]
    set tcltmp:iters [ dict size ${v:indices} ]
    turbine::read_refcount_incr ${u:threads:1} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:23:2} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:19:2} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:83} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${u:LogDir:1} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:29:1} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${u:sampleName} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:21:2} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:118} [ expr { ${tcltmp:iters} } ]
    dict for {tcltmp:ignore v:chr} ${v:indices} {
        # Var: string[string] u:vars /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:200:0
        global u:vars
        # Var: string u:chr /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:__entry():265:17
        # Var: file u:recalfiles:1 RENAMED [file:recalfiles] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:__entry():271:71
        # Var: string[int] u:recalparmsindels:1 RENAMED [string[int]:recalparmsindels] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:__entry():277:3
        # Var: string[int] u:realparms:1 RENAMED [string[int]:realparms] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:__entry():280:3
        # Var: string t:95 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:__entry():273:6
        # Var: file u:inputBam:1 RENAMED [file:inputBam] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:__entry():289:3
        # Var: file u:recalibratedbam:1 RENAMED [file:recalibratedbam] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:__entry():294:50
        # Var: file u:gvcfVariants:1 RENAMED [file:gvcfVariants] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:__entry():304:47
        # Var: $string v:t:95 VALUE_OF [string:__t:95]
        # Var: int u:ploidy RENAMED [int:ploidy] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callChrVariants():147:1
        # Var: string t:16:2 RENAMED [string:__t:16] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callChrVariants():154:17
        # Var: file u:haploLog:1 RENAMED [file:haploLog] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callChrVariants():154:54
        # Var: $boolean v:t:8:2 VALUE_OF [boolean:__t:8:2]
        # Var: $boolean v:t:10:2 VALUE_OF [boolean:__t:10:2]
        # Var: $boolean v:t:7:2 VALUE_OF [boolean:__t:7:2]
        lassign [ adlb::multicreate [ list string 1 1 53 ] [ list container integer string 1 1 55 ] [ list container integer string 1 1 56 ] [ list string 1 1 57 ] [ list integer 1 1 61 ] [ list string 1 1 62 ] ] u:chr u:recalparmsindels:1 u:realparms:1 t:95 u:ploidy t:16:2
        turbine::c::log "allocated u:chr=<${u:chr}> u:recalparmsindels:1=<${u:recalparmsindels:1}> u:realparms:1=<${u:realparms:1}> t:95=<${t:95}> u:ploidy=<${u:ploidy}>"
        turbine::c::log "allocated t:16:2=<${t:16:2}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 54 ] [ list file 1 1 58 ] [ list file 2 1 59 ] [ list file 0 1 60 ] [ list file 0 1 63 ] ] [ list 1 0 1 1 1 ] ] u:recalfiles:1 u:inputBam:1 u:recalibratedbam:1 u:gvcfVariants:1 u:haploLog:1
        turbine::store_string ${u:chr} ${v:chr}
        set v:t:95 "*${v:chr}.vcf"
        turbine::store_string ${t:95} ${v:t:95}
        f:find_files ${u:recalfiles:1} ${t:88} ${t:95} -100 "HARD" "RANK"
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:recalibrationWrapper {${u:recalibratedbam:1}} ${u:sampleName} ${u:chr} ${u:vars} {${u:inputBam:1}} ${u:realparms:1} ${u:recalparmsindels:1}"
        turbine::reset_priority
        set v:t:8:2 [ string equal ${v:chr} "M" ]
        set v:t:10:2 [ string equal ${v:chr} "chrM" ]
        set v:t:7:2 [ expr { ${v:t:8:2} || ${v:t:10:2} } ]
        if { ${v:t:7:2} } {
            turbine::store_integer ${u:ploidy} 1
        } else {
            turbine::store_integer ${u:ploidy} 2
        }
        turbine::rule [ list ${t:83} ] [ list __entry-async_op-strcat-4 ${t:83} ${v:alias:sampleName} ${v:chr} ${u:realparms:1} ${u:recalfiles:1} ${u:recalparmsindels:1} ]
        turbine::rule [ list ${u:LogDir:1} ] [ list __entry-async_op-strcat-5 ${u:LogDir:1} ${t:16:2} ${v:chr} ${v:sample} ${u:haploLog:1} ]
        turbine::rule [ list ${t:118} ] [ list __entry-optmerged-2 ${t:118} ${t:16:2} ${t:19:2} ${t:21:2} ${t:23:2} ${t:29:1} ${v:alias:sampleName} ${v:chr} ${u:gvcfVariants:1} ${u:haploLog:1} ${u:inputBam:1} ${u:ploidy} ${u:recalibratedbam:1} ${u:threads:1} ]
        turbine::read_refcount_decr ${t:95} 1
    }
    turbine::read_refcount_decr ${t:29:1} 1
    turbine::read_refcount_decr ${u:LogDir:1} 1
    turbine::read_refcount_decr ${t:23:2} 1
    turbine::read_refcount_decr ${t:19:2} 1
    turbine::read_refcount_decr ${t:118} 1
    turbine::read_refcount_decr ${t:88} 1
    turbine::read_refcount_decr ${t:21:2} 1
    turbine::read_refcount_decr ${u:threads:1} 1
    turbine::read_refcount_decr ${t:83} 1
    turbine::read_refcount_decr ${u:sampleName} 1
}


proc __entry-async_op-strcat-4 { t:83 v:alias:sampleName v:chr u:realparms:1 u:recalfiles:1 u:recalparmsindels:1 } {
    # Var: $string v:t:83 VALUE_OF [string:__t:83]
    # Var: $string v:t:82 VALUE_OF [string:__t:82]
    set v:t:83 [ turbine::retrieve_string ${t:83} CACHED 1 ]
    set v:t:82 "${v:t:83}/${v:alias:sampleName}.${v:chr}.recal_foundfiles.txt"
    turbine::set_filename_val ${u:recalfiles:1} ${v:t:82}
    turbine::rule [ list [ turbine::get_file_td ${u:recalfiles:1} ] ] [ list __entry-chain4 ${v:t:82} ${u:realparms:1} ${u:recalfiles:1} ${u:recalparmsindels:1} ]
}


proc __entry-chain4 { v:t:82 u:realparms:1 u:recalfiles:1 u:recalparmsindels:1 } {
    # Var: string c:s_sknownSite OPT_TEMPORARY
    global c:s_sknownSite
    # Var: file t:101 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:__entry():278:26
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 64 ] ] [ list 0 ] ] t:101
    f:sed ${t:101} ${u:recalfiles:1} ${c:s_sknownSite} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${t:101} ] ] [ list __entry-call_foreign-read-2 ${t:101} ${v:t:82} ${u:realparms:1} ${u:recalfiles:1} ${u:recalparmsindels:1} ]
}


proc __entry-call_foreign-read-2 { t:101 v:t:82 u:realparms:1 u:recalfiles:1 u:recalparmsindels:1 } {
    # Var: $file v:t:101 VALUE_OF [file:__t:101]
    # Var: $string v:t:100 VALUE_OF [string:__t:100]
    # Var: $int v:n:3 RENAMED [$int:__v:n]
    # Var: $string v:t:99 VALUE_OF [string:__t:99]
    # Var: $string v:o:3 RENAMED [$string:__v:o]
    # Var: $string$[int] v:recalparmsindels:1 VALUE_OF [string[int]:recalparmsindels:1]
    set v:t:101 [ turbine::retrieve_file ${t:101} CACHED 1 ]
    set v:t:100 [ turbine::file_read_local ${v:t:101} ]
    set v:n:3 [ string length ${v:t:100} ]
    set v:t:99 [ turbine::replace_all_impl ${v:t:100} "\n" " " 0 ${v:n:3} ]
    set v:o:3 [ string trim ${v:t:99} ]
    set v:recalparmsindels:1 [ turbine::split_impl ${v:o:3} " " ]
    turbine::build_rec ${u:recalparmsindels:1} ${v:recalparmsindels:1} [ list container integer string ] 0 1
    turbine::rule [ list ] [ list __entry-chain5 ${v:t:82} ${u:realparms:1} ${u:recalfiles:1} ]
}


proc __entry-chain5 { v:t:82 u:realparms:1 u:recalfiles:1 } {
    # Var: string c:s_sknown_g OPT_TEMPORARY
    global c:s_sknown_g
    # Var: file t:110 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:__entry():281:26
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 65 ] ] [ list 0 ] ] t:110
    f:sed ${t:110} ${u:recalfiles:1} ${c:s_sknown_g} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${t:110} ] ] [ list __entry-call_foreign-read-3 ${t:110} ${v:t:82} ${u:realparms:1} ${u:recalfiles:1} ]
}


proc __entry-call_foreign-read-3 { t:110 v:t:82 u:realparms:1 u:recalfiles:1 } {
    # Var: $file v:t:110 VALUE_OF [file:__t:110]
    # Var: $string v:t:109 VALUE_OF [string:__t:109]
    # Var: $int v:n:2 RENAMED [$int:__v:n]
    # Var: $string v:t:108 VALUE_OF [string:__t:108]
    # Var: $string v:o:2 RENAMED [$string:__v:o]
    # Var: $string$[int] v:realparms:1 VALUE_OF [string[int]:realparms:1]
    set v:t:110 [ turbine::retrieve_file ${t:110} CACHED 1 ]
    set v:t:109 [ turbine::file_read_local ${v:t:110} ]
    set v:n:2 [ string length ${v:t:109} ]
    set v:t:108 [ turbine::replace_all_impl ${v:t:109} "\n" " " 0 ${v:n:2} ]
    set v:o:2 [ string trim ${v:t:108} ]
    set v:realparms:1 [ turbine::split_impl ${v:o:2} " " ]
    turbine::build_rec ${u:realparms:1} ${v:realparms:1} [ list container integer string ] 0 1
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-chain6 ${v:t:82} ${u:recalfiles:1} ]
    turbine::reset_priority
}


proc __entry-chain6 { v:t:82 u:recalfiles:1 } {
    # Var: $file v:f:1 RENAMED [$file:__v:f] ./generalfunctions/general.swift:rm():33:6
    # Var: $void v:v:1 RENAMED [$void:__v:v] ./generalfunctions/general.swift:rm():33:6
    set v:f:1 [ turbine::retrieve_file ${u:recalfiles:1} CACHED 1 ]
    turbine::c::log [ list exec: "rm" ${v:t:82} [ dict create ] ]
    turbine::exec_external "rm" [ dict create ] ${v:t:82}
}


proc __entry-async_op-strcat-5 { u:LogDir:1 t:16:2 v:chr v:sample u:haploLog:1 } {
    # Var: $string v:LogDir:1:2 VALUE_OF [string:LogDir:1]
    # Var: $string v:t:16:2 VALUE_OF [string:__t:16:2]
    set v:LogDir:1:2 [ turbine::retrieve_string ${u:LogDir:1} CACHED 1 ]
    set v:t:16:2 "${v:LogDir:1:2}${v:sample}.${v:chr}_HaplotypeCaller.log"
    turbine::store_string ${t:16:2} ${v:t:16:2}
    turbine::set_filename_val ${u:haploLog:1} ${v:t:16:2}
}


proc __entry-optmerged-2 { t:118 t:16:2 t:19:2 t:21:2 t:23:2 t:29:1 v:alias:sampleName v:chr u:gvcfVariants:1 u:haploLog:1 u:inputBam:1 u:ploidy u:recalibratedbam:1 u:threads:1 } {
    # Var: $string v:t:118:1 VALUE_OF [string:__t:118]
    # Var: $string v:t:117 VALUE_OF [string:__t:117]
    # Var: $string v:t:124 VALUE_OF [string:__t:124]
    # Var: $string v:t:131 VALUE_OF [string:__t:131]
    # Var: $file v:inputBam:1 VALUE_OF [file:inputBam:1]
    set v:t:118:1 [ turbine::retrieve_string ${t:118} CACHED 1 ]
    set v:t:117 "${v:t:118:1}/${v:alias:sampleName}/realign/${v:alias:sampleName}.wDedups.sorted.${v:chr}.bam"
    set v:t:124 "${v:t:118:1}/${v:alias:sampleName}/realign/${v:alias:sampleName}.wDedups.sorted.recalibrated.${v:chr}.bam"
    set v:t:131 "${v:t:118:1}/${v:alias:sampleName}/variant/${v:alias:sampleName}.wDedups.sorted.recalibrated.${v:chr}.g.vcf"
    set tcltmp:init_rc 1
    set v:inputBam:1 [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:inputBam:1 ${v:t:117}
    turbine::store_file ${u:inputBam:1} v:inputBam:1 1
    turbine::set_filename_val ${u:recalibratedbam:1} ${v:t:124}
    turbine::set_filename_val ${u:gvcfVariants:1} ${v:t:131}
    turbine::rule [ list ${t:16:2} ${t:19:2} ${t:21:2} ${t:23:2} ${t:29:1} [ turbine::get_file_td ${u:recalibratedbam:1} ] ${u:threads:1} ] [ list HaplotypeCaller-app-leaf1-1 ${t:16:2} ${t:19:2} ${t:21:2} ${t:23:2} ${t:29:1} ${v:chr} ${v:t:124} ${v:t:131} ${u:gvcfVariants:1} ${u:haploLog:1} ${u:ploidy} ${u:recalibratedbam:1} ${u:threads:1} ]
    turbine::decr_local_file_refcount v:inputBam:1
}


proc HaplotypeCaller-app-leaf1-1 { t:16:2 t:19:2 t:21:2 t:23:2 t:29:1 v:chr v:t:124 v:t:131 u:gvcfVariants:1 u:haploLog:1 u:ploidy u:recalibratedbam:1 u:threads:1 } {
    # Var: $string v:javadir:1 RENAMED [$string:__v:javadir] ./bioapps/realign_varcal.swift:HaplotypeCaller():92:9
    # Var: $string v:gatkdir:1 RENAMED [$string:__v:gatkdir] ./bioapps/realign_varcal.swift:HaplotypeCaller():92:9
    # Var: $string v:reference:1 RENAMED [$string:__v:reference] ./bioapps/realign_varcal.swift:HaplotypeCaller():92:9
    # Var: $string v:dbsnp:1 RENAMED [$string:__v:dbsnp] ./bioapps/realign_varcal.swift:HaplotypeCaller():92:9
    # Var: $int v:ploidy RENAMED [$int:__v:ploidy] ./bioapps/realign_varcal.swift:HaplotypeCaller():92:9
    # Var: $int v:thr:1 RENAMED [$int:__v:thr] ./bioapps/realign_varcal.swift:HaplotypeCaller():92:9
    # Var: $string v:__filename:outLog:1 RENAMED [$string:__v:__filename:outLog] ./bioapps/realign_varcal.swift:HaplotypeCaller():92:9
    # Var: $file v:inputFile:1 RENAMED [$file:__v:inputFile] ./bioapps/realign_varcal.swift:HaplotypeCaller():92:9
    # Var: $file v:outputfile:1 RENAMED [$file:__v:outputfile] ./bioapps/realign_varcal.swift:HaplotypeCaller():92:9
    # Var: $file v:outLog:1 RENAMED [$file:__v:outLog] ./bioapps/realign_varcal.swift:HaplotypeCaller():92:9
    set v:javadir:1 [ turbine::retrieve_string ${t:19:2} CACHED 1 ]
    set v:gatkdir:1 [ turbine::retrieve_string ${t:21:2} CACHED 1 ]
    set v:reference:1 [ turbine::retrieve_string ${t:23:2} CACHED 1 ]
    set v:dbsnp:1 [ turbine::retrieve_string ${t:29:1} CACHED 1 ]
    set v:ploidy [ turbine::retrieve_integer ${u:ploidy} CACHED 1 ]
    set v:thr:1 [ turbine::retrieve_integer ${u:threads:1} CACHED 1 ]
    set v:__filename:outLog:1 [ turbine::retrieve_string ${t:16:2} CACHED 1 ]
    set v:inputFile:1 [ turbine::retrieve_file ${u:recalibratedbam:1} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:1 [ turbine::create_local_file_ref ${v:t:131} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:outLog:1 [ turbine::create_local_file_ref ${v:__filename:outLog:1} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx8g" "-jar" ${v:gatkdir:1} "-T" "HaplotypeCaller" "-R" ${v:reference:1} "-I" ${v:t:124} "--dbsnp" ${v:dbsnp:1} "-o" ${v:t:131} "--emitRefConfidence" "GVCF" "-gt_mode" "DISCOVERY" "-A" "Coverage" "-A" "FisherStrand" "-A" "StrandOddsRatio" "-A" "HaplotypeScore" "-A" "MappingQualityRankSumTest" "-A" "QualByDepth" "-A" "RMSMappingQuality" "-A" "ReadPosRankSumTest" "-stand_call_conf" 30 "-stand_emit_conf" 30 "--sample_ploidy" ${v:ploidy} "-nt" 1 "-nct" ${v:thr:1} "-L" ${v:chr} [ dict create "stderr" ${v:__filename:outLog:1} ] ]
    turbine::exec_external ${v:javadir:1} [ dict create "stderr" ${v:__filename:outLog:1} ] "-Xmx8g" "-jar" ${v:gatkdir:1} "-T" "HaplotypeCaller" "-R" ${v:reference:1} "-I" ${v:t:124} "--dbsnp" ${v:dbsnp:1} "-o" ${v:t:131} "--emitRefConfidence" "GVCF" "-gt_mode" "DISCOVERY" "-A" "Coverage" "-A" "FisherStrand" "-A" "StrandOddsRatio" "-A" "HaplotypeScore" "-A" "MappingQualityRankSumTest" "-A" "QualByDepth" "-A" "RMSMappingQuality" "-A" "ReadPosRankSumTest" "-stand_call_conf" 30 "-stand_emit_conf" 30 "--sample_ploidy" ${v:ploidy} "-nt" 1 "-nct" ${v:thr:1} "-L" ${v:chr}
    turbine::store_file ${u:gvcfVariants:1} v:outputfile:1 0
    turbine::store_file ${u:haploLog:1} v:outLog:1 0
    turbine::decr_local_file_refcount v:outputfile:1
    turbine::decr_local_file_refcount v:outLog:1
}


proc __entry-async_op-parse_int-1 { t:2:2 t:5:2 u:threads:1 } {
    # Var: $string v:t:5:2 VALUE_OF [string:__t:5:2]
    # Var: $int v:t:4:2 VALUE_OF [int:__t:4:2]
    # Var: $string v:t:2:2 VALUE_OF [string:__t:2:2]
    # Var: $int v:t:1:6 VALUE_OF [int:__t:1:6]
    # Var: $int v:threads:1 VALUE_OF [int:threads:1]
    set v:t:5:2 [ turbine::retrieve_string ${t:5:2} CACHED 1 ]
    set v:t:4:2 [ turbine::parse_int_impl ${v:t:5:2} 10 ]
    set v:t:2:2 [ turbine::retrieve_string ${t:2:2} CACHED 1 ]
    set v:t:1:6 [ turbine::parse_int_impl ${v:t:2:2} 10 ]
    set v:threads:1 [ turbine::divide_integer_impl ${v:t:1:6} ${v:t:4:2} ]
    turbine::store_integer ${u:threads:1} ${v:threads:1}
}


proc __entry-async_op-strcat-6 { u:LogDir:1 t:118 v:sample } {
    # Var: $string v:t:118 VALUE_OF [string:__t:118]
    # Var: $string v:LogDir:1:1 VALUE_OF [string:LogDir:1]
    set v:t:118 [ turbine::retrieve_string ${t:118} CACHED 1 ]
    set v:LogDir:1:1 "${v:t:118}/${v:sample}/logs/"
    turbine::store_string ${u:LogDir:1} ${v:LogDir:1:1}
}


proc __entry-optmerged-3 { t:23:2 t:27:2 t:29:1 t:33:1 t:88 t:89 t:92 } {
    # Var: $string v:t:89 VALUE_OF [string:__t:89]
    set v:t:89 [ turbine::retrieve_string ${t:89} CACHED 1 ]
    turbine::rule [ list ${t:92} ] [ list __entry-async_op-strcat-7 ${t:88} ${t:92} ${v:t:89} ]
    turbine::rule [ list ${t:27:2} ] [ list __entry-async_op-strcat-8 ${t:23:2} ${t:27:2} ${v:t:89} ]
    turbine::rule [ list ${t:33:1} ] [ list __entry-async_op-strcat-9 ${t:29:1} ${t:33:1} ${v:t:89} ]
}


proc __entry-async_op-strcat-7 { t:88 t:92 v:t:89 } {
    # Var: $string v:t:92 VALUE_OF [string:__t:92]
    # Var: $string v:t:88 VALUE_OF [string:__t:88]
    set v:t:92 [ turbine::retrieve_string ${t:92} CACHED 1 ]
    set v:t:88 "${v:t:89}/${v:t:92}/"
    turbine::store_string ${t:88} ${v:t:88}
}


proc __entry-async_op-strcat-8 { t:23:2 t:27:2 v:t:89 } {
    # Var: $string v:t:27:2 VALUE_OF [string:__t:27:2]
    # Var: $string v:t:23:2 VALUE_OF [string:__t:23:2]
    set v:t:27:2 [ turbine::retrieve_string ${t:27:2} CACHED 1 ]
    set v:t:23:2 "${v:t:89}/${v:t:27:2}"
    turbine::store_string ${t:23:2} ${v:t:23:2}
}


proc __entry-async_op-strcat-9 { t:29:1 t:33:1 v:t:89 } {
    # Var: $string v:t:33:1 VALUE_OF [string:__t:33:1]
    # Var: $string v:t:29:1 VALUE_OF [string:__t:29:1]
    set v:t:33:1 [ turbine::retrieve_string ${t:33:1} CACHED 1 ]
    set v:t:29:1 "${v:t:89}/${v:t:33:1}"
    turbine::store_string ${t:29:1} ${v:t:29:1}
}


proc __entry-optmerged-4 { t:13 t:24 u:splitVar } {
    # Var: $string v:splitVar VALUE_OF [string:splitVar]
    # Var: $boolean v:t:16 VALUE_OF [boolean:__t:16]
    # Var: $boolean v:t:18 VALUE_OF [boolean:__t:18]
    # Var: $boolean v:t:20 VALUE_OF [boolean:__t:20]
    # Var: $boolean v:t:22 VALUE_OF [boolean:__t:22]
    # Var: $boolean v:t:24 VALUE_OF [boolean:__t:24]
    # Var: $boolean v:t:15 VALUE_OF [boolean:__t:15]
    # Var: $boolean v:t:14 VALUE_OF [boolean:__t:14]
    # Var: $boolean v:t:13 VALUE_OF [boolean:__t:13]
    set v:splitVar [ turbine::retrieve_string ${u:splitVar} CACHED 1 ]
    set v:t:16 [ expr { ! [ string equal ${v:splitVar} "YES" ] } ]
    set v:t:18 [ expr { ! [ string equal ${v:splitVar} "Yes" ] } ]
    set v:t:20 [ expr { ! [ string equal ${v:splitVar} "yes" ] } ]
    set v:t:22 [ expr { ! [ string equal ${v:splitVar} "Y" ] } ]
    set v:t:24 [ expr { ! [ string equal ${v:splitVar} "y" ] } ]
    turbine::store_integer ${t:24} ${v:t:24}
    set v:t:15 [ expr { ${v:t:16} && ${v:t:18} } ]
    set v:t:14 [ expr { ${v:t:15} && ${v:t:20} } ]
    set v:t:13 [ expr { ${v:t:14} && ${v:t:22} } ]
    turbine::store_integer ${t:13} ${v:t:13}
}


proc f:recalibrateBam { u:outBam u:sampleName u:chr u:var u:inputBam u:recalparmsindels } {
    turbine::c::log "function: recalibrateBam"
    # Var: string[string] u:vars /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:200:0
    global u:vars
    # Var: string t:1 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():77:27
    # Var: int u:threads /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():84:1
    # Var: string t:18 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():84:26
    # Var: string t:21 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():84:57
    # Var: file u:recalLog /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():87:35
    # Var: file u:printLog /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():88:35
    # Var: file u:report /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():89:30
    # Var: string t:29 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():92:37
    # Var: string t:31 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():92:53
    # Var: string t:33 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():93:11
    # Var: string t:34 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():93:18
    # Var: string t:37 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():93:44
    # Var: string t:39 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():95:11
    # Var: string t:43 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():95:44
    # Var: string t:45 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():97:31
    # Var: string t:47 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():97:48
    # Var: string t:49 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():98:10
    # Var: string t:50 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():98:17
    # Var: string t:53 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():98:44
    # Var: boolean t:55 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():101:1
    # Var: $boolean v:mapped_outputfile:2 RENAMED [$boolean:__v:mapped_outputfile]
    lassign [ adlb::multicreate [ list string 1 1 66 ] [ list integer 1 1 67 ] [ list string 1 1 68 ] [ list string 1 1 69 ] [ list string 1 1 73 ] [ list string 1 1 74 ] [ list string 1 1 75 ] [ list string 1 1 76 ] [ list string 1 1 77 ] [ list string 1 1 78 ] [ list string 1 1 79 ] [ list string 1 1 80 ] [ list string 1 1 81 ] [ list string 1 1 82 ] [ list string 1 1 83 ] [ list string 1 1 84 ] [ list integer 0 1 85 ] ] t:1 u:threads t:18 t:21 t:29 t:31 t:33 t:34 t:37 t:39 t:43 t:45 t:47 t:49 t:50 t:53 t:55
    turbine::c::log "allocated t:1=<${t:1}> u:threads=<${u:threads}> t:18=<${t:18}> t:21=<${t:21}> t:29=<${t:29}>"
    turbine::c::log "allocated t:31=<${t:31}> t:33=<${t:33}> t:34=<${t:34}> t:37=<${t:37}> t:39=<${t:39}>"
    turbine::c::log "allocated t:43=<${t:43}> t:45=<${t:45}> t:47=<${t:47}> t:49=<${t:49}> t:50=<${t:50}>"
    turbine::c::log "allocated t:53=<${t:53}> t:55=<${t:55}>"
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 0 1 70 ] [ list file 0 1 71 ] [ list file 1 1 72 ] ] [ list 1 1 1 ] ] u:recalLog u:printLog u:report
    turbine::file_read_refcount_incr ${u:outBam} 1
    turbine::file_read_refcount_incr ${u:inputBam} 1
    turbine::read_refcount_incr ${u:var} 7
    turbine::container_reference ${u:var} "OUTPUTDIR" ${t:1} string
    turbine::container_reference ${u:var} "PBSCORES" ${t:18} string
    turbine::container_reference ${u:var} "PROCPERNODE" ${t:21} string
    turbine::container_reference ${u:var} "JAVADIR" ${t:29} string
    turbine::container_reference ${u:var} "GATKDIR" ${t:31} string
    turbine::container_reference ${u:var} "REFGENOMEDIR" ${t:34} string
    turbine::container_reference ${u:var} "REFGENOME" ${t:37} string
    turbine::container_reference ${u:var} "DBSNP" ${t:43} string
    set filename:inputFile [ turbine::get_file_path ${u:inputBam} ]
    turbine::container_reference ${u:vars} "JAVADIR" ${t:45} string
    turbine::container_reference ${u:vars} "GATKDIR" ${t:47} string
    turbine::container_reference ${u:vars} "REFGENOMEDIR" ${t:50} string
    turbine::container_reference ${u:vars} "REFGENOME" ${t:53} string
    set v:mapped_outputfile:2 [ turbine::is_file_mapped ${u:outBam} ]
    set filename:outputfile:1 [ turbine::get_file_path ${u:outBam} ]
    if { ${v:mapped_outputfile:2} } {
    } else {
        # Var: $string optf:outputfile:1 RENAMED [$string:__of:outputfile]
        set optf:outputfile:1 [ turbine::mktemp ]
        turbine::set_filename_val ${u:outBam} ${optf:outputfile:1}
    }
    turbine::rule [ list ${t:18} ${t:21} ] "recalibrateBam-async_op-parse_int ${t:18} ${t:21} ${u:threads}"
    turbine::rule [ list ${t:50} ${t:53} ] "recalibrateBam-async_op-strcat ${t:49} ${t:50} ${t:53}"
    turbine::rule [ list ${t:1} ${u:chr} ${u:sampleName} ] "recalibrateBam-optmerged {${filename:inputFile}} {${filename:outputfile:1}} ${t:1} ${t:29} ${t:31} ${t:33} ${t:39} ${t:45} ${t:47} ${t:49} ${t:55} ${v:mapped_outputfile:2} {${u:chr}} {${u:inputBam}} {${u:outBam}} {${u:printLog}} {${u:recalLog}} {${u:recalparmsindels}} {${u:report}} {${u:sampleName}} ${u:threads}"
    turbine::rule [ list ${t:34} ] "recalibrateBam-optmerged-1 ${t:33} ${t:34} ${t:37} ${t:39} ${t:43}"
}


proc recalibrateBam-async_op-parse_int { t:18 t:21 u:threads } {
    # Var: $string v:t:21 VALUE_OF [string:__t:21]
    # Var: $int v:t:20 VALUE_OF [int:__t:20]
    # Var: $string v:t:18 VALUE_OF [string:__t:18]
    # Var: $int v:t:17 VALUE_OF [int:__t:17]
    # Var: $int v:threads VALUE_OF [int:threads]
    set v:t:21 [ turbine::retrieve_string ${t:21} CACHED 1 ]
    set v:t:20 [ turbine::parse_int_impl ${v:t:21} 10 ]
    set v:t:18 [ turbine::retrieve_string ${t:18} CACHED 1 ]
    set v:t:17 [ turbine::parse_int_impl ${v:t:18} 10 ]
    set v:threads [ turbine::divide_integer_impl ${v:t:17} ${v:t:20} ]
    turbine::store_integer ${u:threads} ${v:threads}
}


proc recalibrateBam-async_op-strcat { t:49 t:50 t:53 } {
    # Var: $string v:t:50 VALUE_OF [string:__t:50]
    # Var: $string v:t:53 VALUE_OF [string:__t:53]
    # Var: $string v:t:49 VALUE_OF [string:__t:49]
    set v:t:50 [ turbine::retrieve_string ${t:50} CACHED 1 ]
    set v:t:53 [ turbine::retrieve_string ${t:53} CACHED 1 ]
    set v:t:49 "${v:t:50}/${v:t:53}"
    turbine::store_string ${t:49} ${v:t:49}
}


proc recalibrateBam-optmerged { filename:inputFile filename:outputfile:1 t:1 t:29 t:31 t:33 t:39 t:45 t:47 t:49 t:55 v:mapped_outputfile:2 u:chr u:inputBam u:outBam u:printLog u:recalLog u:recalparmsindels u:report u:sampleName u:threads } {
    # Var: $string v:t:1 VALUE_OF [string:__t:1]
    # Var: $string v:sampleName VALUE_OF [string:sampleName]
    # Var: $string v:chr VALUE_OF [string:chr]
    # Var: $string v:prePrefix VALUE_OF [string:prePrefix]
    # Var: $string v:preLogPrefix VALUE_OF [string:preLogPrefix]
    # Var: $string v:prefix VALUE_OF [string:prefix]
    # Var: $string v:t:27 VALUE_OF [string:__t:27]
    # Var: $string v:logPrefix VALUE_OF [string:logPrefix]
    # Var: $string v:t:23 VALUE_OF [string:__t:23]
    # Var: $string v:t:25 VALUE_OF [string:__t:25]
    set v:t:1 [ turbine::retrieve_string ${t:1} CACHED 1 ]
    set v:sampleName [ turbine::retrieve_string ${u:sampleName} CACHED 1 ]
    set v:chr [ turbine::retrieve_string ${u:chr} CACHED 1 ]
    set v:prePrefix "${v:t:1}/${v:sampleName}/realign/${v:sampleName}.wDedups.sorted.${v:chr}"
    set v:preLogPrefix "${v:t:1}/${v:sampleName}/logs/${v:sampleName}.wDedups.sorted.${v:chr}"
    set v:prefix [ turbine::replace_impl ${v:prePrefix} ".." "." 0 ]
    set v:t:27 "${v:prefix}.recal_report.grp"
    turbine::set_filename_val ${u:report} ${v:t:27}
    set v:logPrefix [ turbine::replace_impl ${v:preLogPrefix} ".." "." 0 ]
    set v:t:23 "${v:logPrefix}_BaseRecalibrator.log"
    turbine::set_filename_val ${u:recalLog} ${v:t:23}
    set v:t:25 "${v:logPrefix}_PrintReads.log"
    turbine::set_filename_val ${u:printLog} ${v:t:25}
    turbine::rule [ list ${filename:inputFile} ${t:29} ${t:31} ${t:33} ${t:39} [ turbine::get_file_td ${u:inputBam} ] ${u:recalparmsindels} ${u:threads} ] [ list BaseRecalibrator-app-leaf1 ${filename:inputFile} ${filename:outputfile:1} ${t:29} ${t:31} ${t:33} ${t:39} ${t:45} ${t:47} ${t:49} ${t:55} ${v:mapped_outputfile:2} ${v:t:23} ${v:t:25} ${v:t:27} ${u:inputBam} ${u:outBam} ${u:printLog} ${u:recalLog} ${u:recalparmsindels} ${u:report} ${u:threads} ]
}


proc BaseRecalibrator-app-leaf1 { filename:inputFile filename:outputfile:1 t:29 t:31 t:33 t:39 t:45 t:47 t:49 t:55 v:mapped_outputfile:2 v:t:23 v:t:25 v:t:27 u:inputBam u:outBam u:printLog u:recalLog u:recalparmsindels u:report u:threads } {
    # Var: $string v:javadir RENAMED [$string:__v:javadir] ./bioapps/realign_varcal.swift:BaseRecalibrator():47:9
    # Var: $string v:gatkdir RENAMED [$string:__v:gatkdir] ./bioapps/realign_varcal.swift:BaseRecalibrator():47:9
    # Var: $string v:reference RENAMED [$string:__v:reference] ./bioapps/realign_varcal.swift:BaseRecalibrator():47:9
    # Var: $string v:__filename:inputFile RENAMED [$string:__v:__filename:inputFile] ./bioapps/realign_varcal.swift:BaseRecalibrator():47:9
    # Var: $string v:dbsnp RENAMED [$string:__v:dbsnp] ./bioapps/realign_varcal.swift:BaseRecalibrator():47:9
    # Var: $string$[int] v:knownindels RENAMED [$string$[int]:__v:knownindels] ./bioapps/realign_varcal.swift:BaseRecalibrator():47:9
    # Var: $int v:thr RENAMED [$int:__v:thr] ./bioapps/realign_varcal.swift:BaseRecalibrator():47:9
    # Var: $file v:inputFile RENAMED [$file:__v:inputFile] ./bioapps/realign_varcal.swift:BaseRecalibrator():47:9
    # Var: $file v:outputfile RENAMED [$file:__v:outputfile] ./bioapps/realign_varcal.swift:BaseRecalibrator():47:9
    # Var: $file v:outLog RENAMED [$file:__v:outLog] ./bioapps/realign_varcal.swift:BaseRecalibrator():47:9
    set v:javadir [ turbine::retrieve_string ${t:29} CACHED 1 ]
    set v:gatkdir [ turbine::retrieve_string ${t:31} CACHED 1 ]
    set v:reference [ turbine::retrieve_string ${t:33} CACHED 1 ]
    set v:__filename:inputFile [ turbine::retrieve_string ${filename:inputFile} ]
    set v:dbsnp [ turbine::retrieve_string ${t:39} CACHED 1 ]
    set v:knownindels [ turbine::unpack_args ${u:recalparmsindels} 1 string ]
    set v:thr [ turbine::retrieve_integer ${u:threads} CACHED 1 ]
    set v:inputFile [ turbine::retrieve_file ${u:inputBam} ]
    set tcltmp:init_rc 2
    set v:outputfile [ turbine::create_local_file_ref ${v:t:27} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:outLog [ turbine::create_local_file_ref ${v:t:23} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir "-Xmx16g" "-jar" ${v:gatkdir} "-T" "BaseRecalibrator" "-R" ${v:reference} "-I" ${v:__filename:inputFile} "-knownSites" ${v:dbsnp} {*}${v:knownindels} "-nct" ${v:thr} "-o" ${v:t:27} [ dict create "stderr" ${v:t:23} ] ]
    turbine::exec_external ${v:javadir} [ dict create "stderr" ${v:t:23} ] "-Xmx16g" "-jar" ${v:gatkdir} "-T" "BaseRecalibrator" "-R" ${v:reference} "-I" ${v:__filename:inputFile} "-knownSites" ${v:dbsnp} {*}${v:knownindels} "-nct" ${v:thr} "-o" ${v:t:27}
    turbine::store_file ${u:report} v:outputfile 0
    turbine::store_file ${u:recalLog} v:outLog 0
    turbine::rule [ list ${filename:outputfile:1} ${t:45} ${t:47} ${t:49} ] [ list PrintReads-app-leaf1 ${filename:outputfile:1} ${t:45} ${t:47} ${t:49} ${t:55} ${v:__filename:inputFile} ${v:mapped_outputfile:2} ${v:t:25} ${v:t:27} ${v:thr} ${u:inputBam} ${u:outBam} ${u:printLog} ${u:report} ]
    turbine::decr_local_file_refcount v:outputfile
    turbine::decr_local_file_refcount v:outLog
    turbine::file_read_refcount_decr ${u:inputBam} 1
    turbine::read_refcount_decr ${u:recalparmsindels} 1
}


proc PrintReads-app-leaf1 { filename:outputfile:1 t:45 t:47 t:49 t:55 v:__filename:inputFile v:mapped_outputfile:2 v:t:25 v:t:27 v:thr u:inputBam u:outBam u:printLog u:report } {
    # Var: string[string] u:vars /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:200:0
    global u:vars
    # Var: $string v:javadir:1 RENAMED [$string:__v:javadir] ./bioapps/realign_varcal.swift:PrintReads():61:9
    # Var: $string v:gatkdir:1 RENAMED [$string:__v:gatkdir] ./bioapps/realign_varcal.swift:PrintReads():61:9
    # Var: $string v:reference:1 RENAMED [$string:__v:reference] ./bioapps/realign_varcal.swift:PrintReads():61:9
    # Var: $string v:__filename:outputfile:1 RENAMED [$string:__v:__filename:outputfile] ./bioapps/realign_varcal.swift:PrintReads():61:9
    # Var: $file v:inputFile:1 RENAMED [$file:__v:inputFile] ./bioapps/realign_varcal.swift:PrintReads():61:9
    # Var: $file v:recalreport RENAMED [$file:__v:recalreport] ./bioapps/realign_varcal.swift:PrintReads():61:9
    # Var: $file v:outputfile:1 RENAMED [$file:__v:outputfile] ./bioapps/realign_varcal.swift:PrintReads():61:9
    # Var: $file v:outLog:1 RENAMED [$file:__v:outLog] ./bioapps/realign_varcal.swift:PrintReads():61:9
    # Var: $boolean v:4:1 RENAMED [$boolean:__v:4] ./bioapps/realign_varcal.swift:PrintReads():61:9
    set v:javadir:1 [ turbine::retrieve_string ${t:45} CACHED 1 ]
    set v:gatkdir:1 [ turbine::retrieve_string ${t:47} CACHED 1 ]
    set v:reference:1 [ turbine::retrieve_string ${t:49} CACHED 1 ]
    set v:__filename:outputfile:1 [ turbine::retrieve_string ${filename:outputfile:1} ]
    set v:inputFile:1 [ turbine::retrieve_file ${u:inputBam} CACHED 1 ]
    set v:recalreport [ turbine::retrieve_file ${u:report} CACHED 1 ]
    if { ${v:mapped_outputfile:2} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:outputfile:1 [ turbine::create_local_file_ref ${v:__filename:outputfile:1} ${tcltmp:init_rc} ${v:mapped_outputfile:2} ]
    set tcltmp:init_rc 2
    set v:outLog:1 [ turbine::create_local_file_ref ${v:t:25} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx16g" "-jar" ${v:gatkdir:1} "-T" "PrintReads" "-R" ${v:reference:1} "-I" ${v:__filename:inputFile} "-BQSR" ${v:t:27} "-nct" ${v:thr} "--out" ${v:__filename:outputfile:1} [ dict create "stderr" ${v:t:25} ] ]
    turbine::exec_external ${v:javadir:1} [ dict create "stderr" ${v:t:25} ] "-Xmx16g" "-jar" ${v:gatkdir:1} "-T" "PrintReads" "-R" ${v:reference:1} "-I" ${v:__filename:inputFile} "-BQSR" ${v:t:27} "-nct" ${v:thr} "--out" ${v:__filename:outputfile:1}
    set v:4:1 [ expr { ! ${v:mapped_outputfile:2} } ]
    turbine::store_file ${u:outBam} v:outputfile:1 ${v:4:1}
    turbine::rule [ list [ turbine::get_file_td ${u:outBam} ] ] "f:checkBam ${t:55} ${u:vars} {${u:outBam}}"
    turbine::store_file ${u:printLog} v:outLog:1 0
    turbine::decr_local_file_refcount v:outputfile:1
    turbine::decr_local_file_refcount v:outLog:1
    turbine::file_read_refcount_decr ${u:outBam} 1
}


proc recalibrateBam-optmerged-1 { t:33 t:34 t:37 t:39 t:43 } {
    # Var: $string v:t:34 VALUE_OF [string:__t:34]
    set v:t:34 [ turbine::retrieve_string ${t:34} CACHED 1 ]
    turbine::rule [ list ${t:37} ] [ list recalibrateBam-async_op-strcat-1 ${t:33} ${t:37} ${v:t:34} ]
    turbine::rule [ list ${t:43} ] [ list recalibrateBam-async_op-strcat-2 ${t:39} ${t:43} ${v:t:34} ]
}


proc recalibrateBam-async_op-strcat-1 { t:33 t:37 v:t:34 } {
    # Var: $string v:t:37 VALUE_OF [string:__t:37]
    # Var: $string v:t:33 VALUE_OF [string:__t:33]
    set v:t:37 [ turbine::retrieve_string ${t:37} CACHED 1 ]
    set v:t:33 "${v:t:34}/${v:t:37}"
    turbine::store_string ${t:33} ${v:t:33}
}


proc recalibrateBam-async_op-strcat-2 { t:39 t:43 v:t:34 } {
    # Var: $string v:t:43 VALUE_OF [string:__t:43]
    # Var: $string v:t:39 VALUE_OF [string:__t:39]
    set v:t:43 [ turbine::retrieve_string ${t:43} CACHED 1 ]
    set v:t:39 "${v:t:34}/${v:t:43}"
    turbine::store_string ${t:39} ${v:t:39}
}


proc f:recalibrationWrapper { u:recalibratedbam u:sampleName u:chr u:var u:inputBam u:realparms u:recalparmsindels } {
    turbine::c::log "function: recalibrationWrapper"
    # Var: string[string] u:vars /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:200:0
    global u:vars
    # Var: string t:1 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrationWrapper():112:27
    # Var: string u:prefix /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrationWrapper():114:1
    # Var: string t:10 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrationWrapper():116:5
    lassign [ adlb::multicreate [ list string 2 1 86 ] [ list string 1 1 87 ] [ list string 1 1 88 ] ] t:1 u:prefix t:10
    turbine::c::log "allocated t:1=<${t:1}> u:prefix=<${u:prefix}> t:10=<${t:10}>"
    turbine::read_refcount_incr ${u:sampleName} 2
    turbine::read_refcount_incr ${u:recalparmsindels} 1
    turbine::read_refcount_incr ${u:chr} 2
    turbine::file_read_refcount_incr ${u:recalibratedbam} 1
    turbine::file_read_refcount_incr ${u:inputBam} 1
    turbine::read_refcount_incr ${u:var} 3
    turbine::container_reference ${u:var} "OUTPUTDIR" ${t:1} string
    turbine::container_reference ${u:vars} "ANALYSIS" ${t:10} string
    turbine::rule [ list ${t:1} ${u:chr} ${u:sampleName} ] "recalibrationWrapper-async_op-strcat ${t:1} {${u:chr}} ${u:prefix} {${u:sampleName}}"
    turbine::rule [ list ${t:10} ] "recalibrationWrapper-async_op-eq_string ${t:1} ${t:10} {${u:chr}} {${u:inputBam}} ${u:prefix} {${u:realparms}} {${u:recalibratedbam}} {${u:recalparmsindels}} {${u:sampleName}} {${u:var}}"
}


proc recalibrationWrapper-async_op-strcat { t:1 u:chr u:prefix u:sampleName } {
    # Var: $string v:t:1 VALUE_OF [string:__t:1]
    # Var: $string v:sampleName VALUE_OF [string:sampleName]
    # Var: $string v:chr VALUE_OF [string:chr]
    # Var: $string v:prePrefix VALUE_OF [string:prePrefix]
    # Var: $string v:prefix VALUE_OF [string:prefix]
    set v:t:1 [ turbine::retrieve_string ${t:1} CACHED 1 ]
    set v:sampleName [ turbine::retrieve_string ${u:sampleName} CACHED 1 ]
    set v:chr [ turbine::retrieve_string ${u:chr} CACHED 1 ]
    set v:prePrefix "${v:t:1}/${v:sampleName}/realign/${v:sampleName}.${v:chr}"
    set v:prefix [ turbine::replace_impl ${v:prePrefix} ".." "." 0 ]
    turbine::store_string ${u:prefix} ${v:prefix}
}


proc recalibrationWrapper-async_op-eq_string { t:1 t:10 u:chr u:inputBam u:prefix u:realparms u:recalibratedbam u:recalparmsindels u:sampleName u:var } {
    # Var: $string v:t:10 VALUE_OF [string:__t:10]
    # Var: $boolean v:t:9 VALUE_OF [boolean:__t:9]
    set v:t:10 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:t:9 [ string equal ${v:t:10} "VC_REALIGN" ]
    if { ${v:t:9} } {
        # Var: string t:13 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrationWrapper():122:22
        # Var: file u:realignedbam /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrationWrapper():122:37
        # Var: void t:15 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrationWrapper():125:2
        # Var: string t:16 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrationWrapper():125:17
        lassign [ adlb::multicreate [ list string 1 1 89 ] [ list integer 1 1 91 ] [ list string 1 1 92 ] ] t:13 t:15 t:16
        turbine::c::log "allocated t:13=<${t:13}> t:15=<${t:15}> t:16=<${t:16}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 2 1 90 ] ] [ list 1 ] ] u:realignedbam
        turbine::read_refcount_incr ${u:sampleName} 1
        turbine::read_refcount_incr ${u:realparms} 1
        turbine::read_refcount_incr ${u:chr} 1
        turbine::read_refcount_incr ${u:prefix} 1
        turbine::read_refcount_incr ${t:1} 1
        turbine::file_read_refcount_incr ${u:inputBam} 1
        turbine::read_refcount_incr ${u:var} 7
        turbine::container_reference ${u:var} "SAMTOOLSDIR" ${t:16} string
        f:samtools_index ${t:15} ${t:16} ${u:inputBam} -100 "HARD" "RANK"
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:recalibrateBam {${u:recalibratedbam}} {${u:sampleName}} {${u:chr}} {${u:var}} {${u:realignedbam}} {${u:recalparmsindels}}"
        turbine::reset_priority
        turbine::rule [ list ${t:15} ] "recalibrationWrapper-chain1 ${t:1} ${t:13} ${t:15} {${u:chr}} {${u:inputBam}} {${u:realignedbam}} {${u:realparms}} {${u:sampleName}} {${u:var}}"
        turbine::rule [ list ${u:prefix} ] "recalibrationWrapper-async_op-strcat-2 ${t:13} ${u:prefix} {${u:realignedbam}}"
        turbine::read_refcount_decr ${t:16} 1
    } else {
        # Var: void t:18 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrationWrapper():135:2
        # Var: string t:19 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrationWrapper():135:17
        lassign [ adlb::multicreate [ list integer 1 1 105 ] [ list string 1 1 106 ] ] t:18 t:19
        turbine::c::log "allocated t:18=<${t:18}> t:19=<${t:19}>"
        turbine::container_reference ${u:var} "SAMTOOLSDIR" ${t:19} string
        f:samtools_index ${t:18} ${t:19} ${u:inputBam} -100 "HARD" "RANK"
        turbine::rule [ list ${t:18} ] "recalibrationWrapper-chain2 ${t:18} {${u:chr}} {${u:inputBam}} {${u:recalibratedbam}} {${u:recalparmsindels}} {${u:sampleName}} {${u:var}}"
        turbine::read_refcount_decr ${t:19} 1
    }
    turbine::file_read_refcount_decr ${u:inputBam} 1
    turbine::read_refcount_decr ${u:var} 1
    turbine::read_refcount_decr ${t:1} 1
    turbine::file_read_refcount_decr ${u:recalibratedbam} 1
    turbine::read_refcount_decr ${u:prefix} 1
    turbine::read_refcount_decr ${u:chr} 1
    turbine::read_refcount_decr ${u:recalparmsindels} 1
    turbine::read_refcount_decr ${u:realparms} 1
    turbine::read_refcount_decr ${u:sampleName} 1
}


proc recalibrationWrapper-chain1 { t:1 t:13 t:15 u:chr u:inputBam u:realignedbam u:realparms u:sampleName u:var } {
    # Var: int u:threads RENAMED [int:threads] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():49:1
    # Var: string t:18:1 RENAMED [string:__t:18] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():49:26
    # Var: string t:21 RENAMED [string:__t:21] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():49:57
    # Var: file u:targetLog RENAMED [file:targetLog] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():52:36
    # Var: file u:realignLog RENAMED [file:realignLog] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():53:37
    # Var: file u:intervals RENAMED [file:intervals] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():55:33
    # Var: string t:29 RENAMED [string:__t:29] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():58:47
    # Var: string t:31 RENAMED [string:__t:31] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():58:63
    # Var: string t:33 RENAMED [string:__t:33] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():59:8
    # Var: string t:34 RENAMED [string:__t:34] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():59:15
    # Var: string t:37 RENAMED [string:__t:37] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():59:41
    # Var: boolean t:49 RENAMED [boolean:__t:49] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():66:1
    lassign [ adlb::multicreate [ list integer 1 1 93 ] [ list string 1 1 94 ] [ list string 1 1 95 ] [ list string 1 1 99 ] [ list string 1 1 100 ] [ list string 1 1 101 ] [ list string 1 1 102 ] [ list string 1 1 103 ] [ list integer 0 1 104 ] ] u:threads t:18:1 t:21 t:29 t:31 t:33 t:34 t:37 t:49
    turbine::c::log "allocated u:threads=<${u:threads}> t:18:1=<${t:18:1}> t:21=<${t:21}> t:29=<${t:29}> t:31=<${t:31}>"
    turbine::c::log "allocated t:33=<${t:33}> t:34=<${t:34}> t:37=<${t:37}> t:49=<${t:49}>"
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 0 1 96 ] [ list file 0 1 97 ] [ list file 1 1 98 ] ] [ list 1 1 1 ] ] u:targetLog u:realignLog u:intervals
    set filename:inputFile [ turbine::get_file_path ${u:inputBam} ]
    turbine::container_reference ${u:var} "PBSCORES" ${t:18:1} string
    turbine::container_reference ${u:var} "PROCPERNODE" ${t:21} string
    turbine::container_reference ${u:var} "JAVADIR" ${t:29} string
    turbine::container_reference ${u:var} "GATKDIR" ${t:31} string
    turbine::container_reference ${u:var} "REFGENOMEDIR" ${t:34} string
    turbine::container_reference ${u:var} "REFGENOME" ${t:37} string
    turbine::rule [ list ${t:18:1} ${t:21} ] "recalibrationWrapper-async_op-parse_int ${t:18:1} ${t:21} ${u:threads}"
    turbine::rule [ list ${t:34} ${t:37} ] "recalibrationWrapper-async_op-strcat-1 ${t:33} ${t:34} ${t:37}"
    turbine::rule [ list ${t:1} ${u:chr} ${u:sampleName} ] "recalibrationWrapper-optmerged {${filename:inputFile}} ${t:1} ${t:13} ${t:29} ${t:31} ${t:33} ${t:49} {${u:chr}} {${u:inputBam}} {${u:intervals}} {${u:realignLog}} {${u:realignedbam}} {${u:realparms}} {${u:sampleName}} {${u:targetLog}} ${u:threads} {${u:var}}"
    turbine::read_refcount_decr ${t:15} 1
}


proc recalibrationWrapper-async_op-parse_int { t:18:1 t:21 u:threads } {
    # Var: $string v:t:21 VALUE_OF [string:__t:21]
    # Var: $int v:t:20:1 VALUE_OF [int:__t:20:1]
    # Var: $string v:t:18:1 VALUE_OF [string:__t:18:1]
    # Var: $int v:t:17:1 VALUE_OF [int:__t:17:1]
    # Var: $int v:threads VALUE_OF [int:threads]
    set v:t:21 [ turbine::retrieve_string ${t:21} CACHED 1 ]
    set v:t:20:1 [ turbine::parse_int_impl ${v:t:21} 10 ]
    set v:t:18:1 [ turbine::retrieve_string ${t:18:1} CACHED 1 ]
    set v:t:17:1 [ turbine::parse_int_impl ${v:t:18:1} 10 ]
    set v:threads [ turbine::divide_integer_impl ${v:t:17:1} ${v:t:20:1} ]
    turbine::store_integer ${u:threads} ${v:threads}
}


proc recalibrationWrapper-async_op-strcat-1 { t:33 t:34 t:37 } {
    # Var: $string v:t:34 VALUE_OF [string:__t:34]
    # Var: $string v:t:37 VALUE_OF [string:__t:37]
    # Var: $string v:t:33 VALUE_OF [string:__t:33]
    set v:t:34 [ turbine::retrieve_string ${t:34} CACHED 1 ]
    set v:t:37 [ turbine::retrieve_string ${t:37} CACHED 1 ]
    set v:t:33 "${v:t:34}/${v:t:37}"
    turbine::store_string ${t:33} ${v:t:33}
}


proc recalibrationWrapper-optmerged { filename:inputFile t:1 t:13 t:29 t:31 t:33 t:49 u:chr u:inputBam u:intervals u:realignLog u:realignedbam u:realparms u:sampleName u:targetLog u:threads u:var } {
    # Var: $string v:t:1:1 VALUE_OF [string:__t:1]
    # Var: $string v:sampleName:2 VALUE_OF [string:sampleName]
    # Var: $string v:chr:1 VALUE_OF [string:chr]
    # Var: $string v:prePrefix:1:1 VALUE_OF [string:prePrefix:1]
    # Var: $string v:preLogPrefix VALUE_OF [string:preLogPrefix]
    # Var: $string v:prefix:1:1 VALUE_OF [string:prefix:1]
    # Var: $string v:t:27 VALUE_OF [string:__t:27]
    # Var: $string v:logPrefix VALUE_OF [string:logPrefix]
    # Var: $string v:t:25 VALUE_OF [string:__t:25]
    # Var: $string v:t:23 VALUE_OF [string:__t:23]
    set v:t:1:1 [ turbine::retrieve_string ${t:1} CACHED 1 ]
    set v:sampleName:2 [ turbine::retrieve_string ${u:sampleName} CACHED 1 ]
    set v:chr:1 [ turbine::retrieve_string ${u:chr} CACHED 1 ]
    set v:prePrefix:1:1 "${v:t:1:1}/${v:sampleName:2}/realign/${v:sampleName:2}.wDedups.sorted.${v:chr:1}"
    set v:preLogPrefix "${v:t:1:1}/${v:sampleName:2}/logs/${v:sampleName:2}.wDedups.sorted.${v:chr:1}"
    set v:prefix:1:1 [ turbine::replace_impl ${v:prePrefix:1:1} ".." "." 0 ]
    set v:t:27 "${v:prefix:1:1}.realignTargetCreator.intervals"
    turbine::set_filename_val ${u:intervals} ${v:t:27}
    set v:logPrefix [ turbine::replace_impl ${v:preLogPrefix} ".." "." 0 ]
    set v:t:25 "${v:logPrefix}_IndelRealigner.log"
    turbine::set_filename_val ${u:realignLog} ${v:t:25}
    set v:t:23 "${v:logPrefix}_RealignTargetCreator.log"
    turbine::set_filename_val ${u:targetLog} ${v:t:23}
    turbine::rule [ list ${filename:inputFile} ${t:29} ${t:31} ${t:33} [ turbine::get_file_td ${u:inputBam} ] ${u:realparms} ${u:threads} ] [ list RealignerTargetCreator-app-leaf1 ${filename:inputFile} ${t:13} ${t:29} ${t:31} ${t:33} ${t:49} ${v:t:23} ${v:t:25} ${v:t:27} ${u:inputBam} ${u:intervals} ${u:realignLog} ${u:realignedbam} ${u:realparms} ${u:targetLog} ${u:threads} ${u:var} ]
}


proc RealignerTargetCreator-app-leaf1 { filename:inputFile t:13 t:29 t:31 t:33 t:49 v:t:23 v:t:25 v:t:27 u:inputBam u:intervals u:realignLog u:realignedbam u:realparms u:targetLog u:threads u:var } {
    # Var: $string v:javadir RENAMED [$string:__v:javadir] ./bioapps/realign_varcal.swift:RealignerTargetCreator():20:9
    # Var: $string v:gatkdir RENAMED [$string:__v:gatkdir] ./bioapps/realign_varcal.swift:RealignerTargetCreator():20:9
    # Var: $string v:reference RENAMED [$string:__v:reference] ./bioapps/realign_varcal.swift:RealignerTargetCreator():20:9
    # Var: $string v:__filename:inputFile RENAMED [$string:__v:__filename:inputFile] ./bioapps/realign_varcal.swift:RealignerTargetCreator():20:9
    # Var: $string$[int] v:known RENAMED [$string$[int]:__v:known] ./bioapps/realign_varcal.swift:RealignerTargetCreator():20:9
    # Var: $int v:thr RENAMED [$int:__v:thr] ./bioapps/realign_varcal.swift:RealignerTargetCreator():20:9
    # Var: $file v:inputFile RENAMED [$file:__v:inputFile] ./bioapps/realign_varcal.swift:RealignerTargetCreator():20:9
    # Var: $file v:outputfile RENAMED [$file:__v:outputfile] ./bioapps/realign_varcal.swift:RealignerTargetCreator():20:9
    # Var: $file v:outLog RENAMED [$file:__v:outLog] ./bioapps/realign_varcal.swift:RealignerTargetCreator():20:9
    set v:javadir [ turbine::retrieve_string ${t:29} CACHED 1 ]
    set v:gatkdir [ turbine::retrieve_string ${t:31} CACHED 1 ]
    set v:reference [ turbine::retrieve_string ${t:33} CACHED 1 ]
    set v:__filename:inputFile [ turbine::retrieve_string ${filename:inputFile} ]
    set v:known [ turbine::unpack_args ${u:realparms} 1 string ]
    set v:thr [ turbine::retrieve_integer ${u:threads} CACHED 1 ]
    set v:inputFile [ turbine::retrieve_file ${u:inputBam} ]
    set tcltmp:init_rc 2
    set v:outputfile [ turbine::create_local_file_ref ${v:t:27} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:outLog [ turbine::create_local_file_ref ${v:t:23} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir "-Xmx8g" "-jar" ${v:gatkdir} "-T" "RealignerTargetCreator" "-R" ${v:reference} "-I" ${v:__filename:inputFile} {*}${v:known} "-nt" ${v:thr} "-o" ${v:t:27} [ dict create "stderr" ${v:t:23} ] ]
    turbine::exec_external ${v:javadir} [ dict create "stderr" ${v:t:23} ] "-Xmx8g" "-jar" ${v:gatkdir} "-T" "RealignerTargetCreator" "-R" ${v:reference} "-I" ${v:__filename:inputFile} {*}${v:known} "-nt" ${v:thr} "-o" ${v:t:27}
    turbine::store_file ${u:intervals} v:outputfile 0
    turbine::store_file ${u:targetLog} v:outLog 0
    turbine::rule [ list ${t:13} ] [ list IndelRealigner-app-leaf1 ${t:13} ${t:49} ${v:__filename:inputFile} ${v:gatkdir} ${v:javadir} ${v:known} ${v:reference} ${v:t:25} ${v:t:27} ${u:inputBam} ${u:intervals} ${u:realignLog} ${u:realignedbam} ${u:var} ]
    turbine::decr_local_file_refcount v:outputfile
    turbine::decr_local_file_refcount v:outLog
    turbine::file_read_refcount_decr ${u:inputBam} 1
    turbine::read_refcount_decr ${u:realparms} 1
}


proc IndelRealigner-app-leaf1 { t:13 t:49 v:__filename:inputFile v:gatkdir v:javadir v:known v:reference v:t:25 v:t:27 u:inputBam u:intervals u:realignLog u:realignedbam u:var } {
    # Var: $string v:__filename:outputfile:1 RENAMED [$string:__v:__filename:outputfile] ./bioapps/realign_varcal.swift:IndelRealigner():33:9
    # Var: $file v:inputFile:1 RENAMED [$file:__v:inputFile] ./bioapps/realign_varcal.swift:IndelRealigner():33:9
    # Var: $file v:intervals RENAMED [$file:__v:intervals] ./bioapps/realign_varcal.swift:IndelRealigner():33:9
    # Var: $file v:outputfile:1 RENAMED [$file:__v:outputfile] ./bioapps/realign_varcal.swift:IndelRealigner():33:9
    # Var: $file v:outLog:1 RENAMED [$file:__v:outLog] ./bioapps/realign_varcal.swift:IndelRealigner():33:9
    set v:__filename:outputfile:1 [ turbine::retrieve_string ${t:13} CACHED 1 ]
    set v:inputFile:1 [ turbine::retrieve_file ${u:inputBam} CACHED 1 ]
    set v:intervals [ turbine::retrieve_file ${u:intervals} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:1 [ turbine::create_local_file_ref ${v:__filename:outputfile:1} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:outLog:1 [ turbine::create_local_file_ref ${v:t:25} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir "-Xmx8g" "-jar" ${v:gatkdir} "-T" "IndelRealigner" "-R" ${v:reference} "-I" ${v:__filename:inputFile} {*}${v:known} "--targetIntervals" ${v:t:27} "-o" ${v:__filename:outputfile:1} [ dict create "stderr" ${v:t:25} ] ]
    turbine::exec_external ${v:javadir} [ dict create "stderr" ${v:t:25} ] "-Xmx8g" "-jar" ${v:gatkdir} "-T" "IndelRealigner" "-R" ${v:reference} "-I" ${v:__filename:inputFile} {*}${v:known} "--targetIntervals" ${v:t:27} "-o" ${v:__filename:outputfile:1}
    turbine::store_file ${u:realignedbam} v:outputfile:1 0
    turbine::rule [ list [ turbine::get_file_td ${u:realignedbam} ] ] "f:checkBam ${t:49} {${u:var}} {${u:realignedbam}}"
    turbine::store_file ${u:realignLog} v:outLog:1 0
    turbine::decr_local_file_refcount v:outputfile:1
    turbine::decr_local_file_refcount v:outLog:1
}


proc recalibrationWrapper-async_op-strcat-2 { t:13 u:prefix u:realignedbam } {
    # Var: $string v:prefix:1 VALUE_OF [string:prefix]
    # Var: $string v:t:13 VALUE_OF [string:__t:13]
    set v:prefix:1 [ turbine::retrieve_string ${u:prefix} CACHED 1 ]
    set v:t:13 "${v:prefix:1}.realigned.bam"
    turbine::store_string ${t:13} ${v:t:13}
    turbine::set_filename_val ${u:realignedbam} ${v:t:13}
}


proc recalibrationWrapper-chain2 { t:18 u:chr u:inputBam u:recalibratedbam u:recalparmsindels u:sampleName u:var } {
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:recalibrateBam {${u:recalibratedbam}} {${u:sampleName}} {${u:chr}} {${u:var}} {${u:inputBam}} {${u:recalparmsindels}}"
    turbine::reset_priority
    turbine::read_refcount_decr ${t:18} 1
}


proc f:samtools_index { u:signal u:samtoolsdir u:inputFilename v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: samtools_index"
    turbine::file_read_refcount_incr ${u:inputFilename} 2
    turbine::read_refcount_incr ${u:samtoolsdir} 1
    set filename:inputFilename [ turbine::get_file_path ${u:inputFilename} ]
    turbine::rule [ list ${filename:inputFilename} [ turbine::get_file_td ${u:inputFilename} ] ${u:samtoolsdir} ] "samtools_index-app-leaf1 {${filename:inputFilename}} {${u:inputFilename}} {${u:samtoolsdir}} {${u:signal}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc samtools_index-app-leaf1 { filename:inputFilename u:inputFilename u:samtoolsdir u:signal } {
    # Var: $string v:samtoolsdir VALUE_OF [string:samtoolsdir] ./bioapps/realign_varcal.swift:samtools_index():7:21
    # Var: $string v:__filename:inputFilename VALUE_OF [string:__filename:inputFilename] ./bioapps/realign_varcal.swift:samtools_index():7:21
    # Var: $file v:inputFilename VALUE_OF [file:inputFilename] ./bioapps/realign_varcal.swift:samtools_index():7:21
    # Var: $void v:signal VALUE_OF [void:signal] ./bioapps/realign_varcal.swift:samtools_index():7:21
    set v:samtoolsdir [ turbine::retrieve_string ${u:samtoolsdir} CACHED 1 ]
    set v:__filename:inputFilename [ turbine::retrieve_string ${filename:inputFilename} ]
    set v:inputFilename [ turbine::retrieve_file ${u:inputFilename} CACHED 2 ]
    turbine::c::log [ list exec: __v:samtoolsdir "index" ${v:__filename:inputFilename} [ dict create ] ]
    turbine::exec_external ${v:samtoolsdir} [ dict create ] "index" ${v:__filename:inputFilename}
    turbine::store_void ${u:signal}
}


proc f:find_files { u:output u:dir u:pattern v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: find_files"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::file_read_refcount_incr ${u:output} 1
    turbine::read_refcount_incr ${u:pattern} 1
    turbine::read_refcount_incr ${u:dir} 1
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${filename:output} ${u:dir} ${u:pattern} ] "find_files-app-leaf1 {${filename:output}} ${v:mapped_output} {${u:dir}} {${u:output}} {${u:pattern}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc find_files-app-leaf1 { filename:output v:mapped_output u:dir u:output u:pattern } {
    # Var: $string v:dir VALUE_OF [string:dir] ./generalfunctions/general.swift:find_files():29:36
    # Var: $string v:pattern VALUE_OF [string:pattern] ./generalfunctions/general.swift:find_files():29:36
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] ./generalfunctions/general.swift:find_files():29:36
    # Var: $file v:output VALUE_OF [file:output] ./generalfunctions/general.swift:find_files():29:36
    # Var: $boolean v:3 EXPR_TEMPORARY ./generalfunctions/general.swift:find_files():29:36
    set v:dir [ turbine::retrieve_string ${u:dir} CACHED 1 ]
    set v:pattern [ turbine::retrieve_string ${u:pattern} CACHED 1 ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: "find" ${v:dir} "-name" ${v:pattern} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external "find" [ dict create "stdout" ${v:__filename:output} ] ${v:dir} "-name" ${v:pattern}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
}


proc f:checkBam { u:success u:variables u:bamFile } {
    turbine::c::log "function: checkBam"
    # Var: string t:1 EXPR_TEMPORARY ./generalfunctions/general.swift:checkBam():47:32
    # Var: $string v:of:bamFile VALUE_OF [string:__of:bamFile]
    lassign [ adlb::multicreate [ list string 1 1 107 ] ] t:1
    turbine::c::log "allocated t:1=<${t:1}>"
    turbine::container_reference ${u:variables} "SAMTOOLSDIR" ${t:1} string
    set v:of:bamFile [ turbine::get_filename_val ${u:bamFile} ]
    turbine::rule [ list ${t:1} ] [ list samtools_view2-argwait ${t:1} ${v:of:bamFile} ${u:success} ]
    turbine::file_read_refcount_decr ${u:bamFile} 1
}


proc samtools_view2-argwait { t:1 v:of:bamFile u:success } {
    # Var: $string v:samtoolsdir RENAMED [$string:__v:samtoolsdir]
    # Var: $int v:numAlignments RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:success VALUE_OF [boolean:success]
    set v:samtoolsdir [ turbine::retrieve_string ${t:1} CACHED 1 ]
    set v:numAlignments [ alignment::samtools_view ${v:samtoolsdir} ${v:of:bamFile} ]
    set v:success [ expr { ${v:numAlignments} > 0 } ]
    turbine::store_integer ${u:success} ${v:success}
}


proc f:sed { u:o u:i u:command v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: sed"
    # Var: $boolean v:mapped_o OPT_TEMPORARY
    turbine::read_refcount_incr ${u:command} 1
    turbine::file_read_refcount_incr ${u:o} 1
    turbine::file_read_refcount_incr ${u:i} 2
    set filename:i [ turbine::get_file_path ${u:i} ]
    set v:mapped_o [ turbine::is_file_mapped ${u:o} ]
    set filename:o [ turbine::get_file_path ${u:o} ]
    if { ${v:mapped_o} } {
    } else {
        # Var: $string optf:o FILENAME_OF [file:o]
        set optf:o [ turbine::mktemp ]
        turbine::set_filename_val ${u:o} ${optf:o}
    }
    turbine::rule [ list ${filename:i} ${filename:o} ${u:command} [ turbine::get_file_td ${u:i} ] ] "sed-app-leaf1 {${filename:i}} {${filename:o}} ${v:mapped_o} {${u:command}} {${u:i}} {${u:o}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc sed-app-leaf1 { filename:i filename:o v:mapped_o u:command u:i u:o } {
    # Var: $string v:command VALUE_OF [string:command] /usr/local/apps/bioapps/swift-t/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    # Var: $string v:__filename:i VALUE_OF [string:__filename:i] /usr/local/apps/bioapps/swift-t/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    # Var: $string v:__filename:o VALUE_OF [string:__filename:o] /usr/local/apps/bioapps/swift-t/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    # Var: $file v:i VALUE_OF [file:i] /usr/local/apps/bioapps/swift-t/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    # Var: $file v:o VALUE_OF [file:o] /usr/local/apps/bioapps/swift-t/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    # Var: $boolean v:3 EXPR_TEMPORARY /usr/local/apps/bioapps/swift-t/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    set v:command [ turbine::retrieve_string ${u:command} CACHED 1 ]
    set v:__filename:i [ turbine::retrieve_string ${filename:i} ]
    set v:__filename:o [ turbine::retrieve_string ${filename:o} CACHED 1 ]
    set v:i [ turbine::retrieve_file ${u:i} CACHED 2 ]
    if { ${v:mapped_o} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:o [ turbine::create_local_file_ref ${v:__filename:o} ${tcltmp:init_rc} ${v:mapped_o} ]
    turbine::c::log [ list exec: "sed" ${v:command} ${v:__filename:i} [ dict create "stdout" ${v:__filename:o} ] ]
    turbine::exec_external "sed" [ dict create "stdout" ${v:__filename:o} ] ${v:command} ${v:__filename:i}
    set v:3 [ expr { ! ${v:mapped_o} } ]
    turbine::store_file ${u:o} v:o ${v:3}
    turbine::decr_local_file_refcount v:o
}

turbine::defaults
turbine::declare_custom_work_types COASTER
turbine::init $servers "Swift"
turbine::enable_read_refcount
adlb::declare_struct_type 16 s:location [ list "rank" integer "strictness" string "accuracy" string ]
turbine::check_constants "WORKER\[WORKER\]" ${turbine::WORK_TASK} 0 "CONTROL" ${turbine::WORK_TASK} 0 "ADLB_RANK_ANY" ${adlb::RANK_ANY} -100
lassign [ turbine::declare_globals [ list "u:vars" ] [ list [ list container string string 1 1 108 ] ] ] u:vars
adlb::add_debug_symbol 1 "__c:s_-3" ""
adlb::add_debug_symbol 2 "__c:s__vcf-1" ""
adlb::add_debug_symbol 3 "__c:s_sknownSite" ""
adlb::add_debug_symbol 4 "__c:s_sknown_g" ""
adlb::add_debug_symbol 5 "__t:7" "RealignRecalAndVC:203:33"
adlb::add_debug_symbol 6 "sampleInfoFile" "RealignRecalAndVC:203:0"
adlb::add_debug_symbol 7 "configFile" "RealignRecalAndVC:196:0"
adlb::add_debug_symbol 8 "splitVar" "RealignRecalAndVC:__entry():213:1"
adlb::add_debug_symbol 9 "__t:24" "RealignRecalAndVC:__entry():218:96"
adlb::add_debug_symbol 10 "__t:13" "RealignRecalAndVC:__entry():218:65"
adlb::add_debug_symbol 11 "keyValuePair" "generalfunctions.general:getConfigVariables():21:2"
adlb::add_debug_symbol 12 "sampleName" "RealignRecalAndVC:__entry():211:1"
adlb::add_debug_symbol 13 "__t:9" "RealignRecalAndVC:__entry():211:21"
adlb::add_debug_symbol 14 "__t:27" "RealignRecalAndVC:__entry():224:27"
adlb::add_debug_symbol 15 "recalfiles" "RealignRecalAndVC:__entry():224:60"
adlb::add_debug_symbol 16 "recalparmsindels" "RealignRecalAndVC:__entry():229:2"
adlb::add_debug_symbol 17 "realparms" "RealignRecalAndVC:__entry():232:2"
adlb::add_debug_symbol 18 "__t:31" "RealignRecalAndVC:__entry():225:26"
adlb::add_debug_symbol 19 "__t:32" "RealignRecalAndVC:__entry():225:33"
adlb::add_debug_symbol 20 "__t:35" "RealignRecalAndVC:__entry():225:60"
adlb::add_debug_symbol 21 "inputBam" "RealignRecalAndVC:__entry():241:2"
adlb::add_debug_symbol 22 "__t:61" "RealignRecalAndVC:__entry():241:31"
adlb::add_debug_symbol 23 "recalibratedbam" "RealignRecalAndVC:__entry():246:11"
adlb::add_debug_symbol 24 "gvcfVariants" "RealignRecalAndVC:__entry():254:8"
adlb::add_debug_symbol 25 "threads" "RealignRecalAndVC:callVariants():169:1"
adlb::add_debug_symbol 26 "__t:2:1" "RealignRecalAndVC:callVariants():169:26"
adlb::add_debug_symbol 27 "__t:5:1" "RealignRecalAndVC:callVariants():169:58"
adlb::add_debug_symbol 28 "haploLog" "RealignRecalAndVC:callVariants():174:44"
adlb::add_debug_symbol 29 "__t:13:1" "RealignRecalAndVC:callVariants():176:36"
adlb::add_debug_symbol 30 "__t:15:1" "RealignRecalAndVC:callVariants():177:8"
adlb::add_debug_symbol 31 "__t:17:1" "RealignRecalAndVC:callVariants():178:8"
adlb::add_debug_symbol 32 "__t:21:1" "RealignRecalAndVC:callVariants():178:42"
adlb::add_debug_symbol 33 "__t:23:1" "RealignRecalAndVC:callVariants():180:8"
adlb::add_debug_symbol 34 "__t:27:1" "RealignRecalAndVC:callVariants():180:42"
adlb::add_debug_symbol 35 "__t:44" "RealignRecalAndVC:__entry():230:25"
adlb::add_debug_symbol 36 "__t:53" "RealignRecalAndVC:__entry():233:25"
adlb::add_debug_symbol 37 "__t:79" "RealignRecalAndVC:__entry():263:27"
adlb::add_debug_symbol 38 "__t:83" "RealignRecalAndVC:__entry():271:28"
adlb::add_debug_symbol 39 "__t:89" "RealignRecalAndVC:__entry():272:34"
adlb::add_debug_symbol 40 "__t:92" "RealignRecalAndVC:__entry():272:61"
adlb::add_debug_symbol 41 "__t:118" "RealignRecalAndVC:__entry():289:32"
adlb::add_debug_symbol 42 "__t:2:2" "RealignRecalAndVC:callChrVariants():145:26"
adlb::add_debug_symbol 43 "__t:5:2" "RealignRecalAndVC:callChrVariants():145:58"
adlb::add_debug_symbol 44 "__t:19:2" "RealignRecalAndVC:callChrVariants():156:36"
adlb::add_debug_symbol 45 "__t:21:2" "RealignRecalAndVC:callChrVariants():156:53"
adlb::add_debug_symbol 46 "__t:27:2" "RealignRecalAndVC:callChrVariants():157:42"
adlb::add_debug_symbol 47 "__t:33:1" "RealignRecalAndVC:callChrVariants():159:42"
adlb::add_debug_symbol 48 "__t:88" "RealignRecalAndVC:__entry():272:27"
adlb::add_debug_symbol 49 "LogDir:1" "RealignRecalAndVC:callChrVariants():151:1"
adlb::add_debug_symbol 50 "__t:23:2" "RealignRecalAndVC:callChrVariants():157:8"
adlb::add_debug_symbol 51 "__t:29:1" "RealignRecalAndVC:callChrVariants():159:8"
adlb::add_debug_symbol 52 "threads:1" "RealignRecalAndVC:callChrVariants():145:1"
adlb::add_debug_symbol 53 "chr" "RealignRecalAndVC:__entry():265:17"
adlb::add_debug_symbol 54 "recalfiles:1" "RealignRecalAndVC:__entry():271:71"
adlb::add_debug_symbol 55 "recalparmsindels:1" "RealignRecalAndVC:__entry():277:3"
adlb::add_debug_symbol 56 "realparms:1" "RealignRecalAndVC:__entry():280:3"
adlb::add_debug_symbol 57 "__t:95" "RealignRecalAndVC:__entry():273:6"
adlb::add_debug_symbol 58 "inputBam:1" "RealignRecalAndVC:__entry():289:3"
adlb::add_debug_symbol 59 "recalibratedbam:1" "RealignRecalAndVC:__entry():294:50"
adlb::add_debug_symbol 60 "gvcfVariants:1" "RealignRecalAndVC:__entry():304:47"
adlb::add_debug_symbol 61 "ploidy" "RealignRecalAndVC:callChrVariants():147:1"
adlb::add_debug_symbol 62 "__t:16:2" "RealignRecalAndVC:callChrVariants():154:17"
adlb::add_debug_symbol 63 "haploLog:1" "RealignRecalAndVC:callChrVariants():154:54"
adlb::add_debug_symbol 64 "__t:101" "RealignRecalAndVC:__entry():278:26"
adlb::add_debug_symbol 65 "__t:110" "RealignRecalAndVC:__entry():281:26"
adlb::add_debug_symbol 66 "__t:1" "RealignRecalAndVC:recalibrateBam():77:27"
adlb::add_debug_symbol 67 "threads" "RealignRecalAndVC:recalibrateBam():84:1"
adlb::add_debug_symbol 68 "__t:18" "RealignRecalAndVC:recalibrateBam():84:26"
adlb::add_debug_symbol 69 "__t:21" "RealignRecalAndVC:recalibrateBam():84:57"
adlb::add_debug_symbol 70 "recalLog" "RealignRecalAndVC:recalibrateBam():87:35"
adlb::add_debug_symbol 71 "printLog" "RealignRecalAndVC:recalibrateBam():88:35"
adlb::add_debug_symbol 72 "report" "RealignRecalAndVC:recalibrateBam():89:30"
adlb::add_debug_symbol 73 "__t:29" "RealignRecalAndVC:recalibrateBam():92:37"
adlb::add_debug_symbol 74 "__t:31" "RealignRecalAndVC:recalibrateBam():92:53"
adlb::add_debug_symbol 75 "__t:33" "RealignRecalAndVC:recalibrateBam():93:11"
adlb::add_debug_symbol 76 "__t:34" "RealignRecalAndVC:recalibrateBam():93:18"
adlb::add_debug_symbol 77 "__t:37" "RealignRecalAndVC:recalibrateBam():93:44"
adlb::add_debug_symbol 78 "__t:39" "RealignRecalAndVC:recalibrateBam():95:11"
adlb::add_debug_symbol 79 "__t:43" "RealignRecalAndVC:recalibrateBam():95:44"
adlb::add_debug_symbol 80 "__t:45" "RealignRecalAndVC:recalibrateBam():97:31"
adlb::add_debug_symbol 81 "__t:47" "RealignRecalAndVC:recalibrateBam():97:48"
adlb::add_debug_symbol 82 "__t:49" "RealignRecalAndVC:recalibrateBam():98:10"
adlb::add_debug_symbol 83 "__t:50" "RealignRecalAndVC:recalibrateBam():98:17"
adlb::add_debug_symbol 84 "__t:53" "RealignRecalAndVC:recalibrateBam():98:44"
adlb::add_debug_symbol 85 "__t:55" "RealignRecalAndVC:recalibrateBam():101:1"
adlb::add_debug_symbol 86 "__t:1" "RealignRecalAndVC:recalibrationWrapper():112:27"
adlb::add_debug_symbol 87 "prefix" "RealignRecalAndVC:recalibrationWrapper():114:1"
adlb::add_debug_symbol 88 "__t:10" "RealignRecalAndVC:recalibrationWrapper():116:5"
adlb::add_debug_symbol 89 "__t:13" "RealignRecalAndVC:recalibrationWrapper():122:22"
adlb::add_debug_symbol 90 "realignedbam" "RealignRecalAndVC:recalibrationWrapper():122:37"
adlb::add_debug_symbol 91 "__t:15" "RealignRecalAndVC:recalibrationWrapper():125:2"
adlb::add_debug_symbol 92 "__t:16" "RealignRecalAndVC:recalibrationWrapper():125:17"
adlb::add_debug_symbol 93 "threads" "RealignRecalAndVC:realignBam():49:1"
adlb::add_debug_symbol 94 "__t:18:1" "RealignRecalAndVC:realignBam():49:26"
adlb::add_debug_symbol 95 "__t:21" "RealignRecalAndVC:realignBam():49:57"
adlb::add_debug_symbol 96 "targetLog" "RealignRecalAndVC:realignBam():52:36"
adlb::add_debug_symbol 97 "realignLog" "RealignRecalAndVC:realignBam():53:37"
adlb::add_debug_symbol 98 "intervals" "RealignRecalAndVC:realignBam():55:33"
adlb::add_debug_symbol 99 "__t:29" "RealignRecalAndVC:realignBam():58:47"
adlb::add_debug_symbol 100 "__t:31" "RealignRecalAndVC:realignBam():58:63"
adlb::add_debug_symbol 101 "__t:33" "RealignRecalAndVC:realignBam():59:8"
adlb::add_debug_symbol 102 "__t:34" "RealignRecalAndVC:realignBam():59:15"
adlb::add_debug_symbol 103 "__t:37" "RealignRecalAndVC:realignBam():59:41"
adlb::add_debug_symbol 104 "__t:49" "RealignRecalAndVC:realignBam():66:1"
adlb::add_debug_symbol 105 "__t:18" "RealignRecalAndVC:recalibrationWrapper():135:2"
adlb::add_debug_symbol 106 "__t:19" "RealignRecalAndVC:recalibrationWrapper():135:17"
adlb::add_debug_symbol 107 "__t:1" "generalfunctions.general:checkBam():47:32"
adlb::add_debug_symbol 108 "vars" "RealignRecalAndVC:200:0"
turbine::start swift:main swift:constants
turbine::finalize
