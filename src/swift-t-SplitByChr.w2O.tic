
# Generated by stc version 0.7.2
# date                    : 2017/02/01 12:58:51
# Turbine version         : 0.9.1
# Input filename          : /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/SplitByChr.swift
# Output filename         : /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/./swift-t-SplitByChr.w2O.tic
# STC home                : /usr/local/apps/bioapps/swift-t-1.1/stc
# Turbine home            : /usr/local/apps/bioapps/swift-t-1.1/turbine
# Compiler settings:
# stc.auto-declare              : true
# stc.c_preprocess              : true
# stc.checkpointing             : true
# stc.compiler-debug            : true
# stc.debugging                 : COMMENTS
# stc.ic.output-file            : 
# stc.input_filename            : SplitByChr.swift
# stc.log.file                  : 
# stc.log.trace                 : false
# stc.must_pass_wait_vars       : true
# stc.opt.algebra               : true
# stc.opt.array-build           : true
# stc.opt.batch-refcounts       : true
# stc.opt.cancel-refcounts      : true
# stc.opt.constant-fold         : true
# stc.opt.controlflow-fusion    : true
# stc.opt.dataflow-op-inline    : true
# stc.opt.dead-code-elim        : true
# stc.opt.demote-globals        : true
# stc.opt.disable-asserts       : false
# stc.opt.expand-loop-threshold-insts: 256
# stc.opt.expand-loop-threshold-iters: 16
# stc.opt.expand-loops          : false
# stc.opt.finalized-var         : true
# stc.opt.flatten-nested        : true
# stc.opt.full-function-inline  : false
# stc.opt.full-unroll           : false
# stc.opt.function-always-inline-threshold: 5
# stc.opt.function-inline       : true
# stc.opt.function-inline-threshold: 50
# stc.opt.function-signature    : true
# stc.opt.hoist                 : true
# stc.opt.hoist-refcounts       : true
# stc.opt.loop-simplify         : true
# stc.opt.max-iterations        : 10
# stc.opt.merge-refcounts       : true
# stc.opt.piggyback-refcounts   : true
# stc.opt.pipeline              : false
# stc.opt.propagate-aliases     : true
# stc.opt.reorder-insts         : false
# stc.opt.shared-constants      : true
# stc.opt.unroll-loop-threshold-insts: 192
# stc.opt.unroll-loop-threshold-iters: 8
# stc.opt.unroll-loops          : true
# stc.opt.value-number          : true
# stc.opt.wait-coalesce         : true
# stc.output_filename           : ./swift-t-SplitByChr.w2O.tic
# stc.preproc.force-cpp         : false
# stc.preproc.force-gcc         : false
# stc.preprocess_only           : false
# stc.profile                   : false
# stc.refcounting               : true
# stc.rpath                     : ./
# stc.stc_home                  : /usr/local/apps/bioapps/swift-t-1.1/stc
# stc.turbine.version           : 0.9.1
# stc.turbine_home              : /usr/local/apps/bioapps/swift-t-1.1/turbine
# stc.version                   : 0.7.2

# Metadata:

# rpath entries
lappend auto_path "./"
package require turbine 0.9.1
namespace import turbine::*


proc swift:constants {  } {
    turbine::c::log "function:swift:constants"
}

package require align 0.2


proc swift:main {  } {
    turbine::c::log "function: __entry"
    # Var: file t:9 EXPR_TEMPORARY SplitByChr.swift:34:32
    # Var: string t:10 EXPR_TEMPORARY SplitByChr.swift:50:16
    # Var: string t:15 EXPR_TEMPORARY SplitByChr.swift:52:14
    # Var: $string v:inFile VALUE_OF [string:inFile]
    # Var: $string v:configFilename VALUE_OF [string:configFilename]
    # Var: $file v:t:9 VALUE_OF [file:__t:9]
    # Var: $file v:t:9:1 VALUE_OF [file:__t:9]
    # Var: $string$[int] v:inputBams VALUE_OF [string[int]:inputBams]
    # Var: string[string] u:vars SplitByChr.swift:44:0
    # Var: file u:configFile SplitByChr.swift:40:0
    # Var: string t:41 EXPR_TEMPORARY SplitByChr.swift:__entry():79:36
    # Var: string t:45 EXPR_TEMPORARY SplitByChr.swift:__entry():80:19
    # Var: $file v:configFile VALUE_OF [file:configFile]
    # Var: $file v:configFile:1 VALUE_OF [file:configFile]
    # Var: $string$[int] v:configFileData VALUE_OF [string[int]:configFileData]
    # Var: int t:44 EXPR_TEMPORARY SplitByChr.swift:__entry():80:8
    lassign [ adlb::multicreate [ list string 1 1 2 ] [ list string 2 1 3 ] [ list container string string 5 1 4 ] [ list string 1 1 6 ] [ list string 1 1 7 ] [ list integer 1 1 8 ] ] t:10 t:15 u:vars t:41 t:45 t:44
    turbine::c::log "allocated t:10=<${t:10}> t:15=<${t:15}> u:vars=<${u:vars}> t:41=<${t:41}> t:45=<${t:45}>"
    turbine::c::log "allocated t:44=<${t:44}>"
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 1 ] [ list file 1 1 5 ] ] [ list 0 0 ] ] t:9 u:configFile
    turbine::argv_accept_impl [ list "runfile" "input" ]
    set v:inFile [ turbine::argv_get_impl "input" ]
    set v:configFilename [ turbine::argv_get_impl "runfile" ]
    set tcltmp:init_rc 1
    set v:t:9 [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:t:9 ${v:inFile}
    turbine::store_file ${t:9} v:t:9 1
    set v:t:9:1 [ turbine::retrieve_file ${t:9} CACHED 1 ]
    set v:inputBams [ turbine::file_lines_impl ${v:t:9:1} ]
    set tcltmp:init_rc 1
    set v:configFile [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:configFile ${v:configFilename}
    turbine::store_file ${u:configFile} v:configFile 1
    set v:configFile:1 [ turbine::retrieve_file ${u:configFile} CACHED 1 ]
    set v:configFileData [ turbine::file_lines_impl ${v:configFile:1} ]
    turbine::container_reference ${u:vars} "CHRNAMES" ${t:10} string
    turbine::container_reference ${u:vars} "OUTPUTDIR" ${t:15} string
    turbine::container_reference ${u:vars} "SAMTOOLSDIR" ${t:41} string
    turbine::container_reference ${u:vars} "PBSCORES" ${t:45} string
    dict for {tcltmp:ignore v:line} ${v:configFileData} {
        # Var: string[int] u:keyValuePair RENAMED [string[int]:keyValuePair] ./generalfunctions/general.swift:getConfigVariables():20:2
        # Var: $string$[int] v:keyValuePair VALUE_OF [string[int]:keyValuePair]
        # Var: $string v:alias:name VALUE_OF [string:__alias:name]
        # Var: $string v:alias:value VALUE_OF [string:__alias:value]
        lassign [ adlb::multicreate [ list container integer string 1 2 9 ] ] u:keyValuePair
        turbine::c::log "allocated u:keyValuePair=<${u:keyValuePair}>"
        set v:keyValuePair [ turbine::split_impl ${v:line} "=" ]
        turbine::build_rec ${u:keyValuePair} ${v:keyValuePair} [ list container integer string ] 0 1
        set a:name [ adlb::subscript_container ${u:keyValuePair} 0 ]
        set v:alias:name [ turbine::retrieve_string ${a:name} ]
        set a:value [ adlb::subscript_container ${u:keyValuePair} 1 ]
        set v:alias:value [ turbine::retrieve_string ${a:value} CACHED 1 ]
        turbine::container_insert ${u:vars} ${v:alias:name} ${v:alias:value} string 0
        adlb::write_refcount_decr ${u:keyValuePair} 1
    }
    turbine::rule [ list ${t:10} ] "__entry-call_foreign-split ${t:10} ${t:15} ${t:41} ${t:44} {${v:inputBams}} ${u:vars}"
    turbine::rule [ list ${t:15} ] "__entry-async_op-strcat-3 ${t:15}"
    turbine::rule [ list ${t:45} ] "__entry-async_op-parse_int ${t:44} ${t:45}"
    turbine::decr_local_file_refcount v:t:9
    turbine::decr_local_file_refcount v:configFile
    adlb::write_refcount_decr ${u:vars} 1
}


proc __entry-call_foreign-split { t:10 t:15 t:41 t:44 v:inputBams u:vars } {
    # Var: $string v:t:10 VALUE_OF [string:__t:10]
    # Var: $string$[int] v:indices VALUE_OF [string[int]:indices]
    set v:t:10 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:indices [ turbine::split_impl ${v:t:10} ":" ]
    set tcltmp:iters [ dict size ${v:indices} ]
    turbine::read_refcount_incr ${t:15} [ expr { ${tcltmp:iters} } ]
    dict for {tcltmp:ignore v:chr} ${v:indices} {
        # Var: string t:18 EXPR_TEMPORARY SplitByChr.swift:__entry():57:19
        # Var: file u:chrOutList SplitByChr.swift:__entry():57:71
        # Var: $string v:t:48 VALUE_OF [string:__t:48]
        # Var: string[int] t:47 EXPR_TEMPORARY SplitByChr.swift:__entry():80:39
        lassign [ adlb::multicreate [ list string 1 1 10 ] [ list container integer string 1 1 12 ] ] t:18 t:47
        turbine::c::log "allocated t:18=<${t:18}> t:47=<${t:47}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 11 ] ] [ list 1 ] ] u:chrOutList
        set wfilename:chrOutList [ turbine::get_file_path ${u:chrOutList} ]
        set v:t:48 "${v:chr}"
        turbine::array_kv_build ${t:47} [ ::adlb::dict_create 0 ${v:t:48} ] 1 integer string
        set tcltmp:iters [ dict size ${v:inputBams} ]
        turbine::read_refcount_incr ${u:vars} [ expr { ${tcltmp:iters} } ]
        turbine::read_refcount_incr ${t:18} [ expr { ${tcltmp:iters} } ]
        turbine::read_refcount_incr ${t:41} [ expr { ${tcltmp:iters} } ]
        turbine::read_refcount_incr ${t:15} [ expr { ${tcltmp:iters} } ]
        turbine::read_refcount_incr ${t:44} [ expr { ${tcltmp:iters} } ]
        turbine::read_refcount_incr ${t:47} [ expr { ${tcltmp:iters} } ]
        turbine::file_read_refcount_incr ${u:chrOutList} [ expr { ${tcltmp:iters} } ]
        dict for {tcltmp:ignore v:bam} ${v:inputBams} {
            # Var: file u:chrDedupSortedBam SplitByChr.swift:__entry():77:26
            # Var: file t:43 EXPR_TEMPORARY SplitByChr.swift:__entry():79:57
            # Var: $file v:t:43 VALUE_OF [file:__t:43]
            # Var: $int v:n RENAMED [$int:__v:n]
            # Var: $int v:t:25 VALUE_OF [int:__t:25]
            # Var: $string v:prefix VALUE_OF [string:prefix]
            # Var: $string v:f RENAMED [$string:__v:f]
            # Var: $void v:t:28 VALUE_OF [void:__t:28]
            # Var: $int v:n:1 RENAMED [$int:__v:n]
            # Var: $int v:t:30 VALUE_OF [int:__t:30]
            # Var: $string v:sampleName VALUE_OF [string:sampleName]
            # Var: $void v:t:33 VALUE_OF [void:__t:33]
            lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 0 1 13 ] [ list file 1 1 14 ] ] [ list 1 0 ] ] u:chrDedupSortedBam t:43
            set tcltmp:init_rc 1
            set v:t:43 [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
            turbine::input_file_local v:t:43 ${v:bam}
            turbine::store_file ${t:43} v:t:43 1
            set v:n [ string length ${v:bam} ]
            set v:t:25 [ expr { ${v:n} - 4 } ]
            set v:prefix [ turbine::substring_impl ${v:bam} 0 ${v:t:25} ]
            set v:f [ file tail ${v:prefix} ]
            set v:t:28 [ turbine::printf_local ${v:f} ]
            set v:n:1 [ string length ${v:f} ]
            set v:t:30 [ expr { ${v:n:1} - 15 } ]
            set v:sampleName [ turbine::substring_impl ${v:f} 0 ${v:t:30} ]
            set v:t:33 [ turbine::printf_local ${v:sampleName} ]
            turbine::rule [ list ${t:15} ] [ list __entry-async_op-strcat ${t:15} ${t:18} ${t:41} ${t:43} ${t:44} ${t:47} ${v:bam} ${v:chr} ${v:f} ${v:sampleName} ${u:chrDedupSortedBam} ${u:chrOutList} ${u:vars} ]
            turbine::decr_local_file_refcount v:t:43
        }
        turbine::rule [ list ${t:15} ] [ list __entry-async_op-strcat-2 ${t:15} ${t:18} ${v:chr} ${u:chrOutList} ]
        turbine::rule [ list ${wfilename:chrOutList} ] "__entry-call_foreign-write-2 {${wfilename:chrOutList}} {${u:chrOutList}}"
        turbine::read_refcount_decr ${t:18} 1
        turbine::read_refcount_decr ${t:47} 1
    }
    turbine::read_refcount_decr ${u:vars} 1
    turbine::read_refcount_decr ${t:44} 1
    turbine::read_refcount_decr ${t:41} 1
    turbine::read_refcount_decr ${t:15} 1
}


proc __entry-async_op-strcat { t:15 t:18 t:41 t:43 t:44 t:47 v:bam v:chr v:f v:sampleName u:chrDedupSortedBam u:chrOutList u:vars } {
    # Var: $string v:t:15:2 VALUE_OF [string:__t:15]
    # Var: $string v:t:34 VALUE_OF [string:__t:34]
    set v:t:15:2 [ turbine::retrieve_string ${t:15} CACHED 1 ]
    set v:t:34 "${v:t:15:2}/${v:sampleName}/realign/${v:f}.${v:chr}.bam"
    turbine::set_filename_val ${u:chrDedupSortedBam} ${v:t:34}
    turbine::rule [ list ${t:41} ${t:44} ] [ list samtools_view-app-leaf1 ${t:18} ${t:41} ${t:43} ${t:44} ${t:47} ${v:bam} ${v:t:15:2} ${v:t:34} ${u:chrDedupSortedBam} ${u:chrOutList} ${u:vars} ]
}


proc samtools_view-app-leaf1 { t:18 t:41 t:43 t:44 t:47 v:bam v:t:15:2 v:t:34 u:chrDedupSortedBam u:chrOutList u:vars } {
    # Var: $string v:samtoolsdir RENAMED [$string:__v:samtoolsdir] ./bioapps/align_dedup.swift:samtools_view():15:58
    # Var: $int v:thr RENAMED [$int:__v:thr] ./bioapps/align_dedup.swift:samtools_view():15:58
    # Var: $string$[int] v:args RENAMED [$string$[int]:__v:args] ./bioapps/align_dedup.swift:samtools_view():15:58
    # Var: $file v:inputFile RENAMED [$file:__v:inputFile] ./bioapps/align_dedup.swift:samtools_view():15:58
    # Var: $file v:output RENAMED [$file:__v:output] ./bioapps/align_dedup.swift:samtools_view():15:58
    set v:samtoolsdir [ turbine::retrieve_string ${t:41} CACHED 1 ]
    set v:thr [ turbine::retrieve_integer ${t:44} CACHED 1 ]
    set v:args [ turbine::unpack_args ${t:47} 1 string ]
    set v:inputFile [ turbine::retrieve_file ${t:43} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output [ turbine::create_local_file_ref ${v:t:34} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:samtoolsdir "view" "-@" ${v:thr} "-bS" ${v:bam} {*}${v:args} [ dict create "stdout" ${v:t:34} ] ]
    turbine::exec_external ${v:samtoolsdir} [ dict create "stdout" ${v:t:34} ] "view" "-@" ${v:thr} "-bS" ${v:bam} {*}${v:args}
    turbine::store_file ${u:chrDedupSortedBam} v:output 0
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list checkBam-explicit-wait1 ${t:18} ${v:samtoolsdir} ${v:t:15:2} ${v:t:34} ${u:chrOutList} ${u:vars} ]
    turbine::reset_priority
    turbine::decr_local_file_refcount v:output
    turbine::read_refcount_decr ${t:47} 1
}


proc checkBam-explicit-wait1 { t:18 v:samtoolsdir v:t:15:2 v:t:34 u:chrOutList u:vars } {
    # Var: $int v:numAlignments RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:49 VALUE_OF [boolean:__t:49]
    set v:numAlignments [ alignment::samtools_view ${v:samtoolsdir} ${v:t:34} ]
    set v:t:49 [ expr { ${v:numAlignments} > 0 } ]
    if { ${v:t:49} } {
        # Var: $string v:t:50 VALUE_OF [string:__t:50]
        # Var: file u:newFile RENAMED [file:newFile] ./generalfunctions/general.swift:append():11:17
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 15 ] ] [ list 1 ] ] u:newFile
        turbine::file_read_refcount_incr ${u:chrOutList} 1
        turbine::read_refcount_incr ${t:18} 1
        set v:t:50 "${v:t:34}\n"
        set wfilename:newFile [ turbine::get_file_path ${u:newFile} ]
        turbine::rule [ list [ turbine::get_file_td ${u:chrOutList} ] ] [ list __entry-call_foreign-read ${v:t:50} ${wfilename:newFile} ${u:chrOutList} ${u:newFile} ]
        turbine::rule [ list ${t:18} ] "__entry-copy_in_filename ${t:18} {${u:newFile}}"
    } else {
        # Var: file t:57 EXPR_TEMPORARY SplitByChr.swift:__entry():98:10
        # Var: string t:62 EXPR_TEMPORARY SplitByChr.swift:__entry():98:47
        # Var: $string v:message VALUE_OF [string:message]
        # Var: file u:newFile:1 RENAMED [file:newFile] ./generalfunctions/general.swift:append():11:17
        lassign [ adlb::multicreate [ list string 1 1 17 ] ] t:62
        turbine::c::log "allocated t:62=<${t:62}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 16 ] [ list file 0 1 18 ] ] [ list 0 1 ] ] t:57 u:newFile:1
        turbine::read_refcount_incr ${u:vars} 1
        set v:message "FAILURE: ${v:t:34} contains no alignments. Chromosome splitting failed\n"
        turbine::container_reference ${u:vars} "DELIVERYFOLDER" ${t:62} string
        turbine::rule [ list ${t:62} ] [ list __entry-async_op-strcat-1 ${t:57} ${t:62} ${v:message} ${v:t:15:2} ${u:newFile:1} ]
    }
    turbine::read_refcount_decr ${u:vars} 1
    turbine::read_refcount_decr ${t:18} 1
    turbine::file_read_refcount_decr ${u:chrOutList} 1
}


proc __entry-call_foreign-read { v:t:50 wfilename:newFile u:chrOutList u:newFile } {
    # Var: $file v:chrOutList:1 VALUE_OF [file:chrOutList]
    # Var: $string v:original VALUE_OF [string:original]
    # Var: $string v:appended VALUE_OF [string:appended]
    set v:chrOutList:1 [ turbine::retrieve_file ${u:chrOutList} CACHED 1 ]
    set v:original [ turbine::file_read_local ${v:chrOutList:1} ]
    set v:appended "${v:original}${v:t:50}"
    turbine::rule [ list ${wfilename:newFile} ] [ list __entry-call_foreign-write ${v:appended} ${wfilename:newFile} ${u:newFile} ]
}


proc __entry-call_foreign-write { v:appended wfilename:newFile u:newFile } {
    # Var: $file v:newFile VALUE_OF [file:newFile]
    # Var: $string v:__wfilename:newFile VALUE_OF [string:__wfilename:newFile]
    set v:__wfilename:newFile [ turbine::retrieve_string ${wfilename:newFile} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:newFile [ turbine::create_local_file_ref ${v:__wfilename:newFile} ${tcltmp:init_rc} 1 ]
    turbine::file_write_local v:newFile ${v:appended}
    turbine::store_file ${u:newFile} v:newFile 0
}


proc __entry-copy_in_filename { t:18 u:newFile } {
    # Var: $string v:t:18:2 VALUE_OF [string:__t:18]
    set v:t:18:2 [ turbine::retrieve_string ${t:18} CACHED 1 ]
    turbine::set_filename_val ${u:newFile} ${v:t:18:2}
}


proc __entry-async_op-strcat-1 { t:57 t:62 v:message v:t:15:2 u:newFile:1 } {
    # Var: $string v:t:62 VALUE_OF [string:__t:62]
    # Var: $string v:t:58 VALUE_OF [string:__t:58]
    # Var: $file v:t:57 VALUE_OF [file:__t:57]
    set v:t:62 [ turbine::retrieve_string ${t:62} CACHED 1 ]
    set v:t:58 "${v:t:15:2}/${v:t:62}/docs/Failures.log"
    set tcltmp:init_rc 1
    set v:t:57 [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:t:57 ${v:t:58}
    turbine::store_file ${t:57} v:t:57 1
    turbine::set_filename_val ${u:newFile:1} ${v:t:58}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-call_foreign-read-1 ${t:57} ${v:message} ${v:t:58} ${u:newFile:1} ]
    turbine::reset_priority
    turbine::decr_local_file_refcount v:t:57
}


proc __entry-call_foreign-read-1 { t:57 v:message v:t:58 u:newFile:1 } {
    # Var: $file v:t:57:1 VALUE_OF [file:__t:57]
    # Var: $string v:original:1:1 VALUE_OF [string:original:1]
    # Var: $string v:appended:1:1 VALUE_OF [string:appended:1]
    set v:t:57:1 [ turbine::retrieve_file ${t:57} CACHED 1 ]
    set v:original:1:1 [ turbine::file_read_local ${v:t:57:1} ]
    set v:appended:1:1 "${v:original:1:1}${v:message}"
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-call_foreign-write-1 ${v:appended:1:1} ${v:t:58} ${u:newFile:1} ]
    turbine::reset_priority
}


proc __entry-call_foreign-write-1 { v:appended:1:1 v:t:58 u:newFile:1 } {
    # Var: $file v:newFile:1 VALUE_OF [file:newFile:1]
    set tcltmp:init_rc 2
    set v:newFile:1 [ turbine::create_local_file_ref ${v:t:58} ${tcltmp:init_rc} 1 ]
    turbine::file_write_local v:newFile:1 ${v:appended:1:1}
    turbine::store_file ${u:newFile:1} v:newFile:1 0
}


proc __entry-async_op-strcat-2 { t:15 t:18 v:chr u:chrOutList } {
    # Var: $string v:t:15:1 VALUE_OF [string:__t:15]
    # Var: $string v:t:18 VALUE_OF [string:__t:18]
    set v:t:15:1 [ turbine::retrieve_string ${t:15} CACHED 1 ]
    set v:t:18 "${v:t:15:1}/chr_split_files/${v:chr}_bam_list.txt"
    turbine::store_string ${t:18} ${v:t:18}
    turbine::set_filename_val ${u:chrOutList} ${v:t:18}
}


proc __entry-call_foreign-write-2 { wfilename:chrOutList u:chrOutList } {
    # Var: $file v:chrOutList VALUE_OF [file:chrOutList]
    # Var: $string v:__wfilename:chrOutList VALUE_OF [string:__wfilename:chrOutList]
    set v:__wfilename:chrOutList [ turbine::retrieve_string ${wfilename:chrOutList} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:chrOutList [ turbine::create_local_file_ref ${v:__wfilename:chrOutList} ${tcltmp:init_rc} 1 ]
    turbine::file_write_local v:chrOutList ""
    turbine::store_file ${u:chrOutList} v:chrOutList 0
}


proc __entry-async_op-strcat-3 { t:15 } {
    # Var: $string v:t:15 VALUE_OF [string:__t:15]
    # Var: $string v:t:14 VALUE_OF [string:__t:14]
    # Var: $void v:v RENAMED [$void:__v:v] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:mkdir():65:15
    set v:t:15 [ turbine::retrieve_string ${t:15} CACHED 1 ]
    set v:t:14 "${v:t:15}/chr_split_files"
    turbine::c::log [ list exec: "mkdir" "-p" ${v:t:14} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:t:14}
}


proc __entry-async_op-parse_int { t:44 t:45 } {
    # Var: $string v:t:45 VALUE_OF [string:__t:45]
    # Var: $int v:t:44 VALUE_OF [int:__t:44]
    set v:t:45 [ turbine::retrieve_string ${t:45} CACHED 1 ]
    set v:t:44 [ turbine::parse_int_impl ${v:t:45} 10 ]
    turbine::store_integer ${t:44} ${v:t:44}
}

turbine::defaults
turbine::declare_custom_work_types COASTER
turbine::init $servers "Swift"
turbine::enable_read_refcount
adlb::declare_struct_type 16 s:location [ list "rank" integer "strictness" string "accuracy" string ]
turbine::check_constants "WORKER\[WORKER\]" ${turbine::WORK_TASK} 0 "CONTROL" ${turbine::WORK_TASK} 0 "ADLB_RANK_ANY" ${adlb::RANK_ANY} -100
adlb::add_debug_symbol 1 "__t:9" "SplitByChr:34:32"
adlb::add_debug_symbol 2 "__t:10" "SplitByChr:50:16"
adlb::add_debug_symbol 3 "__t:15" "SplitByChr:52:14"
adlb::add_debug_symbol 4 "vars" "SplitByChr:44:0"
adlb::add_debug_symbol 5 "configFile" "SplitByChr:40:0"
adlb::add_debug_symbol 6 "__t:41" "SplitByChr:__entry():79:36"
adlb::add_debug_symbol 7 "__t:45" "SplitByChr:__entry():80:19"
adlb::add_debug_symbol 8 "__t:44" "SplitByChr:__entry():80:8"
adlb::add_debug_symbol 9 "keyValuePair" "generalfunctions.general:getConfigVariables():20:2"
adlb::add_debug_symbol 10 "__t:18" "SplitByChr:__entry():57:19"
adlb::add_debug_symbol 11 "chrOutList" "SplitByChr:__entry():57:71"
adlb::add_debug_symbol 12 "__t:47" "SplitByChr:__entry():80:39"
adlb::add_debug_symbol 13 "chrDedupSortedBam" "SplitByChr:__entry():77:26"
adlb::add_debug_symbol 14 "__t:43" "SplitByChr:__entry():79:57"
adlb::add_debug_symbol 15 "newFile" "generalfunctions.general:append():11:17"
adlb::add_debug_symbol 16 "__t:57" "SplitByChr:__entry():98:10"
adlb::add_debug_symbol 17 "__t:62" "SplitByChr:__entry():98:47"
adlb::add_debug_symbol 18 "newFile:1" "generalfunctions.general:append():11:17"
turbine::start swift:main swift:constants
turbine::finalize
