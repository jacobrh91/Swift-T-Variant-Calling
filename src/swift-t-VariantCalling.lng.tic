
# Generated by stc version 0.7.2
# date                    : 2017/06/01 10:35:22
# Turbine version         : 0.9.1
# Input filename          : /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/VariantCalling.swift
# Output filename         : /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/swift-t-VariantCalling.lng.tic
# STC home                : /usr/local/apps/bioapps/swift-t/swift-t-1.1/stc
# Turbine home            : /usr/local/apps/bioapps/swift-t/swift-t-1.1/turbine
# Compiler settings:
# stc.auto-declare              : true
# stc.c_preprocess              : true
# stc.checkpointing             : true
# stc.compiler-debug            : true
# stc.debugging                 : COMMENTS
# stc.ic.output-file            : 
# stc.input_filename            : /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/VariantCalling.swift
# stc.log.file                  : 
# stc.log.trace                 : false
# stc.must_pass_wait_vars       : true
# stc.opt.algebra               : true
# stc.opt.array-build           : true
# stc.opt.batch-refcounts       : true
# stc.opt.cancel-refcounts      : true
# stc.opt.constant-fold         : true
# stc.opt.controlflow-fusion    : true
# stc.opt.dataflow-op-inline    : true
# stc.opt.dead-code-elim        : true
# stc.opt.demote-globals        : true
# stc.opt.disable-asserts       : false
# stc.opt.expand-loop-threshold-insts: 256
# stc.opt.expand-loop-threshold-iters: 16
# stc.opt.expand-loops          : false
# stc.opt.finalized-var         : true
# stc.opt.flatten-nested        : true
# stc.opt.full-function-inline  : false
# stc.opt.full-unroll           : false
# stc.opt.function-always-inline-threshold: 5
# stc.opt.function-inline       : true
# stc.opt.function-inline-threshold: 50
# stc.opt.function-signature    : true
# stc.opt.hoist                 : true
# stc.opt.hoist-refcounts       : true
# stc.opt.loop-simplify         : true
# stc.opt.max-iterations        : 10
# stc.opt.merge-refcounts       : true
# stc.opt.piggyback-refcounts   : true
# stc.opt.pipeline              : false
# stc.opt.propagate-aliases     : true
# stc.opt.reorder-insts         : false
# stc.opt.shared-constants      : true
# stc.opt.unroll-loop-threshold-insts: 192
# stc.opt.unroll-loop-threshold-iters: 8
# stc.opt.unroll-loops          : true
# stc.opt.value-number          : true
# stc.opt.wait-coalesce         : true
# stc.output_filename           : /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/swift-t-VariantCalling.lng.tic
# stc.preproc.force-cpp         : false
# stc.preproc.force-gcc         : false
# stc.preprocess_only           : false
# stc.profile                   : false
# stc.refcounting               : true
# stc.rpath                     : /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps
# stc.stc_home                  : /usr/local/apps/bioapps/swift-t/swift-t-1.1/stc
# stc.turbine.version           : 0.9.1
# stc.turbine_home              : /usr/local/apps/bioapps/swift-t/swift-t-1.1/turbine
# stc.version                   : 0.7.2

# Metadata:

# rpath entries
lappend auto_path "/ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps"
package require turbine 0.9.1
namespace import turbine::*


proc swift:constants {  } {
    turbine::c::log "function:swift:constants"
    global c:s_-2
    turbine::allocate_custom c:s_-2 string 1 1 1 1
    turbine::store_string ${c:s_-2} ""
    global c:s__vcf-1
    turbine::allocate_custom c:s__vcf-1 string 1 1 2 1
    turbine::store_string ${c:s__vcf-1} "*.vcf"
    global c:s_sknownSite
    turbine::allocate_custom c:s_sknownSite string 1 1 3 1
    turbine::store_string ${c:s_sknownSite} "s/^/--knownSites /g"
    global c:s_sknown_g
    turbine::allocate_custom c:s_sknown_g string 1 1 4 1
    turbine::store_string ${c:s_sknown_g} "s/^/-known /g"
}

package require align 0.2


proc swift:main {  } {
    turbine::c::log "function: __entry"
    # Var: string t:7 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/VariantCalling.swift:77:33
    # Var: string t:9 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/VariantCalling.swift:92:18
    # Var: string t:10 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/VariantCalling.swift:92:25
    # Var: string t:13 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/VariantCalling.swift:92:54
    # Var: string t:59 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/VariantCalling.swift:118:4
    # Var: string t:71 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/VariantCalling.swift:121:4
    # Var: $string v:configFilename VALUE_OF [string:configFilename]
    # Var: $int v:total_workers VALUE_OF [int:total_workers]
    # Var: file u:sampleInfoFile /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/VariantCalling.swift:77:0
    # Var: file u:docSampleInfo /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/VariantCalling.swift:103:32
    # Var: file u:docRunfile /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/VariantCalling.swift:99:109
    # Var: *rw(file)[int] u:alignDedupBams /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/VariantCalling.swift:111:0
    # Var: string[string] u:variables /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/VariantCalling.swift:70:0
    # Var: file u:failureLog /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/VariantCalling.swift:92:83
    # Var: file u:configFile /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/VariantCalling.swift:66:0
    # Var: $string v:f RENAMED [$string:__v:f]
    # Var: string t:4:5 RENAMED [string:__t:4] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():195:7
    # Var: string t:6:5 RENAMED [string:__t:6] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():195:25
    # Var: string t:8:5 RENAMED [string:__t:8] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():195:67
    # Var: boolean t:26:5 RENAMED [boolean:__t:26] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():211:32
    # Var: $file v:configFile:1 VALUE_OF [file:configFile]
    # Var: $file v:configFile:2 VALUE_OF [file:configFile]
    # Var: $string$[int] v:configFileData VALUE_OF [string[int]:configFileData]
    lassign [ adlb::multicreate [ list string 1 1 5 ] [ list string 1 1 6 ] [ list string 3 1 7 ] [ list string 3 1 8 ] [ list string 1 1 9 ] [ list string 1 1 10 ] [ list container integer file_ref 2 1 14 ] [ list container string string 11 1 15 ] [ list string 1 1 18 ] [ list string 1 1 19 ] [ list string 1 1 20 ] [ list integer 1 1 21 ] ] t:7 t:9 t:10 t:13 t:59 t:71 u:alignDedupBams u:variables t:4:5 t:6:5 t:8:5 t:26:5
    turbine::c::log "allocated t:7=<${t:7}> t:9=<${t:9}> t:10=<${t:10}> t:13=<${t:13}> t:59=<${t:59}>"
    turbine::c::log "allocated t:71=<${t:71}> u:alignDedupBams=<${u:alignDedupBams}> u:variables=<${u:variables}> t:4:5=<${t:4:5}> t:6:5=<${t:6:5}>"
    turbine::c::log "allocated t:8:5=<${t:8:5}> t:26:5=<${t:26:5}>"
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 11 ] [ list file 0 1 12 ] [ list file 0 1 13 ] [ list file 3 1 16 ] [ list file 1 1 17 ] ] [ list 0 1 1 1 0 ] ] u:sampleInfoFile u:docSampleInfo u:docRunfile u:failureLog u:configFile
    turbine::argv_accept_impl [ list "runfile" ]
    set v:configFilename [ turbine::argv_get_impl "runfile" ]
    set tcltmp:init_rc 1
    set v:configFile:1 [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:configFile:1 ${v:configFilename}
    turbine::store_file ${u:configFile} v:configFile:1 1
    set v:configFile:2 [ turbine::retrieve_file ${u:configFile} ]
    set v:configFileData [ turbine::file_lines_impl ${v:configFile:2} ]
    turbine::container_reference ${u:variables} "SAMPLEINFORMATION" ${t:7} string
    turbine::container_reference ${u:variables} "OUTPUTDIR" ${t:10} string
    turbine::container_reference ${u:variables} "DELIVERYFOLDER" ${t:13} string
    turbine::container_reference ${u:variables} "ANALYSIS" ${t:59} string
    turbine::container_reference ${u:variables} "ALIGN_DEDUP_STAGE" ${t:71} string
    set v:total_workers [ turbine::turbine_workers ]
    set v:f [ file tail ${v:configFilename} ]
    turbine::container_reference ${u:variables} "SAMPLELB" ${t:4:5} string
    turbine::container_reference ${u:variables} "SAMPLEPL" ${t:6:5} string
    turbine::container_reference ${u:variables} "SAMPLECN" ${t:8:5} string
    dict for {tcltmp:ignore v:line} ${v:configFileData} {
        # Var: string[int] u:keyValuePair RENAMED [string[int]:keyValuePair] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/generalfunctions/general.swift:getConfigVariables():43:2
        # Var: $string$[int] v:keyValuePair VALUE_OF [string[int]:keyValuePair]
        # Var: $string v:alias:name VALUE_OF [string:__alias:name]
        # Var: $string v:alias:value VALUE_OF [string:__alias:value]
        lassign [ adlb::multicreate [ list container integer string 1 2 22 ] ] u:keyValuePair
        turbine::c::log "allocated u:keyValuePair=<${u:keyValuePair}>"
        set v:keyValuePair [ turbine::split_impl ${v:line} "=" ]
        turbine::build_rec ${u:keyValuePair} ${v:keyValuePair} [ list container integer string ] 0 1
        set a:name [ adlb::subscript_container ${u:keyValuePair} 0 ]
        set v:alias:name [ turbine::retrieve_string ${a:name} ]
        set a:value [ adlb::subscript_container ${u:keyValuePair} 1 ]
        set v:alias:value [ turbine::retrieve_string ${a:value} CACHED 1 ]
        turbine::container_insert ${u:variables} ${v:alias:name} ${v:alias:value} string 0
        adlb::write_refcount_decr ${u:keyValuePair} 1
    }
    turbine::rule [ list ${u:alignDedupBams} ] "__entry-call_foreign-size ${u:alignDedupBams}"
    turbine::rule [ list ${t:71} ] "__entry-optmerged ${t:10} ${t:26:5} ${t:59} ${t:71} ${t:9} ${u:alignDedupBams} {${u:failureLog}} ${u:variables}"
    turbine::rule [ list ${t:10} ] [ list __entry-optmerged-17 ${t:10} ${t:13} ${t:9} ${v:f} ${u:configFile} ${u:docRunfile} ${u:failureLog} ${u:variables} ]
    turbine::rule [ list ${t:7} ] "__entry-optmerged-19 ${t:10} ${t:13} ${t:26:5} ${t:4:5} ${t:6:5} ${t:7} ${t:8:5} ${v:total_workers} ${u:alignDedupBams} {${u:docSampleInfo}} {${u:failureLog}} {${u:sampleInfoFile}} ${u:variables}"
    turbine::decr_local_file_refcount v:configFile:1
    adlb::write_refcount_decr ${u:variables} 1
}


proc __entry-call_foreign-size { u:alignDedupBams } {
    # Var: file$[int] v:alignDedupBams VALUE_OF [*rw(file)[int]:alignDedupBams]
    # Var: $int v:t:50 VALUE_OF [int:__t:50]
    # Var: $boolean v:t:49 VALUE_OF [boolean:__t:49]
    # Var: $void v:t:48 VALUE_OF [void:__t:48]
    set v:alignDedupBams [ adlb::enumerate ${u:alignDedupBams} dict all 0 0 ]
    set v:t:50 [ dict size ${v:alignDedupBams} ]
    set v:t:49 [ expr { ${v:t:50} != 0 } ]
    turbine::assert_impl ${v:t:49} "FAILURE: The align, sort, and dedup output array was empty: none of the samples finished properly"
    turbine::read_refcount_decr ${u:alignDedupBams} 1
}


proc __entry-optmerged { t:10 t:26:5 t:59 t:71 t:9 u:alignDedupBams u:failureLog u:variables } {
    # Var: $string v:t:71 VALUE_OF [string:__t:71]
    # Var: $boolean v:t:70 VALUE_OF [boolean:__t:70]
    # Var: $boolean v:t:74 VALUE_OF [boolean:__t:74]
    # Var: $boolean v:t:78 VALUE_OF [boolean:__t:78]
    # Var: $boolean v:t:26:5 VALUE_OF [boolean:__t:26:5]
    set v:t:71 [ turbine::retrieve_string ${t:71} CACHED 1 ]
    set v:t:70 [ expr { ! [ string equal ${v:t:71} "E" ] } ]
    set v:t:74 [ expr { ! [ string equal ${v:t:71} "End" ] } ]
    set v:t:78 [ expr { ! [ string equal ${v:t:71} "end" ] } ]
    set v:t:26:5 [ string equal ${v:t:71} "Y" ]
    turbine::store_integer ${t:26:5} ${v:t:26:5}
    turbine::rule [ list ${t:59} ] "__entry-optmerged-1 ${t:10} ${t:59} ${t:9} ${v:t:70} ${v:t:74} ${v:t:78} ${u:alignDedupBams} {${u:failureLog}} ${u:variables}"
}


proc __entry-optmerged-1 { t:10 t:59 t:9 v:t:70 v:t:74 v:t:78 u:alignDedupBams u:failureLog u:variables } {
    # Var: $string v:t:59 VALUE_OF [string:__t:59]
    # Var: $boolean v:t:58 VALUE_OF [boolean:__t:58]
    # Var: $boolean v:t:62 VALUE_OF [boolean:__t:62]
    # Var: $boolean v:t:66 VALUE_OF [boolean:__t:66]
    # Var: $boolean v:t:57 VALUE_OF [boolean:__t:57]
    # Var: $boolean v:t:56 VALUE_OF [boolean:__t:56]
    # Var: $boolean v:t:55 VALUE_OF [boolean:__t:55]
    # Var: $boolean v:t:54 VALUE_OF [boolean:__t:54]
    # Var: $boolean v:t:53 VALUE_OF [boolean:__t:53]
    set v:t:59 [ turbine::retrieve_string ${t:59} CACHED 1 ]
    set v:t:58 [ expr { ! [ string equal ${v:t:59} "ALIGN" ] } ]
    set v:t:62 [ expr { ! [ string equal ${v:t:59} "ALIGN_ONLY" ] } ]
    set v:t:66 [ expr { ! [ string equal ${v:t:59} "ALIGNMENT" ] } ]
    set v:t:57 [ expr { ${v:t:58} && ${v:t:62} } ]
    set v:t:56 [ expr { ${v:t:57} && ${v:t:66} } ]
    set v:t:55 [ expr { ${v:t:56} && ${v:t:70} } ]
    set v:t:54 [ expr { ${v:t:55} && ${v:t:74} } ]
    set v:t:53 [ expr { ${v:t:54} && ${v:t:78} } ]
    if { ${v:t:53} } {
        # Var: string t:87 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/VariantCalling.swift:__entry():125:5
        lassign [ adlb::multicreate [ list string 1 1 23 ] ] t:87
        turbine::c::log "allocated t:87=<${t:87}>"
        turbine::read_refcount_incr ${u:alignDedupBams} 2
        turbine::read_refcount_incr ${t:9} 1
        turbine::read_refcount_incr ${t:10} 2
        turbine::read_refcount_incr ${u:variables} 5
        turbine::file_read_refcount_incr ${u:failureLog} 2
        turbine::container_reference ${u:variables} "SPLIT" ${t:87} string
        turbine::rule [ list ${t:87} ] "__entry-optmerged-2 ${t:10} ${t:87} ${t:9} ${u:alignDedupBams} {${u:failureLog}} ${u:variables}"
    }
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${u:variables} 1
    turbine::read_refcount_decr ${t:10} 1
    turbine::read_refcount_decr ${t:9} 1
    turbine::read_refcount_decr ${u:alignDedupBams} 1
}


proc __entry-optmerged-2 { t:10 t:87 t:9 u:alignDedupBams u:failureLog u:variables } {
    # Var: $string v:t:87 VALUE_OF [string:__t:87]
    # Var: $boolean v:t:86 VALUE_OF [boolean:__t:86]
    # Var: $boolean v:t:90 VALUE_OF [boolean:__t:90]
    # Var: $boolean v:t:94 VALUE_OF [boolean:__t:94]
    # Var: $boolean v:t:98 VALUE_OF [boolean:__t:98]
    # Var: $boolean v:t:102 VALUE_OF [boolean:__t:102]
    # Var: $boolean v:t:85 VALUE_OF [boolean:__t:85]
    # Var: $boolean v:t:84 VALUE_OF [boolean:__t:84]
    # Var: $boolean v:t:83 VALUE_OF [boolean:__t:83]
    # Var: $boolean v:t:82 VALUE_OF [boolean:__t:82]
    set v:t:87 [ turbine::retrieve_string ${t:87} CACHED 1 ]
    set v:t:86 [ string equal ${v:t:87} "Yes" ]
    set v:t:90 [ string equal ${v:t:87} "YES" ]
    set v:t:94 [ string equal ${v:t:87} "yes" ]
    set v:t:98 [ string equal ${v:t:87} "Y" ]
    set v:t:102 [ string equal ${v:t:87} "y" ]
    set v:t:85 [ expr { ${v:t:86} || ${v:t:90} } ]
    set v:t:84 [ expr { ${v:t:85} || ${v:t:94} } ]
    set v:t:83 [ expr { ${v:t:84} || ${v:t:98} } ]
    set v:t:82 [ expr { ${v:t:83} || ${v:t:102} } ]
    if { ${v:t:82} } {
        # Var: *rw(*rw(file)[int])[int] u:splitBams /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/VariantCalling.swift:__entry():132:2
        # Var: string t:109 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/VariantCalling.swift:__entry():134:6
        # Var: string t:1:3 RENAMED [string:__t:1] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/SplitByChr.swift:splitByChrMain():68:26
        # Var: boolean t:20:3 RENAMED [boolean:__t:20] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/SplitByChr.swift:splitByChrMain():84:31
        lassign [ adlb::multicreate [ list container integer ref 2 1 24 ] [ list string 1 1 25 ] [ list string 1 1 26 ] [ list integer 1 1 27 ] ] u:splitBams t:109 t:1:3 t:20:3
        turbine::c::log "allocated u:splitBams=<${u:splitBams}> t:109=<${t:109}> t:1:3=<${t:1:3}> t:20:3=<${t:20:3}>"
        turbine::read_refcount_incr ${t:9} 1
        turbine::read_refcount_incr ${t:10} 1
        turbine::read_refcount_incr ${u:variables} 1
        turbine::file_read_refcount_incr ${u:failureLog} 1
        turbine::container_reference ${u:variables} "CHR_SPLIT_STAGE" ${t:109} string
        turbine::container_reference ${u:variables} "CHRNAMES" ${t:1:3} string
        turbine::rule [ list ${t:1:3} ] "__entry-call_foreign-split ${t:10} ${t:1:3} ${t:20:3} ${t:9} ${u:alignDedupBams} {${u:failureLog}} ${u:splitBams} ${u:variables}"
        turbine::rule [ list ${t:109} ] "__entry-optmerged-3 ${t:10} ${t:109} ${t:20:3} {${u:failureLog}} ${u:splitBams} ${u:variables}"
    } else {
        # Var: *rw(file)[int] u:VCF_list:1 RENAMED [*rw(file)[int]:VCF_list] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/VariantCalling.swift:__entry():174:2
        # Var: string t:170 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/VariantCalling.swift:__entry():176:6
        # Var: boolean t:5:4 RENAMED [boolean:__t:5] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCNoSplitMain():257:23
        lassign [ adlb::multicreate [ list container integer file_ref 1 1 92 ] [ list string 1 1 93 ] [ list integer 1 1 94 ] ] u:VCF_list:1 t:170 t:5:4
        turbine::c::log "allocated u:VCF_list:1=<${u:VCF_list:1}> t:170=<${t:170}> t:5:4=<${t:5:4}>"
        turbine::container_reference ${u:variables} "VC_STAGE" ${t:170} string
        turbine::rule [ list ${u:alignDedupBams} ] "VCNoSplitMain-foreach-wait1 ${u:VCF_list:1} ${t:10} ${t:5:4} ${u:alignDedupBams} {${u:failureLog}} ${u:variables}"
        turbine::rule [ list ${t:170} ] "__entry-optmerged-16 ${u:VCF_list:1} ${t:170} ${t:5:4} ${u:variables}"
    }
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${u:variables} 1
    turbine::read_refcount_decr ${t:10} 1
    turbine::read_refcount_decr ${t:9} 1
    turbine::read_refcount_decr ${u:alignDedupBams} 1
}


proc __entry-call_foreign-split { t:10 t:1:3 t:20:3 t:9 u:alignDedupBams u:failureLog u:splitBams u:variables } {
    # Var: $string v:t:1:3 VALUE_OF [string:__t:1:3]
    # Var: $string$[int] v:indices VALUE_OF [string[int]:indices]
    set v:t:1:3 [ turbine::retrieve_string ${t:1:3} CACHED 1 ]
    set v:indices [ turbine::split_impl ${v:t:1:3} ":" ]
    set tcltmp:iters [ dict size ${v:indices} ]
    turbine::file_read_refcount_incr ${u:failureLog} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${u:splitBams} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:20:3} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:10} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:9} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${u:variables} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${u:alignDedupBams} [ expr { ${tcltmp:iters} } ]
    adlb::write_refcount_incr ${u:splitBams} [ expr { ${tcltmp:iters} } ]
    dict for {v:chrIndex:1 v:chr} ${v:indices} {
        turbine::rule [ list ${u:alignDedupBams} ] [ list splitByChrMain-foreach-wait2 ${t:10} ${t:20:3} ${t:9} ${v:chr} ${v:chrIndex:1} ${u:alignDedupBams} ${u:failureLog} ${u:splitBams} ${u:variables} ]
    }
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${u:variables} 1
    turbine::read_refcount_decr ${u:splitBams} 1
    turbine::read_refcount_decr ${t:10} 1
    turbine::read_refcount_decr ${t:9} 1
    turbine::read_refcount_decr ${t:20:3} 1
    turbine::read_refcount_decr ${u:alignDedupBams} 1
    adlb::write_refcount_decr ${u:splitBams} 1
}


proc splitByChrMain-foreach-wait2 { t:10 t:20:3 t:9 v:chr v:chrIndex:1 u:alignDedupBams u:failureLog u:splitBams u:variables } {
    set tcltmp:container_sz [ adlb::enumerate ${u:alignDedupBams} count all 0 ]
    set tcltmp:iters ${tcltmp:container_sz}
    turbine::file_read_refcount_incr ${u:failureLog} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${u:splitBams} [ expr { 2 * ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:20:3} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:9} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:10} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${u:variables} [ expr { 2 * ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${u:alignDedupBams} [ expr { ${tcltmp:iters} - 1 } ]
    adlb::write_refcount_incr ${u:splitBams} [ expr { ${tcltmp:iters} - 1 } ]
    splitByChrMain-foreach2:outer ${t:10} ${t:20:3} ${t:9} ${v:chr} ${v:chrIndex:1} ${u:failureLog} ${u:splitBams} ${u:variables} ${u:alignDedupBams} 0 [ expr { ${tcltmp:container_sz} - 1 } ] 1
}


proc splitByChrMain-foreach2:outer { t:10 t:20:3 t:9 v:chr v:chrIndex:1 u:failureLog u:splitBams u:variables u:alignDedupBams tcltmp:lo tcltmp:hi tcltmp:inc } {
    if { [ expr { ${tcltmp:lo} > ${tcltmp:hi} } ] } {
        return
    }
    while {1} {
        set tcltmp:itersleft [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
        if { [ expr { ${tcltmp:itersleft} <= 64 } ] } {
            splitByChrMain-foreach2:inner ${t:10} ${t:20:3} ${t:9} ${v:chr} ${v:chrIndex:1} ${u:failureLog} ${u:splitBams} ${u:variables} ${u:alignDedupBams} ${tcltmp:lo} ${tcltmp:hi} ${tcltmp:inc}
            return
        } else {
            set tcltmp:skip [ expr { ${tcltmp:inc} * max(64,((${tcltmp:itersleft} - 1) / 16) + 1) } ]
            for { set tcltmp:splitstart [ expr { ${tcltmp:lo} + ${tcltmp:skip} } ] } { ${tcltmp:splitstart} <= ${tcltmp:hi} } { incr tcltmp:splitstart ${tcltmp:skip} } {
                set tcltmp:splitend [ expr { min(${tcltmp:hi},${tcltmp:splitstart} + ${tcltmp:skip} - 1) } ]
                set tcltmp:prio [ turbine::get_priority ]
                turbine::set_priority ${tcltmp:prio}
                adlb::spawn 0 [ list splitByChrMain-foreach2:outer ${t:10} ${t:20:3} ${t:9} ${v:chr} ${v:chrIndex:1} ${u:failureLog} ${u:splitBams} ${u:variables} ${u:alignDedupBams} ${tcltmp:splitstart} ${tcltmp:splitend} ${tcltmp:inc} ]
                turbine::reset_priority
            }
            set tcltmp:hi [ expr { ${tcltmp:lo} + ${tcltmp:skip} - 1 } ]
        }
    }
}


proc splitByChrMain-foreach2:inner { t:10 t:20:3 t:9 v:chr v:chrIndex:1 u:failureLog u:splitBams u:variables u:alignDedupBams tcltmp:lo tcltmp:hi tcltmp:inc } {
    set tcltmp:splitlen [ expr { ${tcltmp:hi} - ${tcltmp:lo} + 1 } ]
    set tcltmp:contents [ adlb::enumerate ${u:alignDedupBams} dict ${tcltmp:splitlen} ${tcltmp:lo} ]
    dict for {v:sampleIndex:2 u:bam} ${tcltmp:contents} {
        # Var: string u:outputName:1 RENAMED [string:outputName] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/SplitByChr.swift:splitByChrMain():80:3
        lassign [ adlb::multicreate [ list string 2 1 28 ] ] u:outputName:1
        turbine::c::log "allocated u:outputName:1=<${u:outputName:1}>"
        turbine::file_read_refcount_incr ${u:bam} 2
        set optf:bam [ turbine::get_file_path ${u:bam} ]
        turbine::rule [ list ${t:20:3} ] [ list splitByChrMain-if1 ${t:20:3} ${t:9} ${v:chr} ${v:chrIndex:1} ${v:sampleIndex:2} ${u:bam} ${u:failureLog} ${u:outputName:1} ${u:splitBams} ${u:variables} ]
        turbine::rule [ list ${optf:bam} ${t:10} ] [ list strlen-argwait ${optf:bam} ${t:10} ${v:chr} ${u:outputName:1} ]
    }
    set tcltmp:iters [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
    turbine::read_refcount_decr ${u:alignDedupBams} [ expr { ${tcltmp:iters} } ]
}


proc splitByChrMain-if1 { t:20:3 t:9 v:chr v:chrIndex:1 v:sampleIndex:2 u:bam u:failureLog u:outputName:1 u:splitBams u:variables } {
    # Var: $boolean v:__t:20 RENAMED [$boolean:__v:__t:20] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/SplitByChr.swift:splitByChrMain():84:34
    set v:__t:20 [ turbine::retrieve_integer ${t:20:3} CACHED 1 ]
    if { ${v:__t:20} } {
        # Var: file u:chrDedupSortedBam RENAMED [file:chrDedupSortedBam] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/SplitByChr.swift:splitByChrMain():93:29
        # Var: int u:threads RENAMED [int:threads] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/SplitByChr.swift:splitByChrMain():97:4
        # Var: string t:26:3 RENAMED [string:__t:26] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/SplitByChr.swift:splitByChrMain():97:31
        # Var: string t:29:3 RENAMED [string:__t:29] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/SplitByChr.swift:splitByChrMain():97:63
        # Var: string t:32:3 RENAMED [string:__t:32] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/SplitByChr.swift:splitByChrMain():99:38
        # Var: string[int] t:34:3 RENAMED [string[int]:__t:34] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/SplitByChr.swift:splitByChrMain():100:20
        # Var: boolean t:37:3 RENAMED [boolean:__t:37] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/SplitByChr.swift:splitByChrMain():104:11
        # Var: $string v:t:35:3 VALUE_OF [string:__t:35:3]
        lassign [ adlb::multicreate [ list integer 1 1 30 ] [ list string 1 1 31 ] [ list string 1 1 32 ] [ list string 1 1 33 ] [ list container integer string 1 1 34 ] [ list integer 1 1 35 ] ] u:threads t:26:3 t:29:3 t:32:3 t:34:3 t:37:3
        turbine::c::log "allocated u:threads=<${u:threads}> t:26:3=<${t:26:3}> t:29:3=<${t:29:3}> t:32:3=<${t:32:3}> t:34:3=<${t:34:3}>"
        turbine::c::log "allocated t:37:3=<${t:37:3}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 2 1 29 ] ] [ list 1 ] ] u:chrDedupSortedBam
        turbine::read_refcount_incr ${t:9} 1
        turbine::read_refcount_incr ${u:variables} 4
        turbine::container_reference ${u:variables} "PBSCORES" ${t:26:3} string
        turbine::container_reference ${u:variables} "PROCPERNODE" ${t:29:3} string
        turbine::container_reference ${u:variables} "SAMTOOLSDIR" ${t:32:3} string
        set v:t:35:3 "${v:chr}"
        turbine::array_kv_build ${t:34:3} [ ::adlb::dict_create 0 ${v:t:35:3} ] 1 integer string
        f:samtools_view ${u:chrDedupSortedBam} ${t:32:3} ${u:bam} ${u:threads} ${t:34:3} -100 "HARD" "RANK"
        turbine::rule [ list ${u:outputName:1} ] "__entry-copy_in_filename ${t:37:3} ${t:9} ${v:chrIndex:1} ${v:sampleIndex:2} {${u:chrDedupSortedBam}} ${u:outputName:1} ${u:splitBams} ${u:variables}"
        turbine::rule [ list ${t:26:3} ${t:29:3} ] "__entry-async_op-parse_int ${t:26:3} ${t:29:3} ${u:threads}"
        turbine::read_refcount_decr ${t:34:3} 1
        turbine::read_refcount_decr ${u:threads} 1
        turbine::read_refcount_decr ${t:32:3} 1
    } else {
        turbine::file_read_refcount_incr ${u:failureLog} 1
        turbine::rule [ list ${u:outputName:1} ] "file_exists-argwait ${v:chrIndex:1} ${v:sampleIndex:2} {${u:failureLog}} ${u:outputName:1} ${u:splitBams} ${u:variables}"
    }
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::file_read_refcount_decr ${u:bam} 1
    turbine::read_refcount_decr ${u:variables} 1
    turbine::read_refcount_decr ${u:splitBams} 1
    turbine::read_refcount_decr ${t:9} 1
    turbine::read_refcount_decr ${u:outputName:1} 1
}


proc __entry-copy_in_filename { t:37:3 t:9 v:chrIndex:1 v:sampleIndex:2 u:chrDedupSortedBam u:outputName:1 u:splitBams u:variables } {
    # Var: $string v:outputName:1:1 VALUE_OF [string:outputName:1]
    set v:outputName:1:1 [ turbine::retrieve_string ${u:outputName:1} CACHED 1 ]
    turbine::set_filename_val ${u:chrDedupSortedBam} ${v:outputName:1:1}
    turbine::rule [ list [ turbine::get_file_td ${u:chrDedupSortedBam} ] ] "f:checkBam ${t:37:3} ${u:variables} {${u:chrDedupSortedBam}}"
    turbine::rule [ list ${t:37:3} ] [ list __entry-async_op-not ${t:37:3} ${t:9} ${v:chrIndex:1} ${v:outputName:1:1} ${v:sampleIndex:2} ${u:chrDedupSortedBam} ${u:splitBams} ${u:variables} ]
}


proc __entry-async_op-not { t:37:3 t:9 v:chrIndex:1 v:outputName:1:1 v:sampleIndex:2 u:chrDedupSortedBam u:splitBams u:variables } {
    # Var: $boolean v:t:37:3 VALUE_OF [boolean:__t:37:3]
    # Var: $boolean v:t:36:3 VALUE_OF [boolean:__t:36:3]
    set v:t:37:3 [ turbine::retrieve_integer ${t:37:3} CACHED 1 ]
    set v:t:36:3 [ expr { ! ${v:t:37:3} } ]
    if { ${v:t:36:3} } {
        # Var: string u:message:1 RENAMED [string:message] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/SplitByChr.swift:splitByChrMain():108:5
        # Var: boolean t:41:3 RENAMED [boolean:__t:41] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/SplitByChr.swift:splitByChrMain():112:5
        # Var: file t:42:3 RENAMED [file:__t:42] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/SplitByChr.swift:splitByChrMain():112:12
        # Var: $string v:message:1 VALUE_OF [string:message:1]
        lassign [ adlb::multicreate [ list string 2 1 36 ] [ list integer 1 1 37 ] ] u:message:1 t:41:3
        turbine::c::log "allocated u:message:1=<${u:message:1}> t:41:3=<${t:41:3}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 38 ] ] [ list 0 ] ] t:42:3
        turbine::read_refcount_incr ${t:9} 1
        turbine::read_refcount_incr ${u:variables} 1
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:append ${t:41:3} {${t:42:3}} ${u:message:1}"
        turbine::reset_priority
        set v:message:1 "FAILURE: ${v:outputName:1:1} contains no alignments. Chromosome splitting failed\n"
        turbine::store_string ${u:message:1} ${v:message:1}
        turbine::rule [ list ${t:41:3} ] "splitByChrMain-chain1 ${t:41:3} ${u:message:1} ${u:variables}"
        turbine::rule [ list ${t:9} ] "__entry-call_foreign-input {${t:42:3}} ${t:9}"
    } else {
        turbine::file_read_refcount_incr ${u:chrDedupSortedBam} 1
        set v:t:50:2 [ turbine::create_nested ${u:splitBams} ${v:chrIndex:1} container integer file_ref 0 1 0 0 ]
        turbine::container_insert ${v:t:50:2} ${v:sampleIndex:2} ${u:chrDedupSortedBam} file_ref 1
    }
    turbine::read_refcount_decr ${u:variables} 1
    turbine::read_refcount_decr ${u:splitBams} 1
    turbine::file_read_refcount_decr ${u:chrDedupSortedBam} 1
    turbine::read_refcount_decr ${t:9} 1
    adlb::write_refcount_decr ${u:splitBams} 1
}


proc splitByChrMain-chain1 { t:41:3 u:message:1 u:variables } {
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:exitIfFlagGiven ${u:variables} ${u:message:1}"
    turbine::reset_priority
    turbine::read_refcount_decr ${t:41:3} 1
}


proc __entry-call_foreign-input { t:42:3 t:9 } {
    # Var: $string v:t:9:2 VALUE_OF [string:__t:9]
    # Var: $file v:t:42:3 VALUE_OF [file:__t:42:3]
    set v:t:9:2 [ turbine::retrieve_string ${t:9} CACHED 1 ]
    set tcltmp:init_rc 1
    set v:t:42:3 [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:t:42:3 ${v:t:9:2}
    turbine::store_file ${t:42:3} v:t:42:3 1
    turbine::decr_local_file_refcount v:t:42:3
}


proc __entry-async_op-parse_int { t:26:3 t:29:3 u:threads } {
    # Var: $string v:t:29:3 VALUE_OF [string:__t:29:3]
    # Var: $int v:t:28:3 VALUE_OF [int:__t:28:3]
    # Var: $string v:t:26:3 VALUE_OF [string:__t:26:3]
    # Var: $int v:t:25:3 VALUE_OF [int:__t:25:3]
    # Var: $int v:t:24:3 VALUE_OF [int:__t:24:3]
    # Var: $int v:threads VALUE_OF [int:threads]
    set v:t:29:3 [ turbine::retrieve_string ${t:29:3} CACHED 1 ]
    set v:t:28:3 [ turbine::parse_int_impl ${v:t:29:3} 10 ]
    set v:t:26:3 [ turbine::retrieve_string ${t:26:3} CACHED 1 ]
    set v:t:25:3 [ turbine::parse_int_impl ${v:t:26:3} 10 ]
    set v:t:24:3 [ turbine::divide_integer_impl ${v:t:25:3} ${v:t:28:3} ]
    set v:threads [ expr { ${v:t:24:3} - 1 } ]
    turbine::store_integer ${u:threads} ${v:threads}
}


proc file_exists-argwait { v:chrIndex:1 v:sampleIndex:2 u:failureLog u:outputName:1 u:splitBams u:variables } {
    # Var: $string v:f:6 RENAMED [$string:__v:f]
    # Var: $boolean v:o:4 RENAMED [$boolean:__v:o]
    set v:f:6 [ turbine::retrieve_string ${u:outputName:1} CACHED 1 ]
    set v:o:4 [ file exists ${v:f:6} ]
    if { ${v:o:4} } {
        # Var: file t:53:2 RENAMED [file:__t:53] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/SplitByChr.swift:splitByChrMain():129:16
        # Var: $file v:t:53:2 VALUE_OF [file:__t:53:2]
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 39 ] ] [ list 0 ] ] t:53:2
        set v:t:52:2 [ turbine::create_nested ${u:splitBams} ${v:chrIndex:1} container integer file_ref 0 1 0 0 ]
        set tcltmp:init_rc 1
        set v:t:53:2 [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
        turbine::input_file_local v:t:53:2 ${v:f:6}
        turbine::store_file ${t:53:2} v:t:53:2 1
        turbine::container_insert ${v:t:52:2} ${v:sampleIndex:2} ${t:53:2} file_ref 1
        turbine::decr_local_file_refcount v:t:53:2
    } else {
        # Var: string u:m:1 RENAMED [string:m] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/SplitByChr.swift:splitByChrMain():132:5
        # Var: boolean t:57:2 RENAMED [boolean:__t:57] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/SplitByChr.swift:splitByChrMain():135:5
        # Var: $string v:m:1 VALUE_OF [string:m:1]
        lassign [ adlb::multicreate [ list string 2 1 40 ] [ list integer 1 1 41 ] ] u:m:1 t:57:2
        turbine::c::log "allocated u:m:1=<${u:m:1}> t:57:2=<${t:57:2}>"
        turbine::read_refcount_incr ${u:variables} 1
        turbine::file_read_refcount_incr ${u:failureLog} 1
        set v:m:1 "ERROR: ${v:f:6} not found. Did you set CHR_SPLIT_STAGE to 'N' by accident?\n"
        turbine::store_string ${u:m:1} ${v:m:1}
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:append ${t:57:2} {${u:failureLog}} ${u:m:1}"
        turbine::reset_priority
        turbine::rule [ list ${t:57:2} ] "splitByChrMain-chain2 ${t:57:2} ${u:m:1} ${u:variables}"
    }
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${u:variables} 1
    turbine::read_refcount_decr ${u:splitBams} 1
    adlb::write_refcount_decr ${u:splitBams} 1
}


proc splitByChrMain-chain2 { t:57:2 u:m:1 u:variables } {
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:exitIfFlagGiven ${u:variables} ${u:m:1}"
    turbine::reset_priority
    turbine::read_refcount_decr ${t:57:2} 1
}


proc strlen-argwait { optf:bam t:10 v:chr u:outputName:1 } {
    # Var: $string v:s:7 RENAMED [$string:__v:s]
    # Var: $int v:n:5 RENAMED [$int:__v:n]
    # Var: $int v:t:6:3 VALUE_OF [int:__t:6:3]
    # Var: $string v:prefix VALUE_OF [string:prefix]
    # Var: $string v:f:7 RENAMED [$string:__v:f]
    # Var: $int v:n:6 RENAMED [$int:__v:n]
    # Var: $int v:t:11:3 VALUE_OF [int:__t:11:3]
    # Var: $string v:sampleName:2 VALUE_OF [string:sampleName:2]
    # Var: $string v:t:10:9 VALUE_OF [string:__t:10]
    # Var: $string v:outputName:1:3 VALUE_OF [string:outputName:1]
    set v:s:7 [ turbine::retrieve_string ${optf:bam} CACHED 1 ]
    set v:n:5 [ string length ${v:s:7} ]
    set v:t:6:3 [ expr { ${v:n:5} - 4 } ]
    set v:prefix [ turbine::substring_impl ${v:s:7} 0 ${v:t:6:3} ]
    set v:f:7 [ file tail ${v:prefix} ]
    set v:n:6 [ string length ${v:f:7} ]
    set v:t:11:3 [ expr { ${v:n:6} - 15 } ]
    set v:sampleName:2 [ turbine::substring_impl ${v:f:7} 0 ${v:t:11:3} ]
    set v:t:10:9 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:outputName:1:3 "${v:t:10:9}/${v:sampleName:2}/realign/${v:f:7}.${v:chr}.bam"
    turbine::store_string ${u:outputName:1} ${v:outputName:1:3}
}


proc __entry-optmerged-3 { t:10 t:109 t:20:3 u:failureLog u:splitBams u:variables } {
    # Var: $string v:t:109 VALUE_OF [string:__t:109]
    # Var: $boolean v:t:108 VALUE_OF [boolean:__t:108]
    # Var: $boolean v:t:112 VALUE_OF [boolean:__t:112]
    # Var: $boolean v:t:116 VALUE_OF [boolean:__t:116]
    # Var: $boolean v:t:20:3 VALUE_OF [boolean:__t:20:3]
    # Var: $boolean v:t:107 VALUE_OF [boolean:__t:107]
    # Var: $boolean v:t:106 VALUE_OF [boolean:__t:106]
    set v:t:109 [ turbine::retrieve_string ${t:109} CACHED 1 ]
    set v:t:108 [ expr { ! [ string equal ${v:t:109} "E" ] } ]
    set v:t:112 [ expr { ! [ string equal ${v:t:109} "End" ] } ]
    set v:t:116 [ expr { ! [ string equal ${v:t:109} "end" ] } ]
    set v:t:20:3 [ string equal ${v:t:109} "Y" ]
    turbine::store_integer ${t:20:3} ${v:t:20:3}
    set v:t:107 [ expr { ${v:t:108} && ${v:t:112} } ]
    set v:t:106 [ expr { ${v:t:107} && ${v:t:116} } ]
    if { ${v:t:106} } {
        # Var: *rw(*rw(file)[int])[int] u:splitVCFs /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/VariantCalling.swift:__entry():144:3
        # Var: string t:130 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/VariantCalling.swift:__entry():146:7
        # Var: boolean t:16:2 RENAMED [boolean:__t:16] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():337:24
        lassign [ adlb::multicreate [ list container integer ref 2 1 42 ] [ list string 1 1 43 ] [ list integer 1 1 44 ] ] u:splitVCFs t:130 t:16:2
        turbine::c::log "allocated u:splitVCFs=<${u:splitVCFs}> t:130=<${t:130}> t:16:2=<${t:16:2}>"
        turbine::read_refcount_incr ${t:10} 2
        turbine::read_refcount_incr ${u:splitBams} 1
        turbine::read_refcount_incr ${u:variables} 3
        turbine::file_read_refcount_incr ${u:failureLog} 2
        turbine::container_reference ${u:variables} "VC_STAGE" ${t:130} string
        turbine::rule [ list ${t:130} ] "__entry-optmerged-4 ${t:10} ${t:130} ${t:16:2} {${u:failureLog}} ${u:splitVCFs} ${u:variables}"
        turbine::rule [ list ${u:splitBams} ] "__entry-optmerged-8 ${t:10} ${t:16:2} {${u:failureLog}} ${u:splitBams} ${u:splitVCFs} ${u:variables}"
    }
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${u:variables} 1
    turbine::read_refcount_decr ${u:splitBams} 1
    turbine::read_refcount_decr ${t:10} 1
}


proc __entry-optmerged-4 { t:10 t:130 t:16:2 u:failureLog u:splitVCFs u:variables } {
    # Var: $string v:t:130 VALUE_OF [string:__t:130]
    # Var: $boolean v:t:129 VALUE_OF [boolean:__t:129]
    # Var: $boolean v:t:133 VALUE_OF [boolean:__t:133]
    # Var: $boolean v:t:137 VALUE_OF [boolean:__t:137]
    # Var: $boolean v:t:16:2 VALUE_OF [boolean:__t:16:2]
    # Var: $boolean v:t:128 VALUE_OF [boolean:__t:128]
    # Var: $boolean v:t:127 VALUE_OF [boolean:__t:127]
    set v:t:130 [ turbine::retrieve_string ${t:130} CACHED 1 ]
    set v:t:129 [ expr { ! [ string equal ${v:t:130} "E" ] } ]
    set v:t:133 [ expr { ! [ string equal ${v:t:130} "End" ] } ]
    set v:t:137 [ expr { ! [ string equal ${v:t:130} "end" ] } ]
    set v:t:16:2 [ string equal ${v:t:130} "Y" ]
    turbine::store_integer ${t:16:2} ${v:t:16:2}
    set v:t:128 [ expr { ${v:t:129} && ${v:t:133} } ]
    set v:t:127 [ expr { ${v:t:128} && ${v:t:137} } ]
    if { ${v:t:127} } {
        # Var: *rw(file)[int] u:VCF_list /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/VariantCalling.swift:__entry():157:4
        # Var: string t:151 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/VariantCalling.swift:__entry():159:8
        # Var: boolean t:8:1 RENAMED [boolean:__t:8] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/CombineVariants.swift:combineVariantsMain():59:36
        lassign [ adlb::multicreate [ list container integer file_ref 1 1 45 ] [ list string 1 1 46 ] [ list integer 1 1 47 ] ] u:VCF_list t:151 t:8:1
        turbine::c::log "allocated u:VCF_list=<${u:VCF_list}> t:151=<${t:151}> t:8:1=<${t:8:1}>"
        turbine::read_refcount_incr ${u:splitVCFs} 1
        turbine::read_refcount_incr ${t:10} 1
        turbine::read_refcount_incr ${u:variables} 3
        turbine::file_read_refcount_incr ${u:failureLog} 1
        turbine::container_reference ${u:variables} "COMBINE_VARIANT_STAGE" ${t:151} string
        turbine::rule [ list ${t:151} ] "__entry-optmerged-5 ${u:VCF_list} ${t:151} ${t:8:1} ${u:variables}"
        turbine::rule [ list ${u:splitVCFs} ] "__entry-optmerged-6 ${u:VCF_list} ${t:10} ${t:8:1} {${u:failureLog}} ${u:splitVCFs} ${u:variables}"
    }
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${u:variables} 1
    turbine::read_refcount_decr ${t:10} 1
    turbine::read_refcount_decr ${u:splitVCFs} 1
}


proc __entry-optmerged-5 { u:VCF_list t:151 t:8:1 u:variables } {
    # Var: $string v:t:151 VALUE_OF [string:__t:151]
    # Var: $boolean v:t:150 VALUE_OF [boolean:__t:150]
    # Var: $boolean v:t:154 VALUE_OF [boolean:__t:154]
    # Var: $boolean v:t:158 VALUE_OF [boolean:__t:158]
    # Var: $boolean v:t:8:1 VALUE_OF [boolean:__t:8:1]
    # Var: $boolean v:t:149 VALUE_OF [boolean:__t:149]
    # Var: $boolean v:t:148 VALUE_OF [boolean:__t:148]
    set v:t:151 [ turbine::retrieve_string ${t:151} CACHED 1 ]
    set v:t:150 [ expr { ! [ string equal ${v:t:151} "E" ] } ]
    set v:t:154 [ expr { ! [ string equal ${v:t:151} "End" ] } ]
    set v:t:158 [ expr { ! [ string equal ${v:t:151} "end" ] } ]
    set v:t:8:1 [ string equal ${v:t:151} "Y" ]
    turbine::store_integer ${t:8:1} ${v:t:8:1}
    set v:t:149 [ expr { ${v:t:150} && ${v:t:154} } ]
    set v:t:148 [ expr { ${v:t:149} && ${v:t:158} } ]
    if { ${v:t:148} } {
        turbine::read_refcount_incr ${u:VCF_list} 2
        turbine::read_refcount_incr ${u:variables} 1
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:jointGenotypingMain ${u:VCF_list} ${u:variables}"
        turbine::reset_priority
        turbine::rule [ list ${u:VCF_list} ] "__entry-call_foreign-size-1 ${u:VCF_list}"
    }
    turbine::read_refcount_decr ${u:variables} 1
    turbine::read_refcount_decr ${u:VCF_list} 1
}


proc __entry-call_foreign-size-1 { u:VCF_list } {
    # Var: file$[int] v:VCF_list VALUE_OF [*rw(file)[int]:VCF_list]
    # Var: $int v:t:164 VALUE_OF [int:__t:164]
    # Var: $boolean v:t:163 VALUE_OF [boolean:__t:163]
    # Var: $void v:t:162 VALUE_OF [void:__t:162]
    set v:VCF_list [ adlb::enumerate ${u:VCF_list} dict all 0 0 ]
    set v:t:164 [ dict size ${v:VCF_list} ]
    set v:t:163 [ expr { ${v:t:164} != 0 } ]
    turbine::assert_impl ${v:t:163} "FAILURE: The VCFs array was empty"
    turbine::read_refcount_decr ${u:VCF_list} 1
}


proc __entry-optmerged-6 { u:VCF_list t:10 t:8:1 u:failureLog u:splitVCFs u:variables } {
    # Var: *rw(file)[int]$[int] v:splitVCFs VALUE_OF [*rw(*rw(file)[int])[int]:splitVCFs]
    # Var: $int v:t:143 VALUE_OF [int:__t:143]
    # Var: $boolean v:t:142 VALUE_OF [boolean:__t:142]
    # Var: $void v:t:141 VALUE_OF [void:__t:141]
    set v:splitVCFs [ adlb::enumerate ${u:splitVCFs} dict all 0 0 ]
    set v:t:143 [ dict size ${v:splitVCFs} ]
    set v:t:142 [ expr { ${v:t:143} != 0 } ]
    turbine::assert_impl ${v:t:142} "FAILURE: The split variants array was empty: none of the split bam files had their varianted called"
    set tcltmp:iters [ dict size ${v:splitVCFs} ]
    turbine::file_read_refcount_incr ${u:failureLog} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:8:1} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:10} [ expr { 2 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${u:variables} [ expr { 2 * ${tcltmp:iters} } ]
    adlb::write_refcount_incr ${u:VCF_list} [ expr { ${tcltmp:iters} } ]
    dict for {v:sampleIndex u:sampleSet} ${v:splitVCFs} {
        # Var: string[int] u:pieces RENAMED [string[int]:pieces] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/CombineVariants.swift:combineVariantsMain():52:2
        # Var: string u:outputName RENAMED [string:outputName] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/CombineVariants.swift:combineVariantsMain():55:2
        lassign [ adlb::multicreate [ list container integer string 2 1 48 ] [ list string 2 1 49 ] ] u:pieces u:outputName
        turbine::c::log "allocated u:pieces=<${u:pieces}> u:outputName=<${u:outputName}>"
        turbine::read_refcount_incr ${u:sampleSet} 2
        set a:t:1:1 [ adlb::subscript_container ${u:sampleSet} 0 ]
        set a:sampleName [ adlb::subscript_container ${u:pieces} 0 ]
        turbine::rule [ list ${a:t:1:1} ] "combineVariantsMain-call-basename1 {${a:t:1:1}} ${u:pieces}"
        turbine::rule [ list ${t:8:1} ] "combineVariantsMain-if1 ${u:VCF_list} {${a:sampleName}} ${t:10} ${t:8:1} ${v:sampleIndex} {${u:failureLog}} ${u:outputName} ${u:pieces} ${u:sampleSet} ${u:variables}"
        turbine::rule [ list ${a:sampleName} ${t:10} ] "__entry-async_op-strcat-3 {${a:sampleName}} ${t:10} ${u:outputName}"
    }
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${u:variables} 1
    turbine::read_refcount_decr ${t:8:1} 1
    turbine::read_refcount_decr ${t:10} 1
    turbine::read_refcount_decr ${u:splitVCFs} 1
    adlb::write_refcount_decr ${u:VCF_list} 1
}


proc combineVariantsMain-call-basename1 { a:t:1:1 u:pieces } {
    set a:1 [ adlb::acquire_ref ${a:t:1:1} file_ref 1 1 ]
    turbine::rule [ list [ turbine::get_file_td ${a:1} ] ] "basename-argwait {${a:1}} ${u:pieces}"
}


proc basename-argwait { a:1 u:pieces } {
    # Var: $file v:p:2 RENAMED [$file:__v:p]
    # Var: $string v:f:2 RENAMED [$string:__v:f]
    # Var: $string$[int] v:pieces VALUE_OF [string[int]:pieces]
    set v:p:2 [ turbine::retrieve_file ${a:1} CACHED 1 ]
    set v:f:2 [ file tail ${v:p:2} ]
    set v:pieces [ turbine::split_impl ${v:f:2} "." ]
    turbine::build_rec ${u:pieces} ${v:pieces} [ list container integer string ] 0 1
}


proc combineVariantsMain-if1 { u:VCF_list a:sampleName t:10 t:8:1 v:sampleIndex u:failureLog u:outputName u:pieces u:sampleSet u:variables } {
    # Var: $boolean v:__t:8 RENAMED [$boolean:__v:__t:8] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/CombineVariants.swift:combineVariantsMain():59:39
    set v:__t:8 [ turbine::retrieve_integer ${t:8:1} CACHED 1 ]
    if { ${v:__t:8} } {
        # Var: string[int] u:chrSampleArray RENAMED [string[int]:chrSampleArray] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/CombineVariants.swift:combineVariantsMain():62:3
        # Var: file u:gvcfSample RENAMED [file:gvcfSample] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/CombineVariants.swift:combineVariantsMain():78:21
        # Var: file u:combineLog RENAMED [file:combineLog] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/CombineVariants.swift:combineVariantsMain():82:29
        # Var: string t:22:1 RENAMED [string:__t:22] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/CombineVariants.swift:combineVariantsMain():85:41
        # Var: string t:24:1 RENAMED [string:__t:24] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/CombineVariants.swift:combineVariantsMain():86:13
        # Var: string t:26:1 RENAMED [string:__t:26] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/CombineVariants.swift:combineVariantsMain():87:13
        # Var: string t:27:1 RENAMED [string:__t:27] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/CombineVariants.swift:combineVariantsMain():87:20
        # Var: string t:30:1 RENAMED [string:__t:30] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/CombineVariants.swift:combineVariantsMain():87:47
        # Var: string t:32:1 RENAMED [string:__t:32] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/CombineVariants.swift:combineVariantsMain():88:13
        # Var: string t:36:1 RENAMED [string:__t:36] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/CombineVariants.swift:combineVariantsMain():88:47
        lassign [ adlb::multicreate [ list container integer string 1 1 50 ] [ list string 1 1 53 ] [ list string 1 1 54 ] [ list string 1 1 55 ] [ list string 1 1 56 ] [ list string 1 1 57 ] [ list string 1 1 58 ] [ list string 1 1 59 ] ] u:chrSampleArray t:22:1 t:24:1 t:26:1 t:27:1 t:30:1 t:32:1 t:36:1
        turbine::c::log "allocated u:chrSampleArray=<${u:chrSampleArray}> t:22:1=<${t:22:1}> t:24:1=<${t:24:1}> t:26:1=<${t:26:1}> t:27:1=<${t:27:1}>"
        turbine::c::log "allocated t:30:1=<${t:30:1}> t:32:1=<${t:32:1}> t:36:1=<${t:36:1}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 51 ] [ list file 0 1 52 ] ] [ list 1 1 ] ] u:gvcfSample u:combineLog
        turbine::read_refcount_incr ${t:10} 1
        turbine::read_refcount_incr ${u:outputName} 1
        turbine::read_refcount_incr ${u:pieces} 1
        turbine::read_refcount_incr ${u:variables} 4
        turbine::read_refcount_incr ${u:sampleSet} 1
        turbine::container_reference ${u:variables} "JAVADIR" ${t:22:1} string
        turbine::container_reference ${u:variables} "GATKDIR" ${t:24:1} string
        turbine::container_reference ${u:variables} "REFGENOMEDIR" ${t:27:1} string
        turbine::container_reference ${u:variables} "REFGENOME" ${t:30:1} string
        turbine::container_reference ${u:variables} "DBSNP" ${t:36:1} string
        turbine::container_insert ${u:VCF_list} ${v:sampleIndex} ${u:gvcfSample} file_ref 0
        turbine::rule [ list ${u:sampleSet} ] "combineVariantsMain-foreach-wait2 ${u:chrSampleArray} ${u:sampleSet}"
        turbine::rule [ list ${u:outputName} ] "__entry-copy_in_filename-1 {${u:gvcfSample}} ${u:outputName}"
        turbine::rule [ list ${a:sampleName} ${t:10} ] "__entry-async_op-strcat {${a:sampleName}} ${t:10} ${t:22:1} ${t:24:1} ${t:26:1} ${t:32:1} ${u:chrSampleArray} {${u:combineLog}} {${u:gvcfSample}} ${u:outputName}"
        turbine::rule [ list ${t:27:1} ] "__entry-optmerged-7 ${t:26:1} ${t:27:1} ${t:30:1} ${t:32:1} ${t:36:1}"
    } else {
        adlb::write_refcount_incr ${u:VCF_list} 1
        turbine::file_read_refcount_incr ${u:failureLog} 1
        turbine::rule [ list ${u:outputName} ] "file_exists-argwait-1 ${u:VCF_list} ${v:sampleIndex} {${u:failureLog}} ${u:outputName} ${u:variables}"
    }
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${u:sampleSet} 1
    turbine::read_refcount_decr ${u:variables} 1
    turbine::read_refcount_decr ${u:pieces} 1
    turbine::read_refcount_decr ${u:outputName} 1
    turbine::read_refcount_decr ${t:10} 1
    adlb::write_refcount_decr ${u:VCF_list} 1
}


proc combineVariantsMain-foreach-wait2 { u:chrSampleArray u:sampleSet } {
    set tcltmp:container_sz [ adlb::enumerate ${u:sampleSet} count all 0 ]
    set tcltmp:iters ${tcltmp:container_sz}
    turbine::read_refcount_incr ${u:sampleSet} [ expr { ${tcltmp:iters} - 1 } ]
    adlb::write_refcount_incr ${u:chrSampleArray} [ expr { ${tcltmp:iters} - 1 } ]
    combineVariantsMain-foreach2:outer ${u:chrSampleArray} ${u:sampleSet} 0 [ expr { ${tcltmp:container_sz} - 1 } ] 1
}


proc combineVariantsMain-foreach2:outer { u:chrSampleArray u:sampleSet tcltmp:lo tcltmp:hi tcltmp:inc } {
    if { [ expr { ${tcltmp:lo} > ${tcltmp:hi} } ] } {
        return
    }
    while {1} {
        set tcltmp:itersleft [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
        if { [ expr { ${tcltmp:itersleft} <= 64 } ] } {
            combineVariantsMain-foreach2:inner ${u:chrSampleArray} ${u:sampleSet} ${tcltmp:lo} ${tcltmp:hi} ${tcltmp:inc}
            return
        } else {
            set tcltmp:skip [ expr { ${tcltmp:inc} * max(64,((${tcltmp:itersleft} - 1) / 16) + 1) } ]
            for { set tcltmp:splitstart [ expr { ${tcltmp:lo} + ${tcltmp:skip} } ] } { ${tcltmp:splitstart} <= ${tcltmp:hi} } { incr tcltmp:splitstart ${tcltmp:skip} } {
                set tcltmp:splitend [ expr { min(${tcltmp:hi},${tcltmp:splitstart} + ${tcltmp:skip} - 1) } ]
                set tcltmp:prio [ turbine::get_priority ]
                turbine::set_priority ${tcltmp:prio}
                adlb::spawn 0 "combineVariantsMain-foreach2:outer ${u:chrSampleArray} ${u:sampleSet} ${tcltmp:splitstart} ${tcltmp:splitend} ${tcltmp:inc}"
                turbine::reset_priority
            }
            set tcltmp:hi [ expr { ${tcltmp:lo} + ${tcltmp:skip} - 1 } ]
        }
    }
}


proc combineVariantsMain-foreach2:inner { u:chrSampleArray u:sampleSet tcltmp:lo tcltmp:hi tcltmp:inc } {
    set tcltmp:splitlen [ expr { ${tcltmp:hi} - ${tcltmp:lo} + 1 } ]
    set tcltmp:contents [ adlb::enumerate ${u:sampleSet} dict ${tcltmp:splitlen} ${tcltmp:lo} ]
    dict for {v:index u:chrBam} ${tcltmp:contents} {
        # Var: $int v:varFlagPos VALUE_OF [int:varFlagPos]
        # Var: $int v:namePos VALUE_OF [int:namePos]
        turbine::file_read_refcount_incr ${u:chrBam} 1
        set v:varFlagPos [ expr { ${v:index} * 2 } ]
        set v:namePos [ expr { ${v:varFlagPos} + 1 } ]
        turbine::container_insert ${u:chrSampleArray} ${v:varFlagPos} "--variant" string 0
        set optf:chrBam [ turbine::get_file_path ${u:chrBam} ]
        turbine::rule [ list ${optf:chrBam} ] "__entry-arr_copy_in_imm {${optf:chrBam}} ${v:namePos} ${u:chrSampleArray}"
    }
    set tcltmp:iters [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
    turbine::read_refcount_decr ${u:sampleSet} [ expr { ${tcltmp:iters} } ]
}


proc __entry-arr_copy_in_imm { optf:chrBam v:namePos u:chrSampleArray } {
    # Var: $string v:of:chrBam VALUE_OF [string:__of:chrBam]
    set v:of:chrBam [ turbine::retrieve_string ${optf:chrBam} CACHED 1 ]
    turbine::container_insert ${u:chrSampleArray} ${v:namePos} ${v:of:chrBam} string 1
}


proc __entry-copy_in_filename-1 { u:gvcfSample u:outputName } {
    # Var: $string v:outputName:1 VALUE_OF [string:outputName]
    set v:outputName:1 [ turbine::retrieve_string ${u:outputName} CACHED 1 ]
    turbine::set_filename_val ${u:gvcfSample} ${v:outputName:1}
}


proc __entry-async_op-strcat { a:sampleName t:10 t:22:1 t:24:1 t:26:1 t:32:1 u:chrSampleArray u:combineLog u:gvcfSample u:outputName } {
    # Var: $string v:t:10:3 VALUE_OF [string:__t:10]
    # Var: $string v:alias:sampleName:2 VALUE_OF [string:__alias:sampleName]
    # Var: $string v:t:16:1 VALUE_OF [string:__t:16:1]
    set v:t:10:3 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:alias:sampleName:2 [ turbine::retrieve_string ${a:sampleName} CACHED 1 ]
    set v:t:16:1 "${v:t:10:3}/${v:alias:sampleName:2}/logs/${v:alias:sampleName:2}_CombineGVCFs.log"
    turbine::set_filename_val ${u:combineLog} ${v:t:16:1}
    turbine::rule [ list ${t:22:1} ${t:24:1} ${t:26:1} ${t:32:1} ${u:chrSampleArray} ${u:outputName} ] [ list CombineGVCFs-app-leaf1 ${t:22:1} ${t:24:1} ${t:26:1} ${t:32:1} ${v:t:16:1} ${u:chrSampleArray} ${u:combineLog} ${u:gvcfSample} ${u:outputName} ]
}


proc CombineGVCFs-app-leaf1 { t:22:1 t:24:1 t:26:1 t:32:1 v:t:16:1 u:chrSampleArray u:combineLog u:gvcfSample u:outputName } {
    # Var: $string v:javadir RENAMED [$string:__v:javadir] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/merge_vcf.swift:CombineGVCFs():3:124
    # Var: $string v:gatkdir RENAMED [$string:__v:gatkdir] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/merge_vcf.swift:CombineGVCFs():3:124
    # Var: $string v:reference RENAMED [$string:__v:reference] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/merge_vcf.swift:CombineGVCFs():3:124
    # Var: $string v:dbsnp RENAMED [$string:__v:dbsnp] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/merge_vcf.swift:CombineGVCFs():3:124
    # Var: $string$[int] v:variants RENAMED [$string$[int]:__v:variants] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/merge_vcf.swift:CombineGVCFs():3:124
    # Var: $string v:__filename:outputfile RENAMED [$string:__v:__filename:outputfile] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/merge_vcf.swift:CombineGVCFs():3:124
    # Var: $file v:outputfile RENAMED [$file:__v:outputfile] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/merge_vcf.swift:CombineGVCFs():3:124
    # Var: $file v:outLog RENAMED [$file:__v:outLog] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/merge_vcf.swift:CombineGVCFs():3:124
    set v:javadir [ turbine::retrieve_string ${t:22:1} CACHED 1 ]
    set v:gatkdir [ turbine::retrieve_string ${t:24:1} CACHED 1 ]
    set v:reference [ turbine::retrieve_string ${t:26:1} CACHED 1 ]
    set v:dbsnp [ turbine::retrieve_string ${t:32:1} CACHED 1 ]
    set v:variants [ turbine::unpack_args ${u:chrSampleArray} 1 string ]
    set v:__filename:outputfile [ turbine::retrieve_string ${u:outputName} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile [ turbine::create_local_file_ref ${v:__filename:outputfile} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:outLog [ turbine::create_local_file_ref ${v:t:16:1} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir "-Xmx8g" "-jar" ${v:gatkdir} "-T" "CombineGVCFs" "-R" ${v:reference} "--dbsnp" ${v:dbsnp} {*}${v:variants} "-o" ${v:__filename:outputfile} [ dict create "stderr" ${v:t:16:1} ] ]
    turbine::exec_external ${v:javadir} [ dict create "stderr" ${v:t:16:1} ] "-Xmx8g" "-jar" ${v:gatkdir} "-T" "CombineGVCFs" "-R" ${v:reference} "--dbsnp" ${v:dbsnp} {*}${v:variants} "-o" ${v:__filename:outputfile}
    turbine::store_file ${u:gvcfSample} v:outputfile 0
    turbine::store_file ${u:combineLog} v:outLog 0
    turbine::decr_local_file_refcount v:outputfile
    turbine::decr_local_file_refcount v:outLog
    turbine::read_refcount_decr ${u:chrSampleArray} 1
}


proc __entry-optmerged-7 { t:26:1 t:27:1 t:30:1 t:32:1 t:36:1 } {
    # Var: $string v:t:27:1 VALUE_OF [string:__t:27:1]
    set v:t:27:1 [ turbine::retrieve_string ${t:27:1} CACHED 1 ]
    turbine::rule [ list ${t:30:1} ] [ list __entry-async_op-strcat-1 ${t:26:1} ${t:30:1} ${v:t:27:1} ]
    turbine::rule [ list ${t:36:1} ] [ list __entry-async_op-strcat-2 ${t:32:1} ${t:36:1} ${v:t:27:1} ]
}


proc __entry-async_op-strcat-1 { t:26:1 t:30:1 v:t:27:1 } {
    # Var: $string v:t:30:1 VALUE_OF [string:__t:30:1]
    # Var: $string v:t:26:1 VALUE_OF [string:__t:26:1]
    set v:t:30:1 [ turbine::retrieve_string ${t:30:1} CACHED 1 ]
    set v:t:26:1 "${v:t:27:1}/${v:t:30:1}"
    turbine::store_string ${t:26:1} ${v:t:26:1}
}


proc __entry-async_op-strcat-2 { t:32:1 t:36:1 v:t:27:1 } {
    # Var: $string v:t:36:1 VALUE_OF [string:__t:36:1]
    # Var: $string v:t:32:1 VALUE_OF [string:__t:32:1]
    set v:t:36:1 [ turbine::retrieve_string ${t:36:1} CACHED 1 ]
    set v:t:32:1 "${v:t:27:1}/${v:t:36:1}"
    turbine::store_string ${t:32:1} ${v:t:32:1}
}


proc file_exists-argwait-1 { u:VCF_list v:sampleIndex u:failureLog u:outputName u:variables } {
    # Var: $string v:f:3 RENAMED [$string:__v:f]
    # Var: $boolean v:o RENAMED [$boolean:__v:o]
    set v:f:3 [ turbine::retrieve_string ${u:outputName} CACHED 1 ]
    set v:o [ file exists ${v:f:3} ]
    if { ${v:o} } {
        # Var: file t:39:1 RENAMED [file:__t:39] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/CombineVariants.swift:combineVariantsMain():96:4
        # Var: $file v:t:39:1 VALUE_OF [file:__t:39:1]
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 60 ] ] [ list 0 ] ] t:39:1
        set tcltmp:init_rc 1
        set v:t:39:1 [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
        turbine::input_file_local v:t:39:1 ${v:f:3}
        turbine::store_file ${t:39:1} v:t:39:1 1
        turbine::container_insert ${u:VCF_list} ${v:sampleIndex} ${t:39:1} file_ref 0
        turbine::decr_local_file_refcount v:t:39:1
    } else {
        # Var: string u:message RENAMED [string:message] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/CombineVariants.swift:combineVariantsMain():99:4
        # Var: boolean t:43:1 RENAMED [boolean:__t:43] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/CombineVariants.swift:combineVariantsMain():102:4
        # Var: $string v:message VALUE_OF [string:message]
        lassign [ adlb::multicreate [ list string 2 1 61 ] [ list integer 1 1 62 ] ] u:message t:43:1
        turbine::c::log "allocated u:message=<${u:message}> t:43:1=<${t:43:1}>"
        turbine::read_refcount_incr ${u:variables} 1
        turbine::file_read_refcount_incr ${u:failureLog} 1
        set v:message "ERROR: ${v:f:3} not found. Did you set COMBINE_VARIANT_STAGE to 'N' by accident?\n"
        turbine::store_string ${u:message} ${v:message}
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:append ${t:43:1} {${u:failureLog}} ${u:message}"
        turbine::reset_priority
        turbine::rule [ list ${t:43:1} ] "combineVariantsMain-chain1 ${t:43:1} ${u:message} ${u:variables}"
    }
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${u:variables} 1
    adlb::write_refcount_decr ${u:VCF_list} 1
}


proc combineVariantsMain-chain1 { t:43:1 u:message u:variables } {
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:exitIfFlagGiven ${u:variables} ${u:message}"
    turbine::reset_priority
    turbine::read_refcount_decr ${t:43:1} 1
}


proc __entry-async_op-strcat-3 { a:sampleName t:10 u:outputName } {
    # Var: $string v:t:10:2 VALUE_OF [string:__t:10]
    # Var: $string v:alias:sampleName VALUE_OF [string:__alias:sampleName]
    # Var: $string v:outputName VALUE_OF [string:outputName]
    set v:t:10:2 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:alias:sampleName [ turbine::retrieve_string ${a:sampleName} CACHED 1 ]
    set v:outputName "${v:t:10:2}/${v:alias:sampleName}/variant/${v:alias:sampleName}.wDedups.sorted.recalibrated.g.vcf"
    turbine::store_string ${u:outputName} ${v:outputName}
}


proc __entry-optmerged-8 { t:10 t:16:2 u:failureLog u:splitBams u:splitVCFs u:variables } {
    # Var: *rw(file)[int]$[int] v:splitBams VALUE_OF [*rw(*rw(file)[int])[int]:splitBams]
    # Var: $int v:t:122 VALUE_OF [int:__t:122]
    # Var: $boolean v:t:121 VALUE_OF [boolean:__t:121]
    # Var: $void v:t:120 VALUE_OF [void:__t:120]
    set v:splitBams [ adlb::enumerate ${u:splitBams} dict all 0 0 ]
    set v:t:122 [ dict size ${v:splitBams} ]
    set v:t:121 [ expr { ${v:t:122} != 0 } ]
    turbine::assert_impl ${v:t:121} "FAILURE: The split bam out array was empty: none of the samples were split properly"
    set tcltmp:iters [ dict size ${v:splitBams} ]
    turbine::file_read_refcount_incr ${u:failureLog} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${u:splitVCFs} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:10} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:16:2} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${u:variables} [ expr { ${tcltmp:iters} } ]
    adlb::write_refcount_incr ${u:splitVCFs} [ expr { ${tcltmp:iters} } ]
    dict for {v:chrIndex u:chrSet} ${v:splitBams} {
        # Var: string[int] u:pieces:1 RENAMED [string[int]:pieces] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():330:2
        # Var: string u:chr RENAMED [string:chr] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():331:2
        # Var: string u:sampleName:1 RENAMED [string:sampleName] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():334:2
        lassign [ adlb::multicreate [ list container integer string 1 2 63 ] [ list string 1 1 64 ] [ list string 1 1 65 ] ] u:pieces:1 u:chr u:sampleName:1
        turbine::c::log "allocated u:pieces:1=<${u:pieces:1}> u:chr=<${u:chr}> u:sampleName:1=<${u:sampleName:1}>"
        turbine::read_refcount_incr ${u:chrSet} 2
        set a:t:1:2 [ adlb::subscript_container ${u:chrSet} 0 ]
        turbine::rule [ list ${a:t:1:2} ] "VCSplitMain-call-basename1 {${a:t:1:2}} ${u:chr} ${u:pieces:1} ${u:sampleName:1}"
        turbine::rule [ list ${u:chrSet} ] "VCSplitMain-foreach-wait2 ${t:10} ${t:16:2} ${v:chrIndex} ${u:chr} ${u:chrSet} {${u:failureLog}} ${u:sampleName:1} ${u:splitVCFs} ${u:variables}"
    }
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${u:variables} 1
    turbine::read_refcount_decr ${u:splitBams} 1
    turbine::read_refcount_decr ${t:10} 1
    turbine::read_refcount_decr ${u:splitVCFs} 1
    turbine::read_refcount_decr ${t:16:2} 1
    adlb::write_refcount_decr ${u:splitVCFs} 1
}


proc VCSplitMain-call-basename1 { a:t:1:2 u:chr u:pieces:1 u:sampleName:1 } {
    set a:1:1 [ adlb::acquire_ref ${a:t:1:2} file_ref 1 1 ]
    turbine::rule [ list [ turbine::get_file_td ${a:1:1} ] ] "basename-argwait-1 {${a:1:1}} ${u:chr} ${u:pieces:1} ${u:sampleName:1}"
}


proc basename-argwait-1 { a:1:1 u:chr u:pieces:1 u:sampleName:1 } {
    # Var: $file v:p:3 RENAMED [$file:__v:p]
    # Var: $string v:f:4 RENAMED [$string:__v:f]
    # Var: $int v:n:2 RENAMED [$int:__v:n]
    # Var: $int v:t:3:2 VALUE_OF [int:__t:3:2]
    # Var: $string v:trimmed VALUE_OF [string:trimmed]
    # Var: $string$[int] v:pieces:1 VALUE_OF [string[int]:pieces:1]
    # Var: $int v:t:8:2 VALUE_OF [int:__t:8:2]
    # Var: $int v:t:7:2 VALUE_OF [int:__t:7:2]
    # Var: $string v:alias:chr VALUE_OF [string:__alias:chr]
    # Var: $int v:n:4 RENAMED [$int:__v:n]
    # Var: $int v:t:12:2 VALUE_OF [int:__t:12:2]
    # Var: $int v:t:11:2 VALUE_OF [int:__t:11:2]
    # Var: $string v:sampleName:1 VALUE_OF [string:sampleName:1]
    set v:p:3 [ turbine::retrieve_file ${a:1:1} CACHED 1 ]
    set v:f:4 [ file tail ${v:p:3} ]
    set v:n:2 [ string length ${v:f:4} ]
    set v:t:3:2 [ expr { ${v:n:2} - 4 } ]
    set v:trimmed [ turbine::substring_impl ${v:f:4} 0 ${v:t:3:2} ]
    set v:pieces:1 [ turbine::split_impl ${v:trimmed} "." ]
    turbine::build_rec ${u:pieces:1} ${v:pieces:1} [ list container integer string ] 0 1
    set v:t:8:2 [ dict size ${v:pieces:1} ]
    set v:t:7:2 [ expr { ${v:t:8:2} - 1 } ]
    set a:chr [ adlb::subscript_container ${u:pieces:1} ${v:t:7:2} ]
    set v:alias:chr [ turbine::retrieve_string ${a:chr} CACHED 1 ]
    turbine::store_string ${u:chr} ${v:alias:chr}
    set v:n:4 [ string length ${v:alias:chr} ]
    set v:t:12:2 [ expr { ${v:n:2} - ${v:n:4} } ]
    set v:t:11:2 [ expr { ${v:t:12:2} - 1 } ]
    set v:sampleName:1 [ turbine::substring_impl ${v:f:4} 0 ${v:t:11:2} ]
    turbine::store_string ${u:sampleName:1} ${v:sampleName:1}
    adlb::write_refcount_decr ${u:pieces:1} 1
}


proc VCSplitMain-foreach-wait2 { t:10 t:16:2 v:chrIndex u:chr u:chrSet u:failureLog u:sampleName:1 u:splitVCFs u:variables } {
    set tcltmp:container_sz [ adlb::enumerate ${u:chrSet} count all 0 ]
    set tcltmp:iters ${tcltmp:container_sz}
    turbine::file_read_refcount_incr ${u:failureLog} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${u:sampleName:1} [ expr { 2 * ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${u:splitVCFs} [ expr { 2 * ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${u:chrSet} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:10} [ expr { 2 * ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:16:2} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${u:variables} [ expr { 2 * ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${u:chr} [ expr { 2 * ${tcltmp:iters} - 1 } ]
    adlb::write_refcount_incr ${u:splitVCFs} [ expr { ${tcltmp:iters} - 1 } ]
    VCSplitMain-foreach2:outer ${t:10} ${t:16:2} ${v:chrIndex} ${u:chr} ${u:failureLog} ${u:sampleName:1} ${u:splitVCFs} ${u:variables} ${u:chrSet} 0 [ expr { ${tcltmp:container_sz} - 1 } ] 1
}


proc VCSplitMain-foreach2:outer { t:10 t:16:2 v:chrIndex u:chr u:failureLog u:sampleName:1 u:splitVCFs u:variables u:chrSet tcltmp:lo tcltmp:hi tcltmp:inc } {
    if { [ expr { ${tcltmp:lo} > ${tcltmp:hi} } ] } {
        return
    }
    while {1} {
        set tcltmp:itersleft [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
        if { [ expr { ${tcltmp:itersleft} <= 64 } ] } {
            VCSplitMain-foreach2:inner ${t:10} ${t:16:2} ${v:chrIndex} ${u:chr} ${u:failureLog} ${u:sampleName:1} ${u:splitVCFs} ${u:variables} ${u:chrSet} ${tcltmp:lo} ${tcltmp:hi} ${tcltmp:inc}
            return
        } else {
            set tcltmp:skip [ expr { ${tcltmp:inc} * max(64,((${tcltmp:itersleft} - 1) / 16) + 1) } ]
            for { set tcltmp:splitstart [ expr { ${tcltmp:lo} + ${tcltmp:skip} } ] } { ${tcltmp:splitstart} <= ${tcltmp:hi} } { incr tcltmp:splitstart ${tcltmp:skip} } {
                set tcltmp:splitend [ expr { min(${tcltmp:hi},${tcltmp:splitstart} + ${tcltmp:skip} - 1) } ]
                set tcltmp:prio [ turbine::get_priority ]
                turbine::set_priority ${tcltmp:prio}
                adlb::spawn 0 "VCSplitMain-foreach2:outer ${t:10} ${t:16:2} ${v:chrIndex} ${u:chr} {${u:failureLog}} ${u:sampleName:1} ${u:splitVCFs} ${u:variables} ${u:chrSet} ${tcltmp:splitstart} ${tcltmp:splitend} ${tcltmp:inc}"
                turbine::reset_priority
            }
            set tcltmp:hi [ expr { ${tcltmp:lo} + ${tcltmp:skip} - 1 } ]
        }
    }
}


proc VCSplitMain-foreach2:inner { t:10 t:16:2 v:chrIndex u:chr u:failureLog u:sampleName:1 u:splitVCFs u:variables u:chrSet tcltmp:lo tcltmp:hi tcltmp:inc } {
    set tcltmp:splitlen [ expr { ${tcltmp:hi} - ${tcltmp:lo} + 1 } ]
    set tcltmp:contents [ adlb::enumerate ${u:chrSet} dict ${tcltmp:splitlen} ${tcltmp:lo} ]
    dict for {v:sampleIndex:1 u:inputBam} ${tcltmp:contents} {
        turbine::file_read_refcount_incr ${u:inputBam} 1
        turbine::rule [ list ${t:16:2} ] "VCSplitMain-if1 ${t:10} ${t:16:2} ${v:chrIndex} ${v:sampleIndex:1} ${u:chr} {${u:failureLog}} {${u:inputBam}} ${u:sampleName:1} ${u:splitVCFs} ${u:variables}"
    }
    set tcltmp:iters [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
    turbine::read_refcount_decr ${u:chrSet} [ expr { ${tcltmp:iters} } ]
}


proc VCSplitMain-if1 { t:10 t:16:2 v:chrIndex v:sampleIndex:1 u:chr u:failureLog u:inputBam u:sampleName:1 u:splitVCFs u:variables } {
    # Var: $boolean v:__t:16 RENAMED [$boolean:__v:__t:16] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():337:27
    set v:__t:16 [ turbine::retrieve_integer ${t:16:2} CACHED 1 ]
    if { ${v:__t:16} } {
        # Var: string t:21:2 RENAMED [string:__t:21] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():343:29
        # Var: file u:recalfiles RENAMED [file:recalfiles] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():344:8
        # Var: string[int] u:recalparmsindels RENAMED [string[int]:recalparmsindels] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():350:4
        # Var: string[int] u:realparms RENAMED [string[int]:realparms] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():353:4
        # Var: string t:26:2 RENAMED [string:__t:26] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():346:28
        # Var: string t:27:2 RENAMED [string:__t:27] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():346:35
        # Var: string t:30:2 RENAMED [string:__t:30] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():346:62
        # Var: string t:33:2 RENAMED [string:__t:33] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():347:7
        # Var: file u:recalibratedbam RENAMED [file:recalibratedbam] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():362:63
        # Var: file u:gvcfVariants RENAMED [file:gvcfVariants] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():372:60
        # Var: int u:threads:2 RENAMED [int:threads] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callChrVariants():208:1
        # Var: string t:2:7 RENAMED [string:__t:2] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callChrVariants():208:26
        # Var: string t:5:7 RENAMED [string:__t:5] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callChrVariants():208:58
        # Var: int u:ploidy RENAMED [int:ploidy] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callChrVariants():210:1
        # Var: file u:haploLog RENAMED [file:haploLog] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callChrVariants():217:54
        # Var: string t:19:6 RENAMED [string:__t:19] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callChrVariants():219:36
        # Var: string t:21:6 RENAMED [string:__t:21] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callChrVariants():219:53
        # Var: string t:23:6 RENAMED [string:__t:23] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callChrVariants():220:8
        # Var: string t:27:6 RENAMED [string:__t:27] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callChrVariants():220:42
        # Var: string t:29:6 RENAMED [string:__t:29] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callChrVariants():222:8
        # Var: string t:33:6 RENAMED [string:__t:33] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callChrVariants():222:42
        lassign [ adlb::multicreate [ list string 1 1 66 ] [ list container integer string 1 1 68 ] [ list container integer string 1 1 69 ] [ list string 1 1 70 ] [ list string 1 1 71 ] [ list string 1 1 72 ] [ list string 1 1 73 ] [ list integer 1 1 76 ] [ list string 1 1 77 ] [ list string 1 1 78 ] [ list integer 1 1 79 ] [ list string 1 1 81 ] [ list string 1 1 82 ] [ list string 1 1 83 ] [ list string 1 1 84 ] [ list string 1 1 85 ] [ list string 1 1 86 ] ] t:21:2 u:recalparmsindels u:realparms t:26:2 t:27:2 t:30:2 t:33:2 u:threads:2 t:2:7 t:5:7 u:ploidy t:19:6 t:21:6 t:23:6 t:27:6 t:29:6 t:33:6
        turbine::c::log "allocated t:21:2=<${t:21:2}> u:recalparmsindels=<${u:recalparmsindels}> u:realparms=<${u:realparms}> t:26:2=<${t:26:2}> t:27:2=<${t:27:2}>"
        turbine::c::log "allocated t:30:2=<${t:30:2}> t:33:2=<${t:33:2}> u:threads:2=<${u:threads:2}> t:2:7=<${t:2:7}> t:5:7=<${t:5:7}>"
        turbine::c::log "allocated u:ploidy=<${u:ploidy}> t:19:6=<${t:19:6}> t:21:6=<${t:21:6}> t:23:6=<${t:23:6}> t:27:6=<${t:27:6}>"
        turbine::c::log "allocated t:29:6=<${t:29:6}> t:33:6=<${t:33:6}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 67 ] [ list file 2 1 74 ] [ list file 1 1 75 ] [ list file 0 1 80 ] ] [ list 1 1 1 1 ] ] u:recalfiles u:recalibratedbam u:gvcfVariants u:haploLog
        turbine::read_refcount_incr ${u:chr} 1
        turbine::file_read_refcount_incr ${u:inputBam} 1
        turbine::read_refcount_incr ${u:sampleName:1} 1
        turbine::read_refcount_incr ${u:variables} 9
        turbine::container_reference ${u:variables} "TMPDIR" ${t:21:2} string
        turbine::container_reference ${u:variables} "REFGENOMEDIR" ${t:27:2} string
        turbine::container_reference ${u:variables} "INDELDIR" ${t:30:2} string
        f:find_files ${u:recalfiles} ${t:26:2} ${t:33:2} -100 "HARD" "RANK"
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:recalibrationWrapper {${u:recalibratedbam}} ${u:sampleName:1} ${u:chr} ${u:variables} {${u:inputBam}} ${u:realparms} ${u:recalparmsindels}"
        turbine::reset_priority
        turbine::container_reference ${u:variables} "PBSCORES" ${t:2:7} string
        turbine::container_reference ${u:variables} "PROCPERNODE" ${t:5:7} string
        turbine::container_reference ${u:variables} "JAVADIR" ${t:19:6} string
        turbine::container_reference ${u:variables} "GATKDIR" ${t:21:6} string
        turbine::container_reference ${u:variables} "REFGENOME" ${t:27:6} string
        turbine::container_reference ${u:variables} "DBSNP" ${t:33:6} string
        turbine::rule [ list ${t:2:7} ${t:5:7} ] "__entry-async_op-parse_int-1 ${t:2:7} ${t:5:7} ${u:threads:2}"
        turbine::rule [ list ${t:27:2} ] "__entry-optmerged-9 ${t:23:6} ${t:26:2} ${t:27:2} ${t:27:6} ${t:29:6} ${t:30:2} ${t:33:6}"
        turbine::rule [ list ${u:chr} ] "__entry-optmerged-10 ${t:10} ${t:19:6} ${t:21:2} ${t:21:6} ${t:23:6} ${t:29:6} ${t:33:2} ${v:chrIndex} ${v:sampleIndex:1} ${u:chr} {${u:gvcfVariants}} {${u:haploLog}} ${u:ploidy} ${u:realparms} {${u:recalfiles}} {${u:recalibratedbam}} ${u:recalparmsindels} ${u:sampleName:1} ${u:splitVCFs} ${u:threads:2}"
        turbine::read_refcount_decr ${t:26:2} 1
        turbine::read_refcount_decr ${t:33:2} 1
    } else {
        turbine::file_read_refcount_incr ${u:failureLog} 1
        turbine::rule [ list ${t:10} ${u:chr} ${u:sampleName:1} ] "__entry-async_op-strcat-8 ${t:10} ${v:chrIndex} ${v:sampleIndex:1} ${u:chr} {${u:failureLog}} ${u:sampleName:1} ${u:splitVCFs} ${u:variables}"
    }
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${u:sampleName:1} 1
    turbine::file_read_refcount_decr ${u:inputBam} 1
    turbine::read_refcount_decr ${u:variables} 1
    turbine::read_refcount_decr ${u:chr} 1
    turbine::read_refcount_decr ${t:10} 1
    turbine::read_refcount_decr ${u:splitVCFs} 1
}


proc __entry-async_op-parse_int-1 { t:2:7 t:5:7 u:threads:2 } {
    # Var: $string v:t:5:7 VALUE_OF [string:__t:5:7]
    # Var: $int v:t:4:7 VALUE_OF [int:__t:4:7]
    # Var: $string v:t:2:7 VALUE_OF [string:__t:2:7]
    # Var: $int v:t:1:10 VALUE_OF [int:__t:1:10]
    # Var: $int v:threads:2 VALUE_OF [int:threads:2]
    set v:t:5:7 [ turbine::retrieve_string ${t:5:7} CACHED 1 ]
    set v:t:4:7 [ turbine::parse_int_impl ${v:t:5:7} 10 ]
    set v:t:2:7 [ turbine::retrieve_string ${t:2:7} CACHED 1 ]
    set v:t:1:10 [ turbine::parse_int_impl ${v:t:2:7} 10 ]
    set v:threads:2 [ turbine::divide_integer_impl ${v:t:1:10} ${v:t:4:7} ]
    turbine::store_integer ${u:threads:2} ${v:threads:2}
}


proc __entry-optmerged-9 { t:23:6 t:26:2 t:27:2 t:27:6 t:29:6 t:30:2 t:33:6 } {
    # Var: $string v:t:27:2 VALUE_OF [string:__t:27:2]
    set v:t:27:2 [ turbine::retrieve_string ${t:27:2} CACHED 1 ]
    turbine::rule [ list ${t:30:2} ] [ list __entry-async_op-strcat-4 ${t:26:2} ${t:30:2} ${v:t:27:2} ]
    turbine::rule [ list ${t:27:6} ] [ list __entry-async_op-strcat-5 ${t:23:6} ${t:27:6} ${v:t:27:2} ]
    turbine::rule [ list ${t:33:6} ] [ list __entry-async_op-strcat-6 ${t:29:6} ${t:33:6} ${v:t:27:2} ]
}


proc __entry-async_op-strcat-4 { t:26:2 t:30:2 v:t:27:2 } {
    # Var: $string v:t:30:2 VALUE_OF [string:__t:30:2]
    # Var: $string v:t:26:2 VALUE_OF [string:__t:26:2]
    set v:t:30:2 [ turbine::retrieve_string ${t:30:2} CACHED 1 ]
    set v:t:26:2 "${v:t:27:2}/${v:t:30:2}/"
    turbine::store_string ${t:26:2} ${v:t:26:2}
}


proc __entry-async_op-strcat-5 { t:23:6 t:27:6 v:t:27:2 } {
    # Var: $string v:t:27:6 VALUE_OF [string:__t:27:6]
    # Var: $string v:t:23:6 VALUE_OF [string:__t:23:6]
    set v:t:27:6 [ turbine::retrieve_string ${t:27:6} CACHED 1 ]
    set v:t:23:6 "${v:t:27:2}/${v:t:27:6}"
    turbine::store_string ${t:23:6} ${v:t:23:6}
}


proc __entry-async_op-strcat-6 { t:29:6 t:33:6 v:t:27:2 } {
    # Var: $string v:t:33:6 VALUE_OF [string:__t:33:6]
    # Var: $string v:t:29:6 VALUE_OF [string:__t:29:6]
    set v:t:33:6 [ turbine::retrieve_string ${t:33:6} CACHED 1 ]
    set v:t:29:6 "${v:t:27:2}/${v:t:33:6}"
    turbine::store_string ${t:29:6} ${v:t:29:6}
}


proc __entry-optmerged-10 { t:10 t:19:6 t:21:2 t:21:6 t:23:6 t:29:6 t:33:2 v:chrIndex v:sampleIndex:1 u:chr u:gvcfVariants u:haploLog u:ploidy u:realparms u:recalfiles u:recalibratedbam u:recalparmsindels u:sampleName:1 u:splitVCFs u:threads:2 } {
    # Var: $string v:chr:3 VALUE_OF [string:chr]
    # Var: $string v:t:33:2 VALUE_OF [string:__t:33:2]
    # Var: $boolean v:t:8:6 VALUE_OF [boolean:__t:8:6]
    # Var: $boolean v:t:10:6 VALUE_OF [boolean:__t:10:6]
    # Var: $boolean v:t:7:7 VALUE_OF [boolean:__t:7:7]
    set v:chr:3 [ turbine::retrieve_string ${u:chr} CACHED 1 ]
    set v:t:33:2 "*${v:chr:3}.vcf"
    turbine::store_string ${t:33:2} ${v:t:33:2}
    set v:t:8:6 [ string equal ${v:chr:3} "M" ]
    set v:t:10:6 [ string equal ${v:chr:3} "chrM" ]
    set v:t:7:7 [ expr { ${v:t:8:6} || ${v:t:10:6} } ]
    if { ${v:t:7:7} } {
        turbine::store_integer ${u:ploidy} 1
    } else {
        turbine::store_integer ${u:ploidy} 2
    }
    turbine::rule [ list ${u:sampleName:1} ] [ list __entry-optmerged-11 ${t:10} ${t:19:6} ${t:21:2} ${t:21:6} ${t:23:6} ${t:29:6} ${v:chr:3} ${v:chrIndex} ${v:sampleIndex:1} ${u:gvcfVariants} ${u:haploLog} ${u:ploidy} ${u:realparms} ${u:recalfiles} ${u:recalibratedbam} ${u:recalparmsindels} ${u:sampleName:1} ${u:splitVCFs} ${u:threads:2} ]
}


proc __entry-optmerged-11 { t:10 t:19:6 t:21:2 t:21:6 t:23:6 t:29:6 v:chr:3 v:chrIndex v:sampleIndex:1 u:gvcfVariants u:haploLog u:ploidy u:realparms u:recalfiles u:recalibratedbam u:recalparmsindels u:sampleName:1 u:splitVCFs u:threads:2 } {
    # Var: $string v:sampleName:1:1 VALUE_OF [string:sampleName:1]
    set v:sampleName:1:1 [ turbine::retrieve_string ${u:sampleName:1} CACHED 1 ]
    turbine::rule [ list ${t:21:2} ] [ list __entry-async_op-strcat-7 ${t:21:2} ${v:chr:3} ${v:sampleName:1:1} ${u:realparms} ${u:recalfiles} ${u:recalparmsindels} ]
    turbine::rule [ list ${t:10} ] [ list __entry-optmerged-12 ${t:10} ${t:19:6} ${t:21:6} ${t:23:6} ${t:29:6} ${v:chr:3} ${v:chrIndex} ${v:sampleIndex:1} ${v:sampleName:1:1} ${u:gvcfVariants} ${u:haploLog} ${u:ploidy} ${u:recalibratedbam} ${u:splitVCFs} ${u:threads:2} ]
}


proc __entry-async_op-strcat-7 { t:21:2 v:chr:3 v:sampleName:1:1 u:realparms u:recalfiles u:recalparmsindels } {
    # Var: $string v:t:21:2 VALUE_OF [string:__t:21:2]
    # Var: $string v:t:20:2 VALUE_OF [string:__t:20:2]
    set v:t:21:2 [ turbine::retrieve_string ${t:21:2} CACHED 1 ]
    set v:t:20:2 "${v:t:21:2}/${v:sampleName:1:1}.${v:chr:3}.recal_foundfiles.txt"
    turbine::set_filename_val ${u:recalfiles} ${v:t:20:2}
    turbine::rule [ list [ turbine::get_file_td ${u:recalfiles} ] ] [ list VCSplitMain-chain1 ${v:t:20:2} ${u:realparms} ${u:recalfiles} ${u:recalparmsindels} ]
}


proc VCSplitMain-chain1 { v:t:20:2 u:realparms u:recalfiles u:recalparmsindels } {
    # Var: string c:s_sknownSite OPT_TEMPORARY
    global c:s_sknownSite
    # Var: file t:39:2 RENAMED [file:__t:39] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():351:27
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 87 ] ] [ list 0 ] ] t:39:2
    f:sed ${t:39:2} ${u:recalfiles} ${c:s_sknownSite} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${t:39:2} ] ] [ list __entry-call_foreign-read ${t:39:2} ${v:t:20:2} ${u:realparms} ${u:recalfiles} ${u:recalparmsindels} ]
}


proc __entry-call_foreign-read { t:39:2 v:t:20:2 u:realparms u:recalfiles u:recalparmsindels } {
    # Var: $file v:t:39:2 VALUE_OF [file:__t:39:2]
    # Var: $string v:t:38:2 VALUE_OF [string:__t:38:2]
    # Var: $int v:n:1 RENAMED [$int:__v:n]
    # Var: $string v:t:37:2 VALUE_OF [string:__t:37:2]
    # Var: $string v:o:2 RENAMED [$string:__v:o]
    # Var: $string$[int] v:recalparmsindels VALUE_OF [string[int]:recalparmsindels]
    set v:t:39:2 [ turbine::retrieve_file ${t:39:2} CACHED 1 ]
    set v:t:38:2 [ turbine::file_read_local ${v:t:39:2} ]
    set v:n:1 [ string length ${v:t:38:2} ]
    set v:t:37:2 [ turbine::replace_all_impl ${v:t:38:2} "\n" " " 0 ${v:n:1} ]
    set v:o:2 [ string trim ${v:t:37:2} ]
    set v:recalparmsindels [ turbine::split_impl ${v:o:2} " " ]
    turbine::build_rec ${u:recalparmsindels} ${v:recalparmsindels} [ list container integer string ] 0 1
    turbine::rule [ list ] [ list VCSplitMain-chain2 ${v:t:20:2} ${u:realparms} ${u:recalfiles} ]
}


proc VCSplitMain-chain2 { v:t:20:2 u:realparms u:recalfiles } {
    # Var: string c:s_sknown_g OPT_TEMPORARY
    global c:s_sknown_g
    # Var: file t:48:1 RENAMED [file:__t:48] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():354:27
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 88 ] ] [ list 0 ] ] t:48:1
    f:sed ${t:48:1} ${u:recalfiles} ${c:s_sknown_g} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${t:48:1} ] ] [ list __entry-call_foreign-read-1 ${t:48:1} ${v:t:20:2} ${u:realparms} ${u:recalfiles} ]
}


proc __entry-call_foreign-read-1 { t:48:1 v:t:20:2 u:realparms u:recalfiles } {
    # Var: $file v:t:48:1 VALUE_OF [file:__t:48:1]
    # Var: $string v:t:47:1 VALUE_OF [string:__t:47:1]
    # Var: $int v:n RENAMED [$int:__v:n]
    # Var: $string v:t:46:1 VALUE_OF [string:__t:46:1]
    # Var: $string v:o:1 RENAMED [$string:__v:o]
    # Var: $string$[int] v:realparms VALUE_OF [string[int]:realparms]
    set v:t:48:1 [ turbine::retrieve_file ${t:48:1} CACHED 1 ]
    set v:t:47:1 [ turbine::file_read_local ${v:t:48:1} ]
    set v:n [ string length ${v:t:47:1} ]
    set v:t:46:1 [ turbine::replace_all_impl ${v:t:47:1} "\n" " " 0 ${v:n} ]
    set v:o:1 [ string trim ${v:t:46:1} ]
    set v:realparms [ turbine::split_impl ${v:o:1} " " ]
    turbine::build_rec ${u:realparms} ${v:realparms} [ list container integer string ] 0 1
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list VCSplitMain-chain3 ${v:t:20:2} ${u:recalfiles} ]
    turbine::reset_priority
}


proc VCSplitMain-chain3 { v:t:20:2 u:recalfiles } {
    # Var: $file v:f:11 RENAMED [$file:__v:f] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/generalfunctions/general.swift:rm():55:6
    # Var: $void v:v:2 RENAMED [$void:__v:v] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/generalfunctions/general.swift:rm():55:6
    set v:f:11 [ turbine::retrieve_file ${u:recalfiles} CACHED 1 ]
    turbine::c::log [ list exec: "rm" ${v:t:20:2} [ dict create ] ]
    turbine::exec_external "rm" [ dict create ] ${v:t:20:2}
}


proc __entry-optmerged-12 { t:10 t:19:6 t:21:6 t:23:6 t:29:6 v:chr:3 v:chrIndex v:sampleIndex:1 v:sampleName:1:1 u:gvcfVariants u:haploLog u:ploidy u:recalibratedbam u:splitVCFs u:threads:2 } {
    # Var: $string v:t:10:7 VALUE_OF [string:__t:10]
    # Var: $string v:LogDir:1 VALUE_OF [string:LogDir:1]
    # Var: $string v:t:16:6 VALUE_OF [string:__t:16:6]
    # Var: $string v:t:55:1:1 VALUE_OF [string:__t:55:1]
    # Var: $string v:t:62:1:1 VALUE_OF [string:__t:62:1]
    set v:t:10:7 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:LogDir:1 "${v:t:10:7}/${v:sampleName:1:1}/logs/"
    set v:t:16:6 "${v:LogDir:1}${v:sampleName:1:1}.${v:chr:3}_HaplotypeCaller.log"
    turbine::set_filename_val ${u:haploLog} ${v:t:16:6}
    set v:t:55:1:1 "${v:t:10:7}/${v:sampleName:1:1}/realign/${v:sampleName:1:1}.wDedups.sorted.recalibrated.${v:chr:3}.bam"
    set v:t:62:1:1 "${v:t:10:7}/${v:sampleName:1:1}/variant/${v:sampleName:1:1}.wDedups.sorted.recalibrated.${v:chr:3}.g.vcf"
    turbine::set_filename_val ${u:recalibratedbam} ${v:t:55:1:1}
    turbine::set_filename_val ${u:gvcfVariants} ${v:t:62:1:1}
    turbine::rule [ list ${t:19:6} ${t:21:6} ${t:23:6} ${t:29:6} [ turbine::get_file_td ${u:recalibratedbam} ] ${u:threads:2} ] [ list HaplotypeCaller-app-leaf1 ${t:19:6} ${t:21:6} ${t:23:6} ${t:29:6} ${v:chr:3} ${v:chrIndex} ${v:sampleIndex:1} ${v:t:16:6} ${v:t:55:1:1} ${v:t:62:1:1} ${u:gvcfVariants} ${u:haploLog} ${u:ploidy} ${u:recalibratedbam} ${u:splitVCFs} ${u:threads:2} ]
}


proc HaplotypeCaller-app-leaf1 { t:19:6 t:21:6 t:23:6 t:29:6 v:chr:3 v:chrIndex v:sampleIndex:1 v:t:16:6 v:t:55:1:1 v:t:62:1:1 u:gvcfVariants u:haploLog u:ploidy u:recalibratedbam u:splitVCFs u:threads:2 } {
    # Var: $string v:javadir:1 RENAMED [$string:__v:javadir] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:HaplotypeCaller():92:9
    # Var: $string v:gatkdir:1 RENAMED [$string:__v:gatkdir] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:HaplotypeCaller():92:9
    # Var: $string v:reference:1 RENAMED [$string:__v:reference] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:HaplotypeCaller():92:9
    # Var: $string v:dbsnp:1 RENAMED [$string:__v:dbsnp] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:HaplotypeCaller():92:9
    # Var: $int v:ploidy RENAMED [$int:__v:ploidy] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:HaplotypeCaller():92:9
    # Var: $int v:thr RENAMED [$int:__v:thr] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:HaplotypeCaller():92:9
    # Var: $file v:inputFile RENAMED [$file:__v:inputFile] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:HaplotypeCaller():92:9
    # Var: $file v:outputfile:1 RENAMED [$file:__v:outputfile] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:HaplotypeCaller():92:9
    # Var: $file v:outLog:1 RENAMED [$file:__v:outLog] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:HaplotypeCaller():92:9
    set v:javadir:1 [ turbine::retrieve_string ${t:19:6} CACHED 1 ]
    set v:gatkdir:1 [ turbine::retrieve_string ${t:21:6} CACHED 1 ]
    set v:reference:1 [ turbine::retrieve_string ${t:23:6} CACHED 1 ]
    set v:dbsnp:1 [ turbine::retrieve_string ${t:29:6} CACHED 1 ]
    set v:ploidy [ turbine::retrieve_integer ${u:ploidy} CACHED 1 ]
    set v:thr [ turbine::retrieve_integer ${u:threads:2} CACHED 1 ]
    set v:inputFile [ turbine::retrieve_file ${u:recalibratedbam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:1 [ turbine::create_local_file_ref ${v:t:62:1:1} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:outLog:1 [ turbine::create_local_file_ref ${v:t:16:6} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx8g" "-jar" ${v:gatkdir:1} "-T" "HaplotypeCaller" "-R" ${v:reference:1} "-I" ${v:t:55:1:1} "--dbsnp" ${v:dbsnp:1} "-o" ${v:t:62:1:1} "--emitRefConfidence" "GVCF" "-gt_mode" "DISCOVERY" "-A" "Coverage" "-A" "FisherStrand" "-A" "StrandOddsRatio" "-A" "HaplotypeScore" "-A" "MappingQualityRankSumTest" "-A" "QualByDepth" "-A" "RMSMappingQuality" "-A" "ReadPosRankSumTest" "-stand_call_conf" 30 "-stand_emit_conf" 30 "--sample_ploidy" ${v:ploidy} "-nt" 1 "-nct" ${v:thr} "-L" ${v:chr:3} [ dict create "stderr" ${v:t:16:6} ] ]
    turbine::exec_external ${v:javadir:1} [ dict create "stderr" ${v:t:16:6} ] "-Xmx8g" "-jar" ${v:gatkdir:1} "-T" "HaplotypeCaller" "-R" ${v:reference:1} "-I" ${v:t:55:1:1} "--dbsnp" ${v:dbsnp:1} "-o" ${v:t:62:1:1} "--emitRefConfidence" "GVCF" "-gt_mode" "DISCOVERY" "-A" "Coverage" "-A" "FisherStrand" "-A" "StrandOddsRatio" "-A" "HaplotypeScore" "-A" "MappingQualityRankSumTest" "-A" "QualByDepth" "-A" "RMSMappingQuality" "-A" "ReadPosRankSumTest" "-stand_call_conf" 30 "-stand_emit_conf" 30 "--sample_ploidy" ${v:ploidy} "-nt" 1 "-nct" ${v:thr} "-L" ${v:chr:3}
    turbine::store_file ${u:gvcfVariants} v:outputfile:1 0
    turbine::store_file ${u:haploLog} v:outLog:1 0
    set v:t:69:1 [ turbine::create_nested ${u:splitVCFs} ${v:sampleIndex:1} container integer file_ref 0 1 1 1 ]
    turbine::container_insert ${v:t:69:1} ${v:chrIndex} ${u:gvcfVariants} file_ref 1
    turbine::decr_local_file_refcount v:outputfile:1
    turbine::decr_local_file_refcount v:outLog:1
}


proc __entry-async_op-strcat-8 { t:10 v:chrIndex v:sampleIndex:1 u:chr u:failureLog u:sampleName:1 u:splitVCFs u:variables } {
    # Var: $string v:t:10:8 VALUE_OF [string:__t:10]
    # Var: $string v:sampleName:1:8 VALUE_OF [string:sampleName:1]
    # Var: $string v:chr:9 VALUE_OF [string:chr]
    # Var: $string v:vcfFileLocation VALUE_OF [string:vcfFileLocation]
    # Var: $boolean v:o:3 RENAMED [$boolean:__v:o]
    set v:t:10:8 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:sampleName:1:8 [ turbine::retrieve_string ${u:sampleName:1} CACHED 1 ]
    set v:chr:9 [ turbine::retrieve_string ${u:chr} CACHED 1 ]
    set v:vcfFileLocation "${v:t:10:8}/${v:sampleName:1:8}/variant/${v:sampleName:1:8}.wDedups.sorted.recalibrated.${v:chr:9}.g.vcf"
    set v:o:3 [ file exists ${v:vcfFileLocation} ]
    if { ${v:o:3} } {
        # Var: file t:78:1 RENAMED [file:__t:78] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():389:14
        # Var: $file v:t:78:1 VALUE_OF [file:__t:78:1]
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 89 ] ] [ list 0 ] ] t:78:1
        set v:t:77:1 [ turbine::create_nested ${u:splitVCFs} ${v:sampleIndex:1} container integer file_ref 0 1 0 0 ]
        set tcltmp:init_rc 1
        set v:t:78:1 [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
        turbine::input_file_local v:t:78:1 ${v:vcfFileLocation}
        turbine::store_file ${t:78:1} v:t:78:1 1
        turbine::container_insert ${v:t:77:1} ${v:chrIndex} ${t:78:1} file_ref 1
        turbine::decr_local_file_refcount v:t:78:1
    } else {
        # Var: string u:m RENAMED [string:m] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():392:5
        # Var: boolean t:82:1 RENAMED [boolean:__t:82] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():395:5
        # Var: $string v:m VALUE_OF [string:m]
        lassign [ adlb::multicreate [ list string 2 1 90 ] [ list integer 1 1 91 ] ] u:m t:82:1
        turbine::c::log "allocated u:m=<${u:m}> t:82:1=<${t:82:1}>"
        turbine::read_refcount_incr ${u:variables} 1
        turbine::file_read_refcount_incr ${u:failureLog} 1
        set v:m "ERROR: ${v:vcfFileLocation} not found. Did you set VC_STAGE to 'N' by accident?\n"
        turbine::store_string ${u:m} ${v:m}
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:append ${t:82:1} {${u:failureLog}} ${u:m}"
        turbine::reset_priority
        turbine::rule [ list ${t:82:1} ] "VCSplitMain-chain5 ${t:82:1} ${u:m} ${u:variables}"
    }
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${u:variables} 1
    turbine::read_refcount_decr ${u:splitVCFs} 1
    adlb::write_refcount_decr ${u:splitVCFs} 1
}


proc VCSplitMain-chain5 { t:82:1 u:m u:variables } {
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:exitIfFlagGiven ${u:variables} ${u:m}"
    turbine::reset_priority
    turbine::read_refcount_decr ${t:82:1} 1
}


proc VCNoSplitMain-foreach-wait1 { u:VCF_list:1 t:10 t:5:4 u:alignDedupBams u:failureLog u:variables } {
    set tcltmp:container_sz [ adlb::enumerate ${u:alignDedupBams} count all 0 ]
    set tcltmp:iters ${tcltmp:container_sz}
    turbine::file_read_refcount_incr ${u:failureLog} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:5:4} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:10} [ expr { 2 * ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${u:variables} [ expr { 2 * ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${u:alignDedupBams} [ expr { ${tcltmp:iters} - 1 } ]
    adlb::write_refcount_incr ${u:VCF_list:1} [ expr { ${tcltmp:iters} - 1 } ]
    VCNoSplitMain-foreach1:outer ${u:VCF_list:1} ${t:10} ${t:5:4} ${u:failureLog} ${u:variables} ${u:alignDedupBams} 0 [ expr { ${tcltmp:container_sz} - 1 } ] 1
}


proc VCNoSplitMain-foreach1:outer { u:VCF_list:1 t:10 t:5:4 u:failureLog u:variables u:alignDedupBams tcltmp:lo tcltmp:hi tcltmp:inc } {
    if { [ expr { ${tcltmp:lo} > ${tcltmp:hi} } ] } {
        return
    }
    while {1} {
        set tcltmp:itersleft [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
        if { [ expr { ${tcltmp:itersleft} <= 64 } ] } {
            VCNoSplitMain-foreach1:inner ${u:VCF_list:1} ${t:10} ${t:5:4} ${u:failureLog} ${u:variables} ${u:alignDedupBams} ${tcltmp:lo} ${tcltmp:hi} ${tcltmp:inc}
            return
        } else {
            set tcltmp:skip [ expr { ${tcltmp:inc} * max(64,((${tcltmp:itersleft} - 1) / 16) + 1) } ]
            for { set tcltmp:splitstart [ expr { ${tcltmp:lo} + ${tcltmp:skip} } ] } { ${tcltmp:splitstart} <= ${tcltmp:hi} } { incr tcltmp:splitstart ${tcltmp:skip} } {
                set tcltmp:splitend [ expr { min(${tcltmp:hi},${tcltmp:splitstart} + ${tcltmp:skip} - 1) } ]
                set tcltmp:prio [ turbine::get_priority ]
                turbine::set_priority ${tcltmp:prio}
                adlb::spawn 0 "VCNoSplitMain-foreach1:outer ${u:VCF_list:1} ${t:10} ${t:5:4} {${u:failureLog}} ${u:variables} ${u:alignDedupBams} ${tcltmp:splitstart} ${tcltmp:splitend} ${tcltmp:inc}"
                turbine::reset_priority
            }
            set tcltmp:hi [ expr { ${tcltmp:lo} + ${tcltmp:skip} - 1 } ]
        }
    }
}


proc VCNoSplitMain-foreach1:inner { u:VCF_list:1 t:10 t:5:4 u:failureLog u:variables u:alignDedupBams tcltmp:lo tcltmp:hi tcltmp:inc } {
    set tcltmp:splitlen [ expr { ${tcltmp:hi} - ${tcltmp:lo} + 1 } ]
    set tcltmp:contents [ adlb::enumerate ${u:alignDedupBams} dict ${tcltmp:splitlen} ${tcltmp:lo} ]
    dict for {v:index:1 u:sample} ${tcltmp:contents} {
        # Var: string u:sampleName:3 RENAMED [string:sampleName] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCNoSplitMain():255:2
        lassign [ adlb::multicreate [ list string 2 1 95 ] ] u:sampleName:3
        turbine::c::log "allocated u:sampleName:3=<${u:sampleName:3}>"
        turbine::file_read_refcount_incr ${u:sample} 1
        turbine::rule [ list ${t:5:4} ] "VCNoSplitMain-if1 ${u:VCF_list:1} ${t:10} ${t:5:4} ${v:index:1} {${u:failureLog}} ${u:sampleName:3} ${u:variables}"
        turbine::rule [ list [ turbine::get_file_td ${u:sample} ] ] "basename-argwait-2 {${u:sample}} ${u:sampleName:3}"
    }
    set tcltmp:iters [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
    turbine::read_refcount_decr ${u:alignDedupBams} [ expr { ${tcltmp:iters} } ]
}


proc VCNoSplitMain-if1 { u:VCF_list:1 t:10 t:5:4 v:index:1 u:failureLog u:sampleName:3 u:variables } {
    # Var: $boolean v:__t:5 RENAMED [$boolean:__v:__t:5] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCNoSplitMain():257:26
    set v:__t:5 [ turbine::retrieve_integer ${t:5:4} CACHED 1 ]
    if { ${v:__t:5} } {
        # Var: string c:s__vcf-1 OPT_TEMPORARY
        global c:s__vcf-1
        # Var: string c:s_-2 OPT_TEMPORARY
        global c:s_-2
        # Var: string t:10:4 RENAMED [string:__t:10] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCNoSplitMain():263:28
        # Var: file u:recalfiles:1 RENAMED [file:recalfiles] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCNoSplitMain():263:61
        # Var: string[int] u:recalparmsindels:1 RENAMED [string[int]:recalparmsindels] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCNoSplitMain():268:3
        # Var: string[int] u:realparms:1 RENAMED [string[int]:realparms] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCNoSplitMain():271:3
        # Var: string t:14:4 RENAMED [string:__t:14] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCNoSplitMain():264:27
        # Var: string t:15:4 RENAMED [string:__t:15] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCNoSplitMain():264:34
        # Var: string t:18:4 RENAMED [string:__t:18] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCNoSplitMain():264:61
        # Var: file u:inputBam:1 RENAMED [file:inputBam] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCNoSplitMain():280:3
        # Var: file u:recalibratedbam:1 RENAMED [file:recalibratedbam] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCNoSplitMain():285:12
        # Var: file u:gvcfVariants:1 RENAMED [file:gvcfVariants] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCNoSplitMain():295:8
        # Var: int u:threads:3 RENAMED [int:threads] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callVariants():232:1
        # Var: string t:2:8 RENAMED [string:__t:2] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callVariants():232:26
        # Var: string t:5:8 RENAMED [string:__t:5] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callVariants():232:58
        # Var: file u:haploLog:1 RENAMED [file:haploLog] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callVariants():237:44
        # Var: string t:13:7 RENAMED [string:__t:13] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callVariants():239:36
        # Var: string t:15:7 RENAMED [string:__t:15] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callVariants():240:8
        # Var: string t:17:7 RENAMED [string:__t:17] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callVariants():241:8
        # Var: string t:21:7 RENAMED [string:__t:21] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callVariants():241:42
        # Var: string t:23:7 RENAMED [string:__t:23] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callVariants():243:8
        # Var: string t:27:7 RENAMED [string:__t:27] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callVariants():243:42
        lassign [ adlb::multicreate [ list string 1 1 96 ] [ list container integer string 1 1 98 ] [ list container integer string 1 1 99 ] [ list string 1 1 100 ] [ list string 1 1 101 ] [ list string 1 1 102 ] [ list integer 1 1 106 ] [ list string 1 1 107 ] [ list string 1 1 108 ] [ list string 1 1 110 ] [ list string 1 1 111 ] [ list string 1 1 112 ] [ list string 1 1 113 ] [ list string 1 1 114 ] [ list string 1 1 115 ] ] t:10:4 u:recalparmsindels:1 u:realparms:1 t:14:4 t:15:4 t:18:4 u:threads:3 t:2:8 t:5:8 t:13:7 t:15:7 t:17:7 t:21:7 t:23:7 t:27:7
        turbine::c::log "allocated t:10:4=<${t:10:4}> u:recalparmsindels:1=<${u:recalparmsindels:1}> u:realparms:1=<${u:realparms:1}> t:14:4=<${t:14:4}> t:15:4=<${t:15:4}>"
        turbine::c::log "allocated t:18:4=<${t:18:4}> u:threads:3=<${u:threads:3}> t:2:8=<${t:2:8}> t:5:8=<${t:5:8}> t:13:7=<${t:13:7}>"
        turbine::c::log "allocated t:15:7=<${t:15:7}> t:17:7=<${t:17:7}> t:21:7=<${t:21:7}> t:23:7=<${t:23:7}> t:27:7=<${t:27:7}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 97 ] [ list file 1 1 103 ] [ list file 2 1 104 ] [ list file 1 1 105 ] [ list file 0 1 109 ] ] [ list 1 0 1 1 1 ] ] u:recalfiles:1 u:inputBam:1 u:recalibratedbam:1 u:gvcfVariants:1 u:haploLog:1
        turbine::read_refcount_incr ${u:sampleName:3} 1
        turbine::read_refcount_incr ${u:variables} 9
        turbine::container_reference ${u:variables} "TMPDIR" ${t:10:4} string
        turbine::container_reference ${u:variables} "REFGENOMEDIR" ${t:15:4} string
        turbine::container_reference ${u:variables} "INDELDIR" ${t:18:4} string
        f:find_files ${u:recalfiles:1} ${t:14:4} ${c:s__vcf-1} -100 "HARD" "RANK"
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:recalibrationWrapper {${u:recalibratedbam:1}} ${u:sampleName:3} ${c:s_-2} ${u:variables} {${u:inputBam:1}} ${u:realparms:1} ${u:recalparmsindels:1}"
        turbine::reset_priority
        turbine::container_reference ${u:variables} "PBSCORES" ${t:2:8} string
        turbine::container_reference ${u:variables} "PROCPERNODE" ${t:5:8} string
        turbine::container_reference ${u:variables} "JAVADIR" ${t:13:7} string
        turbine::container_reference ${u:variables} "GATKDIR" ${t:15:7} string
        turbine::container_reference ${u:variables} "REFGENOME" ${t:21:7} string
        turbine::container_reference ${u:variables} "DBSNP" ${t:27:7} string
        turbine::rule [ list ${t:2:8} ${t:5:8} ] "__entry-async_op-parse_int-2 ${t:2:8} ${t:5:8} ${u:threads:3}"
        turbine::rule [ list ${u:sampleName:3} ] "__entry-optmerged-13 ${u:VCF_list:1} ${t:10} ${t:10:4} ${t:13:7} ${t:15:7} ${t:17:7} ${t:23:7} ${v:index:1} {${u:gvcfVariants:1}} {${u:haploLog:1}} {${u:inputBam:1}} ${u:realparms:1} {${u:recalfiles:1}} {${u:recalibratedbam:1}} ${u:recalparmsindels:1} ${u:sampleName:3} ${u:threads:3}"
        turbine::rule [ list ${t:15:4} ] "__entry-optmerged-15 ${t:14:4} ${t:15:4} ${t:17:7} ${t:18:4} ${t:21:7} ${t:23:7} ${t:27:7}"
        turbine::read_refcount_decr ${t:14:4} 1
    } else {
        turbine::file_read_refcount_incr ${u:failureLog} 1
        turbine::rule [ list ${t:10} ${u:sampleName:3} ] "__entry-async_op-strcat-13 ${u:VCF_list:1} ${t:10} ${v:index:1} {${u:failureLog}} ${u:sampleName:3} ${u:variables}"
    }
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${u:variables} 1
    turbine::read_refcount_decr ${u:sampleName:3} 1
    turbine::read_refcount_decr ${t:10} 1
}


proc __entry-async_op-parse_int-2 { t:2:8 t:5:8 u:threads:3 } {
    # Var: $string v:t:5:8 VALUE_OF [string:__t:5:8]
    # Var: $int v:t:4:8 VALUE_OF [int:__t:4:8]
    # Var: $string v:t:2:8 VALUE_OF [string:__t:2:8]
    # Var: $int v:t:1:13 VALUE_OF [int:__t:1:13]
    # Var: $int v:threads:3 VALUE_OF [int:threads:3]
    set v:t:5:8 [ turbine::retrieve_string ${t:5:8} CACHED 1 ]
    set v:t:4:8 [ turbine::parse_int_impl ${v:t:5:8} 10 ]
    set v:t:2:8 [ turbine::retrieve_string ${t:2:8} CACHED 1 ]
    set v:t:1:13 [ turbine::parse_int_impl ${v:t:2:8} 10 ]
    set v:threads:3 [ turbine::divide_integer_impl ${v:t:1:13} ${v:t:4:8} ]
    turbine::store_integer ${u:threads:3} ${v:threads:3}
}


proc __entry-optmerged-13 { u:VCF_list:1 t:10 t:10:4 t:13:7 t:15:7 t:17:7 t:23:7 v:index:1 u:gvcfVariants:1 u:haploLog:1 u:inputBam:1 u:realparms:1 u:recalfiles:1 u:recalibratedbam:1 u:recalparmsindels:1 u:sampleName:3 u:threads:3 } {
    # Var: $string v:sampleName:3:1 VALUE_OF [string:sampleName:3]
    set v:sampleName:3:1 [ turbine::retrieve_string ${u:sampleName:3} CACHED 1 ]
    turbine::rule [ list ${t:10:4} ] [ list __entry-async_op-strcat-9 ${t:10:4} ${v:sampleName:3:1} ${u:realparms:1} ${u:recalfiles:1} ${u:recalparmsindels:1} ]
    turbine::rule [ list ${t:10} ] [ list __entry-optmerged-14 ${u:VCF_list:1} ${t:10} ${t:13:7} ${t:15:7} ${t:17:7} ${t:23:7} ${v:index:1} ${v:sampleName:3:1} ${u:gvcfVariants:1} ${u:haploLog:1} ${u:inputBam:1} ${u:recalibratedbam:1} ${u:threads:3} ]
}


proc __entry-async_op-strcat-9 { t:10:4 v:sampleName:3:1 u:realparms:1 u:recalfiles:1 u:recalparmsindels:1 } {
    # Var: $string v:t:10:4:1 VALUE_OF [string:__t:10:4]
    # Var: $string v:t:9:4 VALUE_OF [string:__t:9:4]
    set v:t:10:4:1 [ turbine::retrieve_string ${t:10:4} CACHED 1 ]
    set v:t:9:4 "${v:t:10:4:1}/${v:sampleName:3:1}.recal_foundfiles.txt"
    turbine::set_filename_val ${u:recalfiles:1} ${v:t:9:4}
    turbine::rule [ list [ turbine::get_file_td ${u:recalfiles:1} ] ] [ list VCNoSplitMain-chain1 ${v:t:9:4} ${u:realparms:1} ${u:recalfiles:1} ${u:recalparmsindels:1} ]
}


proc VCNoSplitMain-chain1 { v:t:9:4 u:realparms:1 u:recalfiles:1 u:recalparmsindels:1 } {
    # Var: string c:s_sknownSite OPT_TEMPORARY
    global c:s_sknownSite
    # Var: file t:27:4 RENAMED [file:__t:27] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCNoSplitMain():269:26
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 116 ] ] [ list 0 ] ] t:27:4
    f:sed ${t:27:4} ${u:recalfiles:1} ${c:s_sknownSite} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${t:27:4} ] ] [ list __entry-call_foreign-read-2 ${t:27:4} ${v:t:9:4} ${u:realparms:1} ${u:recalfiles:1} ${u:recalparmsindels:1} ]
}


proc __entry-call_foreign-read-2 { t:27:4 v:t:9:4 u:realparms:1 u:recalfiles:1 u:recalparmsindels:1 } {
    # Var: $file v:t:27:4 VALUE_OF [file:__t:27:4]
    # Var: $string v:t:26:4 VALUE_OF [string:__t:26:4]
    # Var: $int v:n:8 RENAMED [$int:__v:n]
    # Var: $string v:t:25:4 VALUE_OF [string:__t:25:4]
    # Var: $string v:o:6 RENAMED [$string:__v:o]
    # Var: $string$[int] v:recalparmsindels:1 VALUE_OF [string[int]:recalparmsindels:1]
    set v:t:27:4 [ turbine::retrieve_file ${t:27:4} CACHED 1 ]
    set v:t:26:4 [ turbine::file_read_local ${v:t:27:4} ]
    set v:n:8 [ string length ${v:t:26:4} ]
    set v:t:25:4 [ turbine::replace_all_impl ${v:t:26:4} "\n" " " 0 ${v:n:8} ]
    set v:o:6 [ string trim ${v:t:25:4} ]
    set v:recalparmsindels:1 [ turbine::split_impl ${v:o:6} " " ]
    turbine::build_rec ${u:recalparmsindels:1} ${v:recalparmsindels:1} [ list container integer string ] 0 1
    turbine::rule [ list ] [ list VCNoSplitMain-chain2 ${v:t:9:4} ${u:realparms:1} ${u:recalfiles:1} ]
}


proc VCNoSplitMain-chain2 { v:t:9:4 u:realparms:1 u:recalfiles:1 } {
    # Var: string c:s_sknown_g OPT_TEMPORARY
    global c:s_sknown_g
    # Var: file t:36:4 RENAMED [file:__t:36] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCNoSplitMain():272:26
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 117 ] ] [ list 0 ] ] t:36:4
    f:sed ${t:36:4} ${u:recalfiles:1} ${c:s_sknown_g} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${t:36:4} ] ] [ list __entry-call_foreign-read-3 ${t:36:4} ${v:t:9:4} ${u:realparms:1} ${u:recalfiles:1} ]
}


proc __entry-call_foreign-read-3 { t:36:4 v:t:9:4 u:realparms:1 u:recalfiles:1 } {
    # Var: $file v:t:36:4 VALUE_OF [file:__t:36:4]
    # Var: $string v:t:35:4 VALUE_OF [string:__t:35:4]
    # Var: $int v:n:7 RENAMED [$int:__v:n]
    # Var: $string v:t:34:4 VALUE_OF [string:__t:34:4]
    # Var: $string v:o:5 RENAMED [$string:__v:o]
    # Var: $string$[int] v:realparms:1 VALUE_OF [string[int]:realparms:1]
    set v:t:36:4 [ turbine::retrieve_file ${t:36:4} CACHED 1 ]
    set v:t:35:4 [ turbine::file_read_local ${v:t:36:4} ]
    set v:n:7 [ string length ${v:t:35:4} ]
    set v:t:34:4 [ turbine::replace_all_impl ${v:t:35:4} "\n" " " 0 ${v:n:7} ]
    set v:o:5 [ string trim ${v:t:34:4} ]
    set v:realparms:1 [ turbine::split_impl ${v:o:5} " " ]
    turbine::build_rec ${u:realparms:1} ${v:realparms:1} [ list container integer string ] 0 1
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list VCNoSplitMain-chain3 ${v:t:9:4} ${u:recalfiles:1} ]
    turbine::reset_priority
}


proc VCNoSplitMain-chain3 { v:t:9:4 u:recalfiles:1 } {
    # Var: $file v:f:12 RENAMED [$file:__v:f] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/generalfunctions/general.swift:rm():55:6
    # Var: $void v:v:3 RENAMED [$void:__v:v] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/generalfunctions/general.swift:rm():55:6
    set v:f:12 [ turbine::retrieve_file ${u:recalfiles:1} CACHED 1 ]
    turbine::c::log [ list exec: "rm" ${v:t:9:4} [ dict create ] ]
    turbine::exec_external "rm" [ dict create ] ${v:t:9:4}
}


proc __entry-optmerged-14 { u:VCF_list:1 t:10 t:13:7 t:15:7 t:17:7 t:23:7 v:index:1 v:sampleName:3:1 u:gvcfVariants:1 u:haploLog:1 u:inputBam:1 u:recalibratedbam:1 u:threads:3 } {
    # Var: $string v:t:10:10 VALUE_OF [string:__t:10]
    # Var: $string v:t:43:4 VALUE_OF [string:__t:43:4]
    # Var: $string v:t:49:3 VALUE_OF [string:__t:49:3]
    # Var: $string v:t:56:3 VALUE_OF [string:__t:56:3]
    # Var: $string v:LogDir:2 VALUE_OF [string:LogDir:2]
    # Var: $file v:inputBam:1 VALUE_OF [file:inputBam:1]
    # Var: $string v:t:11:7 VALUE_OF [string:__t:11:7]
    set v:t:10:10 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:t:43:4 "${v:t:10:10}/${v:sampleName:3:1}/align/${v:sampleName:3:1}.wDedups.sorted.bam"
    set v:t:49:3 "${v:t:10:10}/${v:sampleName:3:1}/realign/${v:sampleName:3:1}.wDedups.sorted.recalibrated.bam"
    set v:t:56:3 "${v:t:10:10}/${v:sampleName:3:1}/variant/${v:sampleName:3:1}.wDedups.sorted.recalibrated.g.vcf"
    set v:LogDir:2 "${v:t:10:10}/${v:sampleName:3:1}/logs/"
    set tcltmp:init_rc 1
    set v:inputBam:1 [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:inputBam:1 ${v:t:43:4}
    turbine::store_file ${u:inputBam:1} v:inputBam:1 1
    turbine::set_filename_val ${u:recalibratedbam:1} ${v:t:49:3}
    turbine::set_filename_val ${u:gvcfVariants:1} ${v:t:56:3}
    set v:t:11:7 "${v:LogDir:2}${v:sampleName:3:1}_HaplotypeCaller.log"
    turbine::set_filename_val ${u:haploLog:1} ${v:t:11:7}
    turbine::rule [ list ${t:13:7} ${t:15:7} ${t:17:7} ${t:23:7} [ turbine::get_file_td ${u:recalibratedbam:1} ] ${u:threads:3} ] [ list HaplotypeCaller-app-leaf1-1 ${u:VCF_list:1} ${t:13:7} ${t:15:7} ${t:17:7} ${t:23:7} ${v:index:1} ${v:t:11:7} ${v:t:49:3} ${v:t:56:3} ${u:gvcfVariants:1} ${u:haploLog:1} ${u:recalibratedbam:1} ${u:threads:3} ]
    turbine::decr_local_file_refcount v:inputBam:1
}


proc HaplotypeCaller-app-leaf1-1 { u:VCF_list:1 t:13:7 t:15:7 t:17:7 t:23:7 v:index:1 v:t:11:7 v:t:49:3 v:t:56:3 u:gvcfVariants:1 u:haploLog:1 u:recalibratedbam:1 u:threads:3 } {
    # Var: $string v:javadir:2 RENAMED [$string:__v:javadir] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:HaplotypeCaller():120:9
    # Var: $string v:gatkdir:2 RENAMED [$string:__v:gatkdir] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:HaplotypeCaller():120:9
    # Var: $string v:reference:2 RENAMED [$string:__v:reference] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:HaplotypeCaller():120:9
    # Var: $string v:dbsnp:2 RENAMED [$string:__v:dbsnp] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:HaplotypeCaller():120:9
    # Var: $int v:thr:1 RENAMED [$int:__v:thr] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:HaplotypeCaller():120:9
    # Var: $file v:inputFile:1 RENAMED [$file:__v:inputFile] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:HaplotypeCaller():120:9
    # Var: $file v:outputfile:2 RENAMED [$file:__v:outputfile] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:HaplotypeCaller():120:9
    # Var: $file v:outLog:2 RENAMED [$file:__v:outLog] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:HaplotypeCaller():120:9
    set v:javadir:2 [ turbine::retrieve_string ${t:13:7} CACHED 1 ]
    set v:gatkdir:2 [ turbine::retrieve_string ${t:15:7} CACHED 1 ]
    set v:reference:2 [ turbine::retrieve_string ${t:17:7} CACHED 1 ]
    set v:dbsnp:2 [ turbine::retrieve_string ${t:23:7} CACHED 1 ]
    set v:thr:1 [ turbine::retrieve_integer ${u:threads:3} CACHED 1 ]
    set v:inputFile:1 [ turbine::retrieve_file ${u:recalibratedbam:1} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:2 [ turbine::create_local_file_ref ${v:t:56:3} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:outLog:2 [ turbine::create_local_file_ref ${v:t:11:7} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:2 "-Xmx8g" "-jar" ${v:gatkdir:2} "-T" "HaplotypeCaller" "-R" ${v:reference:2} "-I" ${v:t:49:3} "--dbsnp" ${v:dbsnp:2} "-o" ${v:t:56:3} "--emitRefConfidence" "GVCF" "-gt_mode" "DISCOVERY" "-A" "Coverage" "-A" "FisherStrand" "-A" "StrandOddsRatio" "-A" "HaplotypeScore" "-A" "MappingQualityRankSumTest" "-A" "QualByDepth" "-A" "RMSMappingQuality" "-A" "ReadPosRankSumTest" "-stand_call_conf" 30 "-stand_emit_conf" 30 "-nt" 1 "-nct" ${v:thr:1} [ dict create "stderr" ${v:t:11:7} ] ]
    turbine::exec_external ${v:javadir:2} [ dict create "stderr" ${v:t:11:7} ] "-Xmx8g" "-jar" ${v:gatkdir:2} "-T" "HaplotypeCaller" "-R" ${v:reference:2} "-I" ${v:t:49:3} "--dbsnp" ${v:dbsnp:2} "-o" ${v:t:56:3} "--emitRefConfidence" "GVCF" "-gt_mode" "DISCOVERY" "-A" "Coverage" "-A" "FisherStrand" "-A" "StrandOddsRatio" "-A" "HaplotypeScore" "-A" "MappingQualityRankSumTest" "-A" "QualByDepth" "-A" "RMSMappingQuality" "-A" "ReadPosRankSumTest" "-stand_call_conf" 30 "-stand_emit_conf" 30 "-nt" 1 "-nct" ${v:thr:1}
    turbine::store_file ${u:gvcfVariants:1} v:outputfile:2 0
    turbine::store_file ${u:haploLog:1} v:outLog:2 0
    turbine::container_insert ${u:VCF_list:1} ${v:index:1} ${u:gvcfVariants:1} file_ref 1
    turbine::decr_local_file_refcount v:outputfile:2
    turbine::decr_local_file_refcount v:outLog:2
}


proc __entry-optmerged-15 { t:14:4 t:15:4 t:17:7 t:18:4 t:21:7 t:23:7 t:27:7 } {
    # Var: $string v:t:15:4 VALUE_OF [string:__t:15:4]
    set v:t:15:4 [ turbine::retrieve_string ${t:15:4} CACHED 1 ]
    turbine::rule [ list ${t:18:4} ] [ list __entry-async_op-strcat-10 ${t:14:4} ${t:18:4} ${v:t:15:4} ]
    turbine::rule [ list ${t:21:7} ] [ list __entry-async_op-strcat-11 ${t:17:7} ${t:21:7} ${v:t:15:4} ]
    turbine::rule [ list ${t:27:7} ] [ list __entry-async_op-strcat-12 ${t:23:7} ${t:27:7} ${v:t:15:4} ]
}


proc __entry-async_op-strcat-10 { t:14:4 t:18:4 v:t:15:4 } {
    # Var: $string v:t:18:4 VALUE_OF [string:__t:18:4]
    # Var: $string v:t:14:4 VALUE_OF [string:__t:14:4]
    set v:t:18:4 [ turbine::retrieve_string ${t:18:4} CACHED 1 ]
    set v:t:14:4 "${v:t:15:4}/${v:t:18:4}/"
    turbine::store_string ${t:14:4} ${v:t:14:4}
}


proc __entry-async_op-strcat-11 { t:17:7 t:21:7 v:t:15:4 } {
    # Var: $string v:t:21:7 VALUE_OF [string:__t:21:7]
    # Var: $string v:t:17:7 VALUE_OF [string:__t:17:7]
    set v:t:21:7 [ turbine::retrieve_string ${t:21:7} CACHED 1 ]
    set v:t:17:7 "${v:t:15:4}/${v:t:21:7}"
    turbine::store_string ${t:17:7} ${v:t:17:7}
}


proc __entry-async_op-strcat-12 { t:23:7 t:27:7 v:t:15:4 } {
    # Var: $string v:t:27:7 VALUE_OF [string:__t:27:7]
    # Var: $string v:t:23:7 VALUE_OF [string:__t:23:7]
    set v:t:27:7 [ turbine::retrieve_string ${t:27:7} CACHED 1 ]
    set v:t:23:7 "${v:t:15:4}/${v:t:27:7}"
    turbine::store_string ${t:23:7} ${v:t:23:7}
}


proc __entry-async_op-strcat-13 { u:VCF_list:1 t:10 v:index:1 u:failureLog u:sampleName:3 u:variables } {
    # Var: $string v:t:10:14 VALUE_OF [string:__t:10]
    # Var: $string v:sampleName:3:10 VALUE_OF [string:sampleName:3]
    # Var: $string v:vcfLocation VALUE_OF [string:vcfLocation]
    # Var: $boolean v:o:7 RENAMED [$boolean:__v:o]
    set v:t:10:14 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:sampleName:3:10 [ turbine::retrieve_string ${u:sampleName:3} CACHED 1 ]
    set v:vcfLocation "${v:t:10:14}/${v:sampleName:3:10}/variant/${v:sampleName:3:10}.wDedups.sorted.recalibrated.g.vcf"
    set v:o:7 [ file exists ${v:vcfLocation} ]
    if { ${v:o:7} } {
        # Var: file t:68:2 RENAMED [file:__t:68] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCNoSplitMain():311:4
        # Var: $file v:t:68:2 VALUE_OF [file:__t:68:2]
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 118 ] ] [ list 0 ] ] t:68:2
        set tcltmp:init_rc 1
        set v:t:68:2 [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
        turbine::input_file_local v:t:68:2 ${v:vcfLocation}
        turbine::store_file ${t:68:2} v:t:68:2 1
        turbine::container_insert ${u:VCF_list:1} ${v:index:1} ${t:68:2} file_ref 0
        turbine::decr_local_file_refcount v:t:68:2
    } else {
        # Var: string u:message:2 RENAMED [string:message] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCNoSplitMain():314:4
        # Var: boolean t:72:2 RENAMED [boolean:__t:72] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCNoSplitMain():317:4
        # Var: $string v:message:2 VALUE_OF [string:message:2]
        lassign [ adlb::multicreate [ list string 2 1 119 ] [ list integer 1 1 120 ] ] u:message:2 t:72:2
        turbine::c::log "allocated u:message:2=<${u:message:2}> t:72:2=<${t:72:2}>"
        turbine::read_refcount_incr ${u:variables} 1
        turbine::file_read_refcount_incr ${u:failureLog} 1
        set v:message:2 "ERROR: ${v:vcfLocation} not found. Did you set VC_STAGE to 'N' by accident?\n"
        turbine::store_string ${u:message:2} ${v:message:2}
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:append ${t:72:2} {${u:failureLog}} ${u:message:2}"
        turbine::reset_priority
        turbine::rule [ list ${t:72:2} ] "VCNoSplitMain-chain5 ${t:72:2} ${u:message:2} ${u:variables}"
    }
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${u:variables} 1
    adlb::write_refcount_decr ${u:VCF_list:1} 1
}


proc VCNoSplitMain-chain5 { t:72:2 u:message:2 u:variables } {
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:exitIfFlagGiven ${u:variables} ${u:message:2}"
    turbine::reset_priority
    turbine::read_refcount_decr ${t:72:2} 1
}


proc basename-argwait-2 { u:sample u:sampleName:3 } {
    # Var: $file v:p:5 RENAMED [$file:__v:p]
    # Var: $string v:f:9 RENAMED [$string:__v:f]
    # Var: $int v:n:9 RENAMED [$int:__v:n]
    # Var: $int v:t:2:4 VALUE_OF [int:__t:2:4]
    # Var: $string v:sampleName:3 VALUE_OF [string:sampleName:3]
    set v:p:5 [ turbine::retrieve_file ${u:sample} CACHED 1 ]
    set v:f:9 [ file tail ${v:p:5} ]
    set v:n:9 [ string length ${v:f:9} ]
    set v:t:2:4 [ expr { ${v:n:9} - 23 } ]
    set v:sampleName:3 [ turbine::substring_impl ${v:f:9} 0 ${v:t:2:4} ]
    turbine::store_string ${u:sampleName:3} ${v:sampleName:3}
}


proc __entry-optmerged-16 { u:VCF_list:1 t:170 t:5:4 u:variables } {
    # Var: $string v:t:170 VALUE_OF [string:__t:170]
    # Var: $boolean v:t:169 VALUE_OF [boolean:__t:169]
    # Var: $boolean v:t:173 VALUE_OF [boolean:__t:173]
    # Var: $boolean v:t:177 VALUE_OF [boolean:__t:177]
    # Var: $boolean v:t:5:4 VALUE_OF [boolean:__t:5:4]
    # Var: $boolean v:t:168 VALUE_OF [boolean:__t:168]
    # Var: $boolean v:t:167 VALUE_OF [boolean:__t:167]
    set v:t:170 [ turbine::retrieve_string ${t:170} CACHED 1 ]
    set v:t:169 [ expr { ! [ string equal ${v:t:170} "E" ] } ]
    set v:t:173 [ expr { ! [ string equal ${v:t:170} "End" ] } ]
    set v:t:177 [ expr { ! [ string equal ${v:t:170} "end" ] } ]
    set v:t:5:4 [ string equal ${v:t:170} "Y" ]
    turbine::store_integer ${t:5:4} ${v:t:5:4}
    set v:t:168 [ expr { ${v:t:169} && ${v:t:173} } ]
    set v:t:167 [ expr { ${v:t:168} && ${v:t:177} } ]
    if { ${v:t:167} } {
        turbine::read_refcount_incr ${u:VCF_list:1} 2
        turbine::read_refcount_incr ${u:variables} 1
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:jointGenotypingMain ${u:VCF_list:1} ${u:variables}"
        turbine::reset_priority
        turbine::rule [ list ${u:VCF_list:1} ] "__entry-call_foreign-size-2 ${u:VCF_list:1}"
    }
    turbine::read_refcount_decr ${u:variables} 1
    turbine::read_refcount_decr ${u:VCF_list:1} 1
}


proc __entry-call_foreign-size-2 { u:VCF_list:1 } {
    # Var: file$[int] v:VCF_list:1 VALUE_OF [*rw(file)[int]:VCF_list:1]
    # Var: $int v:t:183 VALUE_OF [int:__t:183]
    # Var: $boolean v:t:182 VALUE_OF [boolean:__t:182]
    # Var: $void v:t:181 VALUE_OF [void:__t:181]
    set v:VCF_list:1 [ adlb::enumerate ${u:VCF_list:1} dict all 0 0 ]
    set v:t:183 [ dict size ${v:VCF_list:1} ]
    set v:t:182 [ expr { ${v:t:183} != 0 } ]
    turbine::assert_impl ${v:t:182} "FAILURE: The VCFs array was empty"
    turbine::read_refcount_decr ${u:VCF_list:1} 1
}


proc __entry-optmerged-17 { t:10 t:13 t:9 v:f u:configFile u:docRunfile u:failureLog u:variables } {
    # Var: $string v:dirname:6 RENAMED [$string:__v:dirname] /usr/local/apps/bioapps/swift-t/swift-t-1.1/turbine/export/unix.swift:mkdir():65:15
    set v:dirname:6 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list mkdir-app-leaf1 ${t:13} ${v:dirname:6} ${u:failureLog} ${u:variables} ]
    turbine::reset_priority
    turbine::rule [ list ${t:13} ] [ list __entry-optmerged-18 ${t:13} ${t:9} ${v:dirname:6} ${v:f} ${u:configFile} ${u:docRunfile} ${u:failureLog} ]
}


proc mkdir-app-leaf1 { t:13 v:dirname:6 u:failureLog u:variables } {
    # Var: $void v:v:10 RENAMED [$void:__v:v] /usr/local/apps/bioapps/swift-t/swift-t-1.1/turbine/export/unix.swift:mkdir():65:15
    # Var: string t:20 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/VariantCalling.swift:85:6
    lassign [ adlb::multicreate [ list string 1 1 121 ] ] t:20
    turbine::c::log "allocated t:20=<${t:20}>"
    turbine::c::log [ list exec: "mkdir" "-p" ${v:dirname:6} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:dirname:6}
    turbine::container_reference ${u:variables} "TMPDIR" ${t:20} string
    turbine::rule [ list ${t:20} ] [ list mkdir-app-leaf1-1 ${t:13} ${t:20} ${v:dirname:6} ${u:failureLog} ]
}


proc mkdir-app-leaf1-1 { t:13 t:20 v:dirname:6 u:failureLog } {
    # Var: $string v:dirname:1 RENAMED [$string:__v:dirname] /usr/local/apps/bioapps/swift-t/swift-t-1.1/turbine/export/unix.swift:mkdir():65:15
    # Var: $void v:v:1 RENAMED [$void:__v:v] /usr/local/apps/bioapps/swift-t/swift-t-1.1/turbine/export/unix.swift:mkdir():65:15
    set v:dirname:1 [ turbine::retrieve_string ${t:20} CACHED 1 ]
    turbine::c::log [ list exec: "mkdir" "-p" ${v:dirname:1} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:dirname:1}
    turbine::rule [ list ${t:13} ] [ list __entry-chain2 ${t:13} ${v:dirname:6} ${u:failureLog} ]
}


proc __entry-chain2 { t:13 v:dirname:6 u:failureLog } {
    # Var: $string v:t:13:4 VALUE_OF [string:__t:13]
    # Var: $string v:t:23 VALUE_OF [string:__t:23]
    # Var: $void v:v RENAMED [$void:__v:v] /usr/local/apps/bioapps/swift-t/swift-t-1.1/turbine/export/unix.swift:mkdir():65:15
    set v:t:13:4 [ turbine::retrieve_string ${t:13} CACHED 1 ]
    set v:t:23 "${v:dirname:6}/${v:t:13:4}/docs"
    turbine::c::log [ list exec: "mkdir" "-p" ${v:t:23} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:t:23}
    set wfilename:failureLog [ turbine::get_file_path ${u:failureLog} ]
    turbine::rule [ list ${wfilename:failureLog} ] "__entry-call_foreign-write {${wfilename:failureLog}} {${u:failureLog}}"
}


proc __entry-call_foreign-write { wfilename:failureLog u:failureLog } {
    # Var: $file v:failureLog VALUE_OF [file:failureLog]
    # Var: $string v:__wfilename:failureLog VALUE_OF [string:__wfilename:failureLog]
    set v:__wfilename:failureLog [ turbine::retrieve_string ${wfilename:failureLog} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:failureLog [ turbine::create_local_file_ref ${v:__wfilename:failureLog} ${tcltmp:init_rc} 1 ]
    turbine::file_write_local v:failureLog ""
    turbine::store_file ${u:failureLog} v:failureLog 0
}


proc __entry-optmerged-18 { t:13 t:9 v:dirname:6 v:f u:configFile u:docRunfile u:failureLog } {
    # Var: $string v:t:13 VALUE_OF [string:__t:13]
    # Var: $string v:t:9 VALUE_OF [string:__t:9]
    # Var: $string v:t:31 VALUE_OF [string:__t:31]
    set v:t:13 [ turbine::retrieve_string ${t:13} CACHED 1 ]
    set v:t:9 "${v:dirname:6}/${v:t:13}/docs/Failures.log"
    turbine::store_string ${t:9} ${v:t:9}
    set v:t:31 "${v:dirname:6}/${v:t:13}/docs/${v:f}"
    turbine::set_filename_val ${u:failureLog} ${v:t:9}
    turbine::set_filename_val ${u:docRunfile} ${v:t:31}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry:wait:configFile ${v:t:31} ${u:configFile} ${u:docRunfile} ]
    turbine::reset_priority
}


proc __entry:wait:configFile { v:t:31 u:configFile u:docRunfile } {
    # Var: $file v:configFile VALUE_OF [file:configFile]
    # Var: $file v:docRunfile VALUE_OF [file:docRunfile]
    set v:configFile [ turbine::retrieve_file ${u:configFile} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:docRunfile [ turbine::create_local_file_ref ${v:t:31} ${tcltmp:init_rc} 1 ]
    turbine::copy_local_file_contents ${v:docRunfile} ${v:configFile}
    turbine::store_file ${u:docRunfile} v:docRunfile 0
}


proc __entry-optmerged-19 { t:10 t:13 t:26:5 t:4:5 t:6:5 t:7 t:8:5 v:total_workers u:alignDedupBams u:docSampleInfo u:failureLog u:sampleInfoFile u:variables } {
    # Var: $string v:p:1 RENAMED [$string:__v:p]
    # Var: $string v:f:1 RENAMED [$string:__v:f]
    # Var: $file v:sampleInfoFile:1 VALUE_OF [file:sampleInfoFile]
    # Var: $file v:sampleInfoFile:2 VALUE_OF [file:sampleInfoFile]
    # Var: $string$[int] v:sampleLines VALUE_OF [string[int]:sampleLines]
    set v:p:1 [ turbine::retrieve_string ${t:7} CACHED 1 ]
    set v:f:1 [ file tail ${v:p:1} ]
    set tcltmp:init_rc 1
    set v:sampleInfoFile:1 [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:sampleInfoFile:1 ${v:p:1}
    turbine::store_file ${u:sampleInfoFile} v:sampleInfoFile:1 1
    set v:sampleInfoFile:2 [ turbine::retrieve_file ${u:sampleInfoFile} ]
    set v:sampleLines [ turbine::file_lines_impl ${v:sampleInfoFile:2} ]
    set tcltmp:iters [ dict size ${v:sampleLines} ]
    turbine::file_read_refcount_incr ${u:failureLog} [ expr { 2 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:26:5} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:8:5} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:4:5} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:10} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:6:5} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${u:variables} [ expr { 2 * ${tcltmp:iters} } ]
    adlb::write_refcount_incr ${u:alignDedupBams} [ expr { ${tcltmp:iters} } ]
    dict for {v:index:2 v:sample} ${v:sampleLines} {
        # Var: string[int] u:sampleInfo RENAMED [string[int]:sampleInfo] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():189:2
        # Var: string u:rgheader RENAMED [string:rgheader] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():194:2
        # Var: string u:LogDir RENAMED [string:LogDir] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():206:2
        # Var: string u:AlignDir RENAMED [string:AlignDir] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():207:2
        # Var: string u:RealignDir RENAMED [string:RealignDir] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():208:2
        # Var: string u:VarcallDir RENAMED [string:VarcallDir] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():209:2
        # Var: $int v:t:1:6 VALUE_OF [int:__t:1:6]
        # Var: $string$[int] v:sampleInfo VALUE_OF [string[int]:sampleInfo]
        # Var: $string v:alias:sampleName:4 VALUE_OF [string:__alias:sampleName:4]
        # Var: $string v:alias:read1 VALUE_OF [string:__alias:read1]
        # Var: $string v:alias:read2 VALUE_OF [string:__alias:read2]
        lassign [ adlb::multicreate [ list container integer string 1 2 122 ] [ list string 1 1 123 ] [ list string 1 1 124 ] [ list string 2 1 125 ] [ list string 1 1 126 ] [ list string 1 1 127 ] ] u:sampleInfo u:rgheader u:LogDir u:AlignDir u:RealignDir u:VarcallDir
        turbine::c::log "allocated u:sampleInfo=<${u:sampleInfo}> u:rgheader=<${u:rgheader}> u:LogDir=<${u:LogDir}> u:AlignDir=<${u:AlignDir}> u:RealignDir=<${u:RealignDir}>"
        turbine::c::log "allocated u:VarcallDir=<${u:VarcallDir}>"
        set v:t:1:6 [ turbine::mod_integer_impl ${v:index:2} ${v:total_workers} ]
        set v:sampleInfo [ turbine::split_impl ${v:sample} " " ]
        turbine::build_rec ${u:sampleInfo} ${v:sampleInfo} [ list container integer string ] 0 1
        set a:sampleName:4 [ adlb::subscript_container ${u:sampleInfo} 0 ]
        set v:alias:sampleName:4 [ turbine::retrieve_string ${a:sampleName:4} ]
        set a:read1 [ adlb::subscript_container ${u:sampleInfo} 1 ]
        set v:alias:read1 [ turbine::retrieve_string ${a:read1} ]
        set a:read2 [ adlb::subscript_container ${u:sampleInfo} 2 ]
        set v:alias:read2 [ turbine::retrieve_string ${a:read2} CACHED 1 ]
        turbine::rule [ list ${t:26:5} ] [ list alignDedupMain-if1 ${u:AlignDir} ${u:LogDir} ${u:RealignDir} ${u:VarcallDir} ${t:26:5} ${v:alias:read1} ${v:alias:read2} ${v:alias:sampleName:4} ${v:index:2} ${v:t:1:6} ${u:alignDedupBams} ${u:failureLog} ${u:rgheader} ${u:variables} ]
        turbine::rule [ list ${t:4:5} ${t:6:5} ${t:8:5} ] [ list __entry-async_op-sprintf ${t:4:5} ${t:6:5} ${t:8:5} ${v:alias:sampleName:4} ${u:rgheader} ]
        turbine::rule [ list ${t:10} ] [ list __entry-optmerged-24 ${u:AlignDir} ${u:LogDir} ${u:RealignDir} ${u:VarcallDir} ${t:10} ${v:alias:sampleName:4} ]
        adlb::write_refcount_decr ${u:sampleInfo} 1
    }
    turbine::rule [ list ${t:10} ${t:13} ] [ list __entry-async_op-strcat-23 ${t:10} ${t:13} ${v:f:1} ${u:docSampleInfo} ${u:sampleInfoFile} ]
    turbine::decr_local_file_refcount v:sampleInfoFile:1
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${u:variables} 1
    turbine::read_refcount_decr ${t:26:5} 1
    turbine::read_refcount_decr ${t:4:5} 1
    turbine::read_refcount_decr ${t:8:5} 1
    turbine::read_refcount_decr ${t:6:5} 1
    adlb::write_refcount_decr ${u:alignDedupBams} 1
}


proc alignDedupMain-if1 { u:AlignDir u:LogDir u:RealignDir u:VarcallDir t:26:5 v:alias:read1 v:alias:read2 v:alias:sampleName:4 v:index:2 v:t:1:6 u:alignDedupBams u:failureLog u:rgheader u:variables } {
    # Var: $boolean v:__t:26 RENAMED [$boolean:__v:__t:26] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():211:35
    set v:__t:26 [ turbine::retrieve_integer ${t:26:5} CACHED 1 ]
    if { ${v:__t:26} } {
        # Var: file u:alignedbam RENAMED [file:alignedbam] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():221:50
        # Var: string t:36:5 RENAMED [string:__t:36] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():224:21
        # Var: string t:37:5 RENAMED [string:__t:37] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():224:28
        # Var: file u:alignedsam RENAMED [file:alignedsam] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():224:67
        # Var: int u:threads:1 RENAMED [int:threads] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():230:3
        # Var: string t:42:5 RENAMED [string:__t:42] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():230:28
        # Var: string t:45:4 RENAMED [string:__t:45] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():230:60
        # Var: string t:47:4 RENAMED [string:__t:47] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():231:30
        # Var: string[int] t:49:4 RENAMED [string[int]:__t:49] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():231:73
        # Var: boolean t:51:4 RENAMED [boolean:__t:51] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():234:8
        # Var: string t:11:9 RENAMED [string:__t:11] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():88:19
        # Var: file u:alignedLog RENAMED [file:alignedLog] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():88:46
        # Var: string t:14:9 RENAMED [string:__t:14] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():91:5
        lassign [ adlb::multicreate [ list string 3 1 129 ] [ list string 2 1 130 ] [ list integer 3 1 132 ] [ list string 1 1 133 ] [ list string 1 1 134 ] [ list string 1 1 135 ] [ list container integer string 1 1 136 ] [ list integer 1 1 137 ] [ list string 2 1 138 ] [ list string 1 1 140 ] ] t:36:5 t:37:5 u:threads:1 t:42:5 t:45:4 t:47:4 t:49:4 t:51:4 t:11:9 t:14:9
        turbine::c::log "allocated t:36:5=<${t:36:5}> t:37:5=<${t:37:5}> u:threads:1=<${u:threads:1}> t:42:5=<${t:42:5}> t:45:4=<${t:45:4}>"
        turbine::c::log "allocated t:47:4=<${t:47:4}> t:49:4=<${t:49:4}> t:51:4=<${t:51:4}> t:11:9=<${t:11:9}> t:14:9=<${t:14:9}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 2 1 128 ] [ list file 1 1 131 ] [ list file 0 1 139 ] ] [ list 1 1 1 ] ] u:alignedbam u:alignedsam u:alignedLog
        turbine::read_refcount_incr ${u:LogDir} 3
        turbine::file_read_refcount_incr ${u:failureLog} 1
        turbine::read_refcount_incr ${u:RealignDir} 1
        turbine::read_refcount_incr ${u:rgheader} 2
        turbine::read_refcount_incr ${u:VarcallDir} 1
        turbine::read_refcount_incr ${u:variables} 10
        turbine::array_kv_build ${t:49:4} [ ::adlb::dict_create 0 "-u" ] 1 integer string
        turbine::container_reference ${u:variables} "TMPDIR" ${t:37:5} string
        turbine::container_reference ${u:variables} "PBSCORES" ${t:42:5} string
        turbine::container_reference ${u:variables} "PROCPERNODE" ${t:45:4} string
        turbine::container_reference ${u:variables} "SAMTOOLSDIR" ${t:47:4} string
        f:samtools_view ${u:alignedbam} ${t:47:4} ${u:alignedsam} ${u:threads:1} ${t:49:4} -100 "HARD" "RANK"
        turbine::container_reference ${u:variables} "ALIGNERTOOL" ${t:14:9} string
        turbine::rule [ list ${u:RealignDir} ] "mkdir-app-leaf1-2 ${u:RealignDir}"
        turbine::rule [ list ${u:VarcallDir} ] "mkdir-app-leaf1-3 ${u:VarcallDir}"
        turbine::rule [ list ${t:37:5} ] [ list __entry-async_op-strcat-14 ${t:36:5} ${t:37:5} ${v:alias:sampleName:4} ${u:alignedsam} ]
        turbine::rule [ list ${t:42:5} ${t:45:4} ] "__entry-async_op-parse_int-3 ${t:42:5} ${t:45:4} ${u:threads:1}"
        turbine::rule [ list ${t:14:9} ] [ list __entry-async_op-eq_string ${t:11:9} ${t:14:9} ${t:36:5} ${v:alias:read1} ${v:alias:read2} ${u:alignedLog} ${u:alignedsam} ${u:rgheader} ${u:threads:1} ${u:variables} ]
        turbine::rule [ list ${u:LogDir} ] [ list __entry-optmerged-20 ${u:LogDir} ${t:11:9} ${v:alias:sampleName:4} ${u:alignedLog} ]
        turbine::rule [ list ${u:AlignDir} ] [ list __entry-optmerged-21 ${u:AlignDir} ${u:LogDir} ${t:36:5} ${t:37:5} ${t:47:4} ${t:49:4} ${t:51:4} ${v:alias:sampleName:4} ${v:index:2} ${v:t:1:6} ${u:alignDedupBams} ${u:alignedbam} ${u:alignedsam} ${u:failureLog} ${u:threads:1} ${u:variables} ]
    } else {
        turbine::rule [ list ${u:AlignDir} ] [ list __entry-async_op-strcat-22 ${u:AlignDir} ${v:alias:sampleName:4} ${v:index:2} ${u:alignDedupBams} ${u:failureLog} ${u:variables} ]
    }
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${u:variables} 1
    turbine::read_refcount_decr ${u:VarcallDir} 1
    turbine::read_refcount_decr ${u:LogDir} 1
    turbine::read_refcount_decr ${u:rgheader} 1
    turbine::read_refcount_decr ${u:RealignDir} 1
    turbine::read_refcount_decr ${u:AlignDir} 1
}


proc mkdir-app-leaf1-2 { u:RealignDir } {
    # Var: $string v:dirname:4 RENAMED [$string:__v:dirname] /usr/local/apps/bioapps/swift-t/swift-t-1.1/turbine/export/unix.swift:mkdir():65:15
    # Var: $void v:v:8 RENAMED [$void:__v:v] /usr/local/apps/bioapps/swift-t/swift-t-1.1/turbine/export/unix.swift:mkdir():65:15
    set v:dirname:4 [ turbine::retrieve_string ${u:RealignDir} CACHED 1 ]
    turbine::c::log [ list exec: "mkdir" "-p" ${v:dirname:4} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:dirname:4}
}


proc mkdir-app-leaf1-3 { u:VarcallDir } {
    # Var: $string v:dirname:5 RENAMED [$string:__v:dirname] /usr/local/apps/bioapps/swift-t/swift-t-1.1/turbine/export/unix.swift:mkdir():65:15
    # Var: $void v:v:9 RENAMED [$void:__v:v] /usr/local/apps/bioapps/swift-t/swift-t-1.1/turbine/export/unix.swift:mkdir():65:15
    set v:dirname:5 [ turbine::retrieve_string ${u:VarcallDir} CACHED 1 ]
    turbine::c::log [ list exec: "mkdir" "-p" ${v:dirname:5} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:dirname:5}
}


proc __entry-async_op-strcat-14 { t:36:5 t:37:5 v:alias:sampleName:4 u:alignedsam } {
    # Var: $string v:t:37:5 VALUE_OF [string:__t:37:5]
    # Var: $string v:t:36:5 VALUE_OF [string:__t:36:5]
    set v:t:37:5 [ turbine::retrieve_string ${t:37:5} CACHED 1 ]
    set v:t:36:5 "${v:t:37:5}/align/${v:alias:sampleName:4}.noDedups.sam"
    turbine::store_string ${t:36:5} ${v:t:36:5}
    turbine::set_filename_val ${u:alignedsam} ${v:t:36:5}
}


proc __entry-async_op-parse_int-3 { t:42:5 t:45:4 u:threads:1 } {
    # Var: $string v:t:45:4 VALUE_OF [string:__t:45:4]
    # Var: $int v:t:44:4 VALUE_OF [int:__t:44:4]
    # Var: $string v:t:42:5 VALUE_OF [string:__t:42:5]
    # Var: $int v:t:41:5 VALUE_OF [int:__t:41:5]
    # Var: $int v:threads:1 VALUE_OF [int:threads:1]
    set v:t:45:4 [ turbine::retrieve_string ${t:45:4} CACHED 1 ]
    set v:t:44:4 [ turbine::parse_int_impl ${v:t:45:4} 10 ]
    set v:t:42:5 [ turbine::retrieve_string ${t:42:5} CACHED 1 ]
    set v:t:41:5 [ turbine::parse_int_impl ${v:t:42:5} 10 ]
    set v:threads:1 [ turbine::divide_integer_impl ${v:t:41:5} ${v:t:44:4} ]
    turbine::store_integer ${u:threads:1} ${v:threads:1}
}


proc __entry-async_op-eq_string { t:11:9 t:14:9 t:36:5 v:alias:read1 v:alias:read2 u:alignedLog u:alignedsam u:rgheader u:threads:1 u:variables } {
    # Var: $string v:t:14:9 VALUE_OF [string:__t:14:9]
    # Var: $boolean v:t:13:9 VALUE_OF [boolean:__t:13:9]
    set v:t:14:9 [ turbine::retrieve_string ${t:14:9} CACHED 1 ]
    set v:t:13:9 [ string equal ${v:t:14:9} "BWAMEM" ]
    if { ${v:t:13:9} } {
        # Var: string t:17:9 RENAMED [string:__t:17] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():93:34
        # Var: string t:19:9 RENAMED [string:__t:19] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():93:64
        # Var: string[int] t:21:9 RENAMED [string[int]:__t:21] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():94:9
        # Var: string t:22:9 RENAMED [string:__t:22] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():94:9
        lassign [ adlb::multicreate [ list string 1 1 141 ] [ list string 1 1 142 ] [ list container integer string 1 1 143 ] [ list string 1 1 144 ] ] t:17:9 t:19:9 t:21:9 t:22:9
        turbine::c::log "allocated t:17:9=<${t:17:9}> t:19:9=<${t:19:9}> t:21:9=<${t:21:9}> t:22:9=<${t:22:9}>"
        turbine::read_refcount_incr ${u:variables} 1
        turbine::container_reference ${u:variables} "BWADIR" ${t:17:9} string
        turbine::container_reference ${u:variables} "BWAINDEX" ${t:19:9} string
        turbine::container_reference ${u:variables} "BWAMEMPARAMS" ${t:22:9} string
        turbine::rule [ list ${t:22:9} ] [ list __entry-arr_copy_in_imm-1 ${t:11:9} ${t:17:9} ${t:19:9} ${t:21:9} ${t:22:9} ${t:36:5} ${v:alias:read1} ${v:alias:read2} ${u:alignedLog} ${u:alignedsam} ${u:rgheader} ${u:threads:1} ]
    } else {
        # Var: string t:24:9 RENAMED [string:__t:24] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():99:36
        # Var: string t:26:9 RENAMED [string:__t:26] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():99:72
        lassign [ adlb::multicreate [ list string 1 1 145 ] [ list string 1 1 146 ] ] t:24:9 t:26:9
        turbine::c::log "allocated t:24:9=<${t:24:9}> t:26:9=<${t:26:9}>"
        turbine::container_reference ${u:variables} "NOVOALIGNDIR" ${t:24:9} string
        turbine::container_reference ${u:variables} "NOVOALIGNINDEX" ${t:26:9} string
        turbine::rule [ list ${t:11:9} ${t:24:9} ${t:26:9} ${t:36:5} ${u:rgheader} ${u:threads:1} ] [ list novoalign-app-leaf1 ${t:11:9} ${t:24:9} ${t:26:9} ${t:36:5} ${v:alias:read1} ${v:alias:read2} ${u:alignedLog} ${u:alignedsam} ${u:rgheader} ${u:threads:1} ]
    }
    turbine::read_refcount_decr ${u:variables} 1
    turbine::read_refcount_decr ${t:11:9} 1
    turbine::read_refcount_decr ${t:36:5} 1
    turbine::read_refcount_decr ${u:rgheader} 1
    turbine::read_refcount_decr ${u:threads:1} 1
}


proc __entry-arr_copy_in_imm-1 { t:11:9 t:17:9 t:19:9 t:21:9 t:22:9 t:36:5 v:alias:read1 v:alias:read2 u:alignedLog u:alignedsam u:rgheader u:threads:1 } {
    # Var: $string v:t:22:9 VALUE_OF [string:__t:22:9]
    set v:t:22:9 [ turbine::retrieve_string ${t:22:9} CACHED 1 ]
    turbine::array_kv_build ${t:21:9} [ ::adlb::dict_create 0 ${v:t:22:9} ] 1 integer string
    turbine::rule [ list ${t:11:9} ${t:17:9} ${t:19:9} ${t:36:5} ${u:rgheader} ${u:threads:1} ] [ list bwa_mem-app-leaf1 ${t:11:9} ${t:17:9} ${t:19:9} ${t:21:9} ${t:36:5} ${v:alias:read1} ${v:alias:read2} ${u:alignedLog} ${u:alignedsam} ${u:rgheader} ${u:threads:1} ]
}


proc bwa_mem-app-leaf1 { t:11:9 t:17:9 t:19:9 t:21:9 t:36:5 v:alias:read1 v:alias:read2 u:alignedLog u:alignedsam u:rgheader u:threads:1 } {
    # Var: $string v:bwadir RENAMED [$string:__v:bwadir] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():4:101
    # Var: $string$[int] v:bwamemparams RENAMED [$string$[int]:__v:bwamemparams] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():4:101
    # Var: $int v:PBSCORES RENAMED [$int:__v:PBSCORES] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():4:101
    # Var: $string v:rgheader RENAMED [$string:__v:rgheader] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():4:101
    # Var: $string v:INDEX RENAMED [$string:__v:INDEX] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():4:101
    # Var: $string v:__filename:output:2 RENAMED [$string:__v:__filename:output] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():4:101
    # Var: $string v:__filename:outLog:4 RENAMED [$string:__v:__filename:outLog] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():4:101
    # Var: $file v:output:2 RENAMED [$file:__v:output] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():4:101
    # Var: $file v:outLog:4 RENAMED [$file:__v:outLog] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():4:101
    set v:bwadir [ turbine::retrieve_string ${t:17:9} CACHED 1 ]
    set v:bwamemparams [ turbine::unpack_args ${t:21:9} 1 string ]
    set v:PBSCORES [ turbine::retrieve_integer ${u:threads:1} CACHED 1 ]
    set v:rgheader [ turbine::retrieve_string ${u:rgheader} CACHED 1 ]
    set v:INDEX [ turbine::retrieve_string ${t:19:9} CACHED 1 ]
    set v:__filename:output:2 [ turbine::retrieve_string ${t:36:5} CACHED 1 ]
    set v:__filename:outLog:4 [ turbine::retrieve_string ${t:11:9} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output:2 [ turbine::create_local_file_ref ${v:__filename:output:2} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:outLog:4 [ turbine::create_local_file_ref ${v:__filename:outLog:4} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:bwadir "mem" "-M" {*}${v:bwamemparams} "-t" ${v:PBSCORES} "-R" ${v:rgheader} ${v:INDEX} ${v:alias:read1} ${v:alias:read2} [ dict create "stdout" ${v:__filename:output:2} "stderr" ${v:__filename:outLog:4} ] ]
    turbine::exec_external ${v:bwadir} [ dict create "stdout" ${v:__filename:output:2} "stderr" ${v:__filename:outLog:4} ] "mem" "-M" {*}${v:bwamemparams} "-t" ${v:PBSCORES} "-R" ${v:rgheader} ${v:INDEX} ${v:alias:read1} ${v:alias:read2}
    turbine::store_file ${u:alignedsam} v:output:2 0
    turbine::store_file ${u:alignedLog} v:outLog:4 0
    turbine::decr_local_file_refcount v:output:2
    turbine::decr_local_file_refcount v:outLog:4
    turbine::read_refcount_decr ${t:21:9} 1
}


proc novoalign-app-leaf1 { t:11:9 t:24:9 t:26:9 t:36:5 v:alias:read1 v:alias:read2 u:alignedLog u:alignedsam u:rgheader u:threads:1 } {
    # Var: $string v:novoaligndir RENAMED [$string:__v:novoaligndir] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():9:99
    # Var: $int v:PBSCORES:1 RENAMED [$int:__v:PBSCORES] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():9:99
    # Var: $string v:INDEX:1 RENAMED [$string:__v:INDEX] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():9:99
    # Var: $string v:rgheader:1 RENAMED [$string:__v:rgheader] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():9:99
    # Var: $string v:__filename:output:1:1 RENAMED [$string:__v:__filename:output] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():9:99
    # Var: $string v:__filename:outLog:1:2 RENAMED [$string:__v:__filename:outLog] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():9:99
    # Var: $file v:output:1:1 RENAMED [$file:__v:output] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():9:99
    # Var: $file v:outLog:1:2 RENAMED [$file:__v:outLog] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():9:99
    set v:novoaligndir [ turbine::retrieve_string ${t:24:9} CACHED 1 ]
    set v:PBSCORES:1 [ turbine::retrieve_integer ${u:threads:1} CACHED 1 ]
    set v:INDEX:1 [ turbine::retrieve_string ${t:26:9} CACHED 1 ]
    set v:rgheader:1 [ turbine::retrieve_string ${u:rgheader} CACHED 1 ]
    set v:__filename:output:1:1 [ turbine::retrieve_string ${t:36:5} CACHED 1 ]
    set v:__filename:outLog:1:2 [ turbine::retrieve_string ${t:11:9} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output:1:1 [ turbine::create_local_file_ref ${v:__filename:output:1:1} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:outLog:1:2 [ turbine::create_local_file_ref ${v:__filename:outLog:1:2} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:novoaligndir "-c" ${v:PBSCORES:1} "-d" ${v:INDEX:1} "-f" ${v:alias:read1} ${v:alias:read2} "-o" "SAM" ${v:rgheader:1} [ dict create "stdout" ${v:__filename:output:1:1} "stderr" ${v:__filename:outLog:1:2} ] ]
    turbine::exec_external ${v:novoaligndir} [ dict create "stdout" ${v:__filename:output:1:1} "stderr" ${v:__filename:outLog:1:2} ] "-c" ${v:PBSCORES:1} "-d" ${v:INDEX:1} "-f" ${v:alias:read1} ${v:alias:read2} "-o" "SAM" ${v:rgheader:1}
    turbine::store_file ${u:alignedsam} v:output:1:1 0
    turbine::store_file ${u:alignedLog} v:outLog:1:2 0
    turbine::decr_local_file_refcount v:output:1:1
    turbine::decr_local_file_refcount v:outLog:1:2
}


proc __entry-optmerged-20 { u:LogDir t:11:9 v:alias:sampleName:4 u:alignedLog } {
    # Var: $string v:LogDir:3 VALUE_OF [string:LogDir]
    # Var: $string v:t:11:9 VALUE_OF [string:__t:11:9]
    set v:LogDir:3 [ turbine::retrieve_string ${u:LogDir} CACHED 1 ]
    set v:t:11:9 "${v:LogDir:3}${v:alias:sampleName:4}_Alignment.log"
    turbine::store_string ${t:11:9} ${v:t:11:9}
    turbine::set_filename_val ${u:alignedLog} ${v:t:11:9}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list mkdir-app-leaf1-4 ${v:LogDir:3} ]
    turbine::reset_priority
}


proc mkdir-app-leaf1-4 { v:LogDir:3 } {
    # Var: $void v:v:6 RENAMED [$void:__v:v] /usr/local/apps/bioapps/swift-t/swift-t-1.1/turbine/export/unix.swift:mkdir():65:15
    turbine::c::log [ list exec: "mkdir" "-p" ${v:LogDir:3} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:LogDir:3}
}


proc __entry-optmerged-21 { u:AlignDir u:LogDir t:36:5 t:37:5 t:47:4 t:49:4 t:51:4 v:alias:sampleName:4 v:index:2 v:t:1:6 u:alignDedupBams u:alignedbam u:alignedsam u:failureLog u:threads:1 u:variables } {
    # Var: $string v:AlignDir:1 VALUE_OF [string:AlignDir]
    # Var: $string v:t:34:5 VALUE_OF [string:__t:34:5]
    set v:AlignDir:1 [ turbine::retrieve_string ${u:AlignDir} CACHED 1 ]
    set v:t:34:5 "${v:AlignDir:1}${v:alias:sampleName:4}.noDedups.bam"
    turbine::set_filename_val ${u:alignedbam} ${v:t:34:5}
    turbine::rule [ list [ turbine::get_file_td ${u:alignedbam} ] ] "f:checkBam ${t:51:4} ${u:variables} {${u:alignedbam}}"
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list mkdir-app-leaf1-5 ${v:AlignDir:1} ]
    turbine::reset_priority
    turbine::rule [ list ${t:51:4} ] [ list alignDedupMain-if2 ${u:LogDir} ${t:36:5} ${t:37:5} ${t:47:4} ${t:49:4} ${t:51:4} ${v:AlignDir:1} ${v:alias:sampleName:4} ${v:index:2} ${v:t:1:6} ${v:t:34:5} ${u:alignDedupBams} ${u:alignedbam} ${u:alignedsam} ${u:failureLog} ${u:threads:1} ${u:variables} ]
}


proc mkdir-app-leaf1-5 { v:AlignDir:1 } {
    # Var: $void v:v:7 RENAMED [$void:__v:v] /usr/local/apps/bioapps/swift-t/swift-t-1.1/turbine/export/unix.swift:mkdir():65:15
    turbine::c::log [ list exec: "mkdir" "-p" ${v:AlignDir:1} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:AlignDir:1}
}


proc alignDedupMain-if2 { u:LogDir t:36:5 t:37:5 t:47:4 t:49:4 t:51:4 v:AlignDir:1 v:alias:sampleName:4 v:index:2 v:t:1:6 v:t:34:5 u:alignDedupBams u:alignedbam u:alignedsam u:failureLog u:threads:1 u:variables } {
    # Var: $boolean v:__t:51:1 RENAMED [$boolean:__v:__t:51] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():234:23
    set v:__t:51:1 [ turbine::retrieve_integer ${t:51:4} CACHED 1 ]
    if { ${v:__t:51:1} } {
        # Var: file u:dedupsortedbam RENAMED [file:dedupsortedbam] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():240:55
        # Var: boolean t:54:4 RENAMED [boolean:__t:54] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():244:9
        # Var: string t:16:8 RENAMED [string:__t:16] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():128:5
        # Var: $string v:t:52:4 VALUE_OF [string:__t:52:4]
        lassign [ adlb::multicreate [ list integer 1 1 148 ] [ list string 1 1 149 ] ] t:54:4 t:16:8
        turbine::c::log "allocated t:54:4=<${t:54:4}> t:16:8=<${t:16:8}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 3 1 147 ] ] [ list 1 ] ] u:dedupsortedbam
        adlb::write_refcount_incr ${u:alignDedupBams} 1
        turbine::read_refcount_incr ${u:threads:1} 2
        turbine::read_refcount_incr ${t:47:4} 2
        turbine::read_refcount_incr ${t:37:5} 2
        turbine::read_refcount_incr ${t:49:4} 1
        turbine::file_read_refcount_incr ${u:alignedbam} 1
        turbine::file_read_refcount_incr ${u:alignedsam} 2
        turbine::read_refcount_incr ${t:36:5} 2
        turbine::read_refcount_incr ${u:LogDir} 2
        turbine::read_refcount_incr ${u:variables} 5
        turbine::file_read_refcount_incr ${u:failureLog} 1
        turbine::container_reference ${u:variables} "MARKDUPLICATESTOOL" ${t:16:8} string
        set v:t:52:4 "${v:AlignDir:1}${v:alias:sampleName:4}.wDedups.sorted.bam"
        turbine::set_filename_val ${u:dedupsortedbam} ${v:t:52:4}
        turbine::rule [ list [ turbine::get_file_td ${u:dedupsortedbam} ] ] "f:checkBam ${t:54:4} ${u:variables} {${u:dedupsortedbam}}"
        turbine::rule [ list ${t:16:8} ] [ list __entry-async_op-eq_string-1 ${u:LogDir} ${t:16:8} ${t:36:5} ${t:37:5} ${t:47:4} ${t:49:4} ${v:AlignDir:1} ${v:alias:sampleName:4} ${v:t:1:6} ${v:t:52:4} ${u:alignedbam} ${u:alignedsam} ${u:dedupsortedbam} ${u:threads:1} ${u:variables} ]
        turbine::rule [ list ${t:54:4} ] [ list alignDedupMain-if3 ${u:LogDir} ${t:36:5} ${t:47:4} ${t:54:4} ${v:AlignDir:1} ${v:alias:sampleName:4} ${v:index:2} ${v:t:52:4} ${u:alignDedupBams} ${u:alignedsam} ${u:dedupsortedbam} ${u:failureLog} ${u:variables} ]
    } else {
        # Var: string u:message:3 RENAMED [string:message] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():304:4
        # Var: boolean t:113:1 RENAMED [boolean:__t:113] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():307:4
        lassign [ adlb::multicreate [ list string 2 1 187 ] [ list integer 1 1 188 ] ] u:message:3 t:113:1
        turbine::c::log "allocated u:message:3=<${u:message:3}> t:113:1=<${t:113:1}>"
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:append ${t:113:1} {${u:failureLog}} ${u:message:3}"
        turbine::reset_priority
        turbine::rule [ list ${t:113:1} ] "alignDedupMain-chain3 ${t:113:1} ${u:message:3} ${u:variables}"
        turbine::rule [ list ${u:LogDir} ] [ list __entry-async_op-strcat-21 ${u:LogDir} ${v:alias:sampleName:4} ${v:t:34:5} ${u:message:3} ]
    }
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${u:variables} 1
    turbine::read_refcount_decr ${u:LogDir} 1
    turbine::read_refcount_decr ${t:36:5} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${t:49:4} 1
    turbine::read_refcount_decr ${t:37:5} 1
    turbine::read_refcount_decr ${t:47:4} 1
    turbine::read_refcount_decr ${u:threads:1} 1
    adlb::write_refcount_decr ${u:alignDedupBams} 1
}


proc __entry-async_op-eq_string-1 { u:LogDir t:16:8 t:36:5 t:37:5 t:47:4 t:49:4 v:AlignDir:1 v:alias:sampleName:4 v:t:1:6 v:t:52:4 u:alignedbam u:alignedsam u:dedupsortedbam u:threads:1 u:variables } {
    # Var: $string v:t:16:8 VALUE_OF [string:__t:16:8]
    # Var: $boolean v:t:15:8 VALUE_OF [boolean:__t:15:8]
    set v:t:16:8 [ turbine::retrieve_string ${t:16:8} CACHED 1 ]
    set v:t:15:8 [ string equal ${v:t:16:8} "SAMBLASTER" ]
    if { ${v:t:15:8} } {
        # Var: file u:dedupsam RENAMED [file:dedupsam] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():129:64
        # Var: file u:dedupbam RENAMED [file:dedupbam] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():130:47
        # Var: string t:26:8 RENAMED [string:__t:26] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():131:16
        # Var: file u:samLog RENAMED [file:samLog] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():131:43
        # Var: file u:sortLog RENAMED [file:sortLog] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():132:44
        # Var: string t:30:8 RENAMED [string:__t:30] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():135:32
        # Var: string t:37:7 RENAMED [string:__t:37] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():141:52
        # Var: string[int] t:41:6 RENAMED [string[int]:__t:41] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():142:29
        # Var: $string v:t:24:8 VALUE_OF [string:__t:24:8]
        lassign [ adlb::multicreate [ list string 1 1 152 ] [ list string 1 1 155 ] [ list string 1 1 156 ] [ list container integer string 1 1 157 ] ] t:26:8 t:30:8 t:37:7 t:41:6
        turbine::c::log "allocated t:26:8=<${t:26:8}> t:30:8=<${t:30:8}> t:37:7=<${t:37:7}> t:41:6=<${t:41:6}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 150 ] [ list file 1 1 151 ] [ list file 0 1 153 ] [ list file 1 1 154 ] ] [ list 1 1 1 1 ] ] u:dedupsam u:dedupbam u:samLog u:sortLog
        turbine::file_read_refcount_incr ${u:dedupsortedbam} 1
        turbine::read_refcount_incr ${t:36:5} 1
        turbine::file_read_refcount_incr ${u:alignedsam} 1
        turbine::read_refcount_incr ${t:37:5} 1
        turbine::read_refcount_incr ${u:variables} 1
        turbine::array_kv_build ${t:41:6} [ ::adlb::dict_create 0 "--compression" 1 "1" ] 1 integer string
        turbine::container_reference ${u:variables} "SAMBLASTERDIR" ${t:30:8} string
        f:samtools_view ${u:dedupbam} ${t:47:4} ${u:dedupsam} ${u:threads:1} ${t:49:4} -100 "HARD" "RANK"
        turbine::container_reference ${u:variables} "NOVOSORTDIR" ${t:37:7} string
        set v:t:24:8 "${v:AlignDir:1}${v:alias:sampleName:4}.wDedups.bam"
        turbine::set_filename_val ${u:dedupbam} ${v:t:24:8}
        turbine::rule [ list ] "markDuplicates-ann-wait1 ${t:37:5} ${t:37:7} ${t:41:6} ${v:t:1:6} {${u:dedupbam}} {${u:dedupsortedbam}} {${u:sortLog}} ${u:threads:1}"
        turbine::rule [ list ${t:37:5} ] [ list __entry-async_op-strcat-15 ${t:26:8} ${t:30:8} ${t:36:5} ${t:37:5} ${v:alias:sampleName:4} ${u:alignedsam} ${u:dedupsam} ${u:samLog} ]
        turbine::rule [ list ${u:LogDir} ] [ list __entry-optmerged-22 ${u:LogDir} ${t:26:8} ${v:alias:sampleName:4} ${u:samLog} ${u:sortLog} ]
    } else {
        # Var: $boolean v:t:44:5 VALUE_OF [boolean:__t:44:5]
        turbine::file_read_refcount_incr ${u:alignedbam} 1
        set v:t:44:5 [ string equal ${v:t:16:8} "PICARD" ]
        if { ${v:t:44:5} } {
            # Var: file u:metricsfile RENAMED [file:metricsfile] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():147:50
            # Var: file u:alignedsortedbam RENAMED [file:alignedsortedbam] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():148:55
            # Var: string t:52:5 RENAMED [string:__t:52] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():149:19
            # Var: file u:picardLog RENAMED [file:picardLog] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():149:46
            # Var: file u:sortLog:1 RENAMED [file:sortLog] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():150:44
            # Var: string t:56:5 RENAMED [string:__t:56] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():153:54
            # Var: string[int] t:60:4 RENAMED [string[int]:__t:60] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():154:12
            # Var: string t:61:4 RENAMED [string:__t:61] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():157:50
            # Var: string t:63:4 RENAMED [string:__t:63] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():157:67
            # Var: $string v:t:48:5 VALUE_OF [string:__t:48:5]
            # Var: $string v:t:50:5 VALUE_OF [string:__t:50:5]
            lassign [ adlb::multicreate [ list string 1 1 160 ] [ list string 1 1 163 ] [ list container integer string 1 1 164 ] [ list string 1 1 165 ] [ list string 1 1 166 ] ] t:52:5 t:56:5 t:60:4 t:61:4 t:63:4
            turbine::c::log "allocated t:52:5=<${t:52:5}> t:56:5=<${t:56:5}> t:60:4=<${t:60:4}> t:61:4=<${t:61:4}> t:63:4=<${t:63:4}>"
            lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 0 1 158 ] [ list file 1 1 159 ] [ list file 0 1 161 ] [ list file 1 1 162 ] ] [ list 1 1 1 1 ] ] u:metricsfile u:alignedsortedbam u:picardLog u:sortLog:1
            turbine::read_refcount_incr ${u:variables} 2
            turbine::array_kv_build ${t:60:4} [ ::adlb::dict_create ] 1 integer string
            turbine::container_reference ${u:variables} "NOVOSORTDIR" ${t:56:5} string
            turbine::container_reference ${u:variables} "JAVADIR" ${t:61:4} string
            turbine::container_reference ${u:variables} "PICARDDIR" ${t:63:4} string
            set v:t:48:5 "${v:AlignDir:1}${v:alias:sampleName:4}.picard.metrics"
            turbine::set_filename_val ${u:metricsfile} ${v:t:48:5}
            set v:t:50:5 "${v:AlignDir:1}${v:alias:sampleName:4}.noDedups.sorted.bam"
            turbine::set_filename_val ${u:alignedsortedbam} ${v:t:50:5}
            turbine::rule [ list ] [ list markDuplicates-ann-wait2 ${t:37:5} ${t:52:5} ${t:56:5} ${t:60:4} ${t:61:4} ${t:63:4} ${v:t:1:6} ${v:t:48:5} ${v:t:50:5} ${v:t:52:4} ${u:alignedbam} ${u:alignedsortedbam} ${u:dedupsortedbam} ${u:metricsfile} ${u:picardLog} ${u:sortLog:1} ${u:threads:1} ]
            turbine::rule [ list ${u:LogDir} ] [ list __entry-optmerged-23 ${u:LogDir} ${t:52:5} ${v:alias:sampleName:4} ${u:picardLog} ${u:sortLog:1} ]
        } else {
            # Var: file u:novoLog RENAMED [file:novoLog] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():162:44
            # Var: string t:69:4 RENAMED [string:__t:69] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():165:52
            # Var: string[int] t:73:3 RENAMED [string[int]:__t:73] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():166:30
            lassign [ adlb::multicreate [ list string 1 1 168 ] [ list container integer string 1 1 169 ] ] t:69:4 t:73:3
            turbine::c::log "allocated t:69:4=<${t:69:4}> t:73:3=<${t:73:3}>"
            lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 167 ] ] [ list 1 ] ] u:novoLog
            turbine::file_read_refcount_incr ${u:dedupsortedbam} 1
            turbine::array_kv_build ${t:73:3} [ ::adlb::dict_create 0 "--markDuplicates" ] 1 integer string
            turbine::container_reference ${u:variables} "NOVOSORTDIR" ${t:69:4} string
            turbine::rule [ list ] "markDuplicates-ann-wait3 ${t:37:5} ${t:69:4} ${t:73:3} ${v:t:1:6} {${u:alignedbam}} {${u:dedupsortedbam}} {${u:novoLog}} ${u:threads:1}"
            turbine::rule [ list ${u:LogDir} ] [ list __entry-async_op-strcat-16 ${u:LogDir} ${v:alias:sampleName:4} ${u:novoLog} ]
        }
    }
    turbine::read_refcount_decr ${u:variables} 1
    turbine::read_refcount_decr ${u:LogDir} 1
    turbine::read_refcount_decr ${t:36:5} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${t:49:4} 1
    turbine::read_refcount_decr ${t:37:5} 1
    turbine::read_refcount_decr ${t:47:4} 1
    turbine::read_refcount_decr ${u:threads:1} 1
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
}


proc markDuplicates-ann-wait1 { t:37:5 t:37:7 t:41:6 v:t:1:6 u:dedupbam u:dedupsortedbam u:sortLog u:threads:1 } {
    f:novosort ${u:dedupsortedbam} ${u:sortLog} ${t:37:7} ${u:dedupbam} ${t:37:5} ${u:threads:1} ${t:41:6} ${v:t:1:6} "HARD" "RANK"
    turbine::read_refcount_decr ${t:41:6} 1
    turbine::read_refcount_decr ${t:37:5} 1
    turbine::file_read_refcount_decr ${u:dedupbam} 1
    turbine::read_refcount_decr ${t:37:7} 1
    turbine::read_refcount_decr ${u:threads:1} 1
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
    turbine::file_read_refcount_decr ${u:sortLog} 1
}


proc __entry-async_op-strcat-15 { t:26:8 t:30:8 t:36:5 t:37:5 v:alias:sampleName:4 u:alignedsam u:dedupsam u:samLog } {
    # Var: $string v:t:37:5:1 VALUE_OF [string:__t:37:5]
    # Var: $string v:t:19:8 VALUE_OF [string:__t:19:8]
    set v:t:37:5:1 [ turbine::retrieve_string ${t:37:5} CACHED 1 ]
    set v:t:19:8 "${v:t:37:5:1}/align/${v:alias:sampleName:4}.wDedups.sam"
    turbine::set_filename_val ${u:dedupsam} ${v:t:19:8}
    turbine::rule [ list ${t:26:8} ${t:30:8} ${t:36:5} [ turbine::get_file_td ${u:alignedsam} ] ] [ list samblaster-app-leaf1 ${t:26:8} ${t:30:8} ${t:36:5} ${v:t:19:8} ${u:alignedsam} ${u:dedupsam} ${u:samLog} ]
}


proc samblaster-app-leaf1 { t:26:8 t:30:8 t:36:5 v:t:19:8 u:alignedsam u:dedupsam u:samLog } {
    # Var: $string v:samblasterdir RENAMED [$string:__v:samblasterdir] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samblaster():27:58
    # Var: $string v:__filename:inputFile:3 RENAMED [$string:__v:__filename:inputFile] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samblaster():27:58
    # Var: $string v:__filename:outLog:3 RENAMED [$string:__v:__filename:outLog] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samblaster():27:58
    # Var: $file v:inputFile:3 RENAMED [$file:__v:inputFile] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samblaster():27:58
    # Var: $file v:output:1 RENAMED [$file:__v:output] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samblaster():27:58
    # Var: $file v:outLog:3 RENAMED [$file:__v:outLog] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samblaster():27:58
    set v:samblasterdir [ turbine::retrieve_string ${t:30:8} CACHED 1 ]
    set v:__filename:inputFile:3 [ turbine::retrieve_string ${t:36:5} CACHED 1 ]
    set v:__filename:outLog:3 [ turbine::retrieve_string ${t:26:8} CACHED 1 ]
    set v:inputFile:3 [ turbine::retrieve_file ${u:alignedsam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output:1 [ turbine::create_local_file_ref ${v:t:19:8} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:outLog:3 [ turbine::create_local_file_ref ${v:__filename:outLog:3} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:samblasterdir "-M" "-i" ${v:__filename:inputFile:3} [ dict create "stdout" ${v:t:19:8} "stderr" ${v:__filename:outLog:3} ] ]
    turbine::exec_external ${v:samblasterdir} [ dict create "stdout" ${v:t:19:8} "stderr" ${v:__filename:outLog:3} ] "-M" "-i" ${v:__filename:inputFile:3}
    turbine::store_file ${u:dedupsam} v:output:1 0
    turbine::store_file ${u:samLog} v:outLog:3 0
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list rm-app-leaf1 ${v:t:19:8} ${u:dedupsam} ]
    turbine::reset_priority
    turbine::decr_local_file_refcount v:output:1
    turbine::decr_local_file_refcount v:outLog:3
}


proc rm-app-leaf1 { v:t:19:8 u:dedupsam } {
    # Var: $file v:f:14 RENAMED [$file:__v:f] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/generalfunctions/general.swift:rm():55:6
    # Var: $void v:v:5 RENAMED [$void:__v:v] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/generalfunctions/general.swift:rm():55:6
    set v:f:14 [ turbine::retrieve_file ${u:dedupsam} CACHED 1 ]
    turbine::c::log [ list exec: "rm" ${v:t:19:8} [ dict create ] ]
    turbine::exec_external "rm" [ dict create ] ${v:t:19:8}
}


proc __entry-optmerged-22 { u:LogDir t:26:8 v:alias:sampleName:4 u:samLog u:sortLog } {
    # Var: $string v:LogDir:5 VALUE_OF [string:LogDir]
    # Var: $string v:t:26:8 VALUE_OF [string:__t:26:8]
    # Var: $string v:t:28:8 VALUE_OF [string:__t:28:8]
    set v:LogDir:5 [ turbine::retrieve_string ${u:LogDir} CACHED 1 ]
    set v:t:26:8 "${v:LogDir:5}${v:alias:sampleName:4}_SamblasterDedup.log"
    turbine::store_string ${t:26:8} ${v:t:26:8}
    set v:t:28:8 "${v:LogDir:5}${v:alias:sampleName:4}_Sort.log"
    turbine::set_filename_val ${u:samLog} ${v:t:26:8}
    turbine::set_filename_val ${u:sortLog} ${v:t:28:8}
}


proc markDuplicates-ann-wait2 { t:37:5 t:52:5 t:56:5 t:60:4 t:61:4 t:63:4 v:t:1:6 v:t:48:5 v:t:50:5 v:t:52:4 u:alignedbam u:alignedsortedbam u:dedupsortedbam u:metricsfile u:picardLog u:sortLog:1 u:threads:1 } {
    f:novosort ${u:alignedsortedbam} ${u:sortLog:1} ${t:56:5} ${u:alignedbam} ${t:37:5} ${u:threads:1} ${t:60:4} ${v:t:1:6} "HARD" "RANK"
    turbine::rule [ list ${t:37:5} ${t:52:5} ${t:61:4} ${t:63:4} [ turbine::get_file_td ${u:alignedsortedbam} ] ] [ list picard-app-leaf1 ${t:37:5} ${t:52:5} ${t:61:4} ${t:63:4} ${v:t:48:5} ${v:t:50:5} ${v:t:52:4} ${u:alignedsortedbam} ${u:dedupsortedbam} ${u:metricsfile} ${u:picardLog} ]
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${t:60:4} 1
    turbine::file_read_refcount_decr ${u:sortLog:1} 1
    turbine::read_refcount_decr ${u:threads:1} 1
    turbine::read_refcount_decr ${t:56:5} 1
}


proc picard-app-leaf1 { t:37:5 t:52:5 t:61:4 t:63:4 v:t:48:5 v:t:50:5 v:t:52:4 u:alignedsortedbam u:dedupsortedbam u:metricsfile u:picardLog } {
    # Var: $string v:javadir:3 RENAMED [$string:__v:javadir] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:picard():45:250
    # Var: $string v:picarddir RENAMED [$string:__v:picarddir] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:picard():45:250
    # Var: $string v:tmpdir RENAMED [$string:__v:tmpdir] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:picard():45:250
    # Var: $string v:__filename:outLog:1:1 RENAMED [$string:__v:__filename:outLog] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:picard():45:250
    # Var: $file v:inputFile:1:1 RENAMED [$file:__v:inputFile] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:picard():45:250
    # Var: $file v:outputfile:3 RENAMED [$file:__v:outputfile] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:picard():45:250
    # Var: $file v:outLog:1:1 RENAMED [$file:__v:outLog] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:picard():45:250
    # Var: $file v:metricsfile RENAMED [$file:__v:metricsfile] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:picard():45:250
    set v:javadir:3 [ turbine::retrieve_string ${t:61:4} CACHED 1 ]
    set v:picarddir [ turbine::retrieve_string ${t:63:4} CACHED 1 ]
    set v:tmpdir [ turbine::retrieve_string ${t:37:5} CACHED 1 ]
    set v:__filename:outLog:1:1 [ turbine::retrieve_string ${t:52:5} CACHED 1 ]
    set v:inputFile:1:1 [ turbine::retrieve_file ${u:alignedsortedbam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:3 [ turbine::create_local_file_ref ${v:t:52:4} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:outLog:1:1 [ turbine::create_local_file_ref ${v:__filename:outLog:1:1} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:metricsfile [ turbine::create_local_file_ref ${v:t:48:5} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:3 "-Xmx8g" "-jar" ${v:picarddir} "MarkDuplicates" "INPUT=" ${v:t:50:5} "OUTPUT=" ${v:t:52:4} "METRICS_FILE=" ${v:t:48:5} "TMP_DIR=" ${v:tmpdir} "ASSUME_SORTED=true" "MAX_RECORDS_IN_RAM=null" "CREATE_INDEX=true" "VALIDATION_STRINGENCY=SILENT" [ dict create "stderr" ${v:__filename:outLog:1:1} ] ]
    turbine::exec_external ${v:javadir:3} [ dict create "stderr" ${v:__filename:outLog:1:1} ] "-Xmx8g" "-jar" ${v:picarddir} "MarkDuplicates" "INPUT=" ${v:t:50:5} "OUTPUT=" ${v:t:52:4} "METRICS_FILE=" ${v:t:48:5} "TMP_DIR=" ${v:tmpdir} "ASSUME_SORTED=true" "MAX_RECORDS_IN_RAM=null" "CREATE_INDEX=true" "VALIDATION_STRINGENCY=SILENT"
    turbine::store_file ${u:dedupsortedbam} v:outputfile:3 0
    turbine::store_file ${u:picardLog} v:outLog:1:1 0
    turbine::store_file ${u:metricsfile} v:metricsfile 0
    turbine::decr_local_file_refcount v:outputfile:3
    turbine::decr_local_file_refcount v:outLog:1:1
    turbine::decr_local_file_refcount v:metricsfile
}


proc __entry-optmerged-23 { u:LogDir t:52:5 v:alias:sampleName:4 u:picardLog u:sortLog:1 } {
    # Var: $string v:LogDir:7 VALUE_OF [string:LogDir]
    # Var: $string v:t:52:5 VALUE_OF [string:__t:52:5]
    # Var: $string v:t:54:5 VALUE_OF [string:__t:54:5]
    set v:LogDir:7 [ turbine::retrieve_string ${u:LogDir} CACHED 1 ]
    set v:t:52:5 "${v:LogDir:7}${v:alias:sampleName:4}_PicardDedup.log"
    turbine::store_string ${t:52:5} ${v:t:52:5}
    set v:t:54:5 "${v:LogDir:7}${v:alias:sampleName:4}_Sort.log"
    turbine::set_filename_val ${u:picardLog} ${v:t:52:5}
    turbine::set_filename_val ${u:sortLog:1} ${v:t:54:5}
}


proc markDuplicates-ann-wait3 { t:37:5 t:69:4 t:73:3 v:t:1:6 u:alignedbam u:dedupsortedbam u:novoLog u:threads:1 } {
    f:novosort ${u:dedupsortedbam} ${u:novoLog} ${t:69:4} ${u:alignedbam} ${t:37:5} ${u:threads:1} ${t:73:3} ${v:t:1:6} "HARD" "RANK"
    turbine::file_read_refcount_decr ${u:novoLog} 1
    turbine::read_refcount_decr ${t:69:4} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${t:37:5} 1
    turbine::read_refcount_decr ${t:73:3} 1
    turbine::read_refcount_decr ${u:threads:1} 1
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
}


proc __entry-async_op-strcat-16 { u:LogDir v:alias:sampleName:4 u:novoLog } {
    # Var: $string v:LogDir:9 VALUE_OF [string:LogDir]
    # Var: $string v:t:67:4 VALUE_OF [string:__t:67:4]
    set v:LogDir:9 [ turbine::retrieve_string ${u:LogDir} CACHED 1 ]
    set v:t:67:4 "${v:LogDir:9}${v:alias:sampleName:4}_NovosortDedup.log"
    turbine::set_filename_val ${u:novoLog} ${v:t:67:4}
}


proc alignDedupMain-if3 { u:LogDir t:36:5 t:47:4 t:54:4 v:AlignDir:1 v:alias:sampleName:4 v:index:2 v:t:52:4 u:alignDedupBams u:alignedsam u:dedupsortedbam u:failureLog u:variables } {
    # Var: $boolean v:__t:54 RENAMED [$boolean:__v:__t:54] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():244:24
    set v:__t:54 [ turbine::retrieve_integer ${t:54:4} CACHED 1 ]
    if { ${v:__t:54} } {
        # Var: file u:flagstats RENAMED [file:flagstats] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():253:74
        # Var: string[int] u:stat RENAMED [string[int]:stat] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():257:5
        # Var: string[int] t:61:3 RENAMED [string[int]:__t:61] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():258:19
        # Var: string[int] t:64:3 RENAMED [string[int]:__t:64] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():259:17
        # Var: string[int] t:67:3 RENAMED [string[int]:__t:67] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():260:16
        # Var: float u:perc_mapped RENAMED [float:perc_mapped] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():263:16
        # Var: float t:74:2 RENAMED [float:__t:74] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():263:43
        # Var: string u:cutoff_info RENAMED [string:cutoff_info] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():266:5
        # Var: string t:80:2 RENAMED [string:__t:80] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():267:35
        # Var: string t:84:1 RENAMED [string:__t:84] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():269:31
        # Var: float t:88:1 RENAMED [float:__t:88] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():272:21
        # Var: boolean t:91:1 RENAMED [boolean:__t:91] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():273:22
        # Var: float t:92:1 RENAMED [float:__t:92] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():273:24
        # Var: $string v:t:56:4 VALUE_OF [string:__t:56:4]
        lassign [ adlb::multicreate [ list container integer string 3 1 171 ] [ list container integer string 1 1 172 ] [ list container integer string 1 1 173 ] [ list container integer string 1 1 174 ] [ list float 1 1 175 ] [ list float 1 1 176 ] [ list string 2 1 177 ] [ list string 2 1 178 ] [ list string 2 1 179 ] [ list float 1 1 180 ] [ list integer 1 1 181 ] [ list float 1 1 182 ] ] u:stat t:61:3 t:64:3 t:67:3 u:perc_mapped t:74:2 u:cutoff_info t:80:2 t:84:1 t:88:1 t:91:1 t:92:1
        turbine::c::log "allocated u:stat=<${u:stat}> t:61:3=<${t:61:3}> t:64:3=<${t:64:3}> t:67:3=<${t:67:3}> u:perc_mapped=<${u:perc_mapped}>"
        turbine::c::log "allocated t:74:2=<${t:74:2}> u:cutoff_info=<${u:cutoff_info}> t:80:2=<${t:80:2}> t:84:1=<${t:84:1}> t:88:1=<${t:88:1}>"
        turbine::c::log "allocated t:91:1=<${t:91:1}> t:92:1=<${t:92:1}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 170 ] ] [ list 1 ] ] u:flagstats
        adlb::write_refcount_incr ${u:alignDedupBams} 1
        turbine::file_read_refcount_incr ${u:dedupsortedbam} 2
        turbine::read_refcount_incr ${t:36:5} 1
        turbine::file_read_refcount_incr ${u:alignedsam} 1
        turbine::read_refcount_incr ${t:47:4} 1
        turbine::read_refcount_incr ${u:variables} 2
        set a:t:62:3 [ adlb::subscript_container ${u:stat} 4 ]
        set a:tot_mapped [ adlb::subscript_container ${t:61:3} 0 ]
        set a:t:65:3 [ adlb::subscript_container ${u:stat} 0 ]
        set a:tot_reads [ adlb::subscript_container ${t:64:3} 0 ]
        set a:t:68:3 [ adlb::subscript_container ${u:stat} 3 ]
        set a:tot_dups [ adlb::subscript_container ${t:67:3} 0 ]
        turbine::container_reference ${u:variables} "DUP_CUTOFF" ${t:80:2} string
        turbine::container_reference ${u:variables} "MAP_CUTOFF" ${t:84:1} string
        set v:t:56:4 "${v:AlignDir:1}${v:alias:sampleName:4}.wDedups.sorted.bam.flagstats"
        turbine::set_filename_val ${u:flagstats} ${v:t:56:4}
        turbine::rule [ list ${t:36:5} [ turbine::get_file_td ${u:alignedsam} ] ] "rm-app-leaf1-1 ${t:36:5} {${u:alignedsam}}"
        turbine::rule [ list ${a:t:62:3} ] "__entry-call_foreign-split-1 {${a:t:62:3}} ${t:61:3}"
        turbine::rule [ list ${a:t:65:3} ] "__entry-call_foreign-split-2 {${a:t:65:3}} ${t:64:3}"
        turbine::rule [ list ${a:t:68:3} ] "__entry-call_foreign-split-3 {${a:t:68:3}} ${t:67:3}"
        turbine::rule [ list ${a:tot_reads} ] [ list __entry-async_op-parse_float ${a:tot_dups} ${a:tot_reads} ${t:74:2} ${t:80:2} ${t:84:1} ${t:88:1} ${t:91:1} ${t:92:1} ${v:alias:sampleName:4} ${v:index:2} ${v:t:52:4} ${u:alignDedupBams} ${u:cutoff_info} ${u:dedupsortedbam} ${u:failureLog} ${u:perc_mapped} ${u:variables} ]
        turbine::rule [ list ${a:tot_mapped} ] "__entry-async_op-parse_float-2 {${a:tot_mapped}} ${t:74:2}"
        turbine::rule [ list ${t:80:2} ] "__entry-async_op-parse_float-3 ${t:80:2} ${t:88:1}"
        turbine::rule [ list ${t:84:1} ] "__entry-async_op-parse_float-4 ${t:84:1} ${t:92:1}"
        turbine::rule [ list ${t:47:4} ] [ list samtools_flagstat-app-leaf1 ${t:47:4} ${v:t:52:4} ${v:t:56:4} ${u:dedupsortedbam} ${u:flagstats} ${u:stat} ]
    } else {
        # Var: string u:mssg RENAMED [string:mssg] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():294:5
        # Var: boolean t:107:1 RENAMED [boolean:__t:107] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():298:5
        lassign [ adlb::multicreate [ list string 2 1 185 ] [ list integer 1 1 186 ] ] u:mssg t:107:1
        turbine::c::log "allocated u:mssg=<${u:mssg}> t:107:1=<${t:107:1}>"
        turbine::read_refcount_incr ${u:LogDir} 1
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:append ${t:107:1} {${u:failureLog}} ${u:mssg}"
        turbine::reset_priority
        turbine::rule [ list ${t:107:1} ] "alignDedupMain-chain2 ${t:107:1} ${u:mssg} ${u:variables}"
        turbine::rule [ list ${u:LogDir} ] [ list __entry-async_op-strcat-20 ${u:LogDir} ${v:alias:sampleName:4} ${v:t:52:4} ${u:mssg} ]
    }
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${u:variables} 1
    turbine::read_refcount_decr ${u:LogDir} 1
    turbine::read_refcount_decr ${t:36:5} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::read_refcount_decr ${t:47:4} 1
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
    adlb::write_refcount_decr ${u:alignDedupBams} 1
}


proc rm-app-leaf1-1 { t:36:5 u:alignedsam } {
    # Var: $string v:__filename:f:2 RENAMED [$string:__v:__filename:f] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/generalfunctions/general.swift:rm():55:6
    # Var: $file v:f:13 RENAMED [$file:__v:f] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/generalfunctions/general.swift:rm():55:6
    # Var: $void v:v:4 RENAMED [$void:__v:v] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/generalfunctions/general.swift:rm():55:6
    set v:__filename:f:2 [ turbine::retrieve_string ${t:36:5} CACHED 1 ]
    set v:f:13 [ turbine::retrieve_file ${u:alignedsam} CACHED 1 ]
    turbine::c::log [ list exec: "rm" ${v:__filename:f:2} [ dict create ] ]
    turbine::exec_external "rm" [ dict create ] ${v:__filename:f:2}
}


proc __entry-call_foreign-split-1 { a:t:62:3 t:61:3 } {
    # Var: $string v:alias:t:62:3 VALUE_OF [string:__alias:t:62:3]
    # Var: $string$[int] v:t:61:3 VALUE_OF [string[int]:__t:61:3]
    set v:alias:t:62:3 [ turbine::retrieve_string ${a:t:62:3} CACHED 1 ]
    set v:t:61:3 [ turbine::split_impl ${v:alias:t:62:3} " " ]
    turbine::build_rec ${t:61:3} ${v:t:61:3} [ list container integer string ] 0 1
}


proc __entry-call_foreign-split-2 { a:t:65:3 t:64:3 } {
    # Var: $string v:alias:t:65:3 VALUE_OF [string:__alias:t:65:3]
    # Var: $string$[int] v:t:64:3 VALUE_OF [string[int]:__t:64:3]
    set v:alias:t:65:3 [ turbine::retrieve_string ${a:t:65:3} CACHED 1 ]
    set v:t:64:3 [ turbine::split_impl ${v:alias:t:65:3} " " ]
    turbine::build_rec ${t:64:3} ${v:t:64:3} [ list container integer string ] 0 1
}


proc __entry-call_foreign-split-3 { a:t:68:3 t:67:3 } {
    # Var: $string v:alias:t:68:3 VALUE_OF [string:__alias:t:68:3]
    # Var: $string$[int] v:t:67:3 VALUE_OF [string[int]:__t:67:3]
    set v:alias:t:68:3 [ turbine::retrieve_string ${a:t:68:3} CACHED 1 ]
    set v:t:67:3 [ turbine::split_impl ${v:alias:t:68:3} " " ]
    turbine::build_rec ${t:67:3} ${v:t:67:3} [ list container integer string ] 0 1
}


proc __entry-async_op-parse_float { a:tot_dups a:tot_reads t:74:2 t:80:2 t:84:1 t:88:1 t:91:1 t:92:1 v:alias:sampleName:4 v:index:2 v:t:52:4 u:alignDedupBams u:cutoff_info u:dedupsortedbam u:failureLog u:perc_mapped u:variables } {
    # Var: $string v:alias:tot_reads VALUE_OF [string:__alias:tot_reads]
    # Var: $float v:t:73:2 VALUE_OF [float:__t:73:2]
    set v:alias:tot_reads [ turbine::retrieve_string ${a:tot_reads} CACHED 1 ]
    set v:t:73:2 [ turbine::string2float_impl ${v:alias:tot_reads} ]
    turbine::rule [ list ${t:74:2} ] "__entry-async_op-div_float ${t:74:2} ${t:91:1} ${t:92:1} ${v:t:73:2} ${u:perc_mapped}"
    turbine::rule [ list ${a:tot_dups} ] [ list __entry-async_op-parse_float-1 ${a:tot_dups} ${t:80:2} ${t:84:1} ${t:88:1} ${t:91:1} ${v:alias:sampleName:4} ${v:index:2} ${v:t:52:4} ${v:t:73:2} ${u:alignDedupBams} ${u:cutoff_info} ${u:dedupsortedbam} ${u:failureLog} ${u:perc_mapped} ${u:variables} ]
}


proc __entry-async_op-div_float { t:74:2 t:91:1 t:92:1 v:t:73:2 u:perc_mapped } {
    # Var: $float v:t:74:2:1 VALUE_OF [float:__t:74:2]
    # Var: $float v:perc_mapped VALUE_OF [float:perc_mapped]
    set v:t:74:2:1 [ turbine::retrieve_float ${t:74:2} CACHED 1 ]
    set v:perc_mapped [ expr { ${v:t:74:2:1} / ${v:t:73:2} } ]
    turbine::store_float ${u:perc_mapped} ${v:perc_mapped}
    turbine::rule [ list ${t:92:1} ] "__entry-async_op-gt_float ${t:91:1} ${t:92:1} ${v:perc_mapped}"
}


proc __entry-async_op-gt_float { t:91:1 t:92:1 v:perc_mapped } {
    # Var: $float v:t:92:1:1 VALUE_OF [float:__t:92:1]
    # Var: $boolean v:t:91:1 VALUE_OF [boolean:__t:91:1]
    set v:t:92:1:1 [ turbine::retrieve_float ${t:92:1} CACHED 1 ]
    set v:t:91:1 [ expr { ${v:perc_mapped} > ${v:t:92:1:1} } ]
    turbine::store_integer ${t:91:1} ${v:t:91:1}
}


proc __entry-async_op-parse_float-1 { a:tot_dups t:80:2 t:84:1 t:88:1 t:91:1 v:alias:sampleName:4 v:index:2 v:t:52:4 v:t:73:2 u:alignDedupBams u:cutoff_info u:dedupsortedbam u:failureLog u:perc_mapped u:variables } {
    # Var: $string v:alias:tot_dups VALUE_OF [string:__alias:tot_dups]
    # Var: $float v:t:71:3:1 VALUE_OF [float:__t:71:3]
    # Var: $float v:t:70:3 VALUE_OF [float:__t:70:3]
    # Var: $float v:perc_dup VALUE_OF [float:perc_dup]
    set v:alias:tot_dups [ turbine::retrieve_string ${a:tot_dups} CACHED 1 ]
    set v:t:71:3:1 [ turbine::string2float_impl ${v:alias:tot_dups} ]
    set v:t:70:3 [ expr { ${v:t:71:3:1} * 100.0 } ]
    set v:perc_dup [ expr { ${v:t:70:3} / ${v:t:73:2} } ]
    turbine::rule [ list ${t:88:1} ${t:91:1} ] [ list __entry-async_op-lt_float ${t:88:1} ${t:91:1} ${v:index:2} ${v:perc_dup} ${v:t:52:4} ${u:alignDedupBams} ${u:cutoff_info} ${u:dedupsortedbam} ${u:failureLog} ${u:variables} ]
    turbine::rule [ list ${t:80:2} ${t:84:1} ${u:perc_mapped} ] [ list __entry-async_op-strcat-19 ${t:80:2} ${t:84:1} ${v:alias:sampleName:4} ${v:perc_dup} ${u:cutoff_info} ${u:perc_mapped} ]
}


proc __entry-async_op-lt_float { t:88:1 t:91:1 v:index:2 v:perc_dup v:t:52:4 u:alignDedupBams u:cutoff_info u:dedupsortedbam u:failureLog u:variables } {
    # Var: $float v:t:88:1:1 VALUE_OF [float:__t:88:1]
    # Var: $boolean v:t:87:1:1 VALUE_OF [boolean:__t:87:1]
    # Var: $boolean v:t:91:1:1 VALUE_OF [boolean:__t:91:1]
    # Var: $boolean v:t:86:1:1 VALUE_OF [boolean:__t:86:1]
    set v:t:88:1:1 [ turbine::retrieve_float ${t:88:1} CACHED 1 ]
    set v:t:87:1:1 [ expr { ${v:perc_dup} < ${v:t:88:1:1} } ]
    set v:t:91:1:1 [ turbine::retrieve_integer ${t:91:1} CACHED 1 ]
    set v:t:86:1:1 [ expr { ${v:t:87:1:1} && ${v:t:91:1:1} } ]
    if { ${v:t:86:1:1} } {
        turbine::file_read_refcount_incr ${u:dedupsortedbam} 1
        turbine::container_insert ${u:alignDedupBams} ${v:index:2} ${u:dedupsortedbam} file_ref 0
        turbine::rule [ list ${u:cutoff_info} ] "__entry-async_op-strcat-17 ${u:cutoff_info}"
    } else {
        # Var: string u:m:2 RENAMED [string:m] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():285:6
        # Var: boolean t:101:1 RENAMED [boolean:__t:101] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():288:6
        lassign [ adlb::multicreate [ list string 2 1 183 ] [ list integer 1 1 184 ] ] u:m:2 t:101:1
        turbine::c::log "allocated u:m:2=<${u:m:2}> t:101:1=<${t:101:1}>"
        turbine::read_refcount_incr ${u:variables} 1
        turbine::file_read_refcount_incr ${u:failureLog} 1
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:append ${t:101:1} {${u:failureLog}} ${u:m:2}"
        turbine::reset_priority
        turbine::rule [ list ${t:101:1} ] "alignDedupMain-chain1 ${t:101:1} ${u:m:2} ${u:variables}"
        turbine::rule [ list ${u:cutoff_info} ] [ list __entry-async_op-strcat-18 ${v:t:52:4} ${u:cutoff_info} ${u:m:2} ]
    }
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${u:variables} 1
    turbine::read_refcount_decr ${u:cutoff_info} 1
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
    adlb::write_refcount_decr ${u:alignDedupBams} 1
}


proc __entry-async_op-strcat-17 { u:cutoff_info } {
    # Var: $string v:cutoff_info:1 VALUE_OF [string:cutoff_info]
    # Var: $string v:t:96:1 VALUE_OF [string:__t:96:1]
    # Var: $void v:t:95:1 VALUE_OF [void:__t:95:1]
    set v:cutoff_info:1 [ turbine::retrieve_string ${u:cutoff_info} CACHED 1 ]
    set v:t:96:1 "QC-Test SUCCESS: ${v:cutoff_info:1}"
    set v:t:95:1 [ turbine::printf_local ${v:t:96:1} ]
}


proc alignDedupMain-chain1 { t:101:1 u:m:2 u:variables } {
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:exitIfFlagGiven ${u:variables} ${u:m:2}"
    turbine::reset_priority
    turbine::read_refcount_decr ${t:101:1} 1
}


proc __entry-async_op-strcat-18 { v:t:52:4 u:cutoff_info u:m:2 } {
    # Var: $string v:cutoff_info:2 VALUE_OF [string:cutoff_info]
    # Var: $string v:m:2 VALUE_OF [string:m:2]
    set v:cutoff_info:2 [ turbine::retrieve_string ${u:cutoff_info} CACHED 1 ]
    set v:m:2 "FAILURE: ${v:t:52:4} failed the QC test: ${v:cutoff_info:2}"
    turbine::store_string ${u:m:2} ${v:m:2}
}


proc __entry-async_op-strcat-19 { t:80:2 t:84:1 v:alias:sampleName:4 v:perc_dup u:cutoff_info u:perc_mapped } {
    # Var: $string v:t:80:2 VALUE_OF [string:__t:80:2]
    # Var: $float v:perc_mapped:1 VALUE_OF [float:perc_mapped]
    # Var: $string v:t:84:1:1 VALUE_OF [string:__t:84:1]
    # Var: $string v:cutoff_info VALUE_OF [string:cutoff_info]
    set v:t:80:2 [ turbine::retrieve_string ${t:80:2} CACHED 1 ]
    set v:perc_mapped:1 [ turbine::retrieve_float ${u:perc_mapped} CACHED 1 ]
    set v:t:84:1:1 [ turbine::retrieve_string ${t:84:1} CACHED 1 ]
    set v:cutoff_info "${v:alias:sampleName:4}\tPercentDuplication=${v:perc_dup};DuplicationCutoff=${v:t:80:2}\tPercentMapped=${v:perc_mapped:1};MappingCutoff=${v:t:84:1:1}"
    turbine::store_string ${u:cutoff_info} ${v:cutoff_info}
}


proc __entry-async_op-parse_float-2 { a:tot_mapped t:74:2 } {
    # Var: $string v:alias:tot_mapped VALUE_OF [string:__alias:tot_mapped]
    # Var: $float v:t:75:2 VALUE_OF [float:__t:75:2]
    # Var: $float v:t:74:2 VALUE_OF [float:__t:74:2]
    set v:alias:tot_mapped [ turbine::retrieve_string ${a:tot_mapped} CACHED 1 ]
    set v:t:75:2 [ turbine::string2float_impl ${v:alias:tot_mapped} ]
    set v:t:74:2 [ expr { ${v:t:75:2} * 100.0 } ]
    turbine::store_float ${t:74:2} ${v:t:74:2}
}


proc __entry-async_op-parse_float-3 { t:80:2 t:88:1 } {
    # Var: $string v:t:80:2:1 VALUE_OF [string:__t:80:2]
    # Var: $float v:t:88:1 VALUE_OF [float:__t:88:1]
    set v:t:80:2:1 [ turbine::retrieve_string ${t:80:2} CACHED 1 ]
    set v:t:88:1 [ turbine::string2float_impl ${v:t:80:2:1} ]
    turbine::store_float ${t:88:1} ${v:t:88:1}
}


proc __entry-async_op-parse_float-4 { t:84:1 t:92:1 } {
    # Var: $string v:t:84:1:2 VALUE_OF [string:__t:84:1]
    # Var: $float v:t:92:1 VALUE_OF [float:__t:92:1]
    set v:t:84:1:2 [ turbine::retrieve_string ${t:84:1} CACHED 1 ]
    set v:t:92:1 [ turbine::string2float_impl ${v:t:84:1:2} ]
    turbine::store_float ${t:92:1} ${v:t:92:1}
}


proc samtools_flagstat-app-leaf1 { t:47:4 v:t:52:4 v:t:56:4 u:dedupsortedbam u:flagstats u:stat } {
    # Var: $string v:samtoolsdir RENAMED [$string:__v:samtoolsdir] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samtools_flagstat():51:42
    # Var: $file v:inputFile:2 RENAMED [$file:__v:inputFile] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samtools_flagstat():51:42
    # Var: $file v:output RENAMED [$file:__v:output] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samtools_flagstat():51:42
    # Var: $file v:flagstats VALUE_OF [file:flagstats]
    # Var: $string$[int] v:stat VALUE_OF [string[int]:stat]
    set v:samtoolsdir [ turbine::retrieve_string ${t:47:4} CACHED 1 ]
    set v:inputFile:2 [ turbine::retrieve_file ${u:dedupsortedbam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output [ turbine::create_local_file_ref ${v:t:56:4} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:samtoolsdir "flagstat" ${v:t:52:4} [ dict create "stdout" ${v:t:56:4} ] ]
    turbine::exec_external ${v:samtoolsdir} [ dict create "stdout" ${v:t:56:4} ] "flagstat" ${v:t:52:4}
    turbine::store_file ${u:flagstats} v:output 0
    set v:flagstats [ turbine::retrieve_file ${u:flagstats} CACHED 1 ]
    set v:stat [ turbine::file_lines_impl ${v:flagstats} ]
    turbine::build_rec ${u:stat} ${v:stat} [ list container integer string ] 0 1
    turbine::decr_local_file_refcount v:output
}


proc alignDedupMain-chain2 { t:107:1 u:mssg u:variables } {
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:exitIfFlagGiven ${u:variables} ${u:mssg}"
    turbine::reset_priority
    turbine::read_refcount_decr ${t:107:1} 1
}


proc __entry-async_op-strcat-20 { u:LogDir v:alias:sampleName:4 v:t:52:4 u:mssg } {
    # Var: $string v:LogDir:4 VALUE_OF [string:LogDir]
    # Var: $string v:mssg VALUE_OF [string:mssg]
    set v:LogDir:4 [ turbine::retrieve_string ${u:LogDir} CACHED 1 ]
    set v:mssg "FAILURE: ${v:t:52:4} contains no alignments. Check the log files within ${v:LogDir:4}${v:alias:sampleName:4} for details.\n"
    turbine::store_string ${u:mssg} ${v:mssg}
}


proc alignDedupMain-chain3 { t:113:1 u:message:3 u:variables } {
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:exitIfFlagGiven ${u:variables} ${u:message:3}"
    turbine::reset_priority
    turbine::read_refcount_decr ${t:113:1} 1
}


proc __entry-async_op-strcat-21 { u:LogDir v:alias:sampleName:4 v:t:34:5 u:message:3 } {
    # Var: $string v:LogDir:10 VALUE_OF [string:LogDir]
    # Var: $string v:message:3 VALUE_OF [string:message:3]
    set v:LogDir:10 [ turbine::retrieve_string ${u:LogDir} CACHED 1 ]
    set v:message:3 "FAILURE: ${v:t:34:5} contains no alignments. Check ${v:LogDir:10}${v:alias:sampleName:4}_Alignment.log for details.\n"
    turbine::store_string ${u:message:3} ${v:message:3}
}


proc __entry-async_op-strcat-22 { u:AlignDir v:alias:sampleName:4 v:index:2 u:alignDedupBams u:failureLog u:variables } {
    # Var: $string v:AlignDir:7 VALUE_OF [string:AlignDir]
    # Var: $string v:outputFile VALUE_OF [string:outputFile]
    # Var: $boolean v:o:8 RENAMED [$boolean:__v:o]
    set v:AlignDir:7 [ turbine::retrieve_string ${u:AlignDir} CACHED 1 ]
    set v:outputFile "${v:AlignDir:7}${v:alias:sampleName:4}.wDedups.sorted.bam"
    set v:o:8 [ file exists ${v:outputFile} ]
    if { ${v:o:8} } {
        # Var: file t:116:1 RENAMED [file:__t:116] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():316:4
        # Var: $file v:t:116:1 VALUE_OF [file:__t:116:1]
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 189 ] ] [ list 0 ] ] t:116:1
        set tcltmp:init_rc 1
        set v:t:116:1 [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
        turbine::input_file_local v:t:116:1 ${v:outputFile}
        turbine::store_file ${t:116:1} v:t:116:1 1
        turbine::container_insert ${u:alignDedupBams} ${v:index:2} ${t:116:1} file_ref 0
        turbine::decr_local_file_refcount v:t:116:1
    } else {
        # Var: string u:message_string RENAMED [string:message_string] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():319:4
        # Var: boolean t:120:1 RENAMED [boolean:__t:120] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():322:4
        # Var: $string v:message_string VALUE_OF [string:message_string]
        lassign [ adlb::multicreate [ list string 2 1 190 ] [ list integer 1 1 191 ] ] u:message_string t:120:1
        turbine::c::log "allocated u:message_string=<${u:message_string}> t:120:1=<${t:120:1}>"
        turbine::read_refcount_incr ${u:variables} 1
        turbine::file_read_refcount_incr ${u:failureLog} 1
        set v:message_string "ERROR: ${v:outputFile} not found. Did you set ALIGN_DEDUP_STAGE to 'N' by accident?\n"
        turbine::store_string ${u:message_string} ${v:message_string}
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:append ${t:120:1} {${u:failureLog}} ${u:message_string}"
        turbine::reset_priority
        turbine::rule [ list ${t:120:1} ] "alignDedupMain-chain4 ${t:120:1} ${u:message_string} ${u:variables}"
    }
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${u:variables} 1
    adlb::write_refcount_decr ${u:alignDedupBams} 1
}


proc alignDedupMain-chain4 { t:120:1 u:message_string u:variables } {
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:exitIfFlagGiven ${u:variables} ${u:message_string}"
    turbine::reset_priority
    turbine::read_refcount_decr ${t:120:1} 1
}


proc __entry-async_op-sprintf { t:4:5 t:6:5 t:8:5 v:alias:sampleName:4 u:rgheader } {
    # Var: $string v:t:4:5 VALUE_OF [string:__t:4:5]
    # Var: $string v:t:6:5 VALUE_OF [string:__t:6:5]
    # Var: $string v:t:8:5 VALUE_OF [string:__t:8:5]
    # Var: $string v:rgheader:2 VALUE_OF [string:rgheader]
    set v:t:4:5 [ turbine::retrieve_string ${t:4:5} CACHED 1 ]
    set v:t:6:5 [ turbine::retrieve_string ${t:6:5} CACHED 1 ]
    set v:t:8:5 [ turbine::retrieve_string ${t:8:5} CACHED 1 ]
    set v:rgheader:2 [ eval format [ list "@RG\tID:%s\tLB:%s\tPL:%s\tPU:%s\tSM:%s\tCN:%s" ${v:alias:sampleName:4} ${v:t:4:5} ${v:t:6:5} ${v:alias:sampleName:4} ${v:alias:sampleName:4} ${v:t:8:5} ] ]
    turbine::store_string ${u:rgheader} ${v:rgheader:2}
}


proc __entry-optmerged-24 { u:AlignDir u:LogDir u:RealignDir u:VarcallDir t:10 v:alias:sampleName:4 } {
    # Var: $string v:t:10:16 VALUE_OF [string:__t:10]
    # Var: $string v:LogDir VALUE_OF [string:LogDir]
    # Var: $string v:AlignDir VALUE_OF [string:AlignDir]
    # Var: $string v:RealignDir VALUE_OF [string:RealignDir]
    # Var: $string v:VarcallDir VALUE_OF [string:VarcallDir]
    set v:t:10:16 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:LogDir "${v:t:10:16}/${v:alias:sampleName:4}/logs/"
    turbine::store_string ${u:LogDir} ${v:LogDir}
    set v:AlignDir "${v:t:10:16}/${v:alias:sampleName:4}/align/"
    turbine::store_string ${u:AlignDir} ${v:AlignDir}
    set v:RealignDir "${v:t:10:16}/${v:alias:sampleName:4}/realign/"
    turbine::store_string ${u:RealignDir} ${v:RealignDir}
    set v:VarcallDir "${v:t:10:16}/${v:alias:sampleName:4}/variant/"
    turbine::store_string ${u:VarcallDir} ${v:VarcallDir}
}


proc __entry-async_op-strcat-23 { t:10 t:13 v:f:1 u:docSampleInfo u:sampleInfoFile } {
    # Var: $string v:t:10:15 VALUE_OF [string:__t:10]
    # Var: $string v:t:13:3 VALUE_OF [string:__t:13]
    # Var: $string v:t:39 VALUE_OF [string:__t:39]
    set v:t:10:15 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:t:13:3 [ turbine::retrieve_string ${t:13} CACHED 1 ]
    set v:t:39 "${v:t:10:15}/${v:t:13:3}/docs/${v:f:1}"
    turbine::set_filename_val ${u:docSampleInfo} ${v:t:39}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry:wait:sampleInfoFile ${v:t:39} ${u:docSampleInfo} ${u:sampleInfoFile} ]
    turbine::reset_priority
}


proc __entry:wait:sampleInfoFile { v:t:39 u:docSampleInfo u:sampleInfoFile } {
    # Var: $file v:sampleInfoFile VALUE_OF [file:sampleInfoFile]
    # Var: $file v:docSampleInfo VALUE_OF [file:docSampleInfo]
    set v:sampleInfoFile [ turbine::retrieve_file ${u:sampleInfoFile} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:docSampleInfo [ turbine::create_local_file_ref ${v:t:39} ${tcltmp:init_rc} 1 ]
    turbine::copy_local_file_contents ${v:docSampleInfo} ${v:sampleInfoFile}
    turbine::store_file ${u:docSampleInfo} v:docSampleInfo 0
}


proc f:sed { u:o u:i u:command v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: sed"
    # Var: $boolean v:mapped_o OPT_TEMPORARY
    turbine::read_refcount_incr ${u:command} 1
    turbine::file_read_refcount_incr ${u:o} 1
    turbine::file_read_refcount_incr ${u:i} 2
    set filename:i [ turbine::get_file_path ${u:i} ]
    set v:mapped_o [ turbine::is_file_mapped ${u:o} ]
    set filename:o [ turbine::get_file_path ${u:o} ]
    if { ${v:mapped_o} } {
    } else {
        # Var: $string optf:o FILENAME_OF [file:o]
        set optf:o [ turbine::mktemp ]
        turbine::set_filename_val ${u:o} ${optf:o}
    }
    turbine::rule [ list ${filename:i} ${filename:o} ${u:command} [ turbine::get_file_td ${u:i} ] ] "sed-app-leaf1 {${filename:i}} {${filename:o}} ${v:mapped_o} {${u:command}} {${u:i}} {${u:o}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc sed-app-leaf1 { filename:i filename:o v:mapped_o u:command u:i u:o } {
    # Var: $string v:command VALUE_OF [string:command] /usr/local/apps/bioapps/swift-t/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    # Var: $string v:__filename:i VALUE_OF [string:__filename:i] /usr/local/apps/bioapps/swift-t/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    # Var: $string v:__filename:o VALUE_OF [string:__filename:o] /usr/local/apps/bioapps/swift-t/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    # Var: $file v:i VALUE_OF [file:i] /usr/local/apps/bioapps/swift-t/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    # Var: $file v:o VALUE_OF [file:o] /usr/local/apps/bioapps/swift-t/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    # Var: $boolean v:3 EXPR_TEMPORARY /usr/local/apps/bioapps/swift-t/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    set v:command [ turbine::retrieve_string ${u:command} CACHED 1 ]
    set v:__filename:i [ turbine::retrieve_string ${filename:i} ]
    set v:__filename:o [ turbine::retrieve_string ${filename:o} CACHED 1 ]
    set v:i [ turbine::retrieve_file ${u:i} CACHED 2 ]
    if { ${v:mapped_o} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:o [ turbine::create_local_file_ref ${v:__filename:o} ${tcltmp:init_rc} ${v:mapped_o} ]
    turbine::c::log [ list exec: "sed" ${v:command} ${v:__filename:i} [ dict create "stdout" ${v:__filename:o} ] ]
    turbine::exec_external "sed" [ dict create "stdout" ${v:__filename:o} ] ${v:command} ${v:__filename:i}
    set v:3 [ expr { ! ${v:mapped_o} } ]
    turbine::store_file ${u:o} v:o ${v:3}
    turbine::decr_local_file_refcount v:o
}


proc f:samtools_view { u:output u:samtoolsdir u:inputFile u:thr u:args v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: samtools_view"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::file_read_refcount_incr ${u:output} 1
    turbine::file_read_refcount_incr ${u:inputFile} 2
    turbine::read_refcount_incr ${u:thr} 1
    turbine::read_refcount_incr ${u:args} 1
    turbine::read_refcount_incr ${u:samtoolsdir} 1
    set filename:inputFile [ turbine::get_file_path ${u:inputFile} ]
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${filename:inputFile} ${filename:output} ${u:args} [ turbine::get_file_td ${u:inputFile} ] ${u:samtoolsdir} ${u:thr} ] "samtools_view-app-leaf1 {${filename:inputFile}} {${filename:output}} ${v:mapped_output} {${u:args}} {${u:inputFile}} {${u:output}} {${u:samtoolsdir}} {${u:thr}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc samtools_view-app-leaf1 { filename:inputFile filename:output v:mapped_output u:args u:inputFile u:output u:samtoolsdir u:thr } {
    # Var: $string v:samtoolsdir VALUE_OF [string:samtoolsdir] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samtools_view():15:58
    # Var: $int v:thr VALUE_OF [int:thr] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samtools_view():15:58
    # Var: $string v:__filename:inputFile VALUE_OF [string:__filename:inputFile] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samtools_view():15:58
    # Var: $string$[int] v:args VALUE_OF [string[int]:args] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samtools_view():15:58
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samtools_view():15:58
    # Var: $file v:inputFile VALUE_OF [file:inputFile] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samtools_view():15:58
    # Var: $file v:output VALUE_OF [file:output] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samtools_view():15:58
    # Var: $boolean v:3 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samtools_view():15:58
    set v:samtoolsdir [ turbine::retrieve_string ${u:samtoolsdir} CACHED 1 ]
    set v:thr [ turbine::retrieve_integer ${u:thr} CACHED 1 ]
    set v:__filename:inputFile [ turbine::retrieve_string ${filename:inputFile} ]
    set v:args [ turbine::unpack_args ${u:args} 1 string ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    set v:inputFile [ turbine::retrieve_file ${u:inputFile} CACHED 2 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: __v:samtoolsdir "view" "-@" ${v:thr} "-bS" ${v:__filename:inputFile} {*}${v:args} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external ${v:samtoolsdir} [ dict create "stdout" ${v:__filename:output} ] "view" "-@" ${v:thr} "-bS" ${v:__filename:inputFile} {*}${v:args}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
    turbine::read_refcount_decr ${u:args} 1
}


proc f:novosort { u:output u:outLog u:novosortdir u:inputFile u:tmpdir u:thr u:sortoptions v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: novosort"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    # Var: $boolean v:mapped_outLog OPT_TEMPORARY
    turbine::file_read_refcount_incr ${u:output} 1
    turbine::read_refcount_incr ${u:sortoptions} 1
    turbine::file_read_refcount_incr ${u:inputFile} 2
    turbine::read_refcount_incr ${u:tmpdir} 1
    turbine::read_refcount_incr ${u:novosortdir} 1
    turbine::read_refcount_incr ${u:thr} 1
    turbine::file_read_refcount_incr ${u:outLog} 1
    set filename:inputFile [ turbine::get_file_path ${u:inputFile} ]
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    set v:mapped_outLog [ turbine::is_file_mapped ${u:outLog} ]
    set filename:outLog [ turbine::get_file_path ${u:outLog} ]
    if { ${v:mapped_outLog} } {
    } else {
        # Var: $string optf:outLog FILENAME_OF [file:outLog]
        set optf:outLog [ turbine::mktemp ]
        turbine::set_filename_val ${u:outLog} ${optf:outLog}
    }
    turbine::rule [ list ${filename:inputFile} ${filename:outLog} ${filename:output} [ turbine::get_file_td ${u:inputFile} ] ${u:novosortdir} ${u:sortoptions} ${u:thr} ${u:tmpdir} ] "novosort-app-leaf1 {${filename:inputFile}} {${filename:outLog}} {${filename:output}} ${v:mapped_outLog} ${v:mapped_output} {${u:inputFile}} {${u:novosortdir}} {${u:outLog}} {${u:output}} {${u:sortoptions}} {${u:thr}} {${u:tmpdir}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc novosort-app-leaf1 { filename:inputFile filename:outLog filename:output v:mapped_outLog v:mapped_output u:inputFile u:novosortdir u:outLog u:output u:sortoptions u:thr u:tmpdir } {
    # Var: $string v:novosortdir VALUE_OF [string:novosortdir] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novosort():33:99
    # Var: $string v:tmpdir VALUE_OF [string:tmpdir] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novosort():33:99
    # Var: $int v:thr VALUE_OF [int:thr] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novosort():33:99
    # Var: $string v:__filename:inputFile VALUE_OF [string:__filename:inputFile] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novosort():33:99
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novosort():33:99
    # Var: $string$[int] v:sortoptions VALUE_OF [string[int]:sortoptions] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novosort():33:99
    # Var: $string v:__filename:outLog VALUE_OF [string:__filename:outLog] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novosort():33:99
    # Var: $file v:inputFile VALUE_OF [file:inputFile] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novosort():33:99
    # Var: $file v:output VALUE_OF [file:output] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novosort():33:99
    # Var: $file v:outLog VALUE_OF [file:outLog] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novosort():33:99
    # Var: $boolean v:4 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novosort():33:99
    # Var: $boolean v:6 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novosort():33:99
    set v:novosortdir [ turbine::retrieve_string ${u:novosortdir} CACHED 1 ]
    set v:tmpdir [ turbine::retrieve_string ${u:tmpdir} CACHED 1 ]
    set v:thr [ turbine::retrieve_integer ${u:thr} CACHED 1 ]
    set v:__filename:inputFile [ turbine::retrieve_string ${filename:inputFile} ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    set v:sortoptions [ turbine::unpack_args ${u:sortoptions} 1 string ]
    set v:__filename:outLog [ turbine::retrieve_string ${filename:outLog} CACHED 1 ]
    set v:inputFile [ turbine::retrieve_file ${u:inputFile} CACHED 2 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    if { ${v:mapped_outLog} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:outLog [ turbine::create_local_file_ref ${v:__filename:outLog} ${tcltmp:init_rc} ${v:mapped_outLog} ]
    turbine::c::log [ list exec: __v:novosortdir "--index" "--tmpdir" ${v:tmpdir} "--threads" ${v:thr} ${v:__filename:inputFile} "-o" ${v:__filename:output} {*}${v:sortoptions} [ dict create "stderr" ${v:__filename:outLog} ] ]
    turbine::exec_external ${v:novosortdir} [ dict create "stderr" ${v:__filename:outLog} ] "--index" "--tmpdir" ${v:tmpdir} "--threads" ${v:thr} ${v:__filename:inputFile} "-o" ${v:__filename:output} {*}${v:sortoptions}
    set v:4 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:4}
    set v:6 [ expr { ! ${v:mapped_outLog} } ]
    turbine::store_file ${u:outLog} v:outLog ${v:6}
    turbine::decr_local_file_refcount v:output
    turbine::decr_local_file_refcount v:outLog
    turbine::read_refcount_decr ${u:sortoptions} 1
}


proc f:append { u:signal u:f u:s } {
    turbine::c::log "function: append"
    # Var: file u:newFile /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/generalfunctions/general.swift:append():14:16
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 192 ] ] [ list 1 ] ] u:newFile
    turbine::file_read_refcount_incr ${u:f} 1
    set optf:f [ turbine::get_file_path ${u:f} ]
    set wfilename:newFile [ turbine::get_file_path ${u:newFile} ]
    turbine::rule [ list [ turbine::get_file_td ${u:f} ] ] "append-call_foreign-read {${wfilename:newFile}} {${u:f}} {${u:newFile}} {${u:s}} {${u:signal}}"
    turbine::rule [ list ${optf:f} ] "append-copy_in_filename {${optf:f}} {${u:newFile}}"
}


proc append-call_foreign-read { wfilename:newFile u:f u:newFile u:s u:signal } {
    # Var: $file v:f VALUE_OF [file:f]
    # Var: $string v:original VALUE_OF [string:original]
    set v:f [ turbine::retrieve_file ${u:f} CACHED 1 ]
    set v:original [ turbine::file_read_local ${v:f} ]
    turbine::rule [ list ${wfilename:newFile} ${u:s} ] [ list append-async_op-strcat ${v:original} ${wfilename:newFile} ${u:newFile} ${u:s} ${u:signal} ]
}


proc append-async_op-strcat { v:original wfilename:newFile u:newFile u:s u:signal } {
    # Var: $string v:s VALUE_OF [string:s]
    # Var: $string v:appended VALUE_OF [string:appended]
    # Var: $file v:newFile VALUE_OF [file:newFile]
    # Var: $string v:__wfilename:newFile VALUE_OF [string:__wfilename:newFile]
    set v:s [ turbine::retrieve_string ${u:s} CACHED 1 ]
    set v:appended "${v:original}${v:s}"
    set v:__wfilename:newFile [ turbine::retrieve_string ${wfilename:newFile} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:newFile [ turbine::create_local_file_ref ${v:__wfilename:newFile} ${tcltmp:init_rc} 1 ]
    turbine::file_write_local v:newFile ${v:appended}
    turbine::store_file ${u:newFile} v:newFile 0
    turbine::store_integer ${u:signal} 1
}


proc append-copy_in_filename { optf:f u:newFile } {
    # Var: $string v:of:f VALUE_OF [string:__of:f]
    set v:of:f [ turbine::retrieve_string ${optf:f} CACHED 1 ]
    turbine::set_filename_val ${u:newFile} ${v:of:f}
}


proc f:exitIfFlagGiven { u:vars u:message } {
    turbine::c::log "function: exitIfFlagGiven"
    # Var: string t:11 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/generalfunctions/general.swift:exitIfFlagGiven():21:5
    lassign [ adlb::multicreate [ list string 1 1 193 ] ] t:11
    turbine::c::log "allocated t:11=<${t:11}>"
    turbine::container_reference ${u:vars} "EXIT_ON_ERROR" ${t:11} string
    turbine::rule [ list ${t:11} ] "exitIfFlagGiven-optmerged ${t:11} {${u:message}}"
}


proc exitIfFlagGiven-optmerged { t:11 u:message } {
    # Var: $string v:t:11 VALUE_OF [string:__t:11]
    # Var: $boolean v:t:10 VALUE_OF [boolean:__t:10]
    # Var: $boolean v:t:14 VALUE_OF [boolean:__t:14]
    # Var: $boolean v:t:18 VALUE_OF [boolean:__t:18]
    # Var: $boolean v:t:22 VALUE_OF [boolean:__t:22]
    # Var: $boolean v:t:26 VALUE_OF [boolean:__t:26]
    # Var: $boolean v:t:30 VALUE_OF [boolean:__t:30]
    # Var: $boolean v:t:34 VALUE_OF [boolean:__t:34]
    # Var: $boolean v:t:38 VALUE_OF [boolean:__t:38]
    # Var: $boolean v:t:42 VALUE_OF [boolean:__t:42]
    # Var: $boolean v:t:46 VALUE_OF [boolean:__t:46]
    # Var: $boolean v:t:9 VALUE_OF [boolean:__t:9]
    # Var: $boolean v:t:8 VALUE_OF [boolean:__t:8]
    # Var: $boolean v:t:7 VALUE_OF [boolean:__t:7]
    # Var: $boolean v:t:6 VALUE_OF [boolean:__t:6]
    # Var: $boolean v:t:5 VALUE_OF [boolean:__t:5]
    # Var: $boolean v:t:4 VALUE_OF [boolean:__t:4]
    # Var: $boolean v:t:3 VALUE_OF [boolean:__t:3]
    # Var: $boolean v:t:2 VALUE_OF [boolean:__t:2]
    # Var: $boolean v:t:1 VALUE_OF [boolean:__t:1]
    set v:t:11 [ turbine::retrieve_string ${t:11} CACHED 1 ]
    set v:t:10 [ string equal ${v:t:11} "F" ]
    set v:t:14 [ string equal ${v:t:11} "f" ]
    set v:t:18 [ string equal ${v:t:11} "False" ]
    set v:t:22 [ string equal ${v:t:11} "false" ]
    set v:t:26 [ string equal ${v:t:11} "FALSE" ]
    set v:t:30 [ string equal ${v:t:11} "N" ]
    set v:t:34 [ string equal ${v:t:11} "n" ]
    set v:t:38 [ string equal ${v:t:11} "No" ]
    set v:t:42 [ string equal ${v:t:11} "NO" ]
    set v:t:46 [ string equal ${v:t:11} "no" ]
    set v:t:9 [ expr { ${v:t:10} || ${v:t:14} } ]
    set v:t:8 [ expr { ${v:t:9} || ${v:t:18} } ]
    set v:t:7 [ expr { ${v:t:8} || ${v:t:22} } ]
    set v:t:6 [ expr { ${v:t:7} || ${v:t:26} } ]
    set v:t:5 [ expr { ${v:t:6} || ${v:t:30} } ]
    set v:t:4 [ expr { ${v:t:5} || ${v:t:34} } ]
    set v:t:3 [ expr { ${v:t:4} || ${v:t:38} } ]
    set v:t:2 [ expr { ${v:t:3} || ${v:t:42} } ]
    set v:t:1 [ expr { ${v:t:2} || ${v:t:46} } ]
    if { ${v:t:1} } {
    } else {
        turbine::read_refcount_incr ${u:message} 1
        turbine::rule [ list ${u:message} ] "exitIfFlagGiven-async_op-assert {${u:message}}"
    }
    turbine::read_refcount_decr ${u:message} 1
}


proc exitIfFlagGiven-async_op-assert { u:message } {
    # Var: $string v:message VALUE_OF [string:message]
    # Var: $void v:t:50 VALUE_OF [void:__t:50]
    set v:message [ turbine::retrieve_string ${u:message} CACHED 1 ]
    turbine::assert_impl 0 ${v:message}
}


proc f:find_files { u:output u:dir u:pattern v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: find_files"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::file_read_refcount_incr ${u:output} 1
    turbine::read_refcount_incr ${u:pattern} 1
    turbine::read_refcount_incr ${u:dir} 1
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${filename:output} ${u:dir} ${u:pattern} ] "find_files-app-leaf1 {${filename:output}} ${v:mapped_output} {${u:dir}} {${u:output}} {${u:pattern}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc find_files-app-leaf1 { filename:output v:mapped_output u:dir u:output u:pattern } {
    # Var: $string v:dir VALUE_OF [string:dir] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/generalfunctions/general.swift:find_files():51:36
    # Var: $string v:pattern VALUE_OF [string:pattern] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/generalfunctions/general.swift:find_files():51:36
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/generalfunctions/general.swift:find_files():51:36
    # Var: $file v:output VALUE_OF [file:output] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/generalfunctions/general.swift:find_files():51:36
    # Var: $boolean v:3 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/generalfunctions/general.swift:find_files():51:36
    set v:dir [ turbine::retrieve_string ${u:dir} CACHED 1 ]
    set v:pattern [ turbine::retrieve_string ${u:pattern} CACHED 1 ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: "find" ${v:dir} "-name" ${v:pattern} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external "find" [ dict create "stdout" ${v:__filename:output} ] ${v:dir} "-name" ${v:pattern}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
}


proc f:checkBam { u:success u:vars u:bamFile } {
    turbine::c::log "function: checkBam"
    # Var: string t:1 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/generalfunctions/general.swift:checkBam():69:32
    # Var: $string v:of:bamFile VALUE_OF [string:__of:bamFile]
    lassign [ adlb::multicreate [ list string 1 1 194 ] ] t:1
    turbine::c::log "allocated t:1=<${t:1}>"
    turbine::container_reference ${u:vars} "SAMTOOLSDIR" ${t:1} string
    set v:of:bamFile [ turbine::get_filename_val ${u:bamFile} ]
    turbine::rule [ list ${t:1} ] [ list samtools_view2-argwait ${t:1} ${v:of:bamFile} ${u:success} ]
    turbine::file_read_refcount_decr ${u:bamFile} 1
}


proc samtools_view2-argwait { t:1 v:of:bamFile u:success } {
    # Var: $string v:samtoolsdir RENAMED [$string:__v:samtoolsdir]
    # Var: $int v:numAlignments RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:success VALUE_OF [boolean:success]
    set v:samtoolsdir [ turbine::retrieve_string ${t:1} CACHED 1 ]
    set v:numAlignments [ alignment::samtools_view ${v:samtoolsdir} ${v:of:bamFile} ]
    set v:success [ expr { ${v:numAlignments} > 0 } ]
    turbine::store_integer ${u:success} ${v:success}
}


proc f:recalibrateBam { u:outBam u:sampleName u:chr u:var u:inputBam u:recalparmsindels } {
    turbine::c::log "function: recalibrateBam"
    # Var: string t:1 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():140:27
    # Var: int u:threads /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():147:1
    # Var: string t:18 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():147:26
    # Var: string t:21 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():147:57
    # Var: file u:recalLog /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():150:35
    # Var: file u:printLog /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():151:35
    # Var: file u:report /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():152:30
    # Var: string t:29 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():155:37
    # Var: string t:31 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():155:53
    # Var: string t:33 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():156:11
    # Var: string t:34 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():156:18
    # Var: string t:37 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():156:44
    # Var: string t:39 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():158:11
    # Var: string t:43 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():158:44
    # Var: boolean t:55 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():164:1
    # Var: $boolean v:mapped_outputfile:2 RENAMED [$boolean:__v:mapped_outputfile]
    lassign [ adlb::multicreate [ list string 1 1 195 ] [ list integer 1 1 196 ] [ list string 1 1 197 ] [ list string 1 1 198 ] [ list string 1 1 202 ] [ list string 1 1 203 ] [ list string 1 1 204 ] [ list string 1 1 205 ] [ list string 1 1 206 ] [ list string 1 1 207 ] [ list string 1 1 208 ] [ list integer 0 1 209 ] ] t:1 u:threads t:18 t:21 t:29 t:31 t:33 t:34 t:37 t:39 t:43 t:55
    turbine::c::log "allocated t:1=<${t:1}> u:threads=<${u:threads}> t:18=<${t:18}> t:21=<${t:21}> t:29=<${t:29}>"
    turbine::c::log "allocated t:31=<${t:31}> t:33=<${t:33}> t:34=<${t:34}> t:37=<${t:37}> t:39=<${t:39}>"
    turbine::c::log "allocated t:43=<${t:43}> t:55=<${t:55}>"
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 0 1 199 ] [ list file 0 1 200 ] [ list file 1 1 201 ] ] [ list 1 1 1 ] ] u:recalLog u:printLog u:report
    turbine::file_read_refcount_incr ${u:outBam} 1
    turbine::file_read_refcount_incr ${u:inputBam} 1
    turbine::read_refcount_incr ${u:var} 8
    turbine::container_reference ${u:var} "OUTPUTDIR" ${t:1} string
    turbine::container_reference ${u:var} "PBSCORES" ${t:18} string
    turbine::container_reference ${u:var} "PROCPERNODE" ${t:21} string
    turbine::container_reference ${u:var} "JAVADIR" ${t:29} string
    turbine::container_reference ${u:var} "GATKDIR" ${t:31} string
    turbine::container_reference ${u:var} "REFGENOMEDIR" ${t:34} string
    turbine::container_reference ${u:var} "REFGENOME" ${t:37} string
    turbine::container_reference ${u:var} "DBSNP" ${t:43} string
    set filename:inputFile [ turbine::get_file_path ${u:inputBam} ]
    set v:mapped_outputfile:2 [ turbine::is_file_mapped ${u:outBam} ]
    set filename:outputfile:1 [ turbine::get_file_path ${u:outBam} ]
    if { ${v:mapped_outputfile:2} } {
    } else {
        # Var: $string optf:outputfile:1 RENAMED [$string:__of:outputfile]
        set optf:outputfile:1 [ turbine::mktemp ]
        turbine::set_filename_val ${u:outBam} ${optf:outputfile:1}
    }
    turbine::rule [ list ${t:18} ${t:21} ] "recalibrateBam-async_op-parse_int ${t:18} ${t:21} ${u:threads}"
    turbine::rule [ list ${t:1} ${u:chr} ${u:sampleName} ] "recalibrateBam-optmerged {${filename:inputFile}} {${filename:outputfile:1}} ${t:1} ${t:29} ${t:31} ${t:33} ${t:39} ${t:55} ${v:mapped_outputfile:2} {${u:chr}} {${u:inputBam}} {${u:outBam}} {${u:printLog}} {${u:recalLog}} {${u:recalparmsindels}} {${u:report}} {${u:sampleName}} ${u:threads} {${u:var}}"
    turbine::rule [ list ${t:34} ] "recalibrateBam-optmerged-1 ${t:33} ${t:34} ${t:37} ${t:39} ${t:43}"
}


proc recalibrateBam-async_op-parse_int { t:18 t:21 u:threads } {
    # Var: $string v:t:21 VALUE_OF [string:__t:21]
    # Var: $int v:t:20 VALUE_OF [int:__t:20]
    # Var: $string v:t:18 VALUE_OF [string:__t:18]
    # Var: $int v:t:17 VALUE_OF [int:__t:17]
    # Var: $int v:threads VALUE_OF [int:threads]
    set v:t:21 [ turbine::retrieve_string ${t:21} CACHED 1 ]
    set v:t:20 [ turbine::parse_int_impl ${v:t:21} 10 ]
    set v:t:18 [ turbine::retrieve_string ${t:18} CACHED 1 ]
    set v:t:17 [ turbine::parse_int_impl ${v:t:18} 10 ]
    set v:threads [ turbine::divide_integer_impl ${v:t:17} ${v:t:20} ]
    turbine::store_integer ${u:threads} ${v:threads}
}


proc recalibrateBam-optmerged { filename:inputFile filename:outputfile:1 t:1 t:29 t:31 t:33 t:39 t:55 v:mapped_outputfile:2 u:chr u:inputBam u:outBam u:printLog u:recalLog u:recalparmsindels u:report u:sampleName u:threads u:var } {
    # Var: $string v:t:1 VALUE_OF [string:__t:1]
    # Var: $string v:sampleName VALUE_OF [string:sampleName]
    # Var: $string v:chr VALUE_OF [string:chr]
    # Var: $string v:prePrefix VALUE_OF [string:prePrefix]
    # Var: $string v:preLogPrefix VALUE_OF [string:preLogPrefix]
    # Var: $string v:prefix VALUE_OF [string:prefix]
    # Var: $string v:t:27 VALUE_OF [string:__t:27]
    # Var: $string v:logPrefix VALUE_OF [string:logPrefix]
    # Var: $string v:t:23 VALUE_OF [string:__t:23]
    # Var: $string v:t:25 VALUE_OF [string:__t:25]
    set v:t:1 [ turbine::retrieve_string ${t:1} CACHED 1 ]
    set v:sampleName [ turbine::retrieve_string ${u:sampleName} CACHED 1 ]
    set v:chr [ turbine::retrieve_string ${u:chr} CACHED 1 ]
    set v:prePrefix "${v:t:1}/${v:sampleName}/realign/${v:sampleName}.wDedups.sorted.${v:chr}"
    set v:preLogPrefix "${v:t:1}/${v:sampleName}/logs/${v:sampleName}.wDedups.sorted.${v:chr}"
    set v:prefix [ turbine::replace_impl ${v:prePrefix} ".." "." 0 ]
    set v:t:27 "${v:prefix}recal_report.grp"
    turbine::set_filename_val ${u:report} ${v:t:27}
    set v:logPrefix [ turbine::replace_impl ${v:preLogPrefix} ".." "." 0 ]
    set v:t:23 "${v:logPrefix}_BaseRecalibrator.log"
    turbine::set_filename_val ${u:recalLog} ${v:t:23}
    set v:t:25 "${v:logPrefix}_PrintReads.log"
    turbine::set_filename_val ${u:printLog} ${v:t:25}
    turbine::rule [ list ${filename:inputFile} ${t:29} ${t:31} ${t:33} ${t:39} [ turbine::get_file_td ${u:inputBam} ] ${u:recalparmsindels} ${u:threads} ] [ list BaseRecalibrator-app-leaf1 ${filename:inputFile} ${filename:outputfile:1} ${t:29} ${t:31} ${t:33} ${t:39} ${t:55} ${v:mapped_outputfile:2} ${v:t:23} ${v:t:25} ${v:t:27} ${u:inputBam} ${u:outBam} ${u:printLog} ${u:recalLog} ${u:recalparmsindels} ${u:report} ${u:threads} ${u:var} ]
}


proc BaseRecalibrator-app-leaf1 { filename:inputFile filename:outputfile:1 t:29 t:31 t:33 t:39 t:55 v:mapped_outputfile:2 v:t:23 v:t:25 v:t:27 u:inputBam u:outBam u:printLog u:recalLog u:recalparmsindels u:report u:threads u:var } {
    # Var: $string v:javadir RENAMED [$string:__v:javadir] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:BaseRecalibrator():47:9
    # Var: $string v:gatkdir RENAMED [$string:__v:gatkdir] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:BaseRecalibrator():47:9
    # Var: $string v:reference RENAMED [$string:__v:reference] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:BaseRecalibrator():47:9
    # Var: $string v:__filename:inputFile RENAMED [$string:__v:__filename:inputFile] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:BaseRecalibrator():47:9
    # Var: $string v:dbsnp RENAMED [$string:__v:dbsnp] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:BaseRecalibrator():47:9
    # Var: $string$[int] v:knownindels RENAMED [$string$[int]:__v:knownindels] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:BaseRecalibrator():47:9
    # Var: $int v:thr RENAMED [$int:__v:thr] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:BaseRecalibrator():47:9
    # Var: $file v:inputFile RENAMED [$file:__v:inputFile] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:BaseRecalibrator():47:9
    # Var: $file v:outputfile RENAMED [$file:__v:outputfile] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:BaseRecalibrator():47:9
    # Var: $file v:outLog RENAMED [$file:__v:outLog] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:BaseRecalibrator():47:9
    set v:javadir [ turbine::retrieve_string ${t:29} CACHED 1 ]
    set v:gatkdir [ turbine::retrieve_string ${t:31} CACHED 1 ]
    set v:reference [ turbine::retrieve_string ${t:33} CACHED 1 ]
    set v:__filename:inputFile [ turbine::retrieve_string ${filename:inputFile} ]
    set v:dbsnp [ turbine::retrieve_string ${t:39} CACHED 1 ]
    set v:knownindels [ turbine::unpack_args ${u:recalparmsindels} 1 string ]
    set v:thr [ turbine::retrieve_integer ${u:threads} CACHED 1 ]
    set v:inputFile [ turbine::retrieve_file ${u:inputBam} ]
    set tcltmp:init_rc 2
    set v:outputfile [ turbine::create_local_file_ref ${v:t:27} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:outLog [ turbine::create_local_file_ref ${v:t:23} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir "-Xmx16g" "-jar" ${v:gatkdir} "-T" "BaseRecalibrator" "-R" ${v:reference} "-I" ${v:__filename:inputFile} "-knownSites" ${v:dbsnp} {*}${v:knownindels} "-nct" ${v:thr} "-o" ${v:t:27} [ dict create "stderr" ${v:t:23} ] ]
    turbine::exec_external ${v:javadir} [ dict create "stderr" ${v:t:23} ] "-Xmx16g" "-jar" ${v:gatkdir} "-T" "BaseRecalibrator" "-R" ${v:reference} "-I" ${v:__filename:inputFile} "-knownSites" ${v:dbsnp} {*}${v:knownindels} "-nct" ${v:thr} "-o" ${v:t:27}
    turbine::store_file ${u:report} v:outputfile 0
    turbine::store_file ${u:recalLog} v:outLog 0
    turbine::rule [ list ${filename:outputfile:1} ] [ list PrintReads-app-leaf1 ${filename:outputfile:1} ${t:55} ${v:__filename:inputFile} ${v:gatkdir} ${v:javadir} ${v:mapped_outputfile:2} ${v:reference} ${v:t:25} ${v:t:27} ${v:thr} ${u:inputBam} ${u:outBam} ${u:printLog} ${u:report} ${u:var} ]
    turbine::decr_local_file_refcount v:outputfile
    turbine::decr_local_file_refcount v:outLog
    turbine::file_read_refcount_decr ${u:inputBam} 1
    turbine::read_refcount_decr ${u:recalparmsindels} 1
}


proc PrintReads-app-leaf1 { filename:outputfile:1 t:55 v:__filename:inputFile v:gatkdir v:javadir v:mapped_outputfile:2 v:reference v:t:25 v:t:27 v:thr u:inputBam u:outBam u:printLog u:report u:var } {
    # Var: $string v:__filename:outputfile:1 RENAMED [$string:__v:__filename:outputfile] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:PrintReads():61:9
    # Var: $file v:inputFile:1 RENAMED [$file:__v:inputFile] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:PrintReads():61:9
    # Var: $file v:recalreport RENAMED [$file:__v:recalreport] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:PrintReads():61:9
    # Var: $file v:outputfile:1 RENAMED [$file:__v:outputfile] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:PrintReads():61:9
    # Var: $file v:outLog:1 RENAMED [$file:__v:outLog] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:PrintReads():61:9
    # Var: $boolean v:4:1 RENAMED [$boolean:__v:4] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:PrintReads():61:9
    set v:__filename:outputfile:1 [ turbine::retrieve_string ${filename:outputfile:1} ]
    set v:inputFile:1 [ turbine::retrieve_file ${u:inputBam} CACHED 1 ]
    set v:recalreport [ turbine::retrieve_file ${u:report} CACHED 1 ]
    if { ${v:mapped_outputfile:2} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:outputfile:1 [ turbine::create_local_file_ref ${v:__filename:outputfile:1} ${tcltmp:init_rc} ${v:mapped_outputfile:2} ]
    set tcltmp:init_rc 2
    set v:outLog:1 [ turbine::create_local_file_ref ${v:t:25} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir "-Xmx16g" "-jar" ${v:gatkdir} "-T" "PrintReads" "-R" ${v:reference} "-I" ${v:__filename:inputFile} "-BQSR" ${v:t:27} "-nct" ${v:thr} "--out" ${v:__filename:outputfile:1} [ dict create "stderr" ${v:t:25} ] ]
    turbine::exec_external ${v:javadir} [ dict create "stderr" ${v:t:25} ] "-Xmx16g" "-jar" ${v:gatkdir} "-T" "PrintReads" "-R" ${v:reference} "-I" ${v:__filename:inputFile} "-BQSR" ${v:t:27} "-nct" ${v:thr} "--out" ${v:__filename:outputfile:1}
    set v:4:1 [ expr { ! ${v:mapped_outputfile:2} } ]
    turbine::store_file ${u:outBam} v:outputfile:1 ${v:4:1}
    turbine::rule [ list [ turbine::get_file_td ${u:outBam} ] ] "f:checkBam ${t:55} {${u:var}} {${u:outBam}}"
    turbine::store_file ${u:printLog} v:outLog:1 0
    turbine::decr_local_file_refcount v:outputfile:1
    turbine::decr_local_file_refcount v:outLog:1
    turbine::file_read_refcount_decr ${u:outBam} 1
}


proc recalibrateBam-optmerged-1 { t:33 t:34 t:37 t:39 t:43 } {
    # Var: $string v:t:34 VALUE_OF [string:__t:34]
    set v:t:34 [ turbine::retrieve_string ${t:34} CACHED 1 ]
    turbine::rule [ list ${t:37} ] [ list recalibrateBam-async_op-strcat ${t:33} ${t:37} ${v:t:34} ]
    turbine::rule [ list ${t:43} ] [ list recalibrateBam-async_op-strcat-1 ${t:39} ${t:43} ${v:t:34} ]
}


proc recalibrateBam-async_op-strcat { t:33 t:37 v:t:34 } {
    # Var: $string v:t:37 VALUE_OF [string:__t:37]
    # Var: $string v:t:33 VALUE_OF [string:__t:33]
    set v:t:37 [ turbine::retrieve_string ${t:37} CACHED 1 ]
    set v:t:33 "${v:t:34}/${v:t:37}"
    turbine::store_string ${t:33} ${v:t:33}
}


proc recalibrateBam-async_op-strcat-1 { t:39 t:43 v:t:34 } {
    # Var: $string v:t:43 VALUE_OF [string:__t:43]
    # Var: $string v:t:39 VALUE_OF [string:__t:39]
    set v:t:43 [ turbine::retrieve_string ${t:43} CACHED 1 ]
    set v:t:39 "${v:t:34}/${v:t:43}"
    turbine::store_string ${t:39} ${v:t:39}
}


proc f:recalibrationWrapper { u:recalibratedbam u:sampleName u:chr u:var u:inputBam u:realparms u:recalparmsindels } {
    turbine::c::log "function: recalibrationWrapper"
    # Var: string t:1 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrationWrapper():175:27
    # Var: string u:prefix /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrationWrapper():177:1
    # Var: string t:10 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrationWrapper():179:5
    lassign [ adlb::multicreate [ list string 2 1 210 ] [ list string 1 1 211 ] [ list string 1 1 212 ] ] t:1 u:prefix t:10
    turbine::c::log "allocated t:1=<${t:1}> u:prefix=<${u:prefix}> t:10=<${t:10}>"
    turbine::read_refcount_incr ${u:sampleName} 2
    turbine::read_refcount_incr ${u:recalparmsindels} 1
    turbine::read_refcount_incr ${u:chr} 2
    turbine::file_read_refcount_incr ${u:recalibratedbam} 1
    turbine::file_read_refcount_incr ${u:inputBam} 1
    turbine::read_refcount_incr ${u:var} 4
    turbine::container_reference ${u:var} "OUTPUTDIR" ${t:1} string
    turbine::container_reference ${u:var} "ANALYSIS" ${t:10} string
    turbine::rule [ list ${t:1} ${u:chr} ${u:sampleName} ] "recalibrationWrapper-async_op-strcat ${t:1} {${u:chr}} ${u:prefix} {${u:sampleName}}"
    turbine::rule [ list ${t:10} ] "recalibrationWrapper-async_op-eq_string ${t:1} ${t:10} {${u:chr}} {${u:inputBam}} ${u:prefix} {${u:realparms}} {${u:recalibratedbam}} {${u:recalparmsindels}} {${u:sampleName}} {${u:var}}"
}


proc recalibrationWrapper-async_op-strcat { t:1 u:chr u:prefix u:sampleName } {
    # Var: $string v:t:1 VALUE_OF [string:__t:1]
    # Var: $string v:sampleName VALUE_OF [string:sampleName]
    # Var: $string v:chr VALUE_OF [string:chr]
    # Var: $string v:prePrefix VALUE_OF [string:prePrefix]
    # Var: $string v:prefix VALUE_OF [string:prefix]
    set v:t:1 [ turbine::retrieve_string ${t:1} CACHED 1 ]
    set v:sampleName [ turbine::retrieve_string ${u:sampleName} CACHED 1 ]
    set v:chr [ turbine::retrieve_string ${u:chr} CACHED 1 ]
    set v:prePrefix "${v:t:1}/${v:sampleName}/realign/${v:sampleName}.${v:chr}"
    set v:prefix [ turbine::replace_impl ${v:prePrefix} ".." "." 0 ]
    turbine::store_string ${u:prefix} ${v:prefix}
}


proc recalibrationWrapper-async_op-eq_string { t:1 t:10 u:chr u:inputBam u:prefix u:realparms u:recalibratedbam u:recalparmsindels u:sampleName u:var } {
    # Var: $string v:t:10 VALUE_OF [string:__t:10]
    # Var: $boolean v:t:9 VALUE_OF [boolean:__t:9]
    set v:t:10 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:t:9 [ string equal ${v:t:10} "VC_REALIGN" ]
    if { ${v:t:9} } {
        # Var: string t:13 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrationWrapper():185:22
        # Var: file u:realignedbam /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrationWrapper():185:37
        # Var: void t:15 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrationWrapper():188:2
        # Var: string t:16 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrationWrapper():188:17
        lassign [ adlb::multicreate [ list string 1 1 213 ] [ list integer 1 1 215 ] [ list string 1 1 216 ] ] t:13 t:15 t:16
        turbine::c::log "allocated t:13=<${t:13}> t:15=<${t:15}> t:16=<${t:16}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 2 1 214 ] ] [ list 1 ] ] u:realignedbam
        turbine::read_refcount_incr ${u:sampleName} 1
        turbine::read_refcount_incr ${u:realparms} 1
        turbine::read_refcount_incr ${u:chr} 1
        turbine::read_refcount_incr ${u:prefix} 1
        turbine::read_refcount_incr ${t:1} 1
        turbine::file_read_refcount_incr ${u:inputBam} 1
        turbine::read_refcount_incr ${u:var} 7
        turbine::container_reference ${u:var} "SAMTOOLSDIR" ${t:16} string
        f:samtools_index ${t:15} ${t:16} ${u:inputBam} -100 "HARD" "RANK"
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:recalibrateBam {${u:recalibratedbam}} {${u:sampleName}} {${u:chr}} {${u:var}} {${u:realignedbam}} {${u:recalparmsindels}}"
        turbine::reset_priority
        turbine::rule [ list ${t:15} ] "recalibrationWrapper-chain1 ${t:1} ${t:13} ${t:15} {${u:chr}} {${u:inputBam}} {${u:realignedbam}} {${u:realparms}} {${u:sampleName}} {${u:var}}"
        turbine::rule [ list ${u:prefix} ] "recalibrationWrapper-async_op-strcat-2 ${t:13} ${u:prefix} {${u:realignedbam}}"
        turbine::read_refcount_decr ${t:16} 1
    } else {
        # Var: void t:18 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrationWrapper():198:2
        # Var: string t:19 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrationWrapper():198:17
        lassign [ adlb::multicreate [ list integer 1 1 229 ] [ list string 1 1 230 ] ] t:18 t:19
        turbine::c::log "allocated t:18=<${t:18}> t:19=<${t:19}>"
        turbine::container_reference ${u:var} "SAMTOOLSDIR" ${t:19} string
        f:samtools_index ${t:18} ${t:19} ${u:inputBam} -100 "HARD" "RANK"
        turbine::rule [ list ${t:18} ] "recalibrationWrapper-chain2 ${t:18} {${u:chr}} {${u:inputBam}} {${u:recalibratedbam}} {${u:recalparmsindels}} {${u:sampleName}} {${u:var}}"
        turbine::read_refcount_decr ${t:19} 1
    }
    turbine::file_read_refcount_decr ${u:inputBam} 1
    turbine::read_refcount_decr ${u:var} 1
    turbine::read_refcount_decr ${t:1} 1
    turbine::file_read_refcount_decr ${u:recalibratedbam} 1
    turbine::read_refcount_decr ${u:prefix} 1
    turbine::read_refcount_decr ${u:chr} 1
    turbine::read_refcount_decr ${u:recalparmsindels} 1
    turbine::read_refcount_decr ${u:realparms} 1
    turbine::read_refcount_decr ${u:sampleName} 1
}


proc recalibrationWrapper-chain1 { t:1 t:13 t:15 u:chr u:inputBam u:realignedbam u:realparms u:sampleName u:var } {
    # Var: int u:threads RENAMED [int:threads] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():112:1
    # Var: string t:18:1 RENAMED [string:__t:18] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():112:26
    # Var: string t:21 RENAMED [string:__t:21] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():112:57
    # Var: file u:targetLog RENAMED [file:targetLog] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():115:36
    # Var: file u:realignLog RENAMED [file:realignLog] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():116:37
    # Var: file u:intervals RENAMED [file:intervals] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():118:33
    # Var: string t:29 RENAMED [string:__t:29] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():121:47
    # Var: string t:31 RENAMED [string:__t:31] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():121:63
    # Var: string t:33 RENAMED [string:__t:33] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():122:8
    # Var: string t:34 RENAMED [string:__t:34] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():122:15
    # Var: string t:37 RENAMED [string:__t:37] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():122:41
    # Var: boolean t:49 RENAMED [boolean:__t:49] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():129:1
    lassign [ adlb::multicreate [ list integer 1 1 217 ] [ list string 1 1 218 ] [ list string 1 1 219 ] [ list string 1 1 223 ] [ list string 1 1 224 ] [ list string 1 1 225 ] [ list string 1 1 226 ] [ list string 1 1 227 ] [ list integer 0 1 228 ] ] u:threads t:18:1 t:21 t:29 t:31 t:33 t:34 t:37 t:49
    turbine::c::log "allocated u:threads=<${u:threads}> t:18:1=<${t:18:1}> t:21=<${t:21}> t:29=<${t:29}> t:31=<${t:31}>"
    turbine::c::log "allocated t:33=<${t:33}> t:34=<${t:34}> t:37=<${t:37}> t:49=<${t:49}>"
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 0 1 220 ] [ list file 0 1 221 ] [ list file 1 1 222 ] ] [ list 1 1 1 ] ] u:targetLog u:realignLog u:intervals
    set filename:inputFile [ turbine::get_file_path ${u:inputBam} ]
    turbine::container_reference ${u:var} "PBSCORES" ${t:18:1} string
    turbine::container_reference ${u:var} "PROCPERNODE" ${t:21} string
    turbine::container_reference ${u:var} "JAVADIR" ${t:29} string
    turbine::container_reference ${u:var} "GATKDIR" ${t:31} string
    turbine::container_reference ${u:var} "REFGENOMEDIR" ${t:34} string
    turbine::container_reference ${u:var} "REFGENOME" ${t:37} string
    turbine::rule [ list ${t:18:1} ${t:21} ] "recalibrationWrapper-async_op-parse_int ${t:18:1} ${t:21} ${u:threads}"
    turbine::rule [ list ${t:34} ${t:37} ] "recalibrationWrapper-async_op-strcat-1 ${t:33} ${t:34} ${t:37}"
    turbine::rule [ list ${t:1} ${u:chr} ${u:sampleName} ] "recalibrationWrapper-optmerged {${filename:inputFile}} ${t:1} ${t:13} ${t:29} ${t:31} ${t:33} ${t:49} {${u:chr}} {${u:inputBam}} {${u:intervals}} {${u:realignLog}} {${u:realignedbam}} {${u:realparms}} {${u:sampleName}} {${u:targetLog}} ${u:threads} {${u:var}}"
    turbine::read_refcount_decr ${t:15} 1
}


proc recalibrationWrapper-async_op-parse_int { t:18:1 t:21 u:threads } {
    # Var: $string v:t:21 VALUE_OF [string:__t:21]
    # Var: $int v:t:20:1 VALUE_OF [int:__t:20:1]
    # Var: $string v:t:18:1 VALUE_OF [string:__t:18:1]
    # Var: $int v:t:17:1 VALUE_OF [int:__t:17:1]
    # Var: $int v:threads VALUE_OF [int:threads]
    set v:t:21 [ turbine::retrieve_string ${t:21} CACHED 1 ]
    set v:t:20:1 [ turbine::parse_int_impl ${v:t:21} 10 ]
    set v:t:18:1 [ turbine::retrieve_string ${t:18:1} CACHED 1 ]
    set v:t:17:1 [ turbine::parse_int_impl ${v:t:18:1} 10 ]
    set v:threads [ turbine::divide_integer_impl ${v:t:17:1} ${v:t:20:1} ]
    turbine::store_integer ${u:threads} ${v:threads}
}


proc recalibrationWrapper-async_op-strcat-1 { t:33 t:34 t:37 } {
    # Var: $string v:t:34 VALUE_OF [string:__t:34]
    # Var: $string v:t:37 VALUE_OF [string:__t:37]
    # Var: $string v:t:33 VALUE_OF [string:__t:33]
    set v:t:34 [ turbine::retrieve_string ${t:34} CACHED 1 ]
    set v:t:37 [ turbine::retrieve_string ${t:37} CACHED 1 ]
    set v:t:33 "${v:t:34}/${v:t:37}"
    turbine::store_string ${t:33} ${v:t:33}
}


proc recalibrationWrapper-optmerged { filename:inputFile t:1 t:13 t:29 t:31 t:33 t:49 u:chr u:inputBam u:intervals u:realignLog u:realignedbam u:realparms u:sampleName u:targetLog u:threads u:var } {
    # Var: $string v:t:1:1 VALUE_OF [string:__t:1]
    # Var: $string v:sampleName:2 VALUE_OF [string:sampleName]
    # Var: $string v:chr:1 VALUE_OF [string:chr]
    # Var: $string v:prePrefix:1:1 VALUE_OF [string:prePrefix:1]
    # Var: $string v:preLogPrefix VALUE_OF [string:preLogPrefix]
    # Var: $string v:prefix:1:1 VALUE_OF [string:prefix:1]
    # Var: $string v:t:27 VALUE_OF [string:__t:27]
    # Var: $string v:logPrefix VALUE_OF [string:logPrefix]
    # Var: $string v:t:25 VALUE_OF [string:__t:25]
    # Var: $string v:t:23 VALUE_OF [string:__t:23]
    set v:t:1:1 [ turbine::retrieve_string ${t:1} CACHED 1 ]
    set v:sampleName:2 [ turbine::retrieve_string ${u:sampleName} CACHED 1 ]
    set v:chr:1 [ turbine::retrieve_string ${u:chr} CACHED 1 ]
    set v:prePrefix:1:1 "${v:t:1:1}/${v:sampleName:2}/realign/${v:sampleName:2}.wDedups.sorted.${v:chr:1}"
    set v:preLogPrefix "${v:t:1:1}/${v:sampleName:2}/logs/${v:sampleName:2}.wDedups.sorted.${v:chr:1}"
    set v:prefix:1:1 [ turbine::replace_impl ${v:prePrefix:1:1} ".." "." 0 ]
    set v:t:27 "${v:prefix:1:1}.realignTargetCreator.intervals"
    turbine::set_filename_val ${u:intervals} ${v:t:27}
    set v:logPrefix [ turbine::replace_impl ${v:preLogPrefix} ".." "." 0 ]
    set v:t:25 "${v:logPrefix}IndelRealigner.log"
    turbine::set_filename_val ${u:realignLog} ${v:t:25}
    set v:t:23 "${v:logPrefix}RealignTargetCreator.log"
    turbine::set_filename_val ${u:targetLog} ${v:t:23}
    turbine::rule [ list ${filename:inputFile} ${t:29} ${t:31} ${t:33} [ turbine::get_file_td ${u:inputBam} ] ${u:realparms} ${u:threads} ] [ list RealignerTargetCreator-app-leaf1 ${filename:inputFile} ${t:13} ${t:29} ${t:31} ${t:33} ${t:49} ${v:t:23} ${v:t:25} ${v:t:27} ${u:inputBam} ${u:intervals} ${u:realignLog} ${u:realignedbam} ${u:realparms} ${u:targetLog} ${u:threads} ${u:var} ]
}


proc RealignerTargetCreator-app-leaf1 { filename:inputFile t:13 t:29 t:31 t:33 t:49 v:t:23 v:t:25 v:t:27 u:inputBam u:intervals u:realignLog u:realignedbam u:realparms u:targetLog u:threads u:var } {
    # Var: $string v:javadir RENAMED [$string:__v:javadir] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:RealignerTargetCreator():20:9
    # Var: $string v:gatkdir RENAMED [$string:__v:gatkdir] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:RealignerTargetCreator():20:9
    # Var: $string v:reference RENAMED [$string:__v:reference] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:RealignerTargetCreator():20:9
    # Var: $string v:__filename:inputFile RENAMED [$string:__v:__filename:inputFile] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:RealignerTargetCreator():20:9
    # Var: $string$[int] v:known RENAMED [$string$[int]:__v:known] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:RealignerTargetCreator():20:9
    # Var: $int v:thr RENAMED [$int:__v:thr] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:RealignerTargetCreator():20:9
    # Var: $file v:inputFile RENAMED [$file:__v:inputFile] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:RealignerTargetCreator():20:9
    # Var: $file v:outputfile RENAMED [$file:__v:outputfile] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:RealignerTargetCreator():20:9
    # Var: $file v:outLog RENAMED [$file:__v:outLog] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:RealignerTargetCreator():20:9
    set v:javadir [ turbine::retrieve_string ${t:29} CACHED 1 ]
    set v:gatkdir [ turbine::retrieve_string ${t:31} CACHED 1 ]
    set v:reference [ turbine::retrieve_string ${t:33} CACHED 1 ]
    set v:__filename:inputFile [ turbine::retrieve_string ${filename:inputFile} ]
    set v:known [ turbine::unpack_args ${u:realparms} 1 string ]
    set v:thr [ turbine::retrieve_integer ${u:threads} CACHED 1 ]
    set v:inputFile [ turbine::retrieve_file ${u:inputBam} ]
    set tcltmp:init_rc 2
    set v:outputfile [ turbine::create_local_file_ref ${v:t:27} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:outLog [ turbine::create_local_file_ref ${v:t:23} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir "-Xmx8g" "-jar" ${v:gatkdir} "-T" "RealignerTargetCreator" "-R" ${v:reference} "-I" ${v:__filename:inputFile} {*}${v:known} "-nt" ${v:thr} "-o" ${v:t:27} [ dict create "stderr" ${v:t:23} ] ]
    turbine::exec_external ${v:javadir} [ dict create "stderr" ${v:t:23} ] "-Xmx8g" "-jar" ${v:gatkdir} "-T" "RealignerTargetCreator" "-R" ${v:reference} "-I" ${v:__filename:inputFile} {*}${v:known} "-nt" ${v:thr} "-o" ${v:t:27}
    turbine::store_file ${u:intervals} v:outputfile 0
    turbine::store_file ${u:targetLog} v:outLog 0
    turbine::rule [ list ${t:13} ] [ list IndelRealigner-app-leaf1 ${t:13} ${t:49} ${v:__filename:inputFile} ${v:gatkdir} ${v:javadir} ${v:known} ${v:reference} ${v:t:25} ${v:t:27} ${u:inputBam} ${u:intervals} ${u:realignLog} ${u:realignedbam} ${u:var} ]
    turbine::decr_local_file_refcount v:outputfile
    turbine::decr_local_file_refcount v:outLog
    turbine::file_read_refcount_decr ${u:inputBam} 1
    turbine::read_refcount_decr ${u:realparms} 1
}


proc IndelRealigner-app-leaf1 { t:13 t:49 v:__filename:inputFile v:gatkdir v:javadir v:known v:reference v:t:25 v:t:27 u:inputBam u:intervals u:realignLog u:realignedbam u:var } {
    # Var: $string v:__filename:outputfile:1 RENAMED [$string:__v:__filename:outputfile] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:IndelRealigner():33:9
    # Var: $file v:inputFile:1 RENAMED [$file:__v:inputFile] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:IndelRealigner():33:9
    # Var: $file v:intervals RENAMED [$file:__v:intervals] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:IndelRealigner():33:9
    # Var: $file v:outputfile:1 RENAMED [$file:__v:outputfile] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:IndelRealigner():33:9
    # Var: $file v:outLog:1 RENAMED [$file:__v:outLog] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:IndelRealigner():33:9
    set v:__filename:outputfile:1 [ turbine::retrieve_string ${t:13} CACHED 1 ]
    set v:inputFile:1 [ turbine::retrieve_file ${u:inputBam} CACHED 1 ]
    set v:intervals [ turbine::retrieve_file ${u:intervals} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:1 [ turbine::create_local_file_ref ${v:__filename:outputfile:1} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:outLog:1 [ turbine::create_local_file_ref ${v:t:25} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir "-Xmx8g" "-jar" ${v:gatkdir} "-T" "IndelRealigner" "-R" ${v:reference} "-I" ${v:__filename:inputFile} {*}${v:known} "--targetIntervals" ${v:t:27} "-o" ${v:__filename:outputfile:1} [ dict create "stderr" ${v:t:25} ] ]
    turbine::exec_external ${v:javadir} [ dict create "stderr" ${v:t:25} ] "-Xmx8g" "-jar" ${v:gatkdir} "-T" "IndelRealigner" "-R" ${v:reference} "-I" ${v:__filename:inputFile} {*}${v:known} "--targetIntervals" ${v:t:27} "-o" ${v:__filename:outputfile:1}
    turbine::store_file ${u:realignedbam} v:outputfile:1 0
    turbine::rule [ list [ turbine::get_file_td ${u:realignedbam} ] ] "f:checkBam ${t:49} {${u:var}} {${u:realignedbam}}"
    turbine::store_file ${u:realignLog} v:outLog:1 0
    turbine::decr_local_file_refcount v:outputfile:1
    turbine::decr_local_file_refcount v:outLog:1
}


proc recalibrationWrapper-async_op-strcat-2 { t:13 u:prefix u:realignedbam } {
    # Var: $string v:prefix:1 VALUE_OF [string:prefix]
    # Var: $string v:t:13 VALUE_OF [string:__t:13]
    set v:prefix:1 [ turbine::retrieve_string ${u:prefix} CACHED 1 ]
    set v:t:13 "${v:prefix:1}.realigned.bam"
    turbine::store_string ${t:13} ${v:t:13}
    turbine::set_filename_val ${u:realignedbam} ${v:t:13}
}


proc recalibrationWrapper-chain2 { t:18 u:chr u:inputBam u:recalibratedbam u:recalparmsindels u:sampleName u:var } {
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:recalibrateBam {${u:recalibratedbam}} {${u:sampleName}} {${u:chr}} {${u:var}} {${u:inputBam}} {${u:recalparmsindels}}"
    turbine::reset_priority
    turbine::read_refcount_decr ${t:18} 1
}


proc f:samtools_index { u:signal u:samtoolsdir u:inputFilename v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: samtools_index"
    turbine::file_read_refcount_incr ${u:inputFilename} 2
    turbine::read_refcount_incr ${u:samtoolsdir} 1
    set filename:inputFilename [ turbine::get_file_path ${u:inputFilename} ]
    turbine::rule [ list ${filename:inputFilename} [ turbine::get_file_td ${u:inputFilename} ] ${u:samtoolsdir} ] "samtools_index-app-leaf1 {${filename:inputFilename}} {${u:inputFilename}} {${u:samtoolsdir}} {${u:signal}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc samtools_index-app-leaf1 { filename:inputFilename u:inputFilename u:samtoolsdir u:signal } {
    # Var: $string v:samtoolsdir VALUE_OF [string:samtoolsdir] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:samtools_index():7:21
    # Var: $string v:__filename:inputFilename VALUE_OF [string:__filename:inputFilename] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:samtools_index():7:21
    # Var: $file v:inputFilename VALUE_OF [file:inputFilename] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:samtools_index():7:21
    # Var: $void v:signal VALUE_OF [void:signal] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:samtools_index():7:21
    set v:samtoolsdir [ turbine::retrieve_string ${u:samtoolsdir} CACHED 1 ]
    set v:__filename:inputFilename [ turbine::retrieve_string ${filename:inputFilename} ]
    set v:inputFilename [ turbine::retrieve_file ${u:inputFilename} CACHED 2 ]
    turbine::c::log [ list exec: __v:samtoolsdir "index" ${v:__filename:inputFilename} [ dict create ] ]
    turbine::exec_external ${v:samtoolsdir} [ dict create ] "index" ${v:__filename:inputFilename}
    turbine::store_void ${u:signal}
}


proc f:jointGenotypingMain { u:inputVCFs u:vars } {
    turbine::c::log "function: jointGenotypingMain"
    # Var: string t:2 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/JointGenotyping.swift:jointGenotypingMain():37:5
    lassign [ adlb::multicreate [ list string 1 1 231 ] ] t:2
    turbine::c::log "allocated t:2=<${t:2}>"
    turbine::read_refcount_incr ${u:vars} 1
    turbine::container_reference ${u:vars} "JOINT_GENOTYPING_STAGE" ${t:2} string
    turbine::rule [ list ${t:2} ] "jointGenotypingMain-async_op-eq_string ${t:2} {${u:inputVCFs}} {${u:vars}}"
}


proc jointGenotypingMain-async_op-eq_string { t:2 u:inputVCFs u:vars } {
    # Var: $string v:t:2 VALUE_OF [string:__t:2]
    # Var: $boolean v:t:1 VALUE_OF [boolean:__t:1]
    set v:t:2 [ turbine::retrieve_string ${t:2} CACHED 1 ]
    set v:t:1 [ string equal ${v:t:2} "Y" ]
    if { ${v:t:1} } {
        # Var: string t:6 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/JointGenotyping.swift:jointGenotypingMain():40:25
        # Var: string t:9 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/JointGenotyping.swift:jointGenotypingMain():40:49
        # Var: file u:jointVCF /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/JointGenotyping.swift:jointGenotypingMain():40:73
        # Var: file u:jointLog /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/JointGenotyping.swift:jointGenotypingMain():43:73
        # Var: string[int] u:variantSampleArray /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/JointGenotyping.swift:jointGenotypingMain():48:2
        # Var: string t:31 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/JointGenotyping.swift:jointGenotypingMain():62:37
        # Var: string t:33 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/JointGenotyping.swift:jointGenotypingMain():62:54
        # Var: string t:35 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/JointGenotyping.swift:jointGenotypingMain():62:71
        # Var: string t:36 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/JointGenotyping.swift:jointGenotypingMain():62:78
        # Var: string t:39 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/JointGenotyping.swift:jointGenotypingMain():63:14
        # Var: string t:41 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/JointGenotyping.swift:jointGenotypingMain():63:54
        lassign [ adlb::multicreate [ list string 1 1 232 ] [ list string 1 1 233 ] [ list container integer string 1 1 236 ] [ list string 1 1 237 ] [ list string 1 1 238 ] [ list string 1 1 239 ] [ list string 1 1 240 ] [ list string 1 1 241 ] [ list string 1 1 242 ] ] t:6 t:9 u:variantSampleArray t:31 t:33 t:35 t:36 t:39 t:41
        turbine::c::log "allocated t:6=<${t:6}> t:9=<${t:9}> u:variantSampleArray=<${u:variantSampleArray}> t:31=<${t:31}> t:33=<${t:33}>"
        turbine::c::log "allocated t:35=<${t:35}> t:36=<${t:36}> t:39=<${t:39}> t:41=<${t:41}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 0 1 234 ] [ list file 0 1 235 ] ] [ list 1 1 ] ] u:jointVCF u:jointLog
        turbine::read_refcount_incr ${u:inputVCFs} 1
        turbine::read_refcount_incr ${u:vars} 7
        turbine::container_reference ${u:vars} "OUTPUTDIR" ${t:6} string
        turbine::container_reference ${u:vars} "DELIVERYFOLDER" ${t:9} string
        turbine::container_reference ${u:vars} "JAVADIR" ${t:31} string
        turbine::container_reference ${u:vars} "GATKDIR" ${t:33} string
        turbine::container_reference ${u:vars} "REFGENOMEDIR" ${t:36} string
        turbine::container_reference ${u:vars} "REFGENOME" ${t:39} string
        turbine::container_reference ${u:vars} "PBSCORES" ${t:41} string
        turbine::rule [ list ${u:inputVCFs} ] "jointGenotypingMain-foreach-wait1 {${u:inputVCFs}} ${u:variantSampleArray}"
        turbine::rule [ list ${t:36} ${t:39} ] "jointGenotypingMain-async_op-strcat ${t:35} ${t:36} ${t:39}"
        turbine::rule [ list ${t:6} ${t:9} ] "jointGenotypingMain-optmerged ${t:31} ${t:33} ${t:35} ${t:41} ${t:6} ${t:9} {${u:jointLog}} {${u:jointVCF}} ${u:variantSampleArray}"
    }
    turbine::read_refcount_decr ${u:vars} 1
    turbine::read_refcount_decr ${u:inputVCFs} 1
}


proc jointGenotypingMain-foreach-wait1 { u:inputVCFs u:variantSampleArray } {
    set tcltmp:container_sz [ adlb::enumerate ${u:inputVCFs} count all 0 ]
    set tcltmp:iters ${tcltmp:container_sz}
    turbine::read_refcount_incr ${u:inputVCFs} [ expr { ${tcltmp:iters} - 1 } ]
    adlb::write_refcount_incr ${u:variantSampleArray} [ expr { ${tcltmp:iters} - 1 } ]
    jointGenotypingMain-foreach1:outer ${u:variantSampleArray} ${u:inputVCFs} 0 [ expr { ${tcltmp:container_sz} - 1 } ] 1
}


proc jointGenotypingMain-foreach1:outer { u:variantSampleArray u:inputVCFs tcltmp:lo tcltmp:hi tcltmp:inc } {
    if { [ expr { ${tcltmp:lo} > ${tcltmp:hi} } ] } {
        return
    }
    while {1} {
        set tcltmp:itersleft [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
        if { [ expr { ${tcltmp:itersleft} <= 64 } ] } {
            jointGenotypingMain-foreach1:inner ${u:variantSampleArray} ${u:inputVCFs} ${tcltmp:lo} ${tcltmp:hi} ${tcltmp:inc}
            return
        } else {
            set tcltmp:skip [ expr { ${tcltmp:inc} * max(64,((${tcltmp:itersleft} - 1) / 16) + 1) } ]
            for { set tcltmp:splitstart [ expr { ${tcltmp:lo} + ${tcltmp:skip} } ] } { ${tcltmp:splitstart} <= ${tcltmp:hi} } { incr tcltmp:splitstart ${tcltmp:skip} } {
                set tcltmp:splitend [ expr { min(${tcltmp:hi},${tcltmp:splitstart} + ${tcltmp:skip} - 1) } ]
                set tcltmp:prio [ turbine::get_priority ]
                turbine::set_priority ${tcltmp:prio}
                adlb::spawn 0 "jointGenotypingMain-foreach1:outer ${u:variantSampleArray} {${u:inputVCFs}} ${tcltmp:splitstart} ${tcltmp:splitend} ${tcltmp:inc}"
                turbine::reset_priority
            }
            set tcltmp:hi [ expr { ${tcltmp:lo} + ${tcltmp:skip} - 1 } ]
        }
    }
}


proc jointGenotypingMain-foreach1:inner { u:variantSampleArray u:inputVCFs tcltmp:lo tcltmp:hi tcltmp:inc } {
    set tcltmp:splitlen [ expr { ${tcltmp:hi} - ${tcltmp:lo} + 1 } ]
    set tcltmp:contents [ adlb::enumerate ${u:inputVCFs} dict ${tcltmp:splitlen} ${tcltmp:lo} ]
    dict for {v:index u:sampleVCF} ${tcltmp:contents} {
        # Var: $int v:varFlagPos VALUE_OF [int:varFlagPos]
        # Var: $int v:namePos VALUE_OF [int:namePos]
        turbine::file_read_refcount_incr ${u:sampleVCF} 1
        set v:varFlagPos [ expr { ${v:index} * 2 } ]
        set v:namePos [ expr { ${v:varFlagPos} + 1 } ]
        turbine::container_insert ${u:variantSampleArray} ${v:varFlagPos} "--variant" string 0
        set optf:sampleVCF [ turbine::get_file_path ${u:sampleVCF} ]
        turbine::rule [ list ${optf:sampleVCF} ] "jointGenotypingMain-arr_copy_in_imm {${optf:sampleVCF}} ${v:namePos} ${u:variantSampleArray}"
    }
    set tcltmp:iters [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
    turbine::read_refcount_decr ${u:inputVCFs} [ expr { ${tcltmp:iters} } ]
}


proc jointGenotypingMain-arr_copy_in_imm { optf:sampleVCF v:namePos u:variantSampleArray } {
    # Var: $string v:of:sampleVCF VALUE_OF [string:__of:sampleVCF]
    set v:of:sampleVCF [ turbine::retrieve_string ${optf:sampleVCF} CACHED 1 ]
    turbine::container_insert ${u:variantSampleArray} ${v:namePos} ${v:of:sampleVCF} string 1
}


proc jointGenotypingMain-async_op-strcat { t:35 t:36 t:39 } {
    # Var: $string v:t:36 VALUE_OF [string:__t:36]
    # Var: $string v:t:39 VALUE_OF [string:__t:39]
    # Var: $string v:t:35 VALUE_OF [string:__t:35]
    set v:t:36 [ turbine::retrieve_string ${t:36} CACHED 1 ]
    set v:t:39 [ turbine::retrieve_string ${t:39} CACHED 1 ]
    set v:t:35 "${v:t:36}/${v:t:39}"
    turbine::store_string ${t:35} ${v:t:35}
}


proc jointGenotypingMain-optmerged { t:31 t:33 t:35 t:41 t:6 t:9 u:jointLog u:jointVCF u:variantSampleArray } {
    # Var: $string v:t:6 VALUE_OF [string:__t:6]
    # Var: $string v:t:9 VALUE_OF [string:__t:9]
    # Var: $string v:t:5 VALUE_OF [string:__t:5]
    # Var: $string v:t:12 VALUE_OF [string:__t:12]
    # Var: $string v:t:20 VALUE_OF [string:__t:20]
    set v:t:6 [ turbine::retrieve_string ${t:6} CACHED 1 ]
    set v:t:9 [ turbine::retrieve_string ${t:9} CACHED 1 ]
    set v:t:5 "${v:t:6}/${v:t:9}/jointVCFs/jointVCFcalled.vcf"
    set v:t:12 "${v:t:6}/${v:t:9}/jointVCFs/jointVCF.log"
    set v:t:20 "${v:t:6}/${v:t:9}/jointVCFs"
    turbine::set_filename_val ${u:jointVCF} ${v:t:5}
    turbine::set_filename_val ${u:jointLog} ${v:t:12}
    turbine::rule [ list ${t:31} ${t:33} ${t:35} ${t:41} ${u:variantSampleArray} ] [ list GenotypeGVCFs-app-leaf1 ${t:31} ${t:33} ${t:35} ${t:41} ${v:t:12} ${v:t:5} ${u:jointLog} ${u:jointVCF} ${u:variantSampleArray} ]
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list mkdir-app-leaf1-6 ${v:t:20} ]
    turbine::reset_priority
}


proc GenotypeGVCFs-app-leaf1 { t:31 t:33 t:35 t:41 v:t:12 v:t:5 u:jointLog u:jointVCF u:variantSampleArray } {
    # Var: $string v:javadir RENAMED [$string:__v:javadir] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/joint_vcf.swift:GenotypeGVCFs():3:125
    # Var: $string v:gatkdir RENAMED [$string:__v:gatkdir] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/joint_vcf.swift:GenotypeGVCFs():3:125
    # Var: $string v:reference RENAMED [$string:__v:reference] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/joint_vcf.swift:GenotypeGVCFs():3:125
    # Var: $string$[int] v:variants RENAMED [$string$[int]:__v:variants] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/joint_vcf.swift:GenotypeGVCFs():3:125
    # Var: $string v:threads RENAMED [$string:__v:threads] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/joint_vcf.swift:GenotypeGVCFs():3:125
    # Var: $file v:outputfile RENAMED [$file:__v:outputfile] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/joint_vcf.swift:GenotypeGVCFs():3:125
    # Var: $file v:outLog RENAMED [$file:__v:outLog] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/src/bioapps/joint_vcf.swift:GenotypeGVCFs():3:125
    set v:javadir [ turbine::retrieve_string ${t:31} CACHED 1 ]
    set v:gatkdir [ turbine::retrieve_string ${t:33} CACHED 1 ]
    set v:reference [ turbine::retrieve_string ${t:35} CACHED 1 ]
    set v:variants [ turbine::unpack_args ${u:variantSampleArray} 1 string ]
    set v:threads [ turbine::retrieve_string ${t:41} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile [ turbine::create_local_file_ref ${v:t:5} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:outLog [ turbine::create_local_file_ref ${v:t:12} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir "-Xmx8g" "-jar" ${v:gatkdir} "-T" "GenotypeGVCFs" "-R" ${v:reference} {*}${v:variants} "-o" ${v:t:5} "-nt" ${v:threads} [ dict create "stderr" ${v:t:12} ] ]
    turbine::exec_external ${v:javadir} [ dict create "stderr" ${v:t:12} ] "-Xmx8g" "-jar" ${v:gatkdir} "-T" "GenotypeGVCFs" "-R" ${v:reference} {*}${v:variants} "-o" ${v:t:5} "-nt" ${v:threads}
    turbine::store_file ${u:jointVCF} v:outputfile 0
    turbine::store_file ${u:jointLog} v:outLog 0
    turbine::decr_local_file_refcount v:outputfile
    turbine::decr_local_file_refcount v:outLog
    turbine::read_refcount_decr ${u:variantSampleArray} 1
}


proc mkdir-app-leaf1-6 { v:t:20 } {
    # Var: $void v:v RENAMED [$void:__v:v] /usr/local/apps/bioapps/swift-t/swift-t-1.1/turbine/export/unix.swift:mkdir():65:15
    turbine::c::log [ list exec: "mkdir" "-p" ${v:t:20} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:t:20}
}

turbine::defaults
turbine::declare_custom_work_types COASTER
turbine::init $servers "Swift"
turbine::enable_read_refcount
adlb::declare_struct_type 16 s:location [ list "rank" integer "strictness" string "accuracy" string ]
turbine::check_constants "WORKER\[WORKER\]" ${turbine::WORK_TASK} 0 "CONTROL" ${turbine::WORK_TASK} 0 "ADLB_RANK_ANY" ${adlb::RANK_ANY} -100
adlb::add_debug_symbol 1 "__c:s_-2" ""
adlb::add_debug_symbol 2 "__c:s__vcf-1" ""
adlb::add_debug_symbol 3 "__c:s_sknownSite" ""
adlb::add_debug_symbol 4 "__c:s_sknown_g" ""
adlb::add_debug_symbol 5 "__t:7" "VariantCalling:77:33"
adlb::add_debug_symbol 6 "__t:9" "VariantCalling:92:18"
adlb::add_debug_symbol 7 "__t:10" "VariantCalling:92:25"
adlb::add_debug_symbol 8 "__t:13" "VariantCalling:92:54"
adlb::add_debug_symbol 9 "__t:59" "VariantCalling:118:4"
adlb::add_debug_symbol 10 "__t:71" "VariantCalling:121:4"
adlb::add_debug_symbol 11 "sampleInfoFile" "VariantCalling:77:0"
adlb::add_debug_symbol 12 "docSampleInfo" "VariantCalling:103:32"
adlb::add_debug_symbol 13 "docRunfile" "VariantCalling:99:109"
adlb::add_debug_symbol 14 "alignDedupBams" "VariantCalling:111:0"
adlb::add_debug_symbol 15 "variables" "VariantCalling:70:0"
adlb::add_debug_symbol 16 "failureLog" "VariantCalling:92:83"
adlb::add_debug_symbol 17 "configFile" "VariantCalling:66:0"
adlb::add_debug_symbol 18 "__t:4:5" "AlignAndDedup:alignDedupMain():195:7"
adlb::add_debug_symbol 19 "__t:6:5" "AlignAndDedup:alignDedupMain():195:25"
adlb::add_debug_symbol 20 "__t:8:5" "AlignAndDedup:alignDedupMain():195:67"
adlb::add_debug_symbol 21 "__t:26:5" "AlignAndDedup:alignDedupMain():211:32"
adlb::add_debug_symbol 22 "keyValuePair" "generalfunctions.general:getConfigVariables():43:2"
adlb::add_debug_symbol 23 "__t:87" "VariantCalling:__entry():125:5"
adlb::add_debug_symbol 24 "splitBams" "VariantCalling:__entry():132:2"
adlb::add_debug_symbol 25 "__t:109" "VariantCalling:__entry():134:6"
adlb::add_debug_symbol 26 "__t:1:3" "SplitByChr:splitByChrMain():68:26"
adlb::add_debug_symbol 27 "__t:20:3" "SplitByChr:splitByChrMain():84:31"
adlb::add_debug_symbol 28 "outputName:1" "SplitByChr:splitByChrMain():80:3"
adlb::add_debug_symbol 29 "chrDedupSortedBam" "SplitByChr:splitByChrMain():93:29"
adlb::add_debug_symbol 30 "threads" "SplitByChr:splitByChrMain():97:4"
adlb::add_debug_symbol 31 "__t:26:3" "SplitByChr:splitByChrMain():97:31"
adlb::add_debug_symbol 32 "__t:29:3" "SplitByChr:splitByChrMain():97:63"
adlb::add_debug_symbol 33 "__t:32:3" "SplitByChr:splitByChrMain():99:38"
adlb::add_debug_symbol 34 "__t:34:3" "SplitByChr:splitByChrMain():100:20"
adlb::add_debug_symbol 35 "__t:37:3" "SplitByChr:splitByChrMain():104:11"
adlb::add_debug_symbol 36 "message:1" "SplitByChr:splitByChrMain():108:5"
adlb::add_debug_symbol 37 "__t:41:3" "SplitByChr:splitByChrMain():112:5"
adlb::add_debug_symbol 38 "__t:42:3" "SplitByChr:splitByChrMain():112:12"
adlb::add_debug_symbol 39 "__t:53:2" "SplitByChr:splitByChrMain():129:16"
adlb::add_debug_symbol 40 "m:1" "SplitByChr:splitByChrMain():132:5"
adlb::add_debug_symbol 41 "__t:57:2" "SplitByChr:splitByChrMain():135:5"
adlb::add_debug_symbol 42 "splitVCFs" "VariantCalling:__entry():144:3"
adlb::add_debug_symbol 43 "__t:130" "VariantCalling:__entry():146:7"
adlb::add_debug_symbol 44 "__t:16:2" "RealignRecalAndVC:VCSplitMain():337:24"
adlb::add_debug_symbol 45 "VCF_list" "VariantCalling:__entry():157:4"
adlb::add_debug_symbol 46 "__t:151" "VariantCalling:__entry():159:8"
adlb::add_debug_symbol 47 "__t:8:1" "CombineVariants:combineVariantsMain():59:36"
adlb::add_debug_symbol 48 "pieces" "CombineVariants:combineVariantsMain():52:2"
adlb::add_debug_symbol 49 "outputName" "CombineVariants:combineVariantsMain():55:2"
adlb::add_debug_symbol 50 "chrSampleArray" "CombineVariants:combineVariantsMain():62:3"
adlb::add_debug_symbol 51 "gvcfSample" "CombineVariants:combineVariantsMain():78:21"
adlb::add_debug_symbol 52 "combineLog" "CombineVariants:combineVariantsMain():82:29"
adlb::add_debug_symbol 53 "__t:22:1" "CombineVariants:combineVariantsMain():85:41"
adlb::add_debug_symbol 54 "__t:24:1" "CombineVariants:combineVariantsMain():86:13"
adlb::add_debug_symbol 55 "__t:26:1" "CombineVariants:combineVariantsMain():87:13"
adlb::add_debug_symbol 56 "__t:27:1" "CombineVariants:combineVariantsMain():87:20"
adlb::add_debug_symbol 57 "__t:30:1" "CombineVariants:combineVariantsMain():87:47"
adlb::add_debug_symbol 58 "__t:32:1" "CombineVariants:combineVariantsMain():88:13"
adlb::add_debug_symbol 59 "__t:36:1" "CombineVariants:combineVariantsMain():88:47"
adlb::add_debug_symbol 60 "__t:39:1" "CombineVariants:combineVariantsMain():96:4"
adlb::add_debug_symbol 61 "message" "CombineVariants:combineVariantsMain():99:4"
adlb::add_debug_symbol 62 "__t:43:1" "CombineVariants:combineVariantsMain():102:4"
adlb::add_debug_symbol 63 "pieces:1" "RealignRecalAndVC:VCSplitMain():330:2"
adlb::add_debug_symbol 64 "chr" "RealignRecalAndVC:VCSplitMain():331:2"
adlb::add_debug_symbol 65 "sampleName:1" "RealignRecalAndVC:VCSplitMain():334:2"
adlb::add_debug_symbol 66 "__t:21:2" "RealignRecalAndVC:VCSplitMain():343:29"
adlb::add_debug_symbol 67 "recalfiles" "RealignRecalAndVC:VCSplitMain():344:8"
adlb::add_debug_symbol 68 "recalparmsindels" "RealignRecalAndVC:VCSplitMain():350:4"
adlb::add_debug_symbol 69 "realparms" "RealignRecalAndVC:VCSplitMain():353:4"
adlb::add_debug_symbol 70 "__t:26:2" "RealignRecalAndVC:VCSplitMain():346:28"
adlb::add_debug_symbol 71 "__t:27:2" "RealignRecalAndVC:VCSplitMain():346:35"
adlb::add_debug_symbol 72 "__t:30:2" "RealignRecalAndVC:VCSplitMain():346:62"
adlb::add_debug_symbol 73 "__t:33:2" "RealignRecalAndVC:VCSplitMain():347:7"
adlb::add_debug_symbol 74 "recalibratedbam" "RealignRecalAndVC:VCSplitMain():362:63"
adlb::add_debug_symbol 75 "gvcfVariants" "RealignRecalAndVC:VCSplitMain():372:60"
adlb::add_debug_symbol 76 "threads:2" "RealignRecalAndVC:callChrVariants():208:1"
adlb::add_debug_symbol 77 "__t:2:7" "RealignRecalAndVC:callChrVariants():208:26"
adlb::add_debug_symbol 78 "__t:5:7" "RealignRecalAndVC:callChrVariants():208:58"
adlb::add_debug_symbol 79 "ploidy" "RealignRecalAndVC:callChrVariants():210:1"
adlb::add_debug_symbol 80 "haploLog" "RealignRecalAndVC:callChrVariants():217:54"
adlb::add_debug_symbol 81 "__t:19:6" "RealignRecalAndVC:callChrVariants():219:36"
adlb::add_debug_symbol 82 "__t:21:6" "RealignRecalAndVC:callChrVariants():219:53"
adlb::add_debug_symbol 83 "__t:23:6" "RealignRecalAndVC:callChrVariants():220:8"
adlb::add_debug_symbol 84 "__t:27:6" "RealignRecalAndVC:callChrVariants():220:42"
adlb::add_debug_symbol 85 "__t:29:6" "RealignRecalAndVC:callChrVariants():222:8"
adlb::add_debug_symbol 86 "__t:33:6" "RealignRecalAndVC:callChrVariants():222:42"
adlb::add_debug_symbol 87 "__t:39:2" "RealignRecalAndVC:VCSplitMain():351:27"
adlb::add_debug_symbol 88 "__t:48:1" "RealignRecalAndVC:VCSplitMain():354:27"
adlb::add_debug_symbol 89 "__t:78:1" "RealignRecalAndVC:VCSplitMain():389:14"
adlb::add_debug_symbol 90 "m" "RealignRecalAndVC:VCSplitMain():392:5"
adlb::add_debug_symbol 91 "__t:82:1" "RealignRecalAndVC:VCSplitMain():395:5"
adlb::add_debug_symbol 92 "VCF_list:1" "VariantCalling:__entry():174:2"
adlb::add_debug_symbol 93 "__t:170" "VariantCalling:__entry():176:6"
adlb::add_debug_symbol 94 "__t:5:4" "RealignRecalAndVC:VCNoSplitMain():257:23"
adlb::add_debug_symbol 95 "sampleName:3" "RealignRecalAndVC:VCNoSplitMain():255:2"
adlb::add_debug_symbol 96 "__t:10:4" "RealignRecalAndVC:VCNoSplitMain():263:28"
adlb::add_debug_symbol 97 "recalfiles:1" "RealignRecalAndVC:VCNoSplitMain():263:61"
adlb::add_debug_symbol 98 "recalparmsindels:1" "RealignRecalAndVC:VCNoSplitMain():268:3"
adlb::add_debug_symbol 99 "realparms:1" "RealignRecalAndVC:VCNoSplitMain():271:3"
adlb::add_debug_symbol 100 "__t:14:4" "RealignRecalAndVC:VCNoSplitMain():264:27"
adlb::add_debug_symbol 101 "__t:15:4" "RealignRecalAndVC:VCNoSplitMain():264:34"
adlb::add_debug_symbol 102 "__t:18:4" "RealignRecalAndVC:VCNoSplitMain():264:61"
adlb::add_debug_symbol 103 "inputBam:1" "RealignRecalAndVC:VCNoSplitMain():280:3"
adlb::add_debug_symbol 104 "recalibratedbam:1" "RealignRecalAndVC:VCNoSplitMain():285:12"
adlb::add_debug_symbol 105 "gvcfVariants:1" "RealignRecalAndVC:VCNoSplitMain():295:8"
adlb::add_debug_symbol 106 "threads:3" "RealignRecalAndVC:callVariants():232:1"
adlb::add_debug_symbol 107 "__t:2:8" "RealignRecalAndVC:callVariants():232:26"
adlb::add_debug_symbol 108 "__t:5:8" "RealignRecalAndVC:callVariants():232:58"
adlb::add_debug_symbol 109 "haploLog:1" "RealignRecalAndVC:callVariants():237:44"
adlb::add_debug_symbol 110 "__t:13:7" "RealignRecalAndVC:callVariants():239:36"
adlb::add_debug_symbol 111 "__t:15:7" "RealignRecalAndVC:callVariants():240:8"
adlb::add_debug_symbol 112 "__t:17:7" "RealignRecalAndVC:callVariants():241:8"
adlb::add_debug_symbol 113 "__t:21:7" "RealignRecalAndVC:callVariants():241:42"
adlb::add_debug_symbol 114 "__t:23:7" "RealignRecalAndVC:callVariants():243:8"
adlb::add_debug_symbol 115 "__t:27:7" "RealignRecalAndVC:callVariants():243:42"
adlb::add_debug_symbol 116 "__t:27:4" "RealignRecalAndVC:VCNoSplitMain():269:26"
adlb::add_debug_symbol 117 "__t:36:4" "RealignRecalAndVC:VCNoSplitMain():272:26"
adlb::add_debug_symbol 118 "__t:68:2" "RealignRecalAndVC:VCNoSplitMain():311:4"
adlb::add_debug_symbol 119 "message:2" "RealignRecalAndVC:VCNoSplitMain():314:4"
adlb::add_debug_symbol 120 "__t:72:2" "RealignRecalAndVC:VCNoSplitMain():317:4"
adlb::add_debug_symbol 121 "__t:20" "VariantCalling:85:6"
adlb::add_debug_symbol 122 "sampleInfo" "AlignAndDedup:alignDedupMain():189:2"
adlb::add_debug_symbol 123 "rgheader" "AlignAndDedup:alignDedupMain():194:2"
adlb::add_debug_symbol 124 "LogDir" "AlignAndDedup:alignDedupMain():206:2"
adlb::add_debug_symbol 125 "AlignDir" "AlignAndDedup:alignDedupMain():207:2"
adlb::add_debug_symbol 126 "RealignDir" "AlignAndDedup:alignDedupMain():208:2"
adlb::add_debug_symbol 127 "VarcallDir" "AlignAndDedup:alignDedupMain():209:2"
adlb::add_debug_symbol 128 "alignedbam" "AlignAndDedup:alignDedupMain():221:50"
adlb::add_debug_symbol 129 "__t:36:5" "AlignAndDedup:alignDedupMain():224:21"
adlb::add_debug_symbol 130 "__t:37:5" "AlignAndDedup:alignDedupMain():224:28"
adlb::add_debug_symbol 131 "alignedsam" "AlignAndDedup:alignDedupMain():224:67"
adlb::add_debug_symbol 132 "threads:1" "AlignAndDedup:alignDedupMain():230:3"
adlb::add_debug_symbol 133 "__t:42:5" "AlignAndDedup:alignDedupMain():230:28"
adlb::add_debug_symbol 134 "__t:45:4" "AlignAndDedup:alignDedupMain():230:60"
adlb::add_debug_symbol 135 "__t:47:4" "AlignAndDedup:alignDedupMain():231:30"
adlb::add_debug_symbol 136 "__t:49:4" "AlignAndDedup:alignDedupMain():231:73"
adlb::add_debug_symbol 137 "__t:51:4" "AlignAndDedup:alignDedupMain():234:8"
adlb::add_debug_symbol 138 "__t:11:9" "AlignAndDedup:alignReads():88:19"
adlb::add_debug_symbol 139 "alignedLog" "AlignAndDedup:alignReads():88:46"
adlb::add_debug_symbol 140 "__t:14:9" "AlignAndDedup:alignReads():91:5"
adlb::add_debug_symbol 141 "__t:17:9" "AlignAndDedup:alignReads():93:34"
adlb::add_debug_symbol 142 "__t:19:9" "AlignAndDedup:alignReads():93:64"
adlb::add_debug_symbol 143 "__t:21:9" "AlignAndDedup:alignReads():94:9"
adlb::add_debug_symbol 144 "__t:22:9" "AlignAndDedup:alignReads():94:9"
adlb::add_debug_symbol 145 "__t:24:9" "AlignAndDedup:alignReads():99:36"
adlb::add_debug_symbol 146 "__t:26:9" "AlignAndDedup:alignReads():99:72"
adlb::add_debug_symbol 147 "dedupsortedbam" "AlignAndDedup:alignDedupMain():240:55"
adlb::add_debug_symbol 148 "__t:54:4" "AlignAndDedup:alignDedupMain():244:9"
adlb::add_debug_symbol 149 "__t:16:8" "AlignAndDedup:markDuplicates():128:5"
adlb::add_debug_symbol 150 "dedupsam" "AlignAndDedup:markDuplicates():129:64"
adlb::add_debug_symbol 151 "dedupbam" "AlignAndDedup:markDuplicates():130:47"
adlb::add_debug_symbol 152 "__t:26:8" "AlignAndDedup:markDuplicates():131:16"
adlb::add_debug_symbol 153 "samLog" "AlignAndDedup:markDuplicates():131:43"
adlb::add_debug_symbol 154 "sortLog" "AlignAndDedup:markDuplicates():132:44"
adlb::add_debug_symbol 155 "__t:30:8" "AlignAndDedup:markDuplicates():135:32"
adlb::add_debug_symbol 156 "__t:37:7" "AlignAndDedup:markDuplicates():141:52"
adlb::add_debug_symbol 157 "__t:41:6" "AlignAndDedup:markDuplicates():142:29"
adlb::add_debug_symbol 158 "metricsfile" "AlignAndDedup:markDuplicates():147:50"
adlb::add_debug_symbol 159 "alignedsortedbam" "AlignAndDedup:markDuplicates():148:55"
adlb::add_debug_symbol 160 "__t:52:5" "AlignAndDedup:markDuplicates():149:19"
adlb::add_debug_symbol 161 "picardLog" "AlignAndDedup:markDuplicates():149:46"
adlb::add_debug_symbol 162 "sortLog:1" "AlignAndDedup:markDuplicates():150:44"
adlb::add_debug_symbol 163 "__t:56:5" "AlignAndDedup:markDuplicates():153:54"
adlb::add_debug_symbol 164 "__t:60:4" "AlignAndDedup:markDuplicates():154:12"
adlb::add_debug_symbol 165 "__t:61:4" "AlignAndDedup:markDuplicates():157:50"
adlb::add_debug_symbol 166 "__t:63:4" "AlignAndDedup:markDuplicates():157:67"
adlb::add_debug_symbol 167 "novoLog" "AlignAndDedup:markDuplicates():162:44"
adlb::add_debug_symbol 168 "__t:69:4" "AlignAndDedup:markDuplicates():165:52"
adlb::add_debug_symbol 169 "__t:73:3" "AlignAndDedup:markDuplicates():166:30"
adlb::add_debug_symbol 170 "flagstats" "AlignAndDedup:alignDedupMain():253:74"
adlb::add_debug_symbol 171 "stat" "AlignAndDedup:alignDedupMain():257:5"
adlb::add_debug_symbol 172 "__t:61:3" "AlignAndDedup:alignDedupMain():258:19"
adlb::add_debug_symbol 173 "__t:64:3" "AlignAndDedup:alignDedupMain():259:17"
adlb::add_debug_symbol 174 "__t:67:3" "AlignAndDedup:alignDedupMain():260:16"
adlb::add_debug_symbol 175 "perc_mapped" "AlignAndDedup:alignDedupMain():263:16"
adlb::add_debug_symbol 176 "__t:74:2" "AlignAndDedup:alignDedupMain():263:43"
adlb::add_debug_symbol 177 "cutoff_info" "AlignAndDedup:alignDedupMain():266:5"
adlb::add_debug_symbol 178 "__t:80:2" "AlignAndDedup:alignDedupMain():267:35"
adlb::add_debug_symbol 179 "__t:84:1" "AlignAndDedup:alignDedupMain():269:31"
adlb::add_debug_symbol 180 "__t:88:1" "AlignAndDedup:alignDedupMain():272:21"
adlb::add_debug_symbol 181 "__t:91:1" "AlignAndDedup:alignDedupMain():273:22"
adlb::add_debug_symbol 182 "__t:92:1" "AlignAndDedup:alignDedupMain():273:24"
adlb::add_debug_symbol 183 "m:2" "AlignAndDedup:alignDedupMain():285:6"
adlb::add_debug_symbol 184 "__t:101:1" "AlignAndDedup:alignDedupMain():288:6"
adlb::add_debug_symbol 185 "mssg" "AlignAndDedup:alignDedupMain():294:5"
adlb::add_debug_symbol 186 "__t:107:1" "AlignAndDedup:alignDedupMain():298:5"
adlb::add_debug_symbol 187 "message:3" "AlignAndDedup:alignDedupMain():304:4"
adlb::add_debug_symbol 188 "__t:113:1" "AlignAndDedup:alignDedupMain():307:4"
adlb::add_debug_symbol 189 "__t:116:1" "AlignAndDedup:alignDedupMain():316:4"
adlb::add_debug_symbol 190 "message_string" "AlignAndDedup:alignDedupMain():319:4"
adlb::add_debug_symbol 191 "__t:120:1" "AlignAndDedup:alignDedupMain():322:4"
adlb::add_debug_symbol 192 "newFile" "generalfunctions.general:append():14:16"
adlb::add_debug_symbol 193 "__t:11" "generalfunctions.general:exitIfFlagGiven():21:5"
adlb::add_debug_symbol 194 "__t:1" "generalfunctions.general:checkBam():69:32"
adlb::add_debug_symbol 195 "__t:1" "RealignRecalAndVC:recalibrateBam():140:27"
adlb::add_debug_symbol 196 "threads" "RealignRecalAndVC:recalibrateBam():147:1"
adlb::add_debug_symbol 197 "__t:18" "RealignRecalAndVC:recalibrateBam():147:26"
adlb::add_debug_symbol 198 "__t:21" "RealignRecalAndVC:recalibrateBam():147:57"
adlb::add_debug_symbol 199 "recalLog" "RealignRecalAndVC:recalibrateBam():150:35"
adlb::add_debug_symbol 200 "printLog" "RealignRecalAndVC:recalibrateBam():151:35"
adlb::add_debug_symbol 201 "report" "RealignRecalAndVC:recalibrateBam():152:30"
adlb::add_debug_symbol 202 "__t:29" "RealignRecalAndVC:recalibrateBam():155:37"
adlb::add_debug_symbol 203 "__t:31" "RealignRecalAndVC:recalibrateBam():155:53"
adlb::add_debug_symbol 204 "__t:33" "RealignRecalAndVC:recalibrateBam():156:11"
adlb::add_debug_symbol 205 "__t:34" "RealignRecalAndVC:recalibrateBam():156:18"
adlb::add_debug_symbol 206 "__t:37" "RealignRecalAndVC:recalibrateBam():156:44"
adlb::add_debug_symbol 207 "__t:39" "RealignRecalAndVC:recalibrateBam():158:11"
adlb::add_debug_symbol 208 "__t:43" "RealignRecalAndVC:recalibrateBam():158:44"
adlb::add_debug_symbol 209 "__t:55" "RealignRecalAndVC:recalibrateBam():164:1"
adlb::add_debug_symbol 210 "__t:1" "RealignRecalAndVC:recalibrationWrapper():175:27"
adlb::add_debug_symbol 211 "prefix" "RealignRecalAndVC:recalibrationWrapper():177:1"
adlb::add_debug_symbol 212 "__t:10" "RealignRecalAndVC:recalibrationWrapper():179:5"
adlb::add_debug_symbol 213 "__t:13" "RealignRecalAndVC:recalibrationWrapper():185:22"
adlb::add_debug_symbol 214 "realignedbam" "RealignRecalAndVC:recalibrationWrapper():185:37"
adlb::add_debug_symbol 215 "__t:15" "RealignRecalAndVC:recalibrationWrapper():188:2"
adlb::add_debug_symbol 216 "__t:16" "RealignRecalAndVC:recalibrationWrapper():188:17"
adlb::add_debug_symbol 217 "threads" "RealignRecalAndVC:realignBam():112:1"
adlb::add_debug_symbol 218 "__t:18:1" "RealignRecalAndVC:realignBam():112:26"
adlb::add_debug_symbol 219 "__t:21" "RealignRecalAndVC:realignBam():112:57"
adlb::add_debug_symbol 220 "targetLog" "RealignRecalAndVC:realignBam():115:36"
adlb::add_debug_symbol 221 "realignLog" "RealignRecalAndVC:realignBam():116:37"
adlb::add_debug_symbol 222 "intervals" "RealignRecalAndVC:realignBam():118:33"
adlb::add_debug_symbol 223 "__t:29" "RealignRecalAndVC:realignBam():121:47"
adlb::add_debug_symbol 224 "__t:31" "RealignRecalAndVC:realignBam():121:63"
adlb::add_debug_symbol 225 "__t:33" "RealignRecalAndVC:realignBam():122:8"
adlb::add_debug_symbol 226 "__t:34" "RealignRecalAndVC:realignBam():122:15"
adlb::add_debug_symbol 227 "__t:37" "RealignRecalAndVC:realignBam():122:41"
adlb::add_debug_symbol 228 "__t:49" "RealignRecalAndVC:realignBam():129:1"
adlb::add_debug_symbol 229 "__t:18" "RealignRecalAndVC:recalibrationWrapper():198:2"
adlb::add_debug_symbol 230 "__t:19" "RealignRecalAndVC:recalibrationWrapper():198:17"
adlb::add_debug_symbol 231 "__t:2" "JointGenotyping:jointGenotypingMain():37:5"
adlb::add_debug_symbol 232 "__t:6" "JointGenotyping:jointGenotypingMain():40:25"
adlb::add_debug_symbol 233 "__t:9" "JointGenotyping:jointGenotypingMain():40:49"
adlb::add_debug_symbol 234 "jointVCF" "JointGenotyping:jointGenotypingMain():40:73"
adlb::add_debug_symbol 235 "jointLog" "JointGenotyping:jointGenotypingMain():43:73"
adlb::add_debug_symbol 236 "variantSampleArray" "JointGenotyping:jointGenotypingMain():48:2"
adlb::add_debug_symbol 237 "__t:31" "JointGenotyping:jointGenotypingMain():62:37"
adlb::add_debug_symbol 238 "__t:33" "JointGenotyping:jointGenotypingMain():62:54"
adlb::add_debug_symbol 239 "__t:35" "JointGenotyping:jointGenotypingMain():62:71"
adlb::add_debug_symbol 240 "__t:36" "JointGenotyping:jointGenotypingMain():62:78"
adlb::add_debug_symbol 241 "__t:39" "JointGenotyping:jointGenotypingMain():63:14"
adlb::add_debug_symbol 242 "__t:41" "JointGenotyping:jointGenotypingMain():63:54"
turbine::start swift:main swift:constants
turbine::finalize
