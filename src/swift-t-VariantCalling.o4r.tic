
# Generated by stc version 0.7.3
# date                    : 2017/08/14 05:56:14
# Turbine version         : 1.0.0
# Input filename          : /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift
# Output filename         : /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/swift-t-VariantCalling.o4r.tic
# STC home                : /usr/src/swift-t/swift-t-1.2/stc
# Turbine home            : /usr/src/swift-t/swift-t-1.2/turbine
# Compiler settings:
# stc.auto-declare              : true
# stc.c_preprocess              : true
# stc.checkpointing             : true
# stc.compiler-debug            : true
# stc.debugging                 : COMMENTS
# stc.ic.output-file            : 
# stc.input_filename            : /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift
# stc.log.file                  : 
# stc.log.trace                 : false
# stc.must_pass_wait_vars       : true
# stc.opt.algebra               : true
# stc.opt.array-build           : true
# stc.opt.batch-refcounts       : true
# stc.opt.cancel-refcounts      : true
# stc.opt.constant-fold         : true
# stc.opt.controlflow-fusion    : true
# stc.opt.dataflow-op-inline    : true
# stc.opt.dead-code-elim        : true
# stc.opt.demote-globals        : true
# stc.opt.disable-asserts       : false
# stc.opt.expand-loop-threshold-insts: 256
# stc.opt.expand-loop-threshold-iters: 16
# stc.opt.expand-loops          : false
# stc.opt.finalized-var         : true
# stc.opt.flatten-nested        : true
# stc.opt.full-function-inline  : false
# stc.opt.full-unroll           : false
# stc.opt.function-always-inline-threshold: 5
# stc.opt.function-inline       : true
# stc.opt.function-inline-threshold: 50
# stc.opt.function-signature    : true
# stc.opt.hoist                 : true
# stc.opt.hoist-refcounts       : true
# stc.opt.loop-simplify         : true
# stc.opt.max-iterations        : 10
# stc.opt.merge-refcounts       : true
# stc.opt.piggyback-refcounts   : true
# stc.opt.pipeline              : false
# stc.opt.propagate-aliases     : true
# stc.opt.reorder-insts         : false
# stc.opt.shared-constants      : true
# stc.opt.unroll-loop-threshold-insts: 192
# stc.opt.unroll-loop-threshold-iters: 8
# stc.opt.unroll-loops          : true
# stc.opt.value-number          : true
# stc.opt.wait-coalesce         : true
# stc.output_filename           : /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/swift-t-VariantCalling.o4r.tic
# stc.preproc.force-cpp         : false
# stc.preproc.force-gcc         : false
# stc.preprocess_only           : false
# stc.profile                   : false
# stc.refcounting               : true
# stc.rpath                     : /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps
# stc.stc_home                  : /usr/src/swift-t/swift-t-1.2/stc
# stc.turbine.version           : 1.0.0
# stc.turbine_home              : /usr/src/swift-t/swift-t-1.2/turbine
# stc.version                   : 0.7.3

# Metadata:

# rpath entries
lappend auto_path "/home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps"
package require turbine 1.0.0
namespace import turbine::*


proc swift:constants {  } {
    turbine::c::log "function:swift:constants"
}

package require align 0.2


proc swift:main {  } {
    turbine::c::log "function: __entry"
    # Var: string t:7 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:78:33
    # Var: string t:10 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:93:25
    # Var: string t:22 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:104:21
    # Var: string t:53 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:125:4
    # Var: $string v:configFilename VALUE_OF [string:configFilename]
    # Var: string[string] u:variables /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:71:0
    # Var: file u:docSampleInfo /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:105:32
    # Var: file u:failureLog /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:93:49
    # Var: file u:timingLog /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:94:48
    # Var: file u:configFile /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:67:0
    # Var: file u:sampleInfoFile /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:78:0
    # Var: file u:docRunfile /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:101:88
    # Var: *rw(file)[int] u:alignDedupBams /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:115:0
    # Var: $string v:f RENAMED [$string:__v:f]
    # Var: string t:3:1 RENAMED [string:__t:3] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():215:7
    # Var: string t:5:1 RENAMED [string:__t:5] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():215:25
    # Var: string t:7:1 RENAMED [string:__t:7] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():215:67
    # Var: string t:25:1 RENAMED [string:__t:25] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():230:28
    # Var: boolean t:56:1 RENAMED [boolean:__t:56] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():237:32
    # Var: boolean t:60:1 RENAMED [boolean:__t:60] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():238:32
    # Var: boolean t:64 RENAMED [boolean:__t:64] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():239:32
    # Var: boolean t:68 RENAMED [boolean:__t:68] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():240:32
    # Var: $file v:configFile:1 VALUE_OF [file:configFile]
    # Var: $file v:configFile:2 VALUE_OF [file:configFile]
    # Var: $string$[int] v:configFileData VALUE_OF [string[int]:configFileData]
    # Var: string u:tmpLogDir RENAMED [string:tmpLogDir] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():230:2
    # Var: boolean t:32:1 RENAMED [boolean:__t:32] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():235:39
    lassign [ adlb::multicreate [ list string 1 1 1 ] [ list string 2 1 2 ] [ list string 1 1 3 ] [ list string 1 1 4 ] [ list container string string 8 1 5 ] [ list container integer file_ref 1 1 12 ] [ list string 1 1 13 ] [ list string 1 1 14 ] [ list string 1 1 15 ] [ list string 4 1 16 ] [ list integer 1 1 17 ] [ list integer 1 1 18 ] [ list integer 1 1 19 ] [ list integer 1 1 20 ] [ list string 1 1 21 ] [ list integer 1 1 22 ] ] t:7 t:10 t:22 t:53 u:variables u:alignDedupBams t:3:1 t:5:1 t:7:1 t:25:1 t:56:1 t:60:1 t:64 t:68 u:tmpLogDir t:32:1
    turbine::c::log "allocated t:7=<${t:7}> t:10=<${t:10}> t:22=<${t:22}> t:53=<${t:53}> u:variables=<${u:variables}>"
    turbine::c::log "allocated u:alignDedupBams=<${u:alignDedupBams}> t:3:1=<${t:3:1}> t:5:1=<${t:5:1}> t:7:1=<${t:7:1}> t:25:1=<${t:25:1}>"
    turbine::c::log "allocated t:56:1=<${t:56:1}> t:60:1=<${t:60:1}> t:64=<${t:64}> t:68=<${t:68}> u:tmpLogDir=<${u:tmpLogDir}>"
    turbine::c::log "allocated t:32:1=<${t:32:1}>"
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 0 1 6 ] [ list file 1 1 7 ] [ list file 2 1 8 ] [ list file 1 1 9 ] [ list file 2 1 10 ] [ list file 0 1 11 ] ] [ list 1 1 1 0 0 1 ] ] u:docSampleInfo u:failureLog u:timingLog u:configFile u:sampleInfoFile u:docRunfile
    turbine::argv_accept_impl [ list "runfile" ]
    set v:configFilename [ turbine::argv_get_impl "runfile" ]
    set tcltmp:init_rc 1
    set v:configFile:1 [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:configFile:1 ${v:configFilename}
    turbine::store_file ${u:configFile} v:configFile:1 1
    set v:configFile:2 [ turbine::retrieve_file ${u:configFile} ]
    set v:configFileData [ turbine::file_lines_impl ${v:configFile:2} ]
    turbine::container_reference ${u:variables} "SAMPLEINFORMATION" ${t:7} string
    turbine::container_reference ${u:variables} "OUTPUTDIR" ${t:10} string
    turbine::container_reference ${u:variables} "ALIGN_DEDUP_STAGE" ${t:53} string
    set v:f [ file tail ${v:configFilename} ]
    turbine::container_reference ${u:variables} "SAMPLELB" ${t:3:1} string
    turbine::container_reference ${u:variables} "SAMPLEPL" ${t:5:1} string
    turbine::container_reference ${u:variables} "SAMPLECN" ${t:7:1} string
    turbine::container_reference ${u:variables} "TMPDIR" ${t:25:1} string
    dict for {tcltmp:ignore v:line} ${v:configFileData} {
        # Var: string[int] u:keyValuePair RENAMED [string[int]:keyValuePair] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:getConfigVariables():43:2
        # Var: $string$[int] v:keyValuePair VALUE_OF [string[int]:keyValuePair]
        # Var: $string v:alias:name VALUE_OF [string:__alias:name]
        # Var: $string v:alias:value VALUE_OF [string:__alias:value]
        lassign [ adlb::multicreate [ list container integer string 1 2 23 ] ] u:keyValuePair
        turbine::c::log "allocated u:keyValuePair=<${u:keyValuePair}>"
        set v:keyValuePair [ turbine::split_impl ${v:line} "=" ]
        turbine::build_rec ${u:keyValuePair} ${v:keyValuePair} [ list container integer string ] 0 1
        set a:name [ adlb::subscript_container ${u:keyValuePair} 0 ]
        set v:alias:name [ turbine::retrieve_string ${a:name} ]
        set a:value [ adlb::subscript_container ${u:keyValuePair} 1 ]
        set v:alias:value [ turbine::retrieve_string ${a:value} CACHED 1 ]
        turbine::container_insert ${u:variables} ${v:alias:name} ${v:alias:value} string 0
        adlb::write_refcount_decr ${u:keyValuePair} 1
    }
    turbine::rule [ list ${t:25:1} ] "__entry-async_op-strcat ${t:25:1} ${u:tmpLogDir}"
    turbine::rule [ list ${t:53} ] "__entry-optmerged ${t:32:1} ${t:53} ${t:56:1} ${t:60:1} ${t:64} ${t:68}"
    turbine::rule [ list ${t:10} ] [ list __entry-optmerged-1 ${t:10} ${t:22} ${t:25:1} ${v:f} ${u:configFile} ${u:docRunfile} ${u:docSampleInfo} ${u:failureLog} ${u:sampleInfoFile} ${u:timingLog} ]
    turbine::rule [ list ${t:7} ] "__entry-optmerged-2 ${t:10} ${t:22} ${t:25:1} ${t:32:1} ${t:3:1} ${t:56:1} ${t:5:1} ${t:60:1} ${t:64} ${t:68} ${t:7} ${t:7:1} ${u:alignDedupBams} {${u:docSampleInfo}} {${u:failureLog}} {${u:sampleInfoFile}} ${u:tmpLogDir} ${u:variables}"
    turbine::rule [ list ${u:alignDedupBams} ] "__entry-optmerged-11 ${t:25:1} ${u:alignDedupBams} {${u:timingLog}}"
    turbine::decr_local_file_refcount v:configFile:1
    adlb::write_refcount_decr ${u:variables} 1
}


proc __entry-async_op-strcat { t:25:1 u:tmpLogDir } {
    # Var: $string v:t:25:1 VALUE_OF [string:__t:25:1]
    # Var: $string v:tmpLogDir VALUE_OF [string:tmpLogDir]
    set v:t:25:1 [ turbine::retrieve_string ${t:25:1} CACHED 1 ]
    set v:tmpLogDir "${v:t:25:1}/timinglogs/"
    turbine::store_string ${u:tmpLogDir} ${v:tmpLogDir}
}


proc __entry-optmerged { t:32:1 t:53 t:56:1 t:60:1 t:64 t:68 } {
    # Var: $string v:t:53 VALUE_OF [string:__t:53]
    # Var: $boolean v:t:36:1 VALUE_OF [boolean:__t:36:1]
    # Var: $boolean v:t:40:1 VALUE_OF [boolean:__t:40:1]
    # Var: $boolean v:t:44:1 VALUE_OF [boolean:__t:44:1]
    # Var: $boolean v:t:48:1 VALUE_OF [boolean:__t:48:1]
    # Var: $boolean v:t:52:1 VALUE_OF [boolean:__t:52:1]
    # Var: $boolean v:t:56:1 VALUE_OF [boolean:__t:56:1]
    # Var: $boolean v:t:60:1 VALUE_OF [boolean:__t:60:1]
    # Var: $boolean v:t:64 VALUE_OF [boolean:__t:64]
    # Var: $boolean v:t:68 VALUE_OF [boolean:__t:68]
    # Var: $boolean v:t:35:1 VALUE_OF [boolean:__t:35:1]
    # Var: $boolean v:t:34:1 VALUE_OF [boolean:__t:34:1]
    # Var: $boolean v:t:33:1 VALUE_OF [boolean:__t:33:1]
    # Var: $boolean v:t:32:1 VALUE_OF [boolean:__t:32:1]
    set v:t:53 [ turbine::retrieve_string ${t:53} CACHED 1 ]
    set v:t:36:1 [ string equal ${v:t:53} "Y" ]
    set v:t:40:1 [ string equal ${v:t:53} "Yes" ]
    set v:t:44:1 [ string equal ${v:t:53} "YES" ]
    set v:t:48:1 [ string equal ${v:t:53} "y" ]
    set v:t:52:1 [ string equal ${v:t:53} "yes" ]
    set v:t:56:1 [ string equal ${v:t:53} "End" ]
    turbine::store_integer ${t:56:1} ${v:t:56:1}
    set v:t:60:1 [ string equal ${v:t:53} "end" ]
    turbine::store_integer ${t:60:1} ${v:t:60:1}
    set v:t:64 [ string equal ${v:t:53} "E" ]
    turbine::store_integer ${t:64} ${v:t:64}
    set v:t:68 [ string equal ${v:t:53} "e" ]
    turbine::store_integer ${t:68} ${v:t:68}
    set v:t:35:1 [ expr { ${v:t:36:1} || ${v:t:40:1} } ]
    set v:t:34:1 [ expr { ${v:t:35:1} || ${v:t:44:1} } ]
    set v:t:33:1 [ expr { ${v:t:34:1} || ${v:t:48:1} } ]
    set v:t:32:1 [ expr { ${v:t:33:1} || ${v:t:52:1} } ]
    turbine::store_integer ${t:32:1} ${v:t:32:1}
}


proc __entry-optmerged-1 { t:10 t:22 t:25:1 v:f u:configFile u:docRunfile u:docSampleInfo u:failureLog u:sampleInfoFile u:timingLog } {
    # Var: $string v:t:10 VALUE_OF [string:__t:10]
    # Var: $string v:t:9 VALUE_OF [string:__t:9]
    # Var: $string v:t:13 VALUE_OF [string:__t:13]
    # Var: $string v:t:17 VALUE_OF [string:__t:17]
    set v:t:10 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:t:9 "${v:t:10}/deliverables/docs/Failures.log"
    set v:t:13 "${v:t:10}/deliverables/docs/Timing.log"
    set v:t:17 "${v:t:10}/deliverables/docs/${v:f}"
    turbine::set_filename_val ${u:failureLog} ${v:t:9}
    turbine::set_filename_val ${u:timingLog} ${v:t:13}
    turbine::set_filename_val ${u:docRunfile} ${v:t:17}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list mkdir-app-leaf1 ${t:22} ${t:25:1} ${v:t:10} ${v:t:13} ${v:t:17} ${v:t:9} ${u:configFile} ${u:docRunfile} ${u:docSampleInfo} ${u:failureLog} ${u:sampleInfoFile} ${u:timingLog} ]
    turbine::reset_priority
}


proc mkdir-app-leaf1 { t:22 t:25:1 v:t:10 v:t:13 v:t:17 v:t:9 u:configFile u:docRunfile u:docSampleInfo u:failureLog u:sampleInfoFile u:timingLog } {
    # Var: $void v:v:9 RENAMED [$void:__v:v] /usr/src/swift-t/swift-t-1.2/turbine/export/unix.swift:mkdir():65:15
    turbine::c::log [ list exec: "mkdir" "-p" ${v:t:10} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:t:10}
    turbine::rule [ list ${t:25:1} ] [ list __entry-chain1 ${t:22} ${t:25:1} ${v:t:10} ${v:t:13} ${v:t:17} ${v:t:9} ${u:configFile} ${u:docRunfile} ${u:docSampleInfo} ${u:failureLog} ${u:sampleInfoFile} ${u:timingLog} ]
}


proc __entry-chain1 { t:22 t:25:1 v:t:10 v:t:13 v:t:17 v:t:9 u:configFile u:docRunfile u:docSampleInfo u:failureLog u:sampleInfoFile u:timingLog } {
    # Var: $string v:dirname:1 RENAMED [$string:__v:dirname] /usr/src/swift-t/swift-t-1.2/turbine/export/unix.swift:mkdir():65:15
    # Var: $void v:v:1 RENAMED [$void:__v:v] /usr/src/swift-t/swift-t-1.2/turbine/export/unix.swift:mkdir():65:15
    set v:dirname:1 [ turbine::retrieve_string ${t:25:1} ]
    turbine::c::log [ list exec: "mkdir" "-p" ${v:dirname:1} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:dirname:1}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-chain2 ${t:22} ${t:25:1} ${v:t:10} ${v:t:13} ${v:t:17} ${v:t:9} ${u:configFile} ${u:docRunfile} ${u:docSampleInfo} ${u:failureLog} ${u:sampleInfoFile} ${u:timingLog} ]
    turbine::reset_priority
}


proc __entry-chain2 { t:22 t:25:1 v:t:10 v:t:13 v:t:17 v:t:9 u:configFile u:docRunfile u:docSampleInfo u:failureLog u:sampleInfoFile u:timingLog } {
    # Var: $string v:t:35 VALUE_OF [string:__t:35]
    # Var: $void v:v RENAMED [$void:__v:v] /usr/src/swift-t/swift-t-1.2/turbine/export/unix.swift:mkdir():65:15
    set v:t:35 "${v:t:10}/deliverables/docs"
    turbine::c::log [ list exec: "mkdir" "-p" ${v:t:35} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:t:35}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-chain3 ${t:22} ${t:25:1} ${v:t:13} ${v:t:17} ${v:t:9} ${u:configFile} ${u:docRunfile} ${u:docSampleInfo} ${u:failureLog} ${u:sampleInfoFile} ${u:timingLog} ]
    turbine::reset_priority
}


proc __entry-chain3 { t:22 t:25:1 v:t:13 v:t:17 v:t:9 u:configFile u:docRunfile u:docSampleInfo u:failureLog u:sampleInfoFile u:timingLog } {
    # Var: $file v:failureLog VALUE_OF [file:failureLog]
    set tcltmp:init_rc 2
    set v:failureLog [ turbine::create_local_file_ref ${v:t:9} ${tcltmp:init_rc} 1 ]
    turbine::file_write_local v:failureLog ""
    turbine::store_file ${u:failureLog} v:failureLog 0
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-chain4 ${t:22} ${t:25:1} ${v:t:13} ${v:t:17} ${u:configFile} ${u:docRunfile} ${u:docSampleInfo} ${u:sampleInfoFile} ${u:timingLog} ]
    turbine::reset_priority
}


proc __entry-chain4 { t:22 t:25:1 v:t:13 v:t:17 u:configFile u:docRunfile u:docSampleInfo u:sampleInfoFile u:timingLog } {
    # Var: $file v:timingLog VALUE_OF [file:timingLog]
    set tcltmp:init_rc 2
    set v:timingLog [ turbine::create_local_file_ref ${v:t:13} ${tcltmp:init_rc} 1 ]
    turbine::file_write_local v:timingLog "Sample\t Chromosome\tApp status\tTime\n"
    turbine::store_file ${u:timingLog} v:timingLog 0
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-chain5 ${t:22} ${t:25:1} ${v:t:17} ${u:configFile} ${u:docRunfile} ${u:docSampleInfo} ${u:sampleInfoFile} ${u:timingLog} ]
    turbine::reset_priority
}


proc __entry-chain5 { t:22 t:25:1 v:t:17 u:configFile u:docRunfile u:docSampleInfo u:sampleInfoFile u:timingLog } {
    # Var: $file v:configFile VALUE_OF [file:configFile]
    # Var: $file v:docRunfile VALUE_OF [file:docRunfile]
    set v:configFile [ turbine::retrieve_file ${u:configFile} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:docRunfile [ turbine::create_local_file_ref ${v:t:17} ${tcltmp:init_rc} 1 ]
    turbine::copy_local_file_contents ${v:docRunfile} ${v:configFile}
    turbine::store_file ${u:docRunfile} v:docRunfile 0
    turbine::rule [ list ${t:22} [ turbine::get_file_td ${u:sampleInfoFile} ] ] "__entry-chain6 ${t:22} ${t:25:1} {${u:docSampleInfo}} {${u:sampleInfoFile}} {${u:timingLog}}"
}


proc __entry-chain6 { t:22 t:25:1 u:docSampleInfo u:sampleInfoFile u:timingLog } {
    # Var: $file v:sampleInfoFile VALUE_OF [file:sampleInfoFile]
    # Var: $string v:of:docSampleInfo VALUE_OF [string:__of:docSampleInfo]
    # Var: $file v:docSampleInfo VALUE_OF [file:docSampleInfo]
    set v:sampleInfoFile [ turbine::retrieve_file ${u:sampleInfoFile} CACHED 1 ]
    set v:of:docSampleInfo [ turbine::retrieve_string ${t:22} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:docSampleInfo [ turbine::create_local_file_ref ${v:of:docSampleInfo} ${tcltmp:init_rc} 1 ]
    turbine::copy_local_file_contents ${v:docSampleInfo} ${v:sampleInfoFile}
    turbine::store_file ${u:docSampleInfo} v:docSampleInfo 0
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:logging ${t:25:1} {${u:timingLog}}"
    turbine::reset_priority
}


proc __entry-optmerged-2 { t:10 t:22 t:25:1 t:32:1 t:3:1 t:56:1 t:5:1 t:60:1 t:64 t:68 t:7 t:7:1 u:alignDedupBams u:docSampleInfo u:failureLog u:sampleInfoFile u:tmpLogDir u:variables } {
    # Var: $string v:p:1 RENAMED [$string:__v:p]
    # Var: $string v:f:1 RENAMED [$string:__v:f]
    # Var: $file v:sampleInfoFile:1 VALUE_OF [file:sampleInfoFile]
    # Var: $file v:sampleInfoFile:2 VALUE_OF [file:sampleInfoFile]
    # Var: $string$[int] v:sampleLines VALUE_OF [string[int]:sampleLines]
    set v:p:1 [ turbine::retrieve_string ${t:7} CACHED 1 ]
    set v:f:1 [ file tail ${v:p:1} ]
    set tcltmp:init_rc 1
    set v:sampleInfoFile:1 [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:sampleInfoFile:1 ${v:p:1}
    turbine::store_file ${u:sampleInfoFile} v:sampleInfoFile:1 1
    set v:sampleInfoFile:2 [ turbine::retrieve_file ${u:sampleInfoFile} CACHED 1 ]
    set v:sampleLines [ turbine::file_lines_impl ${v:sampleInfoFile:2} ]
    set tcltmp:iters [ dict size ${v:sampleLines} ]
    turbine::read_refcount_incr ${t:7:1} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${u:variables} [ expr { 2 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:56:1} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:68} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:32:1} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:64} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:10} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:60:1} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:5:1} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:3:1} [ expr { ${tcltmp:iters} } ]
    turbine::file_read_refcount_incr ${u:failureLog} [ expr { 2 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${u:tmpLogDir} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:25:1} [ expr { ${tcltmp:iters} } ]
    adlb::write_refcount_incr ${u:alignDedupBams} [ expr { ${tcltmp:iters} } ]
    dict for {v:index v:sample} ${v:sampleLines} {
        # Var: string[int] u:sampleInfo RENAMED [string[int]:sampleInfo] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():212:2
        # Var: string u:sampleName RENAMED [string:sampleName] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():213:2
        # Var: string u:rgheader RENAMED [string:rgheader] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():214:2
        # Var: string u:LogDir RENAMED [string:LogDir] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():226:2
        # Var: string u:AlignDir RENAMED [string:AlignDir] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():227:2
        # Var: string u:RealignDir RENAMED [string:RealignDir] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():228:2
        # Var: string u:VarcallDir RENAMED [string:VarcallDir] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():229:2
        # Var: $string$[int] v:sampleInfo VALUE_OF [string[int]:sampleInfo]
        # Var: $string v:alias:sampleName VALUE_OF [string:__alias:sampleName]
        lassign [ adlb::multicreate [ list container integer string 1 2 24 ] [ list string 1 1 25 ] [ list string 1 1 26 ] [ list string 1 1 27 ] [ list string 2 1 28 ] [ list string 1 1 29 ] [ list string 1 1 30 ] ] u:sampleInfo u:sampleName u:rgheader u:LogDir u:AlignDir u:RealignDir u:VarcallDir
        turbine::c::log "allocated u:sampleInfo=<${u:sampleInfo}> u:sampleName=<${u:sampleName}> u:rgheader=<${u:rgheader}> u:LogDir=<${u:LogDir}> u:AlignDir=<${u:AlignDir}>"
        turbine::c::log "allocated u:RealignDir=<${u:RealignDir}> u:VarcallDir=<${u:VarcallDir}>"
        set v:sampleInfo [ turbine::split_impl ${v:sample} " " ]
        turbine::build_rec ${u:sampleInfo} ${v:sampleInfo} [ list container integer string ] 0 1
        set a:sampleName [ adlb::subscript_container ${u:sampleInfo} 0 ]
        set v:alias:sampleName [ turbine::retrieve_string ${a:sampleName} ]
        turbine::store_string ${u:sampleName} ${v:alias:sampleName}
        turbine::rule [ list ${t:3:1} ${t:5:1} ${t:7:1} ] [ list __entry-async_op-sprintf ${t:3:1} ${t:5:1} ${t:7:1} ${v:alias:sampleName} ${u:rgheader} ]
        turbine::rule [ list ${t:32:1} ${t:56:1} ${t:60:1} ${t:64} ${t:68} ] [ list __entry-async_op-or ${u:AlignDir} ${u:LogDir} ${u:RealignDir} ${u:VarcallDir} ${t:25:1} ${t:32:1} ${t:56:1} ${t:60:1} ${t:64} ${t:68} ${v:alias:sampleName} ${v:index} ${u:alignDedupBams} ${u:failureLog} ${u:rgheader} ${u:sampleInfo} ${u:sampleName} ${u:tmpLogDir} ${u:variables} ]
        turbine::rule [ list ${t:10} ] [ list __entry-optmerged-10 ${u:AlignDir} ${u:LogDir} ${u:RealignDir} ${u:VarcallDir} ${t:10} ${v:alias:sampleName} ]
        adlb::write_refcount_decr ${u:sampleInfo} 1
    }
    turbine::rule [ list ${t:10} ] [ list __entry-async_op-strcat-11 ${t:10} ${t:22} ${v:f:1} ${u:docSampleInfo} ]
    turbine::decr_local_file_refcount v:sampleInfoFile:1
    turbine::read_refcount_decr ${t:32:1} 1
    turbine::read_refcount_decr ${t:56:1} 1
    turbine::read_refcount_decr ${u:variables} 1
    turbine::read_refcount_decr ${t:25:1} 1
    turbine::read_refcount_decr ${u:tmpLogDir} 1
    turbine::read_refcount_decr ${t:3:1} 1
    turbine::read_refcount_decr ${t:60:1} 1
    turbine::read_refcount_decr ${t:68} 1
    turbine::read_refcount_decr ${t:7:1} 1
    turbine::read_refcount_decr ${t:5:1} 1
    turbine::read_refcount_decr ${t:64} 1
    turbine::file_read_refcount_decr ${u:failureLog} 1
    adlb::write_refcount_decr ${u:alignDedupBams} 1
}


proc __entry-async_op-sprintf { t:3:1 t:5:1 t:7:1 v:alias:sampleName u:rgheader } {
    # Var: $string v:t:3:1 VALUE_OF [string:__t:3:1]
    # Var: $string v:t:5:1 VALUE_OF [string:__t:5:1]
    # Var: $string v:t:7:1 VALUE_OF [string:__t:7:1]
    # Var: $string v:rgheader VALUE_OF [string:rgheader]
    set v:t:3:1 [ turbine::retrieve_string ${t:3:1} CACHED 1 ]
    set v:t:5:1 [ turbine::retrieve_string ${t:5:1} CACHED 1 ]
    set v:t:7:1 [ turbine::retrieve_string ${t:7:1} CACHED 1 ]
    set v:rgheader [ eval format [ list "@RG\\tID:%s\\tLB:%s\\tPL:%s\\tPU:%s\\tSM:%s\\tCN:%s" ${v:alias:sampleName} ${v:t:3:1} ${v:t:5:1} ${v:alias:sampleName} ${v:alias:sampleName} ${v:t:7:1} ] ]
    turbine::store_string ${u:rgheader} ${v:rgheader}
}


proc __entry-async_op-or { u:AlignDir u:LogDir u:RealignDir u:VarcallDir t:25:1 t:32:1 t:56:1 t:60:1 t:64 t:68 v:alias:sampleName v:index u:alignDedupBams u:failureLog u:rgheader u:sampleInfo u:sampleName u:tmpLogDir u:variables } {
    # Var: $boolean v:t:32:1:1 VALUE_OF [boolean:__t:32:1]
    # Var: $boolean v:t:56:1:1 VALUE_OF [boolean:__t:56:1]
    # Var: $boolean v:t:31:1 VALUE_OF [boolean:__t:31:1]
    # Var: $boolean v:t:60:1:1 VALUE_OF [boolean:__t:60:1]
    # Var: $boolean v:t:30:1 VALUE_OF [boolean:__t:30:1]
    # Var: $boolean v:t:64:1 VALUE_OF [boolean:__t:64]
    # Var: $boolean v:t:29:1 VALUE_OF [boolean:__t:29:1]
    # Var: $boolean v:t:68:1 VALUE_OF [boolean:__t:68]
    # Var: $boolean v:t:28:1 VALUE_OF [boolean:__t:28:1]
    set v:t:32:1:1 [ turbine::retrieve_integer ${t:32:1} CACHED 1 ]
    set v:t:56:1:1 [ turbine::retrieve_integer ${t:56:1} CACHED 1 ]
    set v:t:31:1 [ expr { ${v:t:32:1:1} || ${v:t:56:1:1} } ]
    set v:t:60:1:1 [ turbine::retrieve_integer ${t:60:1} CACHED 1 ]
    set v:t:30:1 [ expr { ${v:t:31:1} || ${v:t:60:1:1} } ]
    set v:t:64:1 [ turbine::retrieve_integer ${t:64} CACHED 1 ]
    set v:t:29:1 [ expr { ${v:t:30:1} || ${v:t:64:1} } ]
    set v:t:68:1 [ turbine::retrieve_integer ${t:68} CACHED 1 ]
    set v:t:28:1 [ expr { ${v:t:29:1} || ${v:t:68:1} } ]
    if { ${v:t:28:1} } {
        # Var: file u:alignedbam RENAMED [file:alignedbam] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():252:50
        # Var: string t:79 RENAMED [string:__t:79] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():255:21
        # Var: file u:alignedsam RENAMED [file:alignedsam] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():255:67
        # Var: file u:tmpsamtoolsLog RENAMED [file:tmpsamtoolsLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():256:55
        # Var: string t:97 RENAMED [string:__t:97] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():261:7
        # Var: int u:threads RENAMED [int:threads] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():285:3
        # Var: string t:141 RENAMED [string:__t:141] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():285:28
        # Var: string t:144 RENAMED [string:__t:144] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():285:66
        # Var: string t:146 RENAMED [string:__t:146] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():286:53
        # Var: string[int] t:148 RENAMED [string[int]:__t:148] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():286:96
        # Var: boolean t:150 RENAMED [boolean:__t:150] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():289:8
        lassign [ adlb::multicreate [ list string 1 1 32 ] [ list string 1 1 35 ] [ list integer 2 1 36 ] [ list string 1 1 37 ] [ list string 1 1 38 ] [ list string 2 1 39 ] [ list container integer string 2 1 40 ] [ list integer 1 1 41 ] ] t:79 t:97 u:threads t:141 t:144 t:146 t:148 t:150
        turbine::c::log "allocated t:79=<${t:79}> t:97=<${t:97}> u:threads=<${u:threads}> t:141=<${t:141}> t:144=<${t:144}>"
        turbine::c::log "allocated t:146=<${t:146}> t:148=<${t:148}> t:150=<${t:150}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 3 1 31 ] [ list file 4 1 33 ] [ list file 1 1 34 ] ] [ list 1 1 1 ] ] u:alignedbam u:alignedsam u:tmpsamtoolsLog
        turbine::read_refcount_incr ${u:RealignDir} 1
        turbine::read_refcount_incr ${u:rgheader} 2
        turbine::read_refcount_incr ${u:sampleInfo} 1
        turbine::read_refcount_incr ${u:VarcallDir} 1
        turbine::read_refcount_incr ${u:LogDir} 3
        turbine::file_read_refcount_incr ${u:failureLog} 1
        turbine::read_refcount_incr ${u:sampleName} 4
        turbine::read_refcount_incr ${u:tmpLogDir} 2
        turbine::read_refcount_incr ${t:25:1} 2
        turbine::read_refcount_incr ${u:variables} 8
        turbine::array_kv_build ${t:148} [ ::adlb::dict_create 0 "-u" ] 1 integer string
        turbine::container_reference ${u:variables} "PAIRED" ${t:97} string
        turbine::container_reference ${u:variables} "CORES_PER_NODE" ${t:141} string
        turbine::container_reference ${u:variables} "PROGRAMS_PER_NODE" ${t:144} string
        turbine::container_reference ${u:variables} "SAMTOOLSEXE" ${t:146} string
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:samtools_view_logged {${u:alignedbam}} {${u:tmpsamtoolsLog}} ${t:146} {${u:alignedsam}} ${u:threads} ${t:148} ${u:sampleName}"
        turbine::reset_priority
        turbine::rule [ list ${u:LogDir} ] "mkdir-app-leaf1-1 ${u:LogDir}"
        turbine::rule [ list ${u:RealignDir} ] "mkdir-app-leaf1-2 ${u:RealignDir}"
        turbine::rule [ list ${u:VarcallDir} ] "mkdir-app-leaf1-3 ${u:VarcallDir}"
        turbine::rule [ list ${t:25:1} ] [ list __entry-async_op-strcat-1 ${t:25:1} ${t:79} ${v:alias:sampleName} ${u:alignedsam} ]
        turbine::rule [ list ${t:141} ${t:144} ] "__entry-async_op-parse_int ${t:141} ${t:144} ${u:threads}"
        turbine::rule [ list ${t:97} ] "__entry-optmerged-3 ${t:97} {${u:alignedsam}} ${u:rgheader} ${u:sampleInfo} ${u:sampleName} ${u:variables}"
        turbine::rule [ list ${u:AlignDir} ] [ list __entry-optmerged-4 ${u:AlignDir} ${u:LogDir} ${t:146} ${t:148} ${t:150} ${t:25:1} ${t:79} ${v:alias:sampleName} ${v:index} ${u:alignDedupBams} ${u:alignedbam} ${u:alignedsam} ${u:failureLog} ${u:sampleName} ${u:threads} ${u:tmpLogDir} ${u:variables} ]
        turbine::rule [ list ${u:tmpLogDir} ] [ list __entry-optmerged-9 ${v:alias:sampleName} ${u:tmpLogDir} ${u:tmpsamtoolsLog} ]
    } else {
        turbine::rule [ list ${u:AlignDir} ] [ list __entry-async_op-strcat-10 ${u:AlignDir} ${v:alias:sampleName} ${v:index} ${u:alignDedupBams} ${u:failureLog} ${u:variables} ]
    }
    turbine::read_refcount_decr ${u:variables} 1
    turbine::read_refcount_decr ${t:25:1} 1
    turbine::read_refcount_decr ${u:tmpLogDir} 1
    turbine::read_refcount_decr ${u:sampleName} 1
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${u:LogDir} 1
    turbine::read_refcount_decr ${u:VarcallDir} 1
    turbine::read_refcount_decr ${u:sampleInfo} 1
    turbine::read_refcount_decr ${u:rgheader} 1
    turbine::read_refcount_decr ${u:RealignDir} 1
    turbine::read_refcount_decr ${u:AlignDir} 1
}


proc mkdir-app-leaf1-1 { u:LogDir } {
    # Var: $string v:dirname:2 RENAMED [$string:__v:dirname] /usr/src/swift-t/swift-t-1.2/turbine/export/unix.swift:mkdir():65:15
    # Var: $void v:v:4 RENAMED [$void:__v:v] /usr/src/swift-t/swift-t-1.2/turbine/export/unix.swift:mkdir():65:15
    set v:dirname:2 [ turbine::retrieve_string ${u:LogDir} CACHED 1 ]
    turbine::c::log [ list exec: "mkdir" "-p" ${v:dirname:2} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:dirname:2}
}


proc mkdir-app-leaf1-2 { u:RealignDir } {
    # Var: $string v:dirname:4 RENAMED [$string:__v:dirname] /usr/src/swift-t/swift-t-1.2/turbine/export/unix.swift:mkdir():65:15
    # Var: $void v:v:6 RENAMED [$void:__v:v] /usr/src/swift-t/swift-t-1.2/turbine/export/unix.swift:mkdir():65:15
    set v:dirname:4 [ turbine::retrieve_string ${u:RealignDir} CACHED 1 ]
    turbine::c::log [ list exec: "mkdir" "-p" ${v:dirname:4} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:dirname:4}
}


proc mkdir-app-leaf1-3 { u:VarcallDir } {
    # Var: $string v:dirname:5 RENAMED [$string:__v:dirname] /usr/src/swift-t/swift-t-1.2/turbine/export/unix.swift:mkdir():65:15
    # Var: $void v:v:7 RENAMED [$void:__v:v] /usr/src/swift-t/swift-t-1.2/turbine/export/unix.swift:mkdir():65:15
    set v:dirname:5 [ turbine::retrieve_string ${u:VarcallDir} CACHED 1 ]
    turbine::c::log [ list exec: "mkdir" "-p" ${v:dirname:5} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:dirname:5}
}


proc __entry-async_op-strcat-1 { t:25:1 t:79 v:alias:sampleName u:alignedsam } {
    # Var: $string v:t:25:1:1 VALUE_OF [string:__t:25:1]
    # Var: $string v:t:79 VALUE_OF [string:__t:79]
    set v:t:25:1:1 [ turbine::retrieve_string ${t:25:1} CACHED 1 ]
    set v:t:79 "${v:t:25:1:1}/align/${v:alias:sampleName}.noDedups.sam"
    turbine::store_string ${t:79} ${v:t:79}
    turbine::set_filename_val ${u:alignedsam} ${v:t:79}
}


proc __entry-async_op-parse_int { t:141 t:144 u:threads } {
    # Var: $string v:t:144 VALUE_OF [string:__t:144]
    # Var: $int v:t:143 VALUE_OF [int:__t:143]
    # Var: $string v:t:141 VALUE_OF [string:__t:141]
    # Var: $int v:t:140 VALUE_OF [int:__t:140]
    # Var: $int v:threads VALUE_OF [int:threads]
    set v:t:144 [ turbine::retrieve_string ${t:144} CACHED 1 ]
    set v:t:143 [ turbine::parse_int_impl ${v:t:144} 10 ]
    set v:t:141 [ turbine::retrieve_string ${t:141} CACHED 1 ]
    set v:t:140 [ turbine::parse_int_impl ${v:t:141} 10 ]
    set v:threads [ turbine::divide_integer_impl ${v:t:140} ${v:t:143} ]
    turbine::store_integer ${u:threads} ${v:threads}
}


proc __entry-optmerged-3 { t:97 u:alignedsam u:rgheader u:sampleInfo u:sampleName u:variables } {
    # Var: $string v:t:97 VALUE_OF [string:__t:97]
    # Var: $boolean v:t:96 VALUE_OF [boolean:__t:96]
    # Var: $boolean v:t:100 VALUE_OF [boolean:__t:100]
    # Var: $boolean v:t:104 VALUE_OF [boolean:__t:104]
    # Var: $boolean v:t:108 VALUE_OF [boolean:__t:108]
    # Var: $boolean v:t:112 VALUE_OF [boolean:__t:112]
    # Var: $boolean v:t:116 VALUE_OF [boolean:__t:116]
    # Var: $boolean v:t:120 VALUE_OF [boolean:__t:120]
    # Var: $boolean v:t:124 VALUE_OF [boolean:__t:124]
    # Var: $boolean v:t:128 VALUE_OF [boolean:__t:128]
    # Var: $boolean v:t:132 VALUE_OF [boolean:__t:132]
    # Var: $boolean v:t:136 VALUE_OF [boolean:__t:136]
    # Var: $boolean v:t:95 VALUE_OF [boolean:__t:95]
    # Var: $boolean v:t:94 VALUE_OF [boolean:__t:94]
    # Var: $boolean v:t:93 VALUE_OF [boolean:__t:93]
    # Var: $boolean v:t:92 VALUE_OF [boolean:__t:92]
    # Var: $boolean v:t:91 VALUE_OF [boolean:__t:91]
    # Var: $boolean v:t:90 VALUE_OF [boolean:__t:90]
    # Var: $boolean v:t:89 VALUE_OF [boolean:__t:89]
    # Var: $boolean v:t:88 VALUE_OF [boolean:__t:88]
    # Var: $boolean v:t:87 VALUE_OF [boolean:__t:87]
    # Var: $boolean v:t:86 VALUE_OF [boolean:__t:86]
    set v:t:97 [ turbine::retrieve_string ${t:97} CACHED 1 ]
    set v:t:96 [ string equal ${v:t:97} "1" ]
    set v:t:100 [ string equal ${v:t:97} "YES" ]
    set v:t:104 [ string equal ${v:t:97} "Yes" ]
    set v:t:108 [ string equal ${v:t:97} "yes" ]
    set v:t:112 [ string equal ${v:t:97} "Y" ]
    set v:t:116 [ string equal ${v:t:97} "y" ]
    set v:t:120 [ string equal ${v:t:97} "TRUE" ]
    set v:t:124 [ string equal ${v:t:97} "True" ]
    set v:t:128 [ string equal ${v:t:97} "true" ]
    set v:t:132 [ string equal ${v:t:97} "T" ]
    set v:t:136 [ string equal ${v:t:97} "t" ]
    set v:t:95 [ expr { ${v:t:96} || ${v:t:100} } ]
    set v:t:94 [ expr { ${v:t:95} || ${v:t:104} } ]
    set v:t:93 [ expr { ${v:t:94} || ${v:t:108} } ]
    set v:t:92 [ expr { ${v:t:93} || ${v:t:112} } ]
    set v:t:91 [ expr { ${v:t:92} || ${v:t:116} } ]
    set v:t:90 [ expr { ${v:t:91} || ${v:t:120} } ]
    set v:t:89 [ expr { ${v:t:90} || ${v:t:124} } ]
    set v:t:88 [ expr { ${v:t:89} || ${v:t:128} } ]
    set v:t:87 [ expr { ${v:t:88} || ${v:t:132} } ]
    set v:t:86 [ expr { ${v:t:87} || ${v:t:136} } ]
    if { ${v:t:86} } {
        # Var: string[int] u:reads RENAMED [string[int]:reads] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():275:4
        # Var: $string v:alias:read1 VALUE_OF [string:__alias:read1]
        # Var: $string v:alias:read2 VALUE_OF [string:__alias:read2]
        lassign [ adlb::multicreate [ list container integer string 1 1 42 ] ] u:reads
        turbine::c::log "allocated u:reads=<${u:reads}>"
        set a:read1 [ adlb::subscript_container ${u:sampleInfo} 1 ]
        set v:alias:read1 [ turbine::retrieve_string ${a:read1} ]
        set a:read2 [ adlb::subscript_container ${u:sampleInfo} 2 ]
        set v:alias:read2 [ turbine::retrieve_string ${a:read2} ]
        turbine::array_kv_build ${u:reads} [ ::adlb::dict_create 0 ${v:alias:read1} 1 ${v:alias:read2} ] 1 integer string
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:alignReads {${u:alignedsam}} ${u:variables} ${u:sampleName} ${u:reads} ${u:rgheader}"
        turbine::reset_priority
    } else {
        # Var: string[int] u:reads:1 RENAMED [string[int]:reads] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():280:4
        # Var: $string v:alias:read1:1 VALUE_OF [string:__alias:read1:1]
        lassign [ adlb::multicreate [ list container integer string 1 1 43 ] ] u:reads:1
        turbine::c::log "allocated u:reads:1=<${u:reads:1}>"
        set a:read1:1 [ adlb::subscript_container ${u:sampleInfo} 1 ]
        set v:alias:read1:1 [ turbine::retrieve_string ${a:read1:1} ]
        turbine::array_kv_build ${u:reads:1} [ ::adlb::dict_create 0 ${v:alias:read1:1} ] 1 integer string
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:alignReads {${u:alignedsam}} ${u:variables} ${u:sampleName} ${u:reads:1} ${u:rgheader}"
        turbine::reset_priority
    }
    turbine::read_refcount_decr ${u:sampleName} 1
    turbine::read_refcount_decr ${u:variables} 1
    turbine::read_refcount_decr ${u:sampleInfo} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::read_refcount_decr ${u:rgheader} 1
}


proc __entry-optmerged-4 { u:AlignDir u:LogDir t:146 t:148 t:150 t:25:1 t:79 v:alias:sampleName v:index u:alignDedupBams u:alignedbam u:alignedsam u:failureLog u:sampleName u:threads u:tmpLogDir u:variables } {
    # Var: $string v:AlignDir:1 VALUE_OF [string:AlignDir]
    # Var: $string v:t:77 VALUE_OF [string:__t:77]
    set v:AlignDir:1 [ turbine::retrieve_string ${u:AlignDir} CACHED 1 ]
    set v:t:77 "${v:AlignDir:1}${v:alias:sampleName}.noDedups.bam"
    turbine::set_filename_val ${u:alignedbam} ${v:t:77}
    turbine::rule [ list [ turbine::get_file_td ${u:alignedbam} ] ] "f:checkBam ${t:150} ${u:variables} {${u:alignedbam}}"
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list mkdir-app-leaf1-4 ${v:AlignDir:1} ]
    turbine::reset_priority
    turbine::rule [ list ${t:150} ] [ list alignDedupRun-if3 ${u:LogDir} ${t:146} ${t:148} ${t:150} ${t:25:1} ${t:79} ${v:AlignDir:1} ${v:alias:sampleName} ${v:index} ${v:t:77} ${u:alignDedupBams} ${u:alignedbam} ${u:alignedsam} ${u:failureLog} ${u:sampleName} ${u:threads} ${u:tmpLogDir} ${u:variables} ]
}


proc mkdir-app-leaf1-4 { v:AlignDir:1 } {
    # Var: $void v:v:5 RENAMED [$void:__v:v] /usr/src/swift-t/swift-t-1.2/turbine/export/unix.swift:mkdir():65:15
    turbine::c::log [ list exec: "mkdir" "-p" ${v:AlignDir:1} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:AlignDir:1}
}


proc alignDedupRun-if3 { u:LogDir t:146 t:148 t:150 t:25:1 t:79 v:AlignDir:1 v:alias:sampleName v:index v:t:77 u:alignDedupBams u:alignedbam u:alignedsam u:failureLog u:sampleName u:threads u:tmpLogDir u:variables } {
    # Var: $boolean v:__t:150 RENAMED [$boolean:__v:__t:150] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():289:23
    set v:__t:150 [ turbine::retrieve_integer ${t:150} CACHED 1 ]
    if { ${v:__t:150} } {
        # Var: file u:dedupsortedbam RENAMED [file:dedupsortedbam] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():295:55
        # Var: boolean t:153 RENAMED [boolean:__t:153] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():299:9
        # Var: string t:19:2 RENAMED [string:__t:19] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():152:5
        # Var: $string v:t:151 VALUE_OF [string:__t:151]
        lassign [ adlb::multicreate [ list integer 1 1 45 ] [ list string 1 1 46 ] ] t:153 t:19:2
        turbine::c::log "allocated t:153=<${t:153}> t:19:2=<${t:19:2}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 3 1 44 ] ] [ list 1 ] ] u:dedupsortedbam
        adlb::write_refcount_incr ${u:alignDedupBams} 1
        turbine::file_read_refcount_incr ${u:alignedsam} 2
        turbine::read_refcount_incr ${u:LogDir} 2
        turbine::file_read_refcount_incr ${u:failureLog} 1
        turbine::read_refcount_incr ${u:sampleName} 2
        turbine::read_refcount_incr ${t:79} 2
        turbine::file_read_refcount_incr ${u:alignedbam} 1
        turbine::read_refcount_incr ${u:threads} 2
        turbine::read_refcount_incr ${u:tmpLogDir} 2
        turbine::read_refcount_incr ${t:146} 2
        turbine::read_refcount_incr ${t:25:1} 2
        turbine::read_refcount_incr ${t:148} 1
        turbine::read_refcount_incr ${u:variables} 6
        turbine::container_reference ${u:variables} "MARKDUPLICATESTOOL" ${t:19:2} string
        set v:t:151 "${v:AlignDir:1}${v:alias:sampleName}.wDedups.sorted.bam"
        turbine::set_filename_val ${u:dedupsortedbam} ${v:t:151}
        turbine::rule [ list [ turbine::get_file_td ${u:dedupsortedbam} ] ] "f:checkBam ${t:153} ${u:variables} {${u:dedupsortedbam}}"
        turbine::rule [ list ${t:19:2} ] [ list __entry-async_op-eq_string ${u:LogDir} ${t:146} ${t:148} ${t:19:2} ${t:25:1} ${t:79} ${v:AlignDir:1} ${v:alias:sampleName} ${v:t:151} ${u:alignedbam} ${u:alignedsam} ${u:dedupsortedbam} ${u:sampleName} ${u:threads} ${u:tmpLogDir} ${u:variables} ]
        turbine::rule [ list ${t:153} ] [ list alignDedupRun-if4 ${u:LogDir} ${t:146} ${t:153} ${t:79} ${v:AlignDir:1} ${v:alias:sampleName} ${v:index} ${v:t:151} ${u:alignDedupBams} ${u:alignedsam} ${u:dedupsortedbam} ${u:failureLog} ${u:variables} ]
    } else {
        # Var: string u:message RENAMED [string:message] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():359:4
        # Var: boolean t:212 RENAMED [boolean:__t:212] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():362:4
        lassign [ adlb::multicreate [ list string 2 1 95 ] [ list integer 1 1 96 ] ] u:message t:212
        turbine::c::log "allocated u:message=<${u:message}> t:212=<${t:212}>"
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:append ${t:212} {${u:failureLog}} ${u:message}"
        turbine::reset_priority
        turbine::rule [ list ${t:212} ] "alignDedupRun-chain3 ${t:212} ${u:message} ${u:variables}"
        turbine::rule [ list ${u:LogDir} ] [ list __entry-async_op-strcat-9 ${u:LogDir} ${v:alias:sampleName} ${v:t:77} ${u:message} ]
    }
    turbine::read_refcount_decr ${u:variables} 1
    turbine::read_refcount_decr ${t:148} 1
    turbine::read_refcount_decr ${t:25:1} 1
    turbine::read_refcount_decr ${t:146} 1
    turbine::read_refcount_decr ${u:tmpLogDir} 1
    turbine::read_refcount_decr ${u:threads} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${t:79} 1
    turbine::read_refcount_decr ${u:sampleName} 1
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${u:LogDir} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    adlb::write_refcount_decr ${u:alignDedupBams} 1
}


proc __entry-async_op-eq_string { u:LogDir t:146 t:148 t:19:2 t:25:1 t:79 v:AlignDir:1 v:alias:sampleName v:t:151 u:alignedbam u:alignedsam u:dedupsortedbam u:sampleName u:threads u:tmpLogDir u:variables } {
    # Var: $string v:t:19:2 VALUE_OF [string:__t:19:2]
    # Var: $boolean v:t:18:2 VALUE_OF [boolean:__t:18:2]
    set v:t:19:2 [ turbine::retrieve_string ${t:19:2} CACHED 1 ]
    set v:t:18:2 [ string equal ${v:t:19:2} "SAMBLASTER" ]
    if { ${v:t:18:2} } {
        # Var: file u:dedupsam RENAMED [file:dedupsam] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():153:64
        # Var: file u:dedupbam RENAMED [file:dedupbam] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():154:47
        # Var: string t:29:2 RENAMED [string:__t:29] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():155:16
        # Var: file u:samLog RENAMED [file:samLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():155:43
        # Var: file u:sortLog RENAMED [file:sortLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():156:44
        # Var: file u:tmpsamblasterLog RENAMED [file:tmpsamblasterLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():157:56
        # Var: file u:tmpsamtoolsLog:1 RENAMED [file:tmpsamtoolsLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():158:54
        # Var: file u:tmpnovosortLog RENAMED [file:tmpnovosortLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():159:54
        # Var: string t:39:2 RENAMED [string:__t:39] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():162:57
        # Var: string t:46:2 RENAMED [string:__t:46] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():168:60
        # Var: string[int] t:50:2 RENAMED [string[int]:__t:50] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():169:19
        # Var: int t:53:2 RENAMED [int:__t:53] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():169:42
        # Var: string t:54:2 RENAMED [string:__t:54] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():169:53
        # Var: $int v:t:1 RENAMED [$int:__v:t]
        # Var: $string v:t:6:1:1 VALUE_OF [string:__t:6:1:1]
        # Var: $string v:startmsg:2 VALUE_OF [string:startmsg]
        # Var: $string v:t:27:2 VALUE_OF [string:__t:27:2]
        lassign [ adlb::multicreate [ list string 1 1 49 ] [ list string 1 1 55 ] [ list string 1 1 56 ] [ list container integer string 1 1 57 ] [ list integer 1 1 58 ] [ list string 1 1 59 ] ] t:29:2 t:39:2 t:46:2 t:50:2 t:53:2 t:54:2
        turbine::c::log "allocated t:29:2=<${t:29:2}> t:39:2=<${t:39:2}> t:46:2=<${t:46:2}> t:50:2=<${t:50:2}> t:53:2=<${t:53:2}>"
        turbine::c::log "allocated t:54:2=<${t:54:2}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 2 1 47 ] [ list file 3 1 48 ] [ list file 0 1 50 ] [ list file 1 1 51 ] [ list file 1 1 52 ] [ list file 2 1 53 ] [ list file 1 1 54 ] ] [ list 1 1 1 1 1 1 1 ] ] u:dedupsam u:dedupbam u:samLog u:sortLog u:tmpsamblasterLog u:tmpsamtoolsLog:1 u:tmpnovosortLog
        turbine::file_read_refcount_incr ${u:alignedsam} 1
        turbine::read_refcount_incr ${u:sampleName} 1
        turbine::read_refcount_incr ${t:79} 1
        turbine::read_refcount_incr ${u:threads} 1
        turbine::read_refcount_incr ${t:146} 1
        turbine::file_read_refcount_incr ${u:dedupsortedbam} 1
        turbine::read_refcount_incr ${t:25:1} 1
        turbine::read_refcount_incr ${t:148} 1
        turbine::read_refcount_incr ${u:variables} 1
        turbine::array_kv_build ${t:50:2} [ ::adlb::dict_create 0 "--compression" 1 "1" ] 1 integer string
        turbine::container_reference ${u:variables} "SAMBLASTEREXE" ${t:39:2} string
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:samtools_view_logged {${u:dedupbam}} {${u:tmpsamtoolsLog:1}} ${t:146} {${u:dedupsam}} ${u:threads} ${t:148} ${u:sampleName}"
        turbine::reset_priority
        turbine::container_reference ${u:variables} "NOVOSORTEXE" ${t:46:2} string
        turbine::container_reference ${u:variables} "NOVOSORT_MEMLIMIT" ${t:54:2} string
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:novosort_logged {${u:dedupsortedbam}} {${u:sortLog}} {${u:tmpnovosortLog}} ${t:46:2} {${u:dedupbam}} ${t:25:1} ${u:threads} ${t:50:2} ${t:53:2} ${u:sampleName}"
        turbine::reset_priority
        set v:t:1 [ clock seconds ]
        set v:t:6:1:1 ${v:t:1}
        set v:startmsg:2 "${v:alias:sampleName}\tALL\tSAMBLASTER start\t${v:t:6:1:1}\n"
        set v:t:27:2 "${v:AlignDir:1}${v:alias:sampleName}.wDedups.bam"
        turbine::set_filename_val ${u:dedupbam} ${v:t:27:2}
        turbine::rule [ list ${t:25:1} ] [ list __entry-async_op-strcat-2 ${t:25:1} ${t:29:2} ${t:39:2} ${t:79} ${v:alias:sampleName} ${v:startmsg:2} ${u:alignedsam} ${u:dedupbam} ${u:dedupsam} ${u:samLog} ${u:tmpsamblasterLog} ${u:tmpsamtoolsLog:1} ]
        turbine::rule [ list ${t:54:2} ] "__entry-async_op-parse_int-1 ${t:53:2} ${t:54:2}"
        turbine::rule [ list ${u:tmpLogDir} ] [ list __entry-optmerged-5 ${v:alias:sampleName} ${u:tmpLogDir} ${u:tmpnovosortLog} ${u:tmpsamblasterLog} ${u:tmpsamtoolsLog:1} ]
        turbine::rule [ list ${u:LogDir} ] [ list __entry-optmerged-6 ${u:LogDir} ${t:29:2} ${v:alias:sampleName} ${u:samLog} ${u:sortLog} ]
    } else {
        # Var: $boolean v:t:56:2 VALUE_OF [boolean:__t:56:2]
        turbine::file_read_refcount_incr ${u:alignedbam} 1
        set v:t:56:2 [ string equal ${v:t:19:2} "PICARD" ]
        if { ${v:t:56:2} } {
            # Var: file u:metricsfile RENAMED [file:metricsfile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():174:50
            # Var: file u:alignedsortedbam RENAMED [file:alignedsortedbam] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():175:55
            # Var: file u:picardLog RENAMED [file:picardLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():176:46
            # Var: file u:sortLog:1 RENAMED [file:sortLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():177:44
            # Var: file u:tmpnovosortLog:1 RENAMED [file:tmpnovosortLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():178:54
            # Var: file u:tmppicardLog RENAMED [file:tmppicardLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():179:52
            # Var: string t:72:1 RENAMED [string:__t:72] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():182:62
            # Var: string[int] t:76:1 RENAMED [string[int]:__t:76] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():183:12
            # Var: int t:77:1 RENAMED [int:__t:77] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():183:25
            # Var: string t:78:1 RENAMED [string:__t:78] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():183:36
            # Var: string t:80:1 RENAMED [string:__t:80] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():186:71
            # Var: string t:82:1 RENAMED [string:__t:82] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():186:88
            # Var: $int v:t:3 RENAMED [$int:__v:t]
            # Var: $string v:t:6:2:1 VALUE_OF [string:__t:6:2:1]
            # Var: $string v:startmsg:1:1 VALUE_OF [string:startmsg:1]
            # Var: $string v:t:60:2 VALUE_OF [string:__t:60:2]
            # Var: $string v:t:62:2 VALUE_OF [string:__t:62:2]
            lassign [ adlb::multicreate [ list string 1 1 66 ] [ list container integer string 1 1 67 ] [ list integer 1 1 68 ] [ list string 1 1 69 ] [ list string 1 1 70 ] [ list string 1 1 71 ] ] t:72:1 t:76:1 t:77:1 t:78:1 t:80:1 t:82:1
            turbine::c::log "allocated t:72:1=<${t:72:1}> t:76:1=<${t:76:1}> t:77:1=<${t:77:1}> t:78:1=<${t:78:1}> t:80:1=<${t:80:1}>"
            turbine::c::log "allocated t:82:1=<${t:82:1}>"
            lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 0 1 60 ] [ list file 2 1 61 ] [ list file 0 1 62 ] [ list file 1 1 63 ] [ list file 1 1 64 ] [ list file 1 1 65 ] ] [ list 1 1 1 1 1 1 ] ] u:metricsfile u:alignedsortedbam u:picardLog u:sortLog:1 u:tmpnovosortLog:1 u:tmppicardLog
            turbine::read_refcount_incr ${t:25:1} 1
            turbine::read_refcount_incr ${u:variables} 2
            turbine::array_kv_build ${t:76:1} [ ::adlb::dict_create ] 1 integer string
            turbine::container_reference ${u:variables} "NOVOSORTEXE" ${t:72:1} string
            turbine::container_reference ${u:variables} "NOVOSORT_MEMLIMIT" ${t:78:1} string
            set tcltmp:prio [ turbine::get_priority ]
            turbine::set_priority ${tcltmp:prio}
            adlb::spawn 0 "f:novosort_logged {${u:alignedsortedbam}} {${u:sortLog:1}} {${u:tmpnovosortLog:1}} ${t:72:1} {${u:alignedbam}} ${t:25:1} ${u:threads} ${t:76:1} ${t:77:1} ${u:sampleName}"
            turbine::reset_priority
            turbine::container_reference ${u:variables} "JAVAEXE" ${t:80:1} string
            turbine::container_reference ${u:variables} "PICARDJAR" ${t:82:1} string
            set v:t:3 [ clock seconds ]
            set v:t:6:2:1 ${v:t:3}
            set v:startmsg:1:1 "${v:alias:sampleName}\tALL\tPICARD start\t${v:t:6:2:1}\n"
            set v:t:60:2 "${v:AlignDir:1}${v:alias:sampleName}.picard.metrics"
            turbine::set_filename_val ${u:metricsfile} ${v:t:60:2}
            set v:t:62:2 "${v:AlignDir:1}${v:alias:sampleName}.noDedups.sorted.bam"
            turbine::set_filename_val ${u:alignedsortedbam} ${v:t:62:2}
            turbine::rule [ list ${t:78:1} ] "__entry-async_op-parse_int-2 ${t:77:1} ${t:78:1}"
            turbine::rule [ list ${u:LogDir} ] [ list __entry-optmerged-7 ${u:LogDir} ${t:25:1} ${t:80:1} ${t:82:1} ${v:alias:sampleName} ${v:startmsg:1:1} ${v:t:151} ${v:t:60:2} ${v:t:62:2} ${u:alignedsortedbam} ${u:dedupsortedbam} ${u:metricsfile} ${u:picardLog} ${u:sortLog:1} ${u:tmppicardLog} ]
            turbine::rule [ list ${u:tmpLogDir} ] [ list __entry-optmerged-8 ${v:alias:sampleName} ${u:tmpLogDir} ${u:tmpnovosortLog:1} ${u:tmppicardLog} ]
        } else {
            # Var: file u:novoLog RENAMED [file:novoLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():191:44
            # Var: file u:tmpnovosortLog:2 RENAMED [file:tmpnovosortLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():192:54
            # Var: string t:90:1 RENAMED [string:__t:90] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():195:60
            # Var: string[int] t:94:1 RENAMED [string[int]:__t:94] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():196:21
            # Var: int t:96:1 RENAMED [int:__t:96] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():196:42
            # Var: string t:97:1 RENAMED [string:__t:97] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():196:53
            lassign [ adlb::multicreate [ list string 1 1 74 ] [ list container integer string 1 1 75 ] [ list integer 1 1 76 ] [ list string 1 1 77 ] ] t:90:1 t:94:1 t:96:1 t:97:1
            turbine::c::log "allocated t:90:1=<${t:90:1}> t:94:1=<${t:94:1}> t:96:1=<${t:96:1}> t:97:1=<${t:97:1}>"
            lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 72 ] [ list file 1 1 73 ] ] [ list 1 1 ] ] u:novoLog u:tmpnovosortLog:2
            turbine::file_read_refcount_incr ${u:dedupsortedbam} 1
            turbine::array_kv_build ${t:94:1} [ ::adlb::dict_create 0 "--markDuplicates" ] 1 integer string
            turbine::container_reference ${u:variables} "NOVOSORTEXE" ${t:90:1} string
            turbine::container_reference ${u:variables} "NOVOSORT_MEMLIMIT" ${t:97:1} string
            set tcltmp:prio [ turbine::get_priority ]
            turbine::set_priority ${tcltmp:prio}
            adlb::spawn 0 "f:novosort_logged {${u:dedupsortedbam}} {${u:novoLog}} {${u:tmpnovosortLog:2}} ${t:90:1} {${u:alignedbam}} ${t:25:1} ${u:threads} ${t:94:1} ${t:96:1} ${u:sampleName}"
            turbine::reset_priority
            turbine::rule [ list ${u:LogDir} ] [ list __entry-async_op-strcat-3 ${u:LogDir} ${v:alias:sampleName} ${u:novoLog} ]
            turbine::rule [ list ${u:tmpLogDir} ] [ list __entry-async_op-strcat-4 ${v:alias:sampleName} ${u:tmpLogDir} ${u:tmpnovosortLog:2} ]
            turbine::rule [ list ${t:97:1} ] "__entry-async_op-parse_int-3 ${t:96:1} ${t:97:1}"
        }
    }
    turbine::read_refcount_decr ${u:variables} 1
    turbine::read_refcount_decr ${t:148} 1
    turbine::read_refcount_decr ${t:25:1} 1
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
    turbine::read_refcount_decr ${t:146} 1
    turbine::read_refcount_decr ${u:tmpLogDir} 1
    turbine::read_refcount_decr ${u:threads} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${t:79} 1
    turbine::read_refcount_decr ${u:sampleName} 1
    turbine::read_refcount_decr ${u:LogDir} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
}


proc __entry-async_op-strcat-2 { t:25:1 t:29:2 t:39:2 t:79 v:alias:sampleName v:startmsg:2 u:alignedsam u:dedupbam u:dedupsam u:samLog u:tmpsamblasterLog u:tmpsamtoolsLog:1 } {
    # Var: $string v:t:25:1:2 VALUE_OF [string:__t:25:1]
    # Var: $string v:t:22:2 VALUE_OF [string:__t:22:2]
    set v:t:25:1:2 [ turbine::retrieve_string ${t:25:1} CACHED 1 ]
    set v:t:22:2 "${v:t:25:1:2}/align/${v:alias:sampleName}.wDedups.sam"
    turbine::set_filename_val ${u:dedupsam} ${v:t:22:2}
    turbine::rule [ list ${t:29:2} ${t:39:2} ${t:79} [ turbine::get_file_td ${u:alignedsam} ] ] [ list samblaster_logged-chain1 ${t:29:2} ${t:39:2} ${t:79} ${v:alias:sampleName} ${v:startmsg:2} ${v:t:22:2} ${u:alignedsam} ${u:dedupbam} ${u:dedupsam} ${u:samLog} ${u:tmpsamblasterLog} ${u:tmpsamtoolsLog:1} ]
}


proc samblaster_logged-chain1 { t:29:2 t:39:2 t:79 v:alias:sampleName v:startmsg:2 v:t:22:2 u:alignedsam u:dedupbam u:dedupsam u:samLog u:tmpsamblasterLog u:tmpsamtoolsLog:1 } {
    # Var: $string v:samblasterexe RENAMED [$string:__v:samblasterexe] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samblaster():37:58
    # Var: $string v:__filename:inputFile:1 RENAMED [$string:__v:__filename:inputFile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samblaster():37:58
    # Var: $string v:__filename:outLog RENAMED [$string:__v:__filename:outLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samblaster():37:58
    # Var: $file v:inputFile:1 RENAMED [$file:__v:inputFile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samblaster():37:58
    # Var: $file v:output:1 RENAMED [$file:__v:output] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samblaster():37:58
    # Var: $file v:outLog RENAMED [$file:__v:outLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samblaster():37:58
    # Var: $int v:t RENAMED [$int:__v:t]
    # Var: $string v:t:14:1:1 VALUE_OF [string:__t:14:1:1]
    # Var: $string v:endmsg:2 VALUE_OF [string:endmsg]
    # Var: $string v:t:17:1:1 VALUE_OF [string:__t:17:1:1]
    set v:samblasterexe [ turbine::retrieve_string ${t:39:2} CACHED 1 ]
    set v:__filename:inputFile:1 [ turbine::retrieve_string ${t:79} CACHED 1 ]
    set v:__filename:outLog [ turbine::retrieve_string ${t:29:2} CACHED 1 ]
    set v:inputFile:1 [ turbine::retrieve_file ${u:alignedsam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output:1 [ turbine::create_local_file_ref ${v:t:22:2} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:outLog [ turbine::create_local_file_ref ${v:__filename:outLog} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:samblasterexe "-M" "-i" ${v:__filename:inputFile:1} [ dict create "stdout" ${v:t:22:2} "stderr" ${v:__filename:outLog} ] ]
    turbine::exec_external ${v:samblasterexe} [ dict create "stdout" ${v:t:22:2} "stderr" ${v:__filename:outLog} ] "-M" "-i" ${v:__filename:inputFile:1}
    turbine::store_file ${u:dedupsam} v:output:1 0
    turbine::store_file ${u:samLog} v:outLog 0
    set v:t [ clock seconds ]
    set v:t:14:1:1 ${v:t}
    set v:endmsg:2 "${v:alias:sampleName}\tALL\tSAMBLASTER end\t${v:t:14:1:1}\n"
    set v:t:17:1:1 "${v:startmsg:2}${v:endmsg:2}"
    set wfilename:tmpsamblasterLog [ turbine::get_file_path ${u:tmpsamblasterLog} ]
    turbine::rule [ list [ turbine::get_file_td ${u:dedupbam} ] [ turbine::get_file_td ${u:tmpsamtoolsLog:1} ] ] [ list markDuplicates-chain1 ${v:t:22:2} ${u:dedupbam} ${u:dedupsam} ${u:tmpsamtoolsLog:1} ]
    turbine::rule [ list ${wfilename:tmpsamblasterLog} ] [ list __entry-call_foreign-write ${v:t:17:1:1} ${wfilename:tmpsamblasterLog} ${u:tmpsamblasterLog} ]
    turbine::decr_local_file_refcount v:output:1
    turbine::decr_local_file_refcount v:outLog
}


proc markDuplicates-chain1 { v:t:22:2 u:dedupbam u:dedupsam u:tmpsamtoolsLog:1 } {
    # Var: $file v:f:4 RENAMED [$file:__v:f] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:rm():55:6
    # Var: $void v:v:3 RENAMED [$void:__v:v] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:rm():55:6
    set v:f:4 [ turbine::retrieve_file ${u:dedupsam} CACHED 1 ]
    turbine::c::log [ list exec: "rm" ${v:t:22:2} [ dict create ] ]
    turbine::exec_external "rm" [ dict create ] ${v:t:22:2}
    turbine::file_read_refcount_decr ${u:tmpsamtoolsLog:1} 1
    turbine::file_read_refcount_decr ${u:dedupbam} 1
}


proc __entry-call_foreign-write { v:t:17:1:1 wfilename:tmpsamblasterLog u:tmpsamblasterLog } {
    # Var: $file v:tmpsamblasterLog VALUE_OF [file:tmpsamblasterLog]
    # Var: $string v:__wfilename:tmpsamblasterLog VALUE_OF [string:__wfilename:tmpsamblasterLog]
    set v:__wfilename:tmpsamblasterLog [ turbine::retrieve_string ${wfilename:tmpsamblasterLog} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:tmpsamblasterLog [ turbine::create_local_file_ref ${v:__wfilename:tmpsamblasterLog} ${tcltmp:init_rc} 1 ]
    turbine::file_write_local v:tmpsamblasterLog ${v:t:17:1:1}
    turbine::store_file ${u:tmpsamblasterLog} v:tmpsamblasterLog 0
}


proc __entry-async_op-parse_int-1 { t:53:2 t:54:2 } {
    # Var: $string v:t:54:2 VALUE_OF [string:__t:54:2]
    # Var: $int v:t:53:2:1 VALUE_OF [int:__t:53:2]
    set v:t:54:2 [ turbine::retrieve_string ${t:54:2} CACHED 1 ]
    set v:t:53:2:1 [ turbine::parse_int_impl ${v:t:54:2} 10 ]
    turbine::store_integer ${t:53:2} ${v:t:53:2:1}
}


proc __entry-optmerged-5 { v:alias:sampleName u:tmpLogDir u:tmpnovosortLog u:tmpsamblasterLog u:tmpsamtoolsLog:1 } {
    # Var: $string v:tmpLogDir:2 VALUE_OF [string:tmpLogDir]
    # Var: $string v:t:33:2 VALUE_OF [string:__t:33:2]
    # Var: $string v:t:35:2 VALUE_OF [string:__t:35:2]
    # Var: $string v:t:37:2 VALUE_OF [string:__t:37:2]
    set v:tmpLogDir:2 [ turbine::retrieve_string ${u:tmpLogDir} CACHED 1 ]
    set v:t:33:2 "${v:tmpLogDir:2}${v:alias:sampleName}_SamblasterDedup.log"
    set v:t:35:2 "${v:tmpLogDir:2}${v:alias:sampleName}_samtoolsDedup.log"
    set v:t:37:2 "${v:tmpLogDir:2}${v:alias:sampleName}_NovoSortDedup.log"
    turbine::set_filename_val ${u:tmpsamblasterLog} ${v:t:33:2}
    turbine::set_filename_val ${u:tmpsamtoolsLog:1} ${v:t:35:2}
    turbine::set_filename_val ${u:tmpnovosortLog} ${v:t:37:2}
}


proc __entry-optmerged-6 { u:LogDir t:29:2 v:alias:sampleName u:samLog u:sortLog } {
    # Var: $string v:LogDir:2 VALUE_OF [string:LogDir]
    # Var: $string v:t:29:2 VALUE_OF [string:__t:29:2]
    # Var: $string v:t:31:2 VALUE_OF [string:__t:31:2]
    set v:LogDir:2 [ turbine::retrieve_string ${u:LogDir} CACHED 1 ]
    set v:t:29:2 "${v:LogDir:2}${v:alias:sampleName}_SamblasterDedup.log"
    turbine::store_string ${t:29:2} ${v:t:29:2}
    set v:t:31:2 "${v:LogDir:2}${v:alias:sampleName}_Sort.log"
    turbine::set_filename_val ${u:samLog} ${v:t:29:2}
    turbine::set_filename_val ${u:sortLog} ${v:t:31:2}
}


proc __entry-async_op-parse_int-2 { t:77:1 t:78:1 } {
    # Var: $string v:t:78:1 VALUE_OF [string:__t:78:1]
    # Var: $int v:t:77:1:1 VALUE_OF [int:__t:77:1]
    set v:t:78:1 [ turbine::retrieve_string ${t:78:1} CACHED 1 ]
    set v:t:77:1:1 [ turbine::parse_int_impl ${v:t:78:1} 10 ]
    turbine::store_integer ${t:77:1} ${v:t:77:1:1}
}


proc __entry-optmerged-7 { u:LogDir t:25:1 t:80:1 t:82:1 v:alias:sampleName v:startmsg:1:1 v:t:151 v:t:60:2 v:t:62:2 u:alignedsortedbam u:dedupsortedbam u:metricsfile u:picardLog u:sortLog:1 u:tmppicardLog } {
    # Var: $string v:LogDir:4 VALUE_OF [string:LogDir]
    # Var: $string v:t:64:1:1 VALUE_OF [string:__t:64:1]
    # Var: $string v:t:66:1 VALUE_OF [string:__t:66:1]
    set v:LogDir:4 [ turbine::retrieve_string ${u:LogDir} CACHED 1 ]
    set v:t:64:1:1 "${v:LogDir:4}${v:alias:sampleName}_PicardDedup.log"
    set v:t:66:1 "${v:LogDir:4}${v:alias:sampleName}_Sort.log"
    turbine::set_filename_val ${u:picardLog} ${v:t:64:1:1}
    turbine::set_filename_val ${u:sortLog:1} ${v:t:66:1}
    turbine::rule [ list ${t:25:1} ${t:80:1} ${t:82:1} [ turbine::get_file_td ${u:alignedsortedbam} ] ] [ list picard_logged-chain1 ${t:25:1} ${t:80:1} ${t:82:1} ${v:alias:sampleName} ${v:startmsg:1:1} ${v:t:151} ${v:t:60:2} ${v:t:62:2} ${v:t:64:1:1} ${u:alignedsortedbam} ${u:dedupsortedbam} ${u:metricsfile} ${u:picardLog} ${u:tmppicardLog} ]
}


proc picard_logged-chain1 { t:25:1 t:80:1 t:82:1 v:alias:sampleName v:startmsg:1:1 v:t:151 v:t:60:2 v:t:62:2 v:t:64:1:1 u:alignedsortedbam u:dedupsortedbam u:metricsfile u:picardLog u:tmppicardLog } {
    # Var: $string v:javaexe RENAMED [$string:__v:javaexe] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:picard():55:244
    # Var: $string v:picardjar RENAMED [$string:__v:picardjar] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:picard():55:244
    # Var: $string v:tmpdir RENAMED [$string:__v:tmpdir] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:picard():55:244
    # Var: $file v:inputFile:2 RENAMED [$file:__v:inputFile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:picard():55:244
    # Var: $file v:outputfile RENAMED [$file:__v:outputfile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:picard():55:244
    # Var: $file v:outLog:1 RENAMED [$file:__v:outLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:picard():55:244
    # Var: $file v:metricsfile RENAMED [$file:__v:metricsfile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:picard():55:244
    # Var: $int v:t:2 RENAMED [$int:__v:t]
    # Var: $string v:t:14:2:1 VALUE_OF [string:__t:14:2:1]
    # Var: $string v:endmsg:1:1 VALUE_OF [string:endmsg:1]
    # Var: $string v:t:17:2:1 VALUE_OF [string:__t:17:2:1]
    set v:javaexe [ turbine::retrieve_string ${t:80:1} CACHED 1 ]
    set v:picardjar [ turbine::retrieve_string ${t:82:1} CACHED 1 ]
    set v:tmpdir [ turbine::retrieve_string ${t:25:1} CACHED 1 ]
    set v:inputFile:2 [ turbine::retrieve_file ${u:alignedsortedbam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile [ turbine::create_local_file_ref ${v:t:151} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:outLog:1 [ turbine::create_local_file_ref ${v:t:64:1:1} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:metricsfile [ turbine::create_local_file_ref ${v:t:60:2} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javaexe "-Xmx16g" "-jar" ${v:picardjar} "MarkDuplicates" "INPUT=" ${v:t:62:2} "OUTPUT=" ${v:t:151} "METRICS_FILE=" ${v:t:60:2} "TMP_DIR=" ${v:tmpdir} "ASSUME_SORTED=true" "MAX_RECORDS_IN_RAM=null" "CREATE_INDEX=true" "VALIDATION_STRINGENCY=SILENT" [ dict create "stderr" ${v:t:64:1:1} ] ]
    turbine::exec_external ${v:javaexe} [ dict create "stderr" ${v:t:64:1:1} ] "-Xmx16g" "-jar" ${v:picardjar} "MarkDuplicates" "INPUT=" ${v:t:62:2} "OUTPUT=" ${v:t:151} "METRICS_FILE=" ${v:t:60:2} "TMP_DIR=" ${v:tmpdir} "ASSUME_SORTED=true" "MAX_RECORDS_IN_RAM=null" "CREATE_INDEX=true" "VALIDATION_STRINGENCY=SILENT"
    turbine::store_file ${u:dedupsortedbam} v:outputfile 0
    turbine::store_file ${u:picardLog} v:outLog:1 0
    turbine::store_file ${u:metricsfile} v:metricsfile 0
    set v:t:2 [ clock seconds ]
    set v:t:14:2:1 ${v:t:2}
    set v:endmsg:1:1 "${v:alias:sampleName}\tALL\tPICARD end\t${v:t:14:2:1}\n"
    set v:t:17:2:1 "${v:startmsg:1:1}${v:endmsg:1:1}"
    set wfilename:tmppicardLog [ turbine::get_file_path ${u:tmppicardLog} ]
    turbine::rule [ list ${wfilename:tmppicardLog} ] [ list __entry-call_foreign-write-1 ${v:t:17:2:1} ${wfilename:tmppicardLog} ${u:tmppicardLog} ]
    turbine::decr_local_file_refcount v:outputfile
    turbine::decr_local_file_refcount v:outLog:1
    turbine::decr_local_file_refcount v:metricsfile
}


proc __entry-call_foreign-write-1 { v:t:17:2:1 wfilename:tmppicardLog u:tmppicardLog } {
    # Var: $file v:tmppicardLog VALUE_OF [file:tmppicardLog]
    # Var: $string v:__wfilename:tmppicardLog VALUE_OF [string:__wfilename:tmppicardLog]
    set v:__wfilename:tmppicardLog [ turbine::retrieve_string ${wfilename:tmppicardLog} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:tmppicardLog [ turbine::create_local_file_ref ${v:__wfilename:tmppicardLog} ${tcltmp:init_rc} 1 ]
    turbine::file_write_local v:tmppicardLog ${v:t:17:2:1}
    turbine::store_file ${u:tmppicardLog} v:tmppicardLog 0
}


proc __entry-optmerged-8 { v:alias:sampleName u:tmpLogDir u:tmpnovosortLog:1 u:tmppicardLog } {
    # Var: $string v:tmpLogDir:5 VALUE_OF [string:tmpLogDir]
    # Var: $string v:t:68:1:1 VALUE_OF [string:__t:68:1]
    # Var: $string v:t:70:1 VALUE_OF [string:__t:70:1]
    set v:tmpLogDir:5 [ turbine::retrieve_string ${u:tmpLogDir} CACHED 1 ]
    set v:t:68:1:1 "${v:tmpLogDir:5}${v:alias:sampleName}_NovoSortDedup.log"
    set v:t:70:1 "${v:tmpLogDir:5}${v:alias:sampleName}_PicardDedup.log"
    turbine::set_filename_val ${u:tmpnovosortLog:1} ${v:t:68:1:1}
    turbine::set_filename_val ${u:tmppicardLog} ${v:t:70:1}
}


proc __entry-async_op-strcat-3 { u:LogDir v:alias:sampleName u:novoLog } {
    # Var: $string v:LogDir:6 VALUE_OF [string:LogDir]
    # Var: $string v:t:86:1 VALUE_OF [string:__t:86:1]
    set v:LogDir:6 [ turbine::retrieve_string ${u:LogDir} CACHED 1 ]
    set v:t:86:1 "${v:LogDir:6}${v:alias:sampleName}_NovosortDedup.log"
    turbine::set_filename_val ${u:novoLog} ${v:t:86:1}
}


proc __entry-async_op-strcat-4 { v:alias:sampleName u:tmpLogDir u:tmpnovosortLog:2 } {
    # Var: $string v:tmpLogDir:7 VALUE_OF [string:tmpLogDir]
    # Var: $string v:t:88:1:1 VALUE_OF [string:__t:88:1]
    set v:tmpLogDir:7 [ turbine::retrieve_string ${u:tmpLogDir} CACHED 1 ]
    set v:t:88:1:1 "${v:tmpLogDir:7}${v:alias:sampleName}_NovoSortDedup.log"
    turbine::set_filename_val ${u:tmpnovosortLog:2} ${v:t:88:1:1}
}


proc __entry-async_op-parse_int-3 { t:96:1 t:97:1 } {
    # Var: $string v:t:97:1:1 VALUE_OF [string:__t:97:1]
    # Var: $int v:t:96:1:1 VALUE_OF [int:__t:96:1]
    set v:t:97:1:1 [ turbine::retrieve_string ${t:97:1} CACHED 1 ]
    set v:t:96:1:1 [ turbine::parse_int_impl ${v:t:97:1:1} 10 ]
    turbine::store_integer ${t:96:1} ${v:t:96:1:1}
}


proc alignDedupRun-if4 { u:LogDir t:146 t:153 t:79 v:AlignDir:1 v:alias:sampleName v:index v:t:151 u:alignDedupBams u:alignedsam u:dedupsortedbam u:failureLog u:variables } {
    # Var: $boolean v:__t:153 RENAMED [$boolean:__v:__t:153] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():299:24
    set v:__t:153 [ turbine::retrieve_integer ${t:153} CACHED 1 ]
    if { ${v:__t:153} } {
        # Var: file u:flagstats RENAMED [file:flagstats] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():308:74
        # Var: string[int] u:stat RENAMED [string[int]:stat] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():312:5
        # Var: string[int] t:160 RENAMED [string[int]:__t:160] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():313:19
        # Var: string[int] t:163 RENAMED [string[int]:__t:163] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():314:17
        # Var: string[int] t:166 RENAMED [string[int]:__t:166] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():315:16
        # Var: float u:perc_mapped RENAMED [float:perc_mapped] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():318:16
        # Var: float t:173 RENAMED [float:__t:173] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():318:43
        # Var: string u:cutoff_info RENAMED [string:cutoff_info] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():321:5
        # Var: string t:179 RENAMED [string:__t:179] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():322:35
        # Var: string t:183 RENAMED [string:__t:183] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():324:31
        # Var: float t:187 RENAMED [float:__t:187] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():327:21
        # Var: boolean t:190 RENAMED [boolean:__t:190] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():328:22
        # Var: float t:191 RENAMED [float:__t:191] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():328:24
        # Var: $string v:t:155 VALUE_OF [string:__t:155]
        lassign [ adlb::multicreate [ list container integer string 3 1 79 ] [ list container integer string 1 1 80 ] [ list container integer string 1 1 81 ] [ list container integer string 1 1 82 ] [ list float 1 1 83 ] [ list float 1 1 84 ] [ list string 2 1 85 ] [ list string 2 1 86 ] [ list string 2 1 87 ] [ list float 1 1 88 ] [ list integer 1 1 89 ] [ list float 1 1 90 ] ] u:stat t:160 t:163 t:166 u:perc_mapped t:173 u:cutoff_info t:179 t:183 t:187 t:190 t:191
        turbine::c::log "allocated u:stat=<${u:stat}> t:160=<${t:160}> t:163=<${t:163}> t:166=<${t:166}> u:perc_mapped=<${u:perc_mapped}>"
        turbine::c::log "allocated t:173=<${t:173}> u:cutoff_info=<${u:cutoff_info}> t:179=<${t:179}> t:183=<${t:183}> t:187=<${t:187}>"
        turbine::c::log "allocated t:190=<${t:190}> t:191=<${t:191}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 78 ] ] [ list 1 ] ] u:flagstats
        adlb::write_refcount_incr ${u:alignDedupBams} 1
        turbine::file_read_refcount_incr ${u:alignedsam} 1
        turbine::read_refcount_incr ${t:79} 1
        turbine::read_refcount_incr ${t:146} 1
        turbine::file_read_refcount_incr ${u:dedupsortedbam} 2
        turbine::read_refcount_incr ${u:variables} 2
        set a:t:161 [ adlb::subscript_container ${u:stat} 4 ]
        set a:tot_mapped [ adlb::subscript_container ${t:160} 0 ]
        set a:t:164 [ adlb::subscript_container ${u:stat} 0 ]
        set a:tot_reads [ adlb::subscript_container ${t:163} 0 ]
        set a:t:167 [ adlb::subscript_container ${u:stat} 3 ]
        set a:tot_dups [ adlb::subscript_container ${t:166} 0 ]
        turbine::container_reference ${u:variables} "DUP_CUTOFF" ${t:179} string
        turbine::container_reference ${u:variables} "MAP_CUTOFF" ${t:183} string
        set v:t:155 "${v:AlignDir:1}${v:alias:sampleName}.wDedups.sorted.bam.flagstats"
        turbine::set_filename_val ${u:flagstats} ${v:t:155}
        turbine::rule [ list ${t:79} [ turbine::get_file_td ${u:alignedsam} ] ] "rm-app-leaf1 ${t:79} {${u:alignedsam}}"
        turbine::rule [ list ${a:t:161} ] "__entry-call_foreign-split {${a:t:161}} ${t:160}"
        turbine::rule [ list ${a:t:164} ] "__entry-call_foreign-split-1 {${a:t:164}} ${t:163}"
        turbine::rule [ list ${a:t:167} ] "__entry-call_foreign-split-2 {${a:t:167}} ${t:166}"
        turbine::rule [ list ${a:tot_reads} ] [ list __entry-async_op-parse_float ${a:tot_dups} ${a:tot_reads} ${t:173} ${t:179} ${t:183} ${t:187} ${t:190} ${t:191} ${v:alias:sampleName} ${v:index} ${v:t:151} ${u:alignDedupBams} ${u:cutoff_info} ${u:dedupsortedbam} ${u:failureLog} ${u:perc_mapped} ${u:variables} ]
        turbine::rule [ list ${a:tot_mapped} ] "__entry-async_op-parse_float-2 {${a:tot_mapped}} ${t:173}"
        turbine::rule [ list ${t:179} ] "__entry-async_op-parse_float-3 ${t:179} ${t:187}"
        turbine::rule [ list ${t:183} ] "__entry-async_op-parse_float-4 ${t:183} ${t:191}"
        turbine::rule [ list ${t:146} ] [ list samtools_flagstat-app-leaf1 ${t:146} ${v:t:151} ${v:t:155} ${u:dedupsortedbam} ${u:flagstats} ${u:stat} ]
    } else {
        # Var: string u:mssg RENAMED [string:mssg] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():349:5
        # Var: boolean t:206 RENAMED [boolean:__t:206] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():353:5
        lassign [ adlb::multicreate [ list string 2 1 93 ] [ list integer 1 1 94 ] ] u:mssg t:206
        turbine::c::log "allocated u:mssg=<${u:mssg}> t:206=<${t:206}>"
        turbine::read_refcount_incr ${u:LogDir} 1
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:append ${t:206} {${u:failureLog}} ${u:mssg}"
        turbine::reset_priority
        turbine::rule [ list ${t:206} ] "alignDedupRun-chain2 ${t:206} ${u:mssg} ${u:variables}"
        turbine::rule [ list ${u:LogDir} ] [ list __entry-async_op-strcat-8 ${u:LogDir} ${v:alias:sampleName} ${v:t:151} ${u:mssg} ]
    }
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${u:variables} 1
    turbine::read_refcount_decr ${u:LogDir} 1
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
    turbine::read_refcount_decr ${t:146} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::read_refcount_decr ${t:79} 1
    adlb::write_refcount_decr ${u:alignDedupBams} 1
}


proc rm-app-leaf1 { t:79 u:alignedsam } {
    # Var: $string v:__filename:f RENAMED [$string:__v:__filename:f] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:rm():55:6
    # Var: $file v:f:3 RENAMED [$file:__v:f] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:rm():55:6
    # Var: $void v:v:2 RENAMED [$void:__v:v] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:rm():55:6
    set v:__filename:f [ turbine::retrieve_string ${t:79} CACHED 1 ]
    set v:f:3 [ turbine::retrieve_file ${u:alignedsam} CACHED 1 ]
    turbine::c::log [ list exec: "rm" ${v:__filename:f} [ dict create ] ]
    turbine::exec_external "rm" [ dict create ] ${v:__filename:f}
}


proc __entry-call_foreign-split { a:t:161 t:160 } {
    # Var: $string v:alias:t:161 VALUE_OF [string:__alias:t:161]
    # Var: $string$[int] v:t:160 VALUE_OF [string[int]:__t:160]
    set v:alias:t:161 [ turbine::retrieve_string ${a:t:161} CACHED 1 ]
    set v:t:160 [ turbine::split_impl ${v:alias:t:161} " " ]
    turbine::build_rec ${t:160} ${v:t:160} [ list container integer string ] 0 1
}


proc __entry-call_foreign-split-1 { a:t:164 t:163 } {
    # Var: $string v:alias:t:164 VALUE_OF [string:__alias:t:164]
    # Var: $string$[int] v:t:163 VALUE_OF [string[int]:__t:163]
    set v:alias:t:164 [ turbine::retrieve_string ${a:t:164} CACHED 1 ]
    set v:t:163 [ turbine::split_impl ${v:alias:t:164} " " ]
    turbine::build_rec ${t:163} ${v:t:163} [ list container integer string ] 0 1
}


proc __entry-call_foreign-split-2 { a:t:167 t:166 } {
    # Var: $string v:alias:t:167 VALUE_OF [string:__alias:t:167]
    # Var: $string$[int] v:t:166 VALUE_OF [string[int]:__t:166]
    set v:alias:t:167 [ turbine::retrieve_string ${a:t:167} CACHED 1 ]
    set v:t:166 [ turbine::split_impl ${v:alias:t:167} " " ]
    turbine::build_rec ${t:166} ${v:t:166} [ list container integer string ] 0 1
}


proc __entry-async_op-parse_float { a:tot_dups a:tot_reads t:173 t:179 t:183 t:187 t:190 t:191 v:alias:sampleName v:index v:t:151 u:alignDedupBams u:cutoff_info u:dedupsortedbam u:failureLog u:perc_mapped u:variables } {
    # Var: $string v:alias:tot_reads VALUE_OF [string:__alias:tot_reads]
    # Var: $float v:t:172 VALUE_OF [float:__t:172]
    set v:alias:tot_reads [ turbine::retrieve_string ${a:tot_reads} CACHED 1 ]
    set v:t:172 [ turbine::string2float_impl ${v:alias:tot_reads} ]
    turbine::rule [ list ${t:173} ] "__entry-async_op-div_float ${t:173} ${t:190} ${t:191} ${v:t:172} ${u:perc_mapped}"
    turbine::rule [ list ${a:tot_dups} ] [ list __entry-async_op-parse_float-1 ${a:tot_dups} ${t:179} ${t:183} ${t:187} ${t:190} ${v:alias:sampleName} ${v:index} ${v:t:151} ${v:t:172} ${u:alignDedupBams} ${u:cutoff_info} ${u:dedupsortedbam} ${u:failureLog} ${u:perc_mapped} ${u:variables} ]
}


proc __entry-async_op-div_float { t:173 t:190 t:191 v:t:172 u:perc_mapped } {
    # Var: $float v:t:173:1 VALUE_OF [float:__t:173]
    # Var: $float v:perc_mapped VALUE_OF [float:perc_mapped]
    set v:t:173:1 [ turbine::retrieve_float ${t:173} CACHED 1 ]
    set v:perc_mapped [ expr { ${v:t:173:1} / ${v:t:172} } ]
    turbine::store_float ${u:perc_mapped} ${v:perc_mapped}
    turbine::rule [ list ${t:191} ] "__entry-async_op-gt_float ${t:190} ${t:191} ${v:perc_mapped}"
}


proc __entry-async_op-gt_float { t:190 t:191 v:perc_mapped } {
    # Var: $float v:t:191:1 VALUE_OF [float:__t:191]
    # Var: $boolean v:t:190 VALUE_OF [boolean:__t:190]
    set v:t:191:1 [ turbine::retrieve_float ${t:191} CACHED 1 ]
    set v:t:190 [ expr { ${v:perc_mapped} > ${v:t:191:1} } ]
    turbine::store_integer ${t:190} ${v:t:190}
}


proc __entry-async_op-parse_float-1 { a:tot_dups t:179 t:183 t:187 t:190 v:alias:sampleName v:index v:t:151 v:t:172 u:alignDedupBams u:cutoff_info u:dedupsortedbam u:failureLog u:perc_mapped u:variables } {
    # Var: $string v:alias:tot_dups VALUE_OF [string:__alias:tot_dups]
    # Var: $float v:t:170 VALUE_OF [float:__t:170]
    # Var: $float v:t:169 VALUE_OF [float:__t:169]
    # Var: $float v:perc_dup VALUE_OF [float:perc_dup]
    set v:alias:tot_dups [ turbine::retrieve_string ${a:tot_dups} CACHED 1 ]
    set v:t:170 [ turbine::string2float_impl ${v:alias:tot_dups} ]
    set v:t:169 [ expr { ${v:t:170} * 100.0 } ]
    set v:perc_dup [ expr { ${v:t:169} / ${v:t:172} } ]
    turbine::rule [ list ${t:179} ${t:183} ${u:perc_mapped} ] [ list __entry-async_op-strcat-5 ${t:179} ${t:183} ${v:alias:sampleName} ${v:perc_dup} ${u:cutoff_info} ${u:perc_mapped} ]
    turbine::rule [ list ${t:187} ${t:190} ] [ list __entry-async_op-lt_float ${t:187} ${t:190} ${v:index} ${v:perc_dup} ${v:t:151} ${u:alignDedupBams} ${u:cutoff_info} ${u:dedupsortedbam} ${u:failureLog} ${u:variables} ]
}


proc __entry-async_op-strcat-5 { t:179 t:183 v:alias:sampleName v:perc_dup u:cutoff_info u:perc_mapped } {
    # Var: $string v:t:179 VALUE_OF [string:__t:179]
    # Var: $float v:perc_mapped:1 VALUE_OF [float:perc_mapped]
    # Var: $string v:t:183 VALUE_OF [string:__t:183]
    # Var: $string v:cutoff_info VALUE_OF [string:cutoff_info]
    set v:t:179 [ turbine::retrieve_string ${t:179} CACHED 1 ]
    set v:perc_mapped:1 [ turbine::retrieve_float ${u:perc_mapped} CACHED 1 ]
    set v:t:183 [ turbine::retrieve_string ${t:183} CACHED 1 ]
    set v:cutoff_info "${v:alias:sampleName}\tPercentDuplication=${v:perc_dup};DuplicationCutoff=${v:t:179}\tPercentMapped=${v:perc_mapped:1};MappingCutoff=${v:t:183}"
    turbine::store_string ${u:cutoff_info} ${v:cutoff_info}
}


proc __entry-async_op-lt_float { t:187 t:190 v:index v:perc_dup v:t:151 u:alignDedupBams u:cutoff_info u:dedupsortedbam u:failureLog u:variables } {
    # Var: $float v:t:187:1 VALUE_OF [float:__t:187]
    # Var: $boolean v:t:186 VALUE_OF [boolean:__t:186]
    # Var: $boolean v:t:190:1 VALUE_OF [boolean:__t:190]
    # Var: $boolean v:t:185 VALUE_OF [boolean:__t:185]
    set v:t:187:1 [ turbine::retrieve_float ${t:187} CACHED 1 ]
    set v:t:186 [ expr { ${v:perc_dup} < ${v:t:187:1} } ]
    set v:t:190:1 [ turbine::retrieve_integer ${t:190} CACHED 1 ]
    set v:t:185 [ expr { ${v:t:186} && ${v:t:190:1} } ]
    if { ${v:t:185} } {
        turbine::file_read_refcount_incr ${u:dedupsortedbam} 1
        turbine::container_insert ${u:alignDedupBams} ${v:index} ${u:dedupsortedbam} file_ref 0
        turbine::rule [ list ${u:cutoff_info} ] "__entry-async_op-strcat-6 ${u:cutoff_info}"
    } else {
        # Var: string u:m RENAMED [string:m] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():340:6
        # Var: boolean t:200 RENAMED [boolean:__t:200] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():343:6
        lassign [ adlb::multicreate [ list string 2 1 91 ] [ list integer 1 1 92 ] ] u:m t:200
        turbine::c::log "allocated u:m=<${u:m}> t:200=<${t:200}>"
        turbine::read_refcount_incr ${u:variables} 1
        turbine::file_read_refcount_incr ${u:failureLog} 1
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:append ${t:200} {${u:failureLog}} ${u:m}"
        turbine::reset_priority
        turbine::rule [ list ${t:200} ] "alignDedupRun-chain1 ${t:200} ${u:m} ${u:variables}"
        turbine::rule [ list ${u:cutoff_info} ] [ list __entry-async_op-strcat-7 ${v:t:151} ${u:cutoff_info} ${u:m} ]
    }
    turbine::read_refcount_decr ${u:cutoff_info} 1
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${u:variables} 1
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
    adlb::write_refcount_decr ${u:alignDedupBams} 1
}


proc __entry-async_op-strcat-6 { u:cutoff_info } {
    # Var: $string v:cutoff_info:1 VALUE_OF [string:cutoff_info]
    # Var: $string v:t:195 VALUE_OF [string:__t:195]
    # Var: $void v:t:194 VALUE_OF [void:__t:194]
    set v:cutoff_info:1 [ turbine::retrieve_string ${u:cutoff_info} CACHED 1 ]
    set v:t:195 "QC-Test SUCCESS: ${v:cutoff_info:1}"
    set v:t:194 [ turbine::printf_local ${v:t:195} ]
}


proc alignDedupRun-chain1 { t:200 u:m u:variables } {
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:exitIfFlagGiven ${u:variables} ${u:m}"
    turbine::reset_priority
    turbine::read_refcount_decr ${t:200} 1
}


proc __entry-async_op-strcat-7 { v:t:151 u:cutoff_info u:m } {
    # Var: $string v:cutoff_info:2 VALUE_OF [string:cutoff_info]
    # Var: $string v:m VALUE_OF [string:m]
    set v:cutoff_info:2 [ turbine::retrieve_string ${u:cutoff_info} CACHED 1 ]
    set v:m "FAILURE: ${v:t:151} failed the QC test: ${v:cutoff_info:2}"
    turbine::store_string ${u:m} ${v:m}
}


proc __entry-async_op-parse_float-2 { a:tot_mapped t:173 } {
    # Var: $string v:alias:tot_mapped VALUE_OF [string:__alias:tot_mapped]
    # Var: $float v:t:174 VALUE_OF [float:__t:174]
    # Var: $float v:t:173 VALUE_OF [float:__t:173]
    set v:alias:tot_mapped [ turbine::retrieve_string ${a:tot_mapped} CACHED 1 ]
    set v:t:174 [ turbine::string2float_impl ${v:alias:tot_mapped} ]
    set v:t:173 [ expr { ${v:t:174} * 100.0 } ]
    turbine::store_float ${t:173} ${v:t:173}
}


proc __entry-async_op-parse_float-3 { t:179 t:187 } {
    # Var: $string v:t:179:1 VALUE_OF [string:__t:179]
    # Var: $float v:t:187 VALUE_OF [float:__t:187]
    set v:t:179:1 [ turbine::retrieve_string ${t:179} CACHED 1 ]
    set v:t:187 [ turbine::string2float_impl ${v:t:179:1} ]
    turbine::store_float ${t:187} ${v:t:187}
}


proc __entry-async_op-parse_float-4 { t:183 t:191 } {
    # Var: $string v:t:183:1 VALUE_OF [string:__t:183]
    # Var: $float v:t:191 VALUE_OF [float:__t:191]
    set v:t:183:1 [ turbine::retrieve_string ${t:183} CACHED 1 ]
    set v:t:191 [ turbine::string2float_impl ${v:t:183:1} ]
    turbine::store_float ${t:191} ${v:t:191}
}


proc samtools_flagstat-app-leaf1 { t:146 v:t:151 v:t:155 u:dedupsortedbam u:flagstats u:stat } {
    # Var: $string v:samtoolsexe RENAMED [$string:__v:samtoolsexe] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samtools_flagstat():61:42
    # Var: $file v:inputFile RENAMED [$file:__v:inputFile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samtools_flagstat():61:42
    # Var: $file v:output RENAMED [$file:__v:output] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samtools_flagstat():61:42
    # Var: $file v:flagstats VALUE_OF [file:flagstats]
    # Var: $string$[int] v:stat VALUE_OF [string[int]:stat]
    set v:samtoolsexe [ turbine::retrieve_string ${t:146} CACHED 1 ]
    set v:inputFile [ turbine::retrieve_file ${u:dedupsortedbam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output [ turbine::create_local_file_ref ${v:t:155} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:samtoolsexe "flagstat" ${v:t:151} [ dict create "stdout" ${v:t:155} ] ]
    turbine::exec_external ${v:samtoolsexe} [ dict create "stdout" ${v:t:155} ] "flagstat" ${v:t:151}
    turbine::store_file ${u:flagstats} v:output 0
    set v:flagstats [ turbine::retrieve_file ${u:flagstats} CACHED 1 ]
    set v:stat [ turbine::file_lines_impl ${v:flagstats} ]
    turbine::build_rec ${u:stat} ${v:stat} [ list container integer string ] 0 1
    turbine::decr_local_file_refcount v:output
}


proc alignDedupRun-chain2 { t:206 u:mssg u:variables } {
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:exitIfFlagGiven ${u:variables} ${u:mssg}"
    turbine::reset_priority
    turbine::read_refcount_decr ${t:206} 1
}


proc __entry-async_op-strcat-8 { u:LogDir v:alias:sampleName v:t:151 u:mssg } {
    # Var: $string v:LogDir:1 VALUE_OF [string:LogDir]
    # Var: $string v:mssg VALUE_OF [string:mssg]
    set v:LogDir:1 [ turbine::retrieve_string ${u:LogDir} CACHED 1 ]
    set v:mssg "FAILURE: ${v:t:151} contains no alignments. Check the log files within ${v:LogDir:1}${v:alias:sampleName} for details.\n"
    turbine::store_string ${u:mssg} ${v:mssg}
}


proc alignDedupRun-chain3 { t:212 u:message u:variables } {
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:exitIfFlagGiven ${u:variables} ${u:message}"
    turbine::reset_priority
    turbine::read_refcount_decr ${t:212} 1
}


proc __entry-async_op-strcat-9 { u:LogDir v:alias:sampleName v:t:77 u:message } {
    # Var: $string v:LogDir:7 VALUE_OF [string:LogDir]
    # Var: $string v:message VALUE_OF [string:message]
    set v:LogDir:7 [ turbine::retrieve_string ${u:LogDir} CACHED 1 ]
    set v:message "FAILURE: ${v:t:77} contains no alignments. Check ${v:LogDir:7}${v:alias:sampleName}_Alignment.log for details.\n"
    turbine::store_string ${u:message} ${v:message}
}


proc __entry-optmerged-9 { v:alias:sampleName u:tmpLogDir u:tmpsamtoolsLog } {
    # Var: $string v:tmpLogDir:1 VALUE_OF [string:tmpLogDir]
    # Var: $string v:t:84 VALUE_OF [string:__t:84]
    set v:tmpLogDir:1 [ turbine::retrieve_string ${u:tmpLogDir} CACHED 1 ]
    set v:t:84 "${v:tmpLogDir:1}${v:alias:sampleName}_samtools.log"
    turbine::set_filename_val ${u:tmpsamtoolsLog} ${v:t:84}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list mkdir-app-leaf1-5 ${v:tmpLogDir:1} ]
    turbine::reset_priority
}


proc mkdir-app-leaf1-5 { v:tmpLogDir:1 } {
    # Var: $void v:v:8 RENAMED [$void:__v:v] /usr/src/swift-t/swift-t-1.2/turbine/export/unix.swift:mkdir():65:15
    turbine::c::log [ list exec: "mkdir" "-p" ${v:tmpLogDir:1} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:tmpLogDir:1}
}


proc __entry-async_op-strcat-10 { u:AlignDir v:alias:sampleName v:index u:alignDedupBams u:failureLog u:variables } {
    # Var: $string v:AlignDir:7 VALUE_OF [string:AlignDir]
    # Var: $string v:outputFile VALUE_OF [string:outputFile]
    # Var: $boolean v:o RENAMED [$boolean:__v:o]
    set v:AlignDir:7 [ turbine::retrieve_string ${u:AlignDir} CACHED 1 ]
    set v:outputFile "${v:AlignDir:7}${v:alias:sampleName}.wDedups.sorted.bam"
    set v:o [ file exists ${v:outputFile} ]
    if { ${v:o} } {
        # Var: file t:215 RENAMED [file:__t:215] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():371:4
        # Var: $file v:t:215 VALUE_OF [file:__t:215]
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 97 ] ] [ list 0 ] ] t:215
        set tcltmp:init_rc 1
        set v:t:215 [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
        turbine::input_file_local v:t:215 ${v:outputFile}
        turbine::store_file ${t:215} v:t:215 1
        turbine::container_insert ${u:alignDedupBams} ${v:index} ${t:215} file_ref 0
        turbine::decr_local_file_refcount v:t:215
    } else {
        # Var: string u:message_string RENAMED [string:message_string] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():374:4
        # Var: boolean t:219 RENAMED [boolean:__t:219] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupRun():377:4
        # Var: $string v:message_string VALUE_OF [string:message_string]
        lassign [ adlb::multicreate [ list string 2 1 98 ] [ list integer 1 1 99 ] ] u:message_string t:219
        turbine::c::log "allocated u:message_string=<${u:message_string}> t:219=<${t:219}>"
        turbine::read_refcount_incr ${u:variables} 1
        turbine::file_read_refcount_incr ${u:failureLog} 1
        set v:message_string "ERROR: ${v:outputFile} not found. Did you set ALIGN_DEDUP_STAGE to 'N' by accident?\n"
        turbine::store_string ${u:message_string} ${v:message_string}
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:append ${t:219} {${u:failureLog}} ${u:message_string}"
        turbine::reset_priority
        turbine::rule [ list ${t:219} ] "alignDedupRun-chain4 ${t:219} ${u:message_string} ${u:variables}"
    }
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${u:variables} 1
    adlb::write_refcount_decr ${u:alignDedupBams} 1
}


proc alignDedupRun-chain4 { t:219 u:message_string u:variables } {
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:exitIfFlagGiven ${u:variables} ${u:message_string}"
    turbine::reset_priority
    turbine::read_refcount_decr ${t:219} 1
}


proc __entry-optmerged-10 { u:AlignDir u:LogDir u:RealignDir u:VarcallDir t:10 v:alias:sampleName } {
    # Var: $string v:t:10:4 VALUE_OF [string:__t:10]
    # Var: $string v:LogDir VALUE_OF [string:LogDir]
    # Var: $string v:AlignDir VALUE_OF [string:AlignDir]
    # Var: $string v:RealignDir VALUE_OF [string:RealignDir]
    # Var: $string v:VarcallDir VALUE_OF [string:VarcallDir]
    set v:t:10:4 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:LogDir "${v:t:10:4}/${v:alias:sampleName}/logs/"
    turbine::store_string ${u:LogDir} ${v:LogDir}
    set v:AlignDir "${v:t:10:4}/${v:alias:sampleName}/align/"
    turbine::store_string ${u:AlignDir} ${v:AlignDir}
    set v:RealignDir "${v:t:10:4}/${v:alias:sampleName}/realign/"
    turbine::store_string ${u:RealignDir} ${v:RealignDir}
    set v:VarcallDir "${v:t:10:4}/${v:alias:sampleName}/variant/"
    turbine::store_string ${u:VarcallDir} ${v:VarcallDir}
}


proc __entry-async_op-strcat-11 { t:10 t:22 v:f:1 u:docSampleInfo } {
    # Var: $string v:t:10:3 VALUE_OF [string:__t:10]
    # Var: $string v:t:22 VALUE_OF [string:__t:22]
    set v:t:10:3 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:t:22 "${v:t:10:3}/deliverables/docs/${v:f:1}"
    turbine::store_string ${t:22} ${v:t:22}
    turbine::set_filename_val ${u:docSampleInfo} ${v:t:22}
}


proc __entry-optmerged-11 { t:25:1 u:alignDedupBams u:timingLog } {
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:logging ${t:25:1} {${u:timingLog}}"
    turbine::reset_priority
    turbine::deeprule [ list ${u:alignDedupBams} ] [ list 1 ] [ list file_ref ] "__entry-explicit-wait1 ${u:alignDedupBams}"
}


proc __entry-explicit-wait1 { u:alignDedupBams } {
    # Var: file$[int] v:alignDedupBams VALUE_OF [*rw(file)[int]:alignDedupBams]
    # Var: $int v:t:47 VALUE_OF [int:__t:47]
    # Var: $boolean v:t:46 VALUE_OF [boolean:__t:46]
    # Var: $void v:t:45 VALUE_OF [void:__t:45]
    set v:alignDedupBams [ adlb::enumerate ${u:alignDedupBams} dict all 0 0 ]
    set v:t:47 [ dict size ${v:alignDedupBams} ]
    set v:t:46 [ expr { ${v:t:47} != 0 } ]
    turbine::assert_impl ${v:t:46} "FAILURE: The align, sort, and dedup output array was empty: none of the samples finished properly"
    turbine::read_refcount_decr ${u:alignDedupBams} 1
}


proc f:append { u:signal u:f u:s } {
    turbine::c::log "function: append"
    # Var: file u:newFile /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:append():14:16
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 100 ] ] [ list 1 ] ] u:newFile
    turbine::file_read_refcount_incr ${u:f} 1
    set optf:f [ turbine::get_file_path ${u:f} ]
    set wfilename:newFile [ turbine::get_file_path ${u:newFile} ]
    turbine::rule [ list [ turbine::get_file_td ${u:f} ] ] "append-call_foreign-read {${wfilename:newFile}} {${u:f}} {${u:newFile}} {${u:s}} {${u:signal}}"
    turbine::rule [ list ${optf:f} ] "append-copy_in_filename {${optf:f}} {${u:newFile}}"
}


proc append-call_foreign-read { wfilename:newFile u:f u:newFile u:s u:signal } {
    # Var: $file v:f VALUE_OF [file:f]
    # Var: $string v:original VALUE_OF [string:original]
    set v:f [ turbine::retrieve_file ${u:f} CACHED 1 ]
    set v:original [ turbine::file_read_local ${v:f} ]
    turbine::rule [ list ${wfilename:newFile} ${u:s} ] [ list append-async_op-strcat ${v:original} ${wfilename:newFile} ${u:newFile} ${u:s} ${u:signal} ]
}


proc append-async_op-strcat { v:original wfilename:newFile u:newFile u:s u:signal } {
    # Var: $string v:s VALUE_OF [string:s]
    # Var: $string v:appended VALUE_OF [string:appended]
    # Var: $file v:newFile VALUE_OF [file:newFile]
    # Var: $string v:__wfilename:newFile VALUE_OF [string:__wfilename:newFile]
    set v:s [ turbine::retrieve_string ${u:s} CACHED 1 ]
    set v:appended "${v:original}${v:s}\n"
    set v:__wfilename:newFile [ turbine::retrieve_string ${wfilename:newFile} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:newFile [ turbine::create_local_file_ref ${v:__wfilename:newFile} ${tcltmp:init_rc} 1 ]
    turbine::file_write_local v:newFile ${v:appended}
    turbine::store_file ${u:newFile} v:newFile 0
    turbine::store_integer ${u:signal} 1
}


proc append-copy_in_filename { optf:f u:newFile } {
    # Var: $string v:of:f VALUE_OF [string:__of:f]
    set v:of:f [ turbine::retrieve_string ${optf:f} CACHED 1 ]
    turbine::set_filename_val ${u:newFile} ${v:of:f}
}


proc f:exitIfFlagGiven { u:vars u:message } {
    turbine::c::log "function: exitIfFlagGiven"
    # Var: string t:11 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:exitIfFlagGiven():21:5
    lassign [ adlb::multicreate [ list string 1 1 101 ] ] t:11
    turbine::c::log "allocated t:11=<${t:11}>"
    turbine::container_reference ${u:vars} "EXIT_ON_ERROR" ${t:11} string
    turbine::rule [ list ${t:11} ] "exitIfFlagGiven-optmerged ${t:11} {${u:message}}"
}


proc exitIfFlagGiven-optmerged { t:11 u:message } {
    # Var: $string v:t:11 VALUE_OF [string:__t:11]
    # Var: $boolean v:t:10 VALUE_OF [boolean:__t:10]
    # Var: $boolean v:t:14 VALUE_OF [boolean:__t:14]
    # Var: $boolean v:t:18 VALUE_OF [boolean:__t:18]
    # Var: $boolean v:t:22 VALUE_OF [boolean:__t:22]
    # Var: $boolean v:t:26 VALUE_OF [boolean:__t:26]
    # Var: $boolean v:t:30 VALUE_OF [boolean:__t:30]
    # Var: $boolean v:t:34 VALUE_OF [boolean:__t:34]
    # Var: $boolean v:t:38 VALUE_OF [boolean:__t:38]
    # Var: $boolean v:t:42 VALUE_OF [boolean:__t:42]
    # Var: $boolean v:t:46 VALUE_OF [boolean:__t:46]
    # Var: $boolean v:t:9 VALUE_OF [boolean:__t:9]
    # Var: $boolean v:t:8 VALUE_OF [boolean:__t:8]
    # Var: $boolean v:t:7 VALUE_OF [boolean:__t:7]
    # Var: $boolean v:t:6 VALUE_OF [boolean:__t:6]
    # Var: $boolean v:t:5 VALUE_OF [boolean:__t:5]
    # Var: $boolean v:t:4 VALUE_OF [boolean:__t:4]
    # Var: $boolean v:t:3 VALUE_OF [boolean:__t:3]
    # Var: $boolean v:t:2 VALUE_OF [boolean:__t:2]
    # Var: $boolean v:t:1 VALUE_OF [boolean:__t:1]
    set v:t:11 [ turbine::retrieve_string ${t:11} CACHED 1 ]
    set v:t:10 [ string equal ${v:t:11} "F" ]
    set v:t:14 [ string equal ${v:t:11} "f" ]
    set v:t:18 [ string equal ${v:t:11} "False" ]
    set v:t:22 [ string equal ${v:t:11} "false" ]
    set v:t:26 [ string equal ${v:t:11} "FALSE" ]
    set v:t:30 [ string equal ${v:t:11} "N" ]
    set v:t:34 [ string equal ${v:t:11} "n" ]
    set v:t:38 [ string equal ${v:t:11} "No" ]
    set v:t:42 [ string equal ${v:t:11} "NO" ]
    set v:t:46 [ string equal ${v:t:11} "no" ]
    set v:t:9 [ expr { ${v:t:10} || ${v:t:14} } ]
    set v:t:8 [ expr { ${v:t:9} || ${v:t:18} } ]
    set v:t:7 [ expr { ${v:t:8} || ${v:t:22} } ]
    set v:t:6 [ expr { ${v:t:7} || ${v:t:26} } ]
    set v:t:5 [ expr { ${v:t:6} || ${v:t:30} } ]
    set v:t:4 [ expr { ${v:t:5} || ${v:t:34} } ]
    set v:t:3 [ expr { ${v:t:4} || ${v:t:38} } ]
    set v:t:2 [ expr { ${v:t:3} || ${v:t:42} } ]
    set v:t:1 [ expr { ${v:t:2} || ${v:t:46} } ]
    if { ${v:t:1} } {
    } else {
        turbine::read_refcount_incr ${u:message} 1
        turbine::rule [ list ${u:message} ] "exitIfFlagGiven-async_op-assert {${u:message}}"
    }
    turbine::read_refcount_decr ${u:message} 1
}


proc exitIfFlagGiven-async_op-assert { u:message } {
    # Var: $string v:message VALUE_OF [string:message]
    # Var: $void v:t:50 VALUE_OF [void:__t:50]
    set v:message [ turbine::retrieve_string ${u:message} CACHED 1 ]
    turbine::assert_impl 0 ${v:message}
}


proc f:logging { u:tmpdir u:timeLog } {
    turbine::c::log "function: logging"
    # Var: *rw(file)[int] u:tmplogs /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:logging():59:8
    # Var: string t:1 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:logging():59:30
    # Var: boolean t:3 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:logging():60:8
    # Var: string t:4 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:logging():60:24
    # Var: file t:5 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:logging():60:29
    # Var: $string optf:o RENAMED [$string:__of:o]
    lassign [ adlb::multicreate [ list container integer file_ref 2 1 102 ] [ list string 1 1 103 ] [ list integer 1 1 104 ] [ list string 1 1 105 ] ] u:tmplogs t:1 t:3 t:4
    turbine::c::log "allocated u:tmplogs=<${u:tmplogs}> t:1=<${t:1}> t:3=<${t:3}> t:4=<${t:4}>"
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 106 ] ] [ list 0 ] ] t:5
    turbine::glob [ list ${u:tmplogs} ] [ list ${t:1} ]
    set optf:o [ turbine::mktemp ]
    turbine::set_filename_val ${t:5} ${optf:o}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:append ${t:3} {${u:timeLog}} ${t:4}"
    turbine::reset_priority
    turbine::rule [ list ${u:tmpdir} ] "logging-async_op-strcat ${t:1} {${u:tmpdir}}"
    turbine::rule [ list ${u:tmplogs} ] [ list logging-optmerged ${optf:o} ${t:3} ${t:4} ${t:5} ${u:tmplogs} ]
}


proc logging-async_op-strcat { t:1 u:tmpdir } {
    # Var: $string v:tmpdir VALUE_OF [string:tmpdir]
    # Var: $string v:t:1 VALUE_OF [string:__t:1]
    set v:tmpdir [ turbine::retrieve_string ${u:tmpdir} CACHED 1 ]
    set v:t:1 "${v:tmpdir}/timinglogs/*"
    turbine::store_string ${t:1} ${v:t:1}
}


proc logging-optmerged { optf:o t:3 t:4 t:5 u:tmplogs } {
    turbine::rule [ list ${t:3} ] "logging-chain1 ${t:3} ${u:tmplogs}"
    turbine::deeprule [ list ${u:tmplogs} ] [ list 1 ] [ list file_ref ] [ list cat-app-leaf1 ${optf:o} ${t:4} ${t:5} ${u:tmplogs} ]
}


proc logging-chain1 { t:3 u:tmplogs } {
    set tcltmp:container_sz [ adlb::enumerate ${u:tmplogs} count all 0 ]
    set tcltmp:iters ${tcltmp:container_sz}
    turbine::read_refcount_incr ${u:tmplogs} [ expr { ${tcltmp:iters} - 1 } ]
    logging-foreach1:outer ${u:tmplogs} 0 [ expr { ${tcltmp:container_sz} - 1 } ] 1
    turbine::read_refcount_decr ${t:3} 1
}


proc logging-foreach1:outer { u:tmplogs tcltmp:lo tcltmp:hi tcltmp:inc } {
    if { [ expr { ${tcltmp:lo} > ${tcltmp:hi} } ] } {
        return
    }
    while {1} {
        set tcltmp:itersleft [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
        if { [ expr { ${tcltmp:itersleft} <= 64 } ] } {
            logging-foreach1:inner ${u:tmplogs} ${tcltmp:lo} ${tcltmp:hi} ${tcltmp:inc}
            return
        } else {
            set tcltmp:skip [ expr { ${tcltmp:inc} * max(64,((${tcltmp:itersleft} - 1) / 16) + 1) } ]
            for { set tcltmp:splitstart [ expr { ${tcltmp:lo} + ${tcltmp:skip} } ] } { ${tcltmp:splitstart} <= ${tcltmp:hi} } { incr tcltmp:splitstart ${tcltmp:skip} } {
                set tcltmp:splitend [ expr { min(${tcltmp:hi},${tcltmp:splitstart} + ${tcltmp:skip} - 1) } ]
                set tcltmp:prio [ turbine::get_priority ]
                turbine::set_priority ${tcltmp:prio}
                adlb::spawn 0 "logging-foreach1:outer ${u:tmplogs} ${tcltmp:splitstart} ${tcltmp:splitend} ${tcltmp:inc}"
                turbine::reset_priority
            }
            set tcltmp:hi [ expr { ${tcltmp:lo} + ${tcltmp:skip} - 1 } ]
        }
    }
}


proc logging-foreach1:inner { u:tmplogs tcltmp:lo tcltmp:hi tcltmp:inc } {
    set tcltmp:splitlen [ expr { ${tcltmp:hi} - ${tcltmp:lo} + 1 } ]
    set tcltmp:contents [ adlb::enumerate ${u:tmplogs} members ${tcltmp:splitlen} ${tcltmp:lo} ]
    foreach u:i ${tcltmp:contents} {
        turbine::file_read_refcount_incr ${u:i} 2
        set filename:f [ turbine::get_file_path ${u:i} ]
        turbine::rule [ list ${filename:f} [ turbine::get_file_td ${u:i} ] ] "rm-app-leaf1-1 {${filename:f}} {${u:i}}"
    }
    set tcltmp:iters [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
    turbine::read_refcount_decr ${u:tmplogs} [ expr { ${tcltmp:iters} } ]
}


proc rm-app-leaf1-1 { filename:f u:i } {
    # Var: $string v:__filename:f RENAMED [$string:__v:__filename:f] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:rm():55:6
    # Var: $file v:f:1 RENAMED [$file:__v:f] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:rm():55:6
    # Var: $void v:v RENAMED [$void:__v:v] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:rm():55:6
    set v:__filename:f [ turbine::retrieve_string ${filename:f} ]
    set v:f:1 [ turbine::retrieve_file ${u:i} CACHED 2 ]
    turbine::c::log [ list exec: "rm" ${v:__filename:f} [ dict create ] ]
    turbine::exec_external "rm" [ dict create ] ${v:__filename:f}
}


proc cat-app-leaf1 { optf:o t:4 t:5 u:tmplogs } {
    # Var: $file$[int] v:f RENAMED [$file$[int]:__v:f] /usr/src/swift-t/swift-t-1.2/turbine/export/unix.swift:cat():35:18
    # Var: $file v:o RENAMED [$file:__v:o] /usr/src/swift-t/swift-t-1.2/turbine/export/unix.swift:cat():35:18
    set v:f [ turbine::unpack_args ${u:tmplogs} 1 file_ref ]
    set tcltmp:init_rc 1
    set v:o [ turbine::create_local_file_ref ${optf:o} ${tcltmp:init_rc} 0 ]
    turbine::c::log [ list exec: "cat" {*}${v:f} [ dict create "stdout" ${optf:o} ] ]
    turbine::exec_external "cat" [ dict create "stdout" ${optf:o} ] {*}${v:f}
    turbine::store_file ${t:5} v:o 1
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "logging-call_foreign-read ${t:4} {${t:5}}"
    turbine::reset_priority
    turbine::decr_local_file_refcount v:o
    turbine::read_refcount_decr ${u:tmplogs} 1
}


proc logging-call_foreign-read { t:4 t:5 } {
    # Var: $file v:t:5 VALUE_OF [file:__t:5]
    # Var: $string v:t:4 VALUE_OF [string:__t:4]
    set v:t:5 [ turbine::retrieve_file ${t:5} CACHED 1 ]
    set v:t:4 [ turbine::file_read_local ${v:t:5} ]
    turbine::store_string ${t:4} ${v:t:4}
}


proc f:checkBam { u:success u:vars u:bamFile } {
    turbine::c::log "function: checkBam"
    # Var: string t:1 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:checkBam():77:32
    # Var: $string v:of:bamFile VALUE_OF [string:__of:bamFile]
    lassign [ adlb::multicreate [ list string 1 1 107 ] ] t:1
    turbine::c::log "allocated t:1=<${t:1}>"
    turbine::container_reference ${u:vars} "SAMTOOLSEXE" ${t:1} string
    set v:of:bamFile [ turbine::get_filename_val ${u:bamFile} ]
    turbine::rule [ list ${t:1} ] [ list samtools_view2-argwait ${t:1} ${v:of:bamFile} ${u:success} ]
    turbine::file_read_refcount_decr ${u:bamFile} 1
}


proc samtools_view2-argwait { t:1 v:of:bamFile u:success } {
    # Var: $string v:samtoolsexe RENAMED [$string:__v:samtoolsexe]
    # Var: $int v:numAlignments RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:success VALUE_OF [boolean:success]
    set v:samtoolsexe [ turbine::retrieve_string ${t:1} CACHED 1 ]
    set v:numAlignments [ alignment::samtools_view ${v:samtoolsexe} ${v:of:bamFile} ]
    set v:success [ expr { ${v:numAlignments} > 0 } ]
    turbine::store_integer ${u:success} ${v:success}
}


proc f:alignReads { u:outputSam u:vars u:sampleName u:reads u:rgheader } {
    turbine::c::log "function: alignReads"
    # Var: int u:threads /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():85:1
    # Var: string t:2 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():85:26
    # Var: string t:5 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():85:64
    # Var: string t:7 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():88:24
    # Var: string t:11 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():89:19
    # Var: file u:alignedLog /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():89:46
    # Var: string t:13 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():90:27
    # Var: file u:tmpalignedLog /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():91:53
    # Var: string t:29 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():93:5
    lassign [ adlb::multicreate [ list integer 3 1 108 ] [ list string 1 1 109 ] [ list string 1 1 110 ] [ list string 1 1 111 ] [ list string 3 1 112 ] [ list string 1 1 114 ] [ list string 1 1 116 ] ] u:threads t:2 t:5 t:7 t:11 t:13 t:29
    turbine::c::log "allocated u:threads=<${u:threads}> t:2=<${t:2}> t:5=<${t:5}> t:7=<${t:7}> t:11=<${t:11}>"
    turbine::c::log "allocated t:13=<${t:13}> t:29=<${t:29}>"
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 0 1 113 ] [ list file 3 1 115 ] ] [ list 1 1 ] ] u:alignedLog u:tmpalignedLog
    turbine::read_refcount_incr ${u:rgheader} 2
    turbine::read_refcount_incr ${u:vars} 9
    turbine::read_refcount_incr ${u:sampleName} 4
    turbine::file_read_refcount_incr ${u:outputSam} 2
    turbine::read_refcount_incr ${u:reads} 2
    turbine::container_reference ${u:vars} "CORES_PER_NODE" ${t:2} string
    turbine::container_reference ${u:vars} "PROGRAMS_PER_NODE" ${t:5} string
    turbine::container_reference ${u:vars} "OUTPUTDIR" ${t:7} string
    turbine::container_reference ${u:vars} "TMPDIR" ${t:13} string
    turbine::container_reference ${u:vars} "PAIRED" ${t:29} string
    turbine::rule [ list ${t:2} ${t:5} ] "alignReads-async_op-parse_int ${t:2} ${t:5} ${u:threads}"
    turbine::rule [ list ${t:29} ] "alignReads-optmerged ${t:11} ${t:29} {${u:alignedLog}} {${u:outputSam}} {${u:reads}} {${u:rgheader}} {${u:sampleName}} ${u:threads} {${u:tmpalignedLog}} {${u:vars}}"
    turbine::rule [ list ${u:sampleName} ] "alignReads-optmerged-1 ${t:11} ${t:13} ${t:7} {${u:alignedLog}} {${u:sampleName}} {${u:tmpalignedLog}}"
}


proc alignReads-async_op-parse_int { t:2 t:5 u:threads } {
    # Var: $string v:t:5:1 VALUE_OF [string:__t:5]
    # Var: $int v:t:4:1 VALUE_OF [int:__t:4]
    # Var: $string v:t:2:1 VALUE_OF [string:__t:2]
    # Var: $int v:t:1:1 VALUE_OF [int:__t:1]
    # Var: $int v:threads VALUE_OF [int:threads]
    set v:t:5:1 [ turbine::retrieve_string ${t:5} CACHED 1 ]
    set v:t:4:1 [ turbine::parse_int_impl ${v:t:5:1} 10 ]
    set v:t:2:1 [ turbine::retrieve_string ${t:2} CACHED 1 ]
    set v:t:1:1 [ turbine::parse_int_impl ${v:t:2:1} 10 ]
    set v:threads [ turbine::divide_integer_impl ${v:t:1:1} ${v:t:4:1} ]
    turbine::store_integer ${u:threads} ${v:threads}
}


proc alignReads-optmerged { t:11 t:29 u:alignedLog u:outputSam u:reads u:rgheader u:sampleName u:threads u:tmpalignedLog u:vars } {
    # Var: $string v:t:29 VALUE_OF [string:__t:29]
    # Var: $boolean v:t:28 VALUE_OF [boolean:__t:28]
    # Var: $boolean v:t:32 VALUE_OF [boolean:__t:32]
    # Var: $boolean v:t:36 VALUE_OF [boolean:__t:36]
    # Var: $boolean v:t:40 VALUE_OF [boolean:__t:40]
    # Var: $boolean v:t:44 VALUE_OF [boolean:__t:44]
    # Var: $boolean v:t:48 VALUE_OF [boolean:__t:48]
    # Var: $boolean v:t:52 VALUE_OF [boolean:__t:52]
    # Var: $boolean v:t:56 VALUE_OF [boolean:__t:56]
    # Var: $boolean v:t:60 VALUE_OF [boolean:__t:60]
    # Var: $boolean v:t:64 VALUE_OF [boolean:__t:64]
    # Var: $boolean v:t:68 VALUE_OF [boolean:__t:68]
    # Var: $boolean v:t:27 VALUE_OF [boolean:__t:27]
    # Var: $boolean v:t:26 VALUE_OF [boolean:__t:26]
    # Var: $boolean v:t:25 VALUE_OF [boolean:__t:25]
    # Var: $boolean v:t:24 VALUE_OF [boolean:__t:24]
    # Var: $boolean v:t:23 VALUE_OF [boolean:__t:23]
    # Var: $boolean v:t:22 VALUE_OF [boolean:__t:22]
    # Var: $boolean v:t:21 VALUE_OF [boolean:__t:21]
    # Var: $boolean v:t:20 VALUE_OF [boolean:__t:20]
    # Var: $boolean v:t:19 VALUE_OF [boolean:__t:19]
    # Var: $boolean v:t:18 VALUE_OF [boolean:__t:18]
    set v:t:29 [ turbine::retrieve_string ${t:29} CACHED 1 ]
    set v:t:28 [ string equal ${v:t:29} "1" ]
    set v:t:32 [ string equal ${v:t:29} "YES" ]
    set v:t:36 [ string equal ${v:t:29} "Yes" ]
    set v:t:40 [ string equal ${v:t:29} "yes" ]
    set v:t:44 [ string equal ${v:t:29} "Y" ]
    set v:t:48 [ string equal ${v:t:29} "y" ]
    set v:t:52 [ string equal ${v:t:29} "TRUE" ]
    set v:t:56 [ string equal ${v:t:29} "True" ]
    set v:t:60 [ string equal ${v:t:29} "true" ]
    set v:t:64 [ string equal ${v:t:29} "T" ]
    set v:t:68 [ string equal ${v:t:29} "t" ]
    set v:t:27 [ expr { ${v:t:28} || ${v:t:32} } ]
    set v:t:26 [ expr { ${v:t:27} || ${v:t:36} } ]
    set v:t:25 [ expr { ${v:t:26} || ${v:t:40} } ]
    set v:t:24 [ expr { ${v:t:25} || ${v:t:44} } ]
    set v:t:23 [ expr { ${v:t:24} || ${v:t:48} } ]
    set v:t:22 [ expr { ${v:t:23} || ${v:t:52} } ]
    set v:t:21 [ expr { ${v:t:22} || ${v:t:56} } ]
    set v:t:20 [ expr { ${v:t:21} || ${v:t:60} } ]
    set v:t:19 [ expr { ${v:t:20} || ${v:t:64} } ]
    set v:t:18 [ expr { ${v:t:19} || ${v:t:68} } ]
    if { ${v:t:18} } {
        # Var: string t:73 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():106:6
        lassign [ adlb::multicreate [ list string 1 1 117 ] ] t:73
        turbine::c::log "allocated t:73=<${t:73}>"
        turbine::read_refcount_incr ${u:reads} 1
        turbine::container_reference ${u:vars} "ALIGNERTOOL" ${t:73} string
        turbine::rule [ list ${t:73} ] "alignReads-async_op-eq_string ${t:11} ${t:73} {${u:alignedLog}} {${u:outputSam}} {${u:reads}} {${u:rgheader}} {${u:sampleName}} ${u:threads} {${u:tmpalignedLog}} {${u:vars}}"
    } else {
        # Var: string t:95 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():121:6
        lassign [ adlb::multicreate [ list string 1 1 125 ] ] t:95
        turbine::c::log "allocated t:95=<${t:95}>"
        turbine::read_refcount_incr ${u:vars} 1
        turbine::container_reference ${u:vars} "ALIGNERTOOL" ${t:95} string
        turbine::rule [ list ${t:95} ] "alignReads-async_op-eq_string-1 ${t:11} ${t:95} {${u:alignedLog}} {${u:outputSam}} {${u:reads}} {${u:rgheader}} {${u:sampleName}} ${u:threads} {${u:tmpalignedLog}} {${u:vars}}"
    }
    turbine::file_read_refcount_decr ${u:outputSam} 1
    turbine::read_refcount_decr ${u:sampleName} 1
    turbine::file_read_refcount_decr ${u:tmpalignedLog} 1
    turbine::read_refcount_decr ${u:threads} 1
    turbine::read_refcount_decr ${t:11} 1
    turbine::read_refcount_decr ${u:reads} 1
    turbine::read_refcount_decr ${u:vars} 1
    turbine::read_refcount_decr ${u:rgheader} 1
}


proc alignReads-async_op-eq_string { t:11 t:73 u:alignedLog u:outputSam u:reads u:rgheader u:sampleName u:threads u:tmpalignedLog u:vars } {
    # Var: $string v:t:73 VALUE_OF [string:__t:73]
    # Var: $boolean v:t:72 VALUE_OF [boolean:__t:72]
    set v:t:73 [ turbine::retrieve_string ${t:73} CACHED 1 ]
    set v:t:72 [ string equal ${v:t:73} "BWAMEM" ]
    if { ${v:t:72} } {
        # Var: string t:76 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():108:57
        # Var: string t:80 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():108:93
        # Var: string[int] t:82 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():109:10
        # Var: string t:83 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():109:10
        # Var: $int v:t:1 RENAMED [$int:__v:t]
        # Var: $string v:t:6:1 VALUE_OF [string:__t:6:1]
        lassign [ adlb::multicreate [ list string 1 1 118 ] [ list string 1 1 119 ] [ list container integer string 1 1 120 ] [ list string 1 1 121 ] ] t:76 t:80 t:82 t:83
        turbine::c::log "allocated t:76=<${t:76}> t:80=<${t:80}> t:82=<${t:82}> t:83=<${t:83}>"
        turbine::read_refcount_incr ${u:vars} 1
        turbine::container_reference ${u:vars} "BWAEXE" ${t:76} string
        set a:t:78 [ adlb::subscript_container ${u:reads} 0 ]
        set a:t:79 [ adlb::subscript_container ${u:reads} 1 ]
        turbine::container_reference ${u:vars} "BWAINDEX" ${t:80} string
        turbine::container_reference ${u:vars} "BWAMEMPARAMS" ${t:83} string
        set v:t:1 [ clock seconds ]
        set v:t:6:1 ${v:t:1}
        turbine::rule [ list ${t:83} ] "alignReads-arr_copy_in_imm ${t:82} ${t:83}"
        turbine::rule [ list ${u:sampleName} ] [ list alignReads-async_op-strcat ${a:t:78} ${a:t:79} ${t:11} ${t:76} ${t:80} ${t:82} ${v:t:6:1} ${u:alignedLog} ${u:outputSam} ${u:rgheader} ${u:sampleName} ${u:threads} ${u:tmpalignedLog} ]
    } else {
        # Var: string t:85 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():114:59
        # Var: string t:89 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():115:11
        # Var: string u:startmsg:1 RENAMED [string:startmsg] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioappsLoggingFunctions/align_dedup_logging.swift:novoalign_logged():35:1
        # Var: $boolean v:mapped_output:2 RENAMED [$boolean:__v:mapped_output]
        # Var: $int v:t:3 RENAMED [$int:__v:t]
        # Var: $string v:t:6:2 VALUE_OF [string:__t:6:2]
        lassign [ adlb::multicreate [ list string 1 1 122 ] [ list string 1 1 123 ] [ list string 1 1 124 ] ] t:85 t:89 u:startmsg:1
        turbine::c::log "allocated t:85=<${t:85}> t:89=<${t:89}> u:startmsg:1=<${u:startmsg:1}>"
        turbine::read_refcount_incr ${u:sampleName} 1
        turbine::container_reference ${u:vars} "NOVOALIGNEXE" ${t:85} string
        set a:t:87 [ adlb::subscript_container ${u:reads} 0 ]
        set a:t:88 [ adlb::subscript_container ${u:reads} 1 ]
        turbine::container_reference ${u:vars} "NOVOALIGNINDEX" ${t:89} string
        set v:mapped_output:2 [ turbine::is_file_mapped ${u:outputSam} ]
        set filename:output:1 [ turbine::get_file_path ${u:outputSam} ]
        if { ${v:mapped_output:2} } {
        } else {
            # Var: $string optf:output:1 RENAMED [$string:__of:output]
            set optf:output:1 [ turbine::mktemp ]
            turbine::set_filename_val ${u:outputSam} ${optf:output:1}
        }
        set v:t:3 [ clock seconds ]
        set v:t:6:2 ${v:t:3}
        turbine::rule [ list ${u:sampleName} ] [ list alignReads-async_op-strcat-1 ${v:t:6:2} ${u:sampleName} ${u:startmsg:1} ]
        turbine::rule [ list ${a:t:87} ${a:t:88} ${filename:output:1} ${t:11} ${t:85} ${t:89} ${u:rgheader} ${u:threads} ] "novoalign-app-leaf1 {${a:t:87}} {${a:t:88}} {${filename:output:1}} ${t:11} ${t:85} ${t:89} ${v:mapped_output:2} {${u:alignedLog}} {${u:outputSam}} {${u:rgheader}} {${u:sampleName}} ${u:startmsg:1} ${u:threads} {${u:tmpalignedLog}}"
    }
    turbine::file_read_refcount_decr ${u:outputSam} 1
    turbine::read_refcount_decr ${u:sampleName} 1
    turbine::file_read_refcount_decr ${u:tmpalignedLog} 1
    turbine::read_refcount_decr ${u:threads} 1
    turbine::read_refcount_decr ${t:11} 1
    turbine::read_refcount_decr ${u:reads} 1
    turbine::read_refcount_decr ${u:vars} 1
    turbine::read_refcount_decr ${u:rgheader} 1
}


proc alignReads-arr_copy_in_imm { t:82 t:83 } {
    # Var: $string v:t:83 VALUE_OF [string:__t:83]
    set v:t:83 [ turbine::retrieve_string ${t:83} CACHED 1 ]
    turbine::array_kv_build ${t:82} [ ::adlb::dict_create 0 ${v:t:83} ] 1 integer string
}


proc alignReads-async_op-strcat { a:t:78 a:t:79 t:11 t:76 t:80 t:82 v:t:6:1 u:alignedLog u:outputSam u:rgheader u:sampleName u:threads u:tmpalignedLog } {
    # Var: $string v:sampleName:3 VALUE_OF [string:sampleName]
    # Var: $string v:startmsg:1 VALUE_OF [string:startmsg]
    # Var: $boolean v:mapped_output RENAMED [$boolean:__v:mapped_output]
    # Var: $boolean v:4 RENAMED [$boolean:__v:4] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():4:101
    set v:sampleName:3 [ turbine::retrieve_string ${u:sampleName} CACHED 1 ]
    set v:startmsg:1 "${v:sampleName:3}\tALL\tBWAMEM start\t${v:t:6:1}\n"
    set v:mapped_output [ turbine::is_file_mapped ${u:outputSam} ]
    set filename:output [ turbine::get_file_path ${u:outputSam} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output RENAMED [$string:__of:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:outputSam} ${optf:output}
    }
    set v:4 [ expr { ! ${v:mapped_output} } ]
    turbine::rule [ list ${a:t:78} ${a:t:79} ${filename:output} ${t:11} ${t:76} ${t:80} ${t:82} ${u:rgheader} ${u:threads} ] [ list bwa_mem-app-leaf1 ${a:t:78} ${a:t:79} ${filename:output} ${t:11} ${t:76} ${t:80} ${t:82} ${v:4} ${v:mapped_output} ${v:sampleName:3} ${v:startmsg:1} ${u:alignedLog} ${u:outputSam} ${u:rgheader} ${u:threads} ${u:tmpalignedLog} ]
}


proc bwa_mem-app-leaf1 { a:t:78 a:t:79 filename:output t:11 t:76 t:80 t:82 v:4 v:mapped_output v:sampleName:3 v:startmsg:1 u:alignedLog u:outputSam u:rgheader u:threads u:tmpalignedLog } {
    # Var: $string v:bwaexe RENAMED [$string:__v:bwaexe] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():4:101
    # Var: $string$[int] v:bwamemparams RENAMED [$string$[int]:__v:bwamemparams] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():4:101
    # Var: $int v:PBSCORES RENAMED [$int:__v:PBSCORES] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():4:101
    # Var: $string v:rgheader RENAMED [$string:__v:rgheader] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():4:101
    # Var: $string v:INDEX RENAMED [$string:__v:INDEX] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():4:101
    # Var: $string v:read1 RENAMED [$string:__v:read1] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():4:101
    # Var: $string v:read2 RENAMED [$string:__v:read2] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():4:101
    # Var: $string v:__filename:output RENAMED [$string:__v:__filename:output] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():4:101
    # Var: $string v:__filename:outLog RENAMED [$string:__v:__filename:outLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():4:101
    # Var: $file v:output RENAMED [$file:__v:output] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():4:101
    # Var: $file v:outLog RENAMED [$file:__v:outLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():4:101
    # Var: $int v:t RENAMED [$int:__v:t]
    # Var: $string v:t:14:1 VALUE_OF [string:__t:14:1]
    # Var: $string v:endmsg:1 VALUE_OF [string:endmsg]
    # Var: $string v:t:17:1 VALUE_OF [string:__t:17:1]
    set v:bwaexe [ turbine::retrieve_string ${t:76} CACHED 1 ]
    set v:bwamemparams [ turbine::unpack_args ${t:82} 1 string ]
    set v:PBSCORES [ turbine::retrieve_integer ${u:threads} CACHED 1 ]
    set v:rgheader [ turbine::retrieve_string ${u:rgheader} CACHED 1 ]
    set v:INDEX [ turbine::retrieve_string ${t:80} CACHED 1 ]
    set v:read1 [ turbine::retrieve_string ${a:t:78} ]
    set v:read2 [ turbine::retrieve_string ${a:t:79} CACHED 2 ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    set v:__filename:outLog [ turbine::retrieve_string ${t:11} CACHED 1 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    set tcltmp:init_rc 2
    set v:outLog [ turbine::create_local_file_ref ${v:__filename:outLog} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:bwaexe "mem" "-M" {*}${v:bwamemparams} "-t" ${v:PBSCORES} "-R" ${v:rgheader} ${v:INDEX} ${v:read1} ${v:read2} [ dict create "stdout" ${v:__filename:output} "stderr" ${v:__filename:outLog} ] ]
    turbine::exec_external ${v:bwaexe} [ dict create "stdout" ${v:__filename:output} "stderr" ${v:__filename:outLog} ] "mem" "-M" {*}${v:bwamemparams} "-t" ${v:PBSCORES} "-R" ${v:rgheader} ${v:INDEX} ${v:read1} ${v:read2}
    turbine::store_file ${u:outputSam} v:output ${v:4}
    turbine::store_file ${u:alignedLog} v:outLog 0
    set v:t [ clock seconds ]
    set v:t:14:1 ${v:t}
    set v:endmsg:1 "${v:sampleName:3}\tALL\tBWAMEM end\t${v:t:14:1}\n"
    set v:t:17:1 "${v:startmsg:1}${v:endmsg:1}"
    set wfilename:tmpalignedLog [ turbine::get_file_path ${u:tmpalignedLog} ]
    turbine::rule [ list ${wfilename:tmpalignedLog} ] [ list alignReads-call_foreign-write ${v:t:17:1} ${wfilename:tmpalignedLog} ${u:tmpalignedLog} ]
    turbine::decr_local_file_refcount v:output
    turbine::decr_local_file_refcount v:outLog
    turbine::read_refcount_decr ${t:82} 1
}


proc alignReads-call_foreign-write { v:t:17:1 wfilename:tmpalignedLog u:tmpalignedLog } {
    # Var: $file v:tmpalignedLog VALUE_OF [file:tmpalignedLog]
    # Var: $string v:__wfilename:tmpalignedLog VALUE_OF [string:__wfilename:tmpalignedLog]
    set v:__wfilename:tmpalignedLog [ turbine::retrieve_string ${wfilename:tmpalignedLog} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:tmpalignedLog [ turbine::create_local_file_ref ${v:__wfilename:tmpalignedLog} ${tcltmp:init_rc} 1 ]
    turbine::file_write_local v:tmpalignedLog ${v:t:17:1}
    turbine::store_file ${u:tmpalignedLog} v:tmpalignedLog 0
}


proc alignReads-async_op-strcat-1 { v:t:6:2 u:sampleName u:startmsg:1 } {
    # Var: $string v:sampleName:5 VALUE_OF [string:sampleName]
    # Var: $string v:startmsg:1:1 VALUE_OF [string:startmsg:1]
    set v:sampleName:5 [ turbine::retrieve_string ${u:sampleName} CACHED 1 ]
    set v:startmsg:1:1 "${v:sampleName:5}\tALL\tNOVOALIGN start\t${v:t:6:2}\n"
    turbine::store_string ${u:startmsg:1} ${v:startmsg:1:1}
}


proc novoalign-app-leaf1 { a:t:87 a:t:88 filename:output:1 t:11 t:85 t:89 v:mapped_output:2 u:alignedLog u:outputSam u:rgheader u:sampleName u:startmsg:1 u:threads u:tmpalignedLog } {
    # Var: $string v:novoalignexe RENAMED [$string:__v:novoalignexe] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():14:99
    # Var: $int v:PBSCORES:1 RENAMED [$int:__v:PBSCORES] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():14:99
    # Var: $string v:INDEX:1 RENAMED [$string:__v:INDEX] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():14:99
    # Var: $string v:read1:1 RENAMED [$string:__v:read1] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():14:99
    # Var: $string v:read2:1 RENAMED [$string:__v:read2] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():14:99
    # Var: $string v:rgheader:1 RENAMED [$string:__v:rgheader] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():14:99
    # Var: $string v:__filename:output:1 RENAMED [$string:__v:__filename:output] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():14:99
    # Var: $string v:__filename:outLog:1 RENAMED [$string:__v:__filename:outLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():14:99
    # Var: $file v:output:1 RENAMED [$file:__v:output] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():14:99
    # Var: $file v:outLog:1 RENAMED [$file:__v:outLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():14:99
    # Var: $boolean v:4:1 RENAMED [$boolean:__v:4] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():14:99
    set v:novoalignexe [ turbine::retrieve_string ${t:85} CACHED 1 ]
    set v:PBSCORES:1 [ turbine::retrieve_integer ${u:threads} CACHED 1 ]
    set v:INDEX:1 [ turbine::retrieve_string ${t:89} CACHED 1 ]
    set v:read1:1 [ turbine::retrieve_string ${a:t:87} ]
    set v:read2:1 [ turbine::retrieve_string ${a:t:88} CACHED 2 ]
    set v:rgheader:1 [ turbine::retrieve_string ${u:rgheader} CACHED 1 ]
    set v:__filename:output:1 [ turbine::retrieve_string ${filename:output:1} CACHED 1 ]
    set v:__filename:outLog:1 [ turbine::retrieve_string ${t:11} CACHED 1 ]
    if { ${v:mapped_output:2} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output:1 [ turbine::create_local_file_ref ${v:__filename:output:1} ${tcltmp:init_rc} ${v:mapped_output:2} ]
    set tcltmp:init_rc 2
    set v:outLog:1 [ turbine::create_local_file_ref ${v:__filename:outLog:1} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:novoalignexe "-c" ${v:PBSCORES:1} "-d" ${v:INDEX:1} "-f" ${v:read1:1} ${v:read2:1} "-o" "SAM" ${v:rgheader:1} [ dict create "stdout" ${v:__filename:output:1} "stderr" ${v:__filename:outLog:1} ] ]
    turbine::exec_external ${v:novoalignexe} [ dict create "stdout" ${v:__filename:output:1} "stderr" ${v:__filename:outLog:1} ] "-c" ${v:PBSCORES:1} "-d" ${v:INDEX:1} "-f" ${v:read1:1} ${v:read2:1} "-o" "SAM" ${v:rgheader:1}
    set v:4:1 [ expr { ! ${v:mapped_output:2} } ]
    turbine::store_file ${u:outputSam} v:output:1 ${v:4:1}
    turbine::store_file ${u:alignedLog} v:outLog:1 0
    turbine::rule [ list ${u:sampleName} ${u:startmsg:1} ] "novoalign_logged-chain1 {${u:sampleName}} ${u:startmsg:1} {${u:tmpalignedLog}}"
    turbine::decr_local_file_refcount v:output:1
    turbine::decr_local_file_refcount v:outLog:1
}


proc novoalign_logged-chain1 { u:sampleName u:startmsg:1 u:tmpalignedLog } {
    # Var: $int v:t:2 RENAMED [$int:__v:t]
    # Var: $string v:t:14:2 VALUE_OF [string:__t:14:2]
    # Var: $string v:sampleName:6 VALUE_OF [string:sampleName]
    # Var: $string v:endmsg:1:1 VALUE_OF [string:endmsg:1]
    # Var: $string v:startmsg:1:2 VALUE_OF [string:startmsg:1]
    # Var: $string v:t:17:2 VALUE_OF [string:__t:17:2]
    set v:t:2 [ clock seconds ]
    set v:t:14:2 ${v:t:2}
    set v:sampleName:6 [ turbine::retrieve_string ${u:sampleName} CACHED 1 ]
    set v:endmsg:1:1 "${v:sampleName:6}\tALL\tNOVOALIGN end\t${v:t:14:2}\n"
    set wfilename:tmpalignedLog:1 [ turbine::get_file_path ${u:tmpalignedLog} ]
    set v:startmsg:1:2 [ turbine::retrieve_string ${u:startmsg:1} CACHED 1 ]
    set v:t:17:2 "${v:startmsg:1:2}${v:endmsg:1:1}"
    turbine::rule [ list ${wfilename:tmpalignedLog:1} ] [ list alignReads-call_foreign-write-1 ${v:t:17:2} ${wfilename:tmpalignedLog:1} ${u:tmpalignedLog} ]
}


proc alignReads-call_foreign-write-1 { v:t:17:2 wfilename:tmpalignedLog:1 u:tmpalignedLog } {
    # Var: $file v:tmpalignedLog:1 VALUE_OF [file:tmpalignedLog]
    # Var: $string v:__wfilename:tmpalignedLog:1 VALUE_OF [string:__wfilename:tmpalignedLog:1]
    set v:__wfilename:tmpalignedLog:1 [ turbine::retrieve_string ${wfilename:tmpalignedLog:1} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:tmpalignedLog:1 [ turbine::create_local_file_ref ${v:__wfilename:tmpalignedLog:1} ${tcltmp:init_rc} 1 ]
    turbine::file_write_local v:tmpalignedLog:1 ${v:t:17:2}
    turbine::store_file ${u:tmpalignedLog} v:tmpalignedLog:1 0
}


proc alignReads-async_op-eq_string-1 { t:11 t:95 u:alignedLog u:outputSam u:reads u:rgheader u:sampleName u:threads u:tmpalignedLog u:vars } {
    # Var: $string v:t:95 VALUE_OF [string:__t:95]
    # Var: $boolean v:t:94 VALUE_OF [boolean:__t:94]
    set v:t:95 [ turbine::retrieve_string ${t:95} CACHED 1 ]
    set v:t:94 [ string equal ${v:t:95} "BWAMEM" ]
    if { ${v:t:94} } {
        # Var: string t:98 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():123:57
        # Var: string t:101 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():123:83
        # Var: string[int] t:103 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():124:10
        # Var: string t:104 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():124:10
        # Var: $int v:t:5 RENAMED [$int:__v:t]
        # Var: $string v:t:6:3 VALUE_OF [string:__t:6:3]
        lassign [ adlb::multicreate [ list string 1 1 126 ] [ list string 1 1 127 ] [ list container integer string 1 1 128 ] [ list string 1 1 129 ] ] t:98 t:101 t:103 t:104
        turbine::c::log "allocated t:98=<${t:98}> t:101=<${t:101}> t:103=<${t:103}> t:104=<${t:104}>"
        turbine::container_reference ${u:vars} "BWAEXE" ${t:98} string
        set a:t:100 [ adlb::subscript_container ${u:reads} 0 ]
        turbine::container_reference ${u:vars} "BWAINDEX" ${t:101} string
        turbine::container_reference ${u:vars} "BWAMEMPARAMS" ${t:104} string
        set v:t:5 [ clock seconds ]
        set v:t:6:3 ${v:t:5}
        turbine::rule [ list ${t:104} ] "alignReads-arr_copy_in_imm-1 ${t:103} ${t:104}"
        turbine::rule [ list ${u:sampleName} ] [ list alignReads-async_op-strcat-2 ${a:t:100} ${t:101} ${t:103} ${t:11} ${t:98} ${v:t:6:3} ${u:alignedLog} ${u:outputSam} ${u:rgheader} ${u:sampleName} ${u:threads} ${u:tmpalignedLog} ]
    } else {
        # Var: string t:106 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():129:59
        # Var: string t:109 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():130:11
        # Var: string[int] t:111 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():130:36
        # Var: string t:112 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():130:36
        # Var: $int v:t:7 RENAMED [$int:__v:t]
        # Var: $string v:t:6:4 VALUE_OF [string:__t:6:4]
        lassign [ adlb::multicreate [ list string 1 1 130 ] [ list string 1 1 131 ] [ list container integer string 1 1 132 ] [ list string 1 1 133 ] ] t:106 t:109 t:111 t:112
        turbine::c::log "allocated t:106=<${t:106}> t:109=<${t:109}> t:111=<${t:111}> t:112=<${t:112}>"
        turbine::container_reference ${u:vars} "NOVOALIGNEXE" ${t:106} string
        set a:t:108 [ adlb::subscript_container ${u:reads} 0 ]
        turbine::container_reference ${u:vars} "NOVOALIGNINDEX" ${t:109} string
        turbine::container_reference ${u:vars} "NOVOALIGNPARAMS" ${t:112} string
        set v:t:7 [ clock seconds ]
        set v:t:6:4 ${v:t:7}
        turbine::rule [ list ${t:112} ] "alignReads-arr_copy_in_imm-2 ${t:111} ${t:112}"
        turbine::rule [ list ${u:sampleName} ] [ list alignReads-async_op-strcat-3 ${a:t:108} ${t:106} ${t:109} ${t:11} ${t:111} ${v:t:6:4} ${u:alignedLog} ${u:outputSam} ${u:rgheader} ${u:sampleName} ${u:threads} ${u:tmpalignedLog} ]
    }
    turbine::file_read_refcount_decr ${u:outputSam} 1
    turbine::read_refcount_decr ${u:sampleName} 1
    turbine::file_read_refcount_decr ${u:tmpalignedLog} 1
    turbine::read_refcount_decr ${u:threads} 1
    turbine::read_refcount_decr ${t:11} 1
    turbine::read_refcount_decr ${u:reads} 1
    turbine::read_refcount_decr ${u:vars} 1
    turbine::read_refcount_decr ${u:rgheader} 1
}


proc alignReads-arr_copy_in_imm-1 { t:103 t:104 } {
    # Var: $string v:t:104 VALUE_OF [string:__t:104]
    set v:t:104 [ turbine::retrieve_string ${t:104} CACHED 1 ]
    turbine::array_kv_build ${t:103} [ ::adlb::dict_create 0 ${v:t:104} ] 1 integer string
}


proc alignReads-async_op-strcat-2 { a:t:100 t:101 t:103 t:11 t:98 v:t:6:3 u:alignedLog u:outputSam u:rgheader u:sampleName u:threads u:tmpalignedLog } {
    # Var: $string v:sampleName:7 VALUE_OF [string:sampleName]
    # Var: $string v:startmsg:2:1 VALUE_OF [string:startmsg:2]
    # Var: $boolean v:mapped_output:3 RENAMED [$boolean:__v:mapped_output]
    # Var: $boolean v:4:2 RENAMED [$boolean:__v:4] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():9:95
    set v:sampleName:7 [ turbine::retrieve_string ${u:sampleName} CACHED 1 ]
    set v:startmsg:2:1 "${v:sampleName:7}\tALL\tBWAMEM start\t${v:t:6:3}\n"
    set v:mapped_output:3 [ turbine::is_file_mapped ${u:outputSam} ]
    set filename:output:2 [ turbine::get_file_path ${u:outputSam} ]
    if { ${v:mapped_output:3} } {
    } else {
        # Var: $string optf:output:2 RENAMED [$string:__of:output]
        set optf:output:2 [ turbine::mktemp ]
        turbine::set_filename_val ${u:outputSam} ${optf:output:2}
    }
    set v:4:2 [ expr { ! ${v:mapped_output:3} } ]
    turbine::rule [ list ${a:t:100} ${filename:output:2} ${t:101} ${t:103} ${t:11} ${t:98} ${u:rgheader} ${u:threads} ] [ list bwa_mem-app-leaf1-1 ${a:t:100} ${filename:output:2} ${t:101} ${t:103} ${t:11} ${t:98} ${v:4:2} ${v:mapped_output:3} ${v:sampleName:7} ${v:startmsg:2:1} ${u:alignedLog} ${u:outputSam} ${u:rgheader} ${u:threads} ${u:tmpalignedLog} ]
}


proc bwa_mem-app-leaf1-1 { a:t:100 filename:output:2 t:101 t:103 t:11 t:98 v:4:2 v:mapped_output:3 v:sampleName:7 v:startmsg:2:1 u:alignedLog u:outputSam u:rgheader u:threads u:tmpalignedLog } {
    # Var: $string v:bwaexe:1 RENAMED [$string:__v:bwaexe] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():9:95
    # Var: $string$[int] v:bwamemparams:1 RENAMED [$string$[int]:__v:bwamemparams] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():9:95
    # Var: $int v:PBSCORES:2 RENAMED [$int:__v:PBSCORES] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():9:95
    # Var: $string v:rgheader:2 RENAMED [$string:__v:rgheader] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():9:95
    # Var: $string v:INDEX:2 RENAMED [$string:__v:INDEX] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():9:95
    # Var: $string v:read1:2 RENAMED [$string:__v:read1] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():9:95
    # Var: $string v:__filename:output:2 RENAMED [$string:__v:__filename:output] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():9:95
    # Var: $string v:__filename:outLog:2 RENAMED [$string:__v:__filename:outLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():9:95
    # Var: $file v:output:2 RENAMED [$file:__v:output] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():9:95
    # Var: $file v:outLog:2 RENAMED [$file:__v:outLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():9:95
    # Var: $int v:t:4 RENAMED [$int:__v:t]
    # Var: $string v:t:14:3 VALUE_OF [string:__t:14:3]
    # Var: $string v:endmsg:2:1 VALUE_OF [string:endmsg:2]
    # Var: $string v:t:17:3 VALUE_OF [string:__t:17:3]
    set v:bwaexe:1 [ turbine::retrieve_string ${t:98} CACHED 1 ]
    set v:bwamemparams:1 [ turbine::unpack_args ${t:103} 1 string ]
    set v:PBSCORES:2 [ turbine::retrieve_integer ${u:threads} CACHED 1 ]
    set v:rgheader:2 [ turbine::retrieve_string ${u:rgheader} CACHED 1 ]
    set v:INDEX:2 [ turbine::retrieve_string ${t:101} CACHED 1 ]
    set v:read1:2 [ turbine::retrieve_string ${a:t:100} CACHED 1 ]
    set v:__filename:output:2 [ turbine::retrieve_string ${filename:output:2} CACHED 1 ]
    set v:__filename:outLog:2 [ turbine::retrieve_string ${t:11} CACHED 1 ]
    if { ${v:mapped_output:3} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output:2 [ turbine::create_local_file_ref ${v:__filename:output:2} ${tcltmp:init_rc} ${v:mapped_output:3} ]
    set tcltmp:init_rc 2
    set v:outLog:2 [ turbine::create_local_file_ref ${v:__filename:outLog:2} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:bwaexe:1 "mem" "-M" {*}${v:bwamemparams:1} "-t" ${v:PBSCORES:2} "-R" ${v:rgheader:2} ${v:INDEX:2} ${v:read1:2} [ dict create "stdout" ${v:__filename:output:2} "stderr" ${v:__filename:outLog:2} ] ]
    turbine::exec_external ${v:bwaexe:1} [ dict create "stdout" ${v:__filename:output:2} "stderr" ${v:__filename:outLog:2} ] "mem" "-M" {*}${v:bwamemparams:1} "-t" ${v:PBSCORES:2} "-R" ${v:rgheader:2} ${v:INDEX:2} ${v:read1:2}
    turbine::store_file ${u:outputSam} v:output:2 ${v:4:2}
    turbine::store_file ${u:alignedLog} v:outLog:2 0
    set v:t:4 [ clock seconds ]
    set v:t:14:3 ${v:t:4}
    set v:endmsg:2:1 "${v:sampleName:7}\tALL\tBWAMEM end\t${v:t:14:3}\n"
    set v:t:17:3 "${v:startmsg:2:1}${v:endmsg:2:1}"
    set wfilename:tmpalignedLog:2 [ turbine::get_file_path ${u:tmpalignedLog} ]
    turbine::rule [ list ${wfilename:tmpalignedLog:2} ] [ list alignReads-call_foreign-write-2 ${v:t:17:3} ${wfilename:tmpalignedLog:2} ${u:tmpalignedLog} ]
    turbine::decr_local_file_refcount v:output:2
    turbine::decr_local_file_refcount v:outLog:2
    turbine::read_refcount_decr ${t:103} 1
}


proc alignReads-call_foreign-write-2 { v:t:17:3 wfilename:tmpalignedLog:2 u:tmpalignedLog } {
    # Var: $file v:tmpalignedLog:2 VALUE_OF [file:tmpalignedLog]
    # Var: $string v:__wfilename:tmpalignedLog:2 VALUE_OF [string:__wfilename:tmpalignedLog:2]
    set v:__wfilename:tmpalignedLog:2 [ turbine::retrieve_string ${wfilename:tmpalignedLog:2} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:tmpalignedLog:2 [ turbine::create_local_file_ref ${v:__wfilename:tmpalignedLog:2} ${tcltmp:init_rc} 1 ]
    turbine::file_write_local v:tmpalignedLog:2 ${v:t:17:3}
    turbine::store_file ${u:tmpalignedLog} v:tmpalignedLog:2 0
}


proc alignReads-arr_copy_in_imm-2 { t:111 t:112 } {
    # Var: $string v:t:112 VALUE_OF [string:__t:112]
    set v:t:112 [ turbine::retrieve_string ${t:112} CACHED 1 ]
    turbine::array_kv_build ${t:111} [ ::adlb::dict_create 0 ${v:t:112} ] 1 integer string
}


proc alignReads-async_op-strcat-3 { a:t:108 t:106 t:109 t:11 t:111 v:t:6:4 u:alignedLog u:outputSam u:rgheader u:sampleName u:threads u:tmpalignedLog } {
    # Var: $string v:sampleName:9 VALUE_OF [string:sampleName]
    # Var: $string v:startmsg:3:1 VALUE_OF [string:startmsg:3]
    # Var: $boolean v:mapped_output:4 RENAMED [$boolean:__v:mapped_output]
    set v:sampleName:9 [ turbine::retrieve_string ${u:sampleName} CACHED 1 ]
    set v:startmsg:3:1 "${v:sampleName:9}\tALL\tNOVOALIGN start\t${v:t:6:4}\n"
    set v:mapped_output:4 [ turbine::is_file_mapped ${u:outputSam} ]
    set filename:output:3 [ turbine::get_file_path ${u:outputSam} ]
    if { ${v:mapped_output:4} } {
    } else {
        # Var: $string optf:output:3 RENAMED [$string:__of:output]
        set optf:output:3 [ turbine::mktemp ]
        turbine::set_filename_val ${u:outputSam} ${optf:output:3}
    }
    turbine::rule [ list ${a:t:108} ${filename:output:3} ${t:106} ${t:109} ${t:11} ${t:111} ${u:rgheader} ${u:threads} ] [ list novoalign-app-leaf1-1 ${a:t:108} ${filename:output:3} ${t:106} ${t:109} ${t:11} ${t:111} ${v:mapped_output:4} ${v:sampleName:9} ${v:startmsg:3:1} ${u:alignedLog} ${u:outputSam} ${u:rgheader} ${u:threads} ${u:tmpalignedLog} ]
}


proc novoalign-app-leaf1-1 { a:t:108 filename:output:3 t:106 t:109 t:11 t:111 v:mapped_output:4 v:sampleName:9 v:startmsg:3:1 u:alignedLog u:outputSam u:rgheader u:threads u:tmpalignedLog } {
    # Var: $string v:novoalignexe:1 RENAMED [$string:__v:novoalignexe] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():19:100
    # Var: $int v:PBSCORES:3 RENAMED [$int:__v:PBSCORES] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():19:100
    # Var: $string v:INDEX:3 RENAMED [$string:__v:INDEX] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():19:100
    # Var: $string v:read1:3 RENAMED [$string:__v:read1] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():19:100
    # Var: $string v:rgheader:3 RENAMED [$string:__v:rgheader] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():19:100
    # Var: $string v:__filename:output:3 RENAMED [$string:__v:__filename:output] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():19:100
    # Var: $string v:__filename:outLog:3 RENAMED [$string:__v:__filename:outLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():19:100
    # Var: $file v:output:3 RENAMED [$file:__v:output] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():19:100
    # Var: $file v:outLog:3 RENAMED [$file:__v:outLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():19:100
    # Var: $boolean v:4:3 RENAMED [$boolean:__v:4] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():19:100
    # Var: $int v:t:6 RENAMED [$int:__v:t]
    # Var: $string v:t:14:4 VALUE_OF [string:__t:14:4]
    # Var: $string v:endmsg:3:1 VALUE_OF [string:endmsg:3]
    # Var: $string v:t:17:4 VALUE_OF [string:__t:17:4]
    set v:novoalignexe:1 [ turbine::retrieve_string ${t:106} CACHED 1 ]
    set v:PBSCORES:3 [ turbine::retrieve_integer ${u:threads} CACHED 1 ]
    set v:INDEX:3 [ turbine::retrieve_string ${t:109} CACHED 1 ]
    set v:read1:3 [ turbine::retrieve_string ${a:t:108} CACHED 1 ]
    set v:rgheader:3 [ turbine::retrieve_string ${u:rgheader} CACHED 1 ]
    set v:__filename:output:3 [ turbine::retrieve_string ${filename:output:3} CACHED 1 ]
    set v:__filename:outLog:3 [ turbine::retrieve_string ${t:11} CACHED 1 ]
    if { ${v:mapped_output:4} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output:3 [ turbine::create_local_file_ref ${v:__filename:output:3} ${tcltmp:init_rc} ${v:mapped_output:4} ]
    set tcltmp:init_rc 2
    set v:outLog:3 [ turbine::create_local_file_ref ${v:__filename:outLog:3} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:novoalignexe:1 "-c" ${v:PBSCORES:3} "-d" ${v:INDEX:3} "-f" ${v:read1:3} "-o" "SAM" ${v:rgheader:3} [ dict create "stdout" ${v:__filename:output:3} "stderr" ${v:__filename:outLog:3} ] ]
    turbine::exec_external ${v:novoalignexe:1} [ dict create "stdout" ${v:__filename:output:3} "stderr" ${v:__filename:outLog:3} ] "-c" ${v:PBSCORES:3} "-d" ${v:INDEX:3} "-f" ${v:read1:3} "-o" "SAM" ${v:rgheader:3}
    set v:4:3 [ expr { ! ${v:mapped_output:4} } ]
    turbine::store_file ${u:outputSam} v:output:3 ${v:4:3}
    turbine::store_file ${u:alignedLog} v:outLog:3 0
    set v:t:6 [ clock seconds ]
    set v:t:14:4 ${v:t:6}
    set v:endmsg:3:1 "${v:sampleName:9}\tALL\tNOVOALIGN end\t${v:t:14:4}\n"
    set v:t:17:4 "${v:startmsg:3:1}${v:endmsg:3:1}"
    set wfilename:tmpalignedLog:3 [ turbine::get_file_path ${u:tmpalignedLog} ]
    turbine::rule [ list ${wfilename:tmpalignedLog:3} ] [ list alignReads-call_foreign-write-3 ${v:t:17:4} ${wfilename:tmpalignedLog:3} ${u:tmpalignedLog} ]
    turbine::decr_local_file_refcount v:output:3
    turbine::decr_local_file_refcount v:outLog:3
    turbine::read_refcount_decr ${t:111} 1
}


proc alignReads-call_foreign-write-3 { v:t:17:4 wfilename:tmpalignedLog:3 u:tmpalignedLog } {
    # Var: $file v:tmpalignedLog:3 VALUE_OF [file:tmpalignedLog]
    # Var: $string v:__wfilename:tmpalignedLog:3 VALUE_OF [string:__wfilename:tmpalignedLog:3]
    set v:__wfilename:tmpalignedLog:3 [ turbine::retrieve_string ${wfilename:tmpalignedLog:3} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:tmpalignedLog:3 [ turbine::create_local_file_ref ${v:__wfilename:tmpalignedLog:3} ${tcltmp:init_rc} 1 ]
    turbine::file_write_local v:tmpalignedLog:3 ${v:t:17:4}
    turbine::store_file ${u:tmpalignedLog} v:tmpalignedLog:3 0
}


proc alignReads-optmerged-1 { t:11 t:13 t:7 u:alignedLog u:sampleName u:tmpalignedLog } {
    turbine::rule [ list ${t:7} ] "alignReads-async_op-strcat-4 ${t:11} ${t:7} {${u:alignedLog}} {${u:sampleName}}"
    turbine::rule [ list ${t:13} ] "alignReads-async_op-strcat-5 ${t:13} {${u:sampleName}} {${u:tmpalignedLog}}"
}


proc alignReads-async_op-strcat-4 { t:11 t:7 u:alignedLog u:sampleName } {
    # Var: $string v:t:7:1 VALUE_OF [string:__t:7]
    # Var: $string v:sampleName VALUE_OF [string:sampleName]
    # Var: $string v:LogDir VALUE_OF [string:LogDir]
    # Var: $string v:t:11 VALUE_OF [string:__t:11]
    set v:t:7:1 [ turbine::retrieve_string ${t:7} CACHED 1 ]
    set v:sampleName [ turbine::retrieve_string ${u:sampleName} CACHED 1 ]
    set v:LogDir "${v:t:7:1}/${v:sampleName}/logs/"
    set v:t:11 "${v:LogDir}${v:sampleName}_Alignment.log"
    turbine::store_string ${t:11} ${v:t:11}
    turbine::set_filename_val ${u:alignedLog} ${v:t:11}
}


proc alignReads-async_op-strcat-5 { t:13 u:sampleName u:tmpalignedLog } {
    # Var: $string v:t:13 VALUE_OF [string:__t:13]
    # Var: $string v:tmpLogDir VALUE_OF [string:tmpLogDir]
    # Var: $string v:sampleName:2 VALUE_OF [string:sampleName]
    # Var: $string v:t:16 VALUE_OF [string:__t:16]
    set v:t:13 [ turbine::retrieve_string ${t:13} CACHED 1 ]
    set v:tmpLogDir "${v:t:13}/timinglogs/"
    set v:sampleName:2 [ turbine::retrieve_string ${u:sampleName} CACHED 1 ]
    set v:t:16 "${v:tmpLogDir}${v:sampleName:2}_Alignment.log"
    turbine::set_filename_val ${u:tmpalignedLog} ${v:t:16}
}


proc f:samtools_view_logged { u:output u:tmptimeLog u:samtoolsexe u:inputFile u:thr u:args u:sampleName } {
    turbine::c::log "function: samtools_view_logged"
    # Var: $int v:t:1 RENAMED [$int:__v:t]
    # Var: $string v:t:6 VALUE_OF [string:__t:6]
    turbine::file_read_refcount_incr ${u:inputFile} 1
    set v:t:1 [ clock seconds ]
    set v:t:6 ${v:t:1}
    turbine::rule [ list ${u:sampleName} ] [ list samtools_view_logged-async_op-strcat ${v:t:6} ${u:args} ${u:inputFile} ${u:output} ${u:sampleName} ${u:samtoolsexe} ${u:thr} ${u:tmptimeLog} ]
}


proc samtools_view_logged-async_op-strcat { v:t:6 u:args u:inputFile u:output u:sampleName u:samtoolsexe u:thr u:tmptimeLog } {
    # Var: $string v:sampleName VALUE_OF [string:sampleName]
    # Var: $string v:startmsg:1 VALUE_OF [string:startmsg]
    # Var: $boolean v:mapped_output RENAMED [$boolean:__v:mapped_output]
    set v:sampleName [ turbine::retrieve_string ${u:sampleName} CACHED 1 ]
    set v:startmsg:1 "${v:sampleName}\tALL\tSAMTOOLS_VIEW start\t${v:t:6}\n"
    set filename:inputFile [ turbine::get_file_path ${u:inputFile} ]
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output RENAMED [$string:__of:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${filename:inputFile} ${filename:output} ${u:args} [ turbine::get_file_td ${u:inputFile} ] ${u:samtoolsexe} ${u:thr} ] [ list samtools_view-app-leaf1 ${filename:inputFile} ${filename:output} ${v:mapped_output} ${v:sampleName} ${v:startmsg:1} ${u:args} ${u:inputFile} ${u:output} ${u:samtoolsexe} ${u:thr} ${u:tmptimeLog} ]
}


proc samtools_view-app-leaf1 { filename:inputFile filename:output v:mapped_output v:sampleName v:startmsg:1 u:args u:inputFile u:output u:samtoolsexe u:thr u:tmptimeLog } {
    # Var: $string v:samtoolsexe RENAMED [$string:__v:samtoolsexe] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samtools_view():25:58
    # Var: $int v:thr RENAMED [$int:__v:thr] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samtools_view():25:58
    # Var: $string v:__filename:inputFile RENAMED [$string:__v:__filename:inputFile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samtools_view():25:58
    # Var: $string$[int] v:args RENAMED [$string$[int]:__v:args] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samtools_view():25:58
    # Var: $string v:__filename:output RENAMED [$string:__v:__filename:output] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samtools_view():25:58
    # Var: $file v:inputFile RENAMED [$file:__v:inputFile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samtools_view():25:58
    # Var: $file v:output RENAMED [$file:__v:output] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samtools_view():25:58
    # Var: $boolean v:3 RENAMED [$boolean:__v:3] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samtools_view():25:58
    # Var: $int v:t RENAMED [$int:__v:t]
    # Var: $string v:t:14 VALUE_OF [string:__t:14]
    # Var: $string v:endmsg:1 VALUE_OF [string:endmsg]
    # Var: $string v:t:17 VALUE_OF [string:__t:17]
    # Var: $boolean v:mapped_tmptimeLog OPT_TEMPORARY
    set v:samtoolsexe [ turbine::retrieve_string ${u:samtoolsexe} CACHED 1 ]
    set v:thr [ turbine::retrieve_integer ${u:thr} CACHED 1 ]
    set v:__filename:inputFile [ turbine::retrieve_string ${filename:inputFile} ]
    set v:args [ turbine::unpack_args ${u:args} 1 string ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    set v:inputFile [ turbine::retrieve_file ${u:inputFile} CACHED 2 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: __v:samtoolsexe "view" "-@" ${v:thr} "-bS" ${v:__filename:inputFile} {*}${v:args} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external ${v:samtoolsexe} [ dict create "stdout" ${v:__filename:output} ] "view" "-@" ${v:thr} "-bS" ${v:__filename:inputFile} {*}${v:args}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    set v:t [ clock seconds ]
    set v:t:14 ${v:t}
    set v:endmsg:1 "${v:sampleName}\tALL\tSAMTOOLS_VIEW end\t${v:t:14}\n"
    set v:t:17 "${v:startmsg:1}${v:endmsg:1}"
    set v:mapped_tmptimeLog [ turbine::is_file_mapped ${u:tmptimeLog} ]
    set wfilename:tmptimeLog [ turbine::get_file_path ${u:tmptimeLog} ]
    if { ${v:mapped_tmptimeLog} } {
    } else {
        # Var: $string optf:tmptimeLog FILENAME_OF [file:tmptimeLog]
        set optf:tmptimeLog [ turbine::mktemp ]
        turbine::set_filename_val ${u:tmptimeLog} ${optf:tmptimeLog}
    }
    turbine::rule [ list ${wfilename:tmptimeLog} ] [ list samtools_view_logged-call_foreign-write ${v:mapped_tmptimeLog} ${v:t:17} ${wfilename:tmptimeLog} ${u:tmptimeLog} ]
    turbine::decr_local_file_refcount v:output
    turbine::read_refcount_decr ${u:args} 1
}


proc samtools_view_logged-call_foreign-write { v:mapped_tmptimeLog v:t:17 wfilename:tmptimeLog u:tmptimeLog } {
    # Var: $file v:tmptimeLog VALUE_OF [file:tmptimeLog]
    # Var: $string v:__wfilename:tmptimeLog VALUE_OF [string:__wfilename:tmptimeLog]
    set v:__wfilename:tmptimeLog [ turbine::retrieve_string ${wfilename:tmptimeLog} CACHED 1 ]
    if { ${v:mapped_tmptimeLog} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:tmptimeLog [ turbine::create_local_file_ref ${v:__wfilename:tmptimeLog} ${tcltmp:init_rc} ${v:mapped_tmptimeLog} ]
    turbine::file_write_local v:tmptimeLog ${v:t:17}
    turbine::store_file ${u:tmptimeLog} v:tmptimeLog 0
    turbine::decr_local_file_refcount v:tmptimeLog
}


proc f:novosort_logged { u:output u:outLog u:tmptimeLog u:novosortexe u:inputFile u:tmpdir u:thr u:sortoptions u:memFlag u:sampleName } {
    turbine::c::log "function: novosort_logged"
    # Var: $int v:t:1 RENAMED [$int:__v:t]
    # Var: $string v:t:6 VALUE_OF [string:__t:6]
    turbine::file_read_refcount_incr ${u:inputFile} 1
    set v:t:1 [ clock seconds ]
    set v:t:6 ${v:t:1}
    turbine::rule [ list ${u:sampleName} ] [ list novosort_logged-async_op-strcat ${v:t:6} ${u:inputFile} ${u:memFlag} ${u:novosortexe} ${u:outLog} ${u:output} ${u:sampleName} ${u:sortoptions} ${u:thr} ${u:tmpdir} ${u:tmptimeLog} ]
}


proc novosort_logged-async_op-strcat { v:t:6 u:inputFile u:memFlag u:novosortexe u:outLog u:output u:sampleName u:sortoptions u:thr u:tmpdir u:tmptimeLog } {
    # Var: $string v:sampleName VALUE_OF [string:sampleName]
    # Var: $string v:startmsg:1 VALUE_OF [string:startmsg]
    # Var: $boolean v:mapped_output RENAMED [$boolean:__v:mapped_output]
    # Var: $boolean v:mapped_outLog RENAMED [$boolean:__v:mapped_outLog]
    set v:sampleName [ turbine::retrieve_string ${u:sampleName} CACHED 1 ]
    set v:startmsg:1 "${v:sampleName}\tALL\tNOVOSORT start\t${v:t:6}\n"
    set filename:inputFile [ turbine::get_file_path ${u:inputFile} ]
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output RENAMED [$string:__of:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    set v:mapped_outLog [ turbine::is_file_mapped ${u:outLog} ]
    set filename:outLog [ turbine::get_file_path ${u:outLog} ]
    if { ${v:mapped_outLog} } {
    } else {
        # Var: $string optf:outLog RENAMED [$string:__of:outLog]
        set optf:outLog [ turbine::mktemp ]
        turbine::set_filename_val ${u:outLog} ${optf:outLog}
    }
    turbine::rule [ list ${filename:inputFile} ${filename:outLog} ${filename:output} [ turbine::get_file_td ${u:inputFile} ] ${u:memFlag} ${u:novosortexe} ${u:sortoptions} ${u:thr} ${u:tmpdir} ] [ list novosort-app-leaf1 ${filename:inputFile} ${filename:outLog} ${filename:output} ${v:mapped_outLog} ${v:mapped_output} ${v:sampleName} ${v:startmsg:1} ${u:inputFile} ${u:memFlag} ${u:novosortexe} ${u:outLog} ${u:output} ${u:sortoptions} ${u:thr} ${u:tmpdir} ${u:tmptimeLog} ]
}


proc novosort-app-leaf1 { filename:inputFile filename:outLog filename:output v:mapped_outLog v:mapped_output v:sampleName v:startmsg:1 u:inputFile u:memFlag u:novosortexe u:outLog u:output u:sortoptions u:thr u:tmpdir u:tmptimeLog } {
    # Var: $string v:novosortexe RENAMED [$string:__v:novosortexe] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novosort():43:112
    # Var: $int v:memFlag RENAMED [$int:__v:memFlag] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novosort():43:112
    # Var: $string v:tmpdir RENAMED [$string:__v:tmpdir] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novosort():43:112
    # Var: $int v:thr RENAMED [$int:__v:thr] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novosort():43:112
    # Var: $string v:__filename:inputFile RENAMED [$string:__v:__filename:inputFile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novosort():43:112
    # Var: $string v:__filename:output RENAMED [$string:__v:__filename:output] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novosort():43:112
    # Var: $string$[int] v:sortoptions RENAMED [$string$[int]:__v:sortoptions] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novosort():43:112
    # Var: $string v:__filename:outLog RENAMED [$string:__v:__filename:outLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novosort():43:112
    # Var: $file v:inputFile RENAMED [$file:__v:inputFile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novosort():43:112
    # Var: $file v:output RENAMED [$file:__v:output] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novosort():43:112
    # Var: $file v:outLog RENAMED [$file:__v:outLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novosort():43:112
    # Var: $boolean v:4 RENAMED [$boolean:__v:4] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novosort():43:112
    # Var: $boolean v:6 RENAMED [$boolean:__v:6] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novosort():43:112
    # Var: $int v:t RENAMED [$int:__v:t]
    # Var: $string v:t:14 VALUE_OF [string:__t:14]
    # Var: $string v:endmsg:1 VALUE_OF [string:endmsg]
    # Var: $string v:t:17 VALUE_OF [string:__t:17]
    # Var: $boolean v:mapped_tmptimeLog OPT_TEMPORARY
    set v:novosortexe [ turbine::retrieve_string ${u:novosortexe} CACHED 1 ]
    set v:memFlag [ turbine::retrieve_integer ${u:memFlag} CACHED 1 ]
    set v:tmpdir [ turbine::retrieve_string ${u:tmpdir} CACHED 1 ]
    set v:thr [ turbine::retrieve_integer ${u:thr} CACHED 1 ]
    set v:__filename:inputFile [ turbine::retrieve_string ${filename:inputFile} ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    set v:sortoptions [ turbine::unpack_args ${u:sortoptions} 1 string ]
    set v:__filename:outLog [ turbine::retrieve_string ${filename:outLog} CACHED 1 ]
    set v:inputFile [ turbine::retrieve_file ${u:inputFile} CACHED 2 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    if { ${v:mapped_outLog} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:outLog [ turbine::create_local_file_ref ${v:__filename:outLog} ${tcltmp:init_rc} ${v:mapped_outLog} ]
    turbine::c::log [ list exec: __v:novosortexe "--index" "-m" ${v:memFlag} "--tmpdir" ${v:tmpdir} "--threads" ${v:thr} ${v:__filename:inputFile} "-o" ${v:__filename:output} {*}${v:sortoptions} [ dict create "stderr" ${v:__filename:outLog} ] ]
    turbine::exec_external ${v:novosortexe} [ dict create "stderr" ${v:__filename:outLog} ] "--index" "-m" ${v:memFlag} "--tmpdir" ${v:tmpdir} "--threads" ${v:thr} ${v:__filename:inputFile} "-o" ${v:__filename:output} {*}${v:sortoptions}
    set v:4 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:4}
    set v:6 [ expr { ! ${v:mapped_outLog} } ]
    turbine::store_file ${u:outLog} v:outLog ${v:6}
    set v:t [ clock seconds ]
    set v:t:14 ${v:t}
    set v:endmsg:1 "${v:sampleName}\tALL\tNOVOSORT end\t${v:t:14}\n"
    set v:t:17 "${v:startmsg:1}${v:endmsg:1}"
    set v:mapped_tmptimeLog [ turbine::is_file_mapped ${u:tmptimeLog} ]
    set wfilename:tmptimeLog [ turbine::get_file_path ${u:tmptimeLog} ]
    if { ${v:mapped_tmptimeLog} } {
    } else {
        # Var: $string optf:tmptimeLog FILENAME_OF [file:tmptimeLog]
        set optf:tmptimeLog [ turbine::mktemp ]
        turbine::set_filename_val ${u:tmptimeLog} ${optf:tmptimeLog}
    }
    turbine::rule [ list ${wfilename:tmptimeLog} ] [ list novosort_logged-call_foreign-write ${v:mapped_tmptimeLog} ${v:t:17} ${wfilename:tmptimeLog} ${u:tmptimeLog} ]
    turbine::decr_local_file_refcount v:output
    turbine::decr_local_file_refcount v:outLog
    turbine::read_refcount_decr ${u:sortoptions} 1
}


proc novosort_logged-call_foreign-write { v:mapped_tmptimeLog v:t:17 wfilename:tmptimeLog u:tmptimeLog } {
    # Var: $file v:tmptimeLog VALUE_OF [file:tmptimeLog]
    # Var: $string v:__wfilename:tmptimeLog VALUE_OF [string:__wfilename:tmptimeLog]
    set v:__wfilename:tmptimeLog [ turbine::retrieve_string ${wfilename:tmptimeLog} CACHED 1 ]
    if { ${v:mapped_tmptimeLog} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:tmptimeLog [ turbine::create_local_file_ref ${v:__wfilename:tmptimeLog} ${tcltmp:init_rc} ${v:mapped_tmptimeLog} ]
    turbine::file_write_local v:tmptimeLog ${v:t:17}
    turbine::store_file ${u:tmptimeLog} v:tmptimeLog 0
    turbine::decr_local_file_refcount v:tmptimeLog
}

turbine::defaults
turbine::declare_custom_work_types COASTER
turbine::init $servers "Swift"
turbine::enable_read_refcount
adlb::declare_struct_type 16 s:location [ list "rank" integer "strictness" string "accuracy" string ]
turbine::check_constants "WORKER\[WORKER\]" ${turbine::WORK_TASK} 0 "CONTROL" ${turbine::WORK_TASK} 0 "ADLB_RANK_ANY" ${adlb::RANK_ANY} -100
adlb::add_debug_symbol 1 "__t:7" "VariantCalling:78:33"
adlb::add_debug_symbol 2 "__t:10" "VariantCalling:93:25"
adlb::add_debug_symbol 3 "__t:22" "VariantCalling:104:21"
adlb::add_debug_symbol 4 "__t:53" "VariantCalling:125:4"
adlb::add_debug_symbol 5 "variables" "VariantCalling:71:0"
adlb::add_debug_symbol 6 "docSampleInfo" "VariantCalling:105:32"
adlb::add_debug_symbol 7 "failureLog" "VariantCalling:93:49"
adlb::add_debug_symbol 8 "timingLog" "VariantCalling:94:48"
adlb::add_debug_symbol 9 "configFile" "VariantCalling:67:0"
adlb::add_debug_symbol 10 "sampleInfoFile" "VariantCalling:78:0"
adlb::add_debug_symbol 11 "docRunfile" "VariantCalling:101:88"
adlb::add_debug_symbol 12 "alignDedupBams" "VariantCalling:115:0"
adlb::add_debug_symbol 13 "__t:3:1" "AlignAndDedup:alignDedupRun():215:7"
adlb::add_debug_symbol 14 "__t:5:1" "AlignAndDedup:alignDedupRun():215:25"
adlb::add_debug_symbol 15 "__t:7:1" "AlignAndDedup:alignDedupRun():215:67"
adlb::add_debug_symbol 16 "__t:25:1" "AlignAndDedup:alignDedupRun():230:28"
adlb::add_debug_symbol 17 "__t:56:1" "AlignAndDedup:alignDedupRun():237:32"
adlb::add_debug_symbol 18 "__t:60:1" "AlignAndDedup:alignDedupRun():238:32"
adlb::add_debug_symbol 19 "__t:64" "AlignAndDedup:alignDedupRun():239:32"
adlb::add_debug_symbol 20 "__t:68" "AlignAndDedup:alignDedupRun():240:32"
adlb::add_debug_symbol 21 "tmpLogDir" "AlignAndDedup:alignDedupRun():230:2"
adlb::add_debug_symbol 22 "__t:32:1" "AlignAndDedup:alignDedupRun():235:39"
adlb::add_debug_symbol 23 "keyValuePair" "generalfunctions.general:getConfigVariables():43:2"
adlb::add_debug_symbol 24 "sampleInfo" "AlignAndDedup:alignDedupRun():212:2"
adlb::add_debug_symbol 25 "sampleName" "AlignAndDedup:alignDedupRun():213:2"
adlb::add_debug_symbol 26 "rgheader" "AlignAndDedup:alignDedupRun():214:2"
adlb::add_debug_symbol 27 "LogDir" "AlignAndDedup:alignDedupRun():226:2"
adlb::add_debug_symbol 28 "AlignDir" "AlignAndDedup:alignDedupRun():227:2"
adlb::add_debug_symbol 29 "RealignDir" "AlignAndDedup:alignDedupRun():228:2"
adlb::add_debug_symbol 30 "VarcallDir" "AlignAndDedup:alignDedupRun():229:2"
adlb::add_debug_symbol 31 "alignedbam" "AlignAndDedup:alignDedupRun():252:50"
adlb::add_debug_symbol 32 "__t:79" "AlignAndDedup:alignDedupRun():255:21"
adlb::add_debug_symbol 33 "alignedsam" "AlignAndDedup:alignDedupRun():255:67"
adlb::add_debug_symbol 34 "tmpsamtoolsLog" "AlignAndDedup:alignDedupRun():256:55"
adlb::add_debug_symbol 35 "__t:97" "AlignAndDedup:alignDedupRun():261:7"
adlb::add_debug_symbol 36 "threads" "AlignAndDedup:alignDedupRun():285:3"
adlb::add_debug_symbol 37 "__t:141" "AlignAndDedup:alignDedupRun():285:28"
adlb::add_debug_symbol 38 "__t:144" "AlignAndDedup:alignDedupRun():285:66"
adlb::add_debug_symbol 39 "__t:146" "AlignAndDedup:alignDedupRun():286:53"
adlb::add_debug_symbol 40 "__t:148" "AlignAndDedup:alignDedupRun():286:96"
adlb::add_debug_symbol 41 "__t:150" "AlignAndDedup:alignDedupRun():289:8"
adlb::add_debug_symbol 42 "reads" "AlignAndDedup:alignDedupRun():275:4"
adlb::add_debug_symbol 43 "reads:1" "AlignAndDedup:alignDedupRun():280:4"
adlb::add_debug_symbol 44 "dedupsortedbam" "AlignAndDedup:alignDedupRun():295:55"
adlb::add_debug_symbol 45 "__t:153" "AlignAndDedup:alignDedupRun():299:9"
adlb::add_debug_symbol 46 "__t:19:2" "AlignAndDedup:markDuplicates():152:5"
adlb::add_debug_symbol 47 "dedupsam" "AlignAndDedup:markDuplicates():153:64"
adlb::add_debug_symbol 48 "dedupbam" "AlignAndDedup:markDuplicates():154:47"
adlb::add_debug_symbol 49 "__t:29:2" "AlignAndDedup:markDuplicates():155:16"
adlb::add_debug_symbol 50 "samLog" "AlignAndDedup:markDuplicates():155:43"
adlb::add_debug_symbol 51 "sortLog" "AlignAndDedup:markDuplicates():156:44"
adlb::add_debug_symbol 52 "tmpsamblasterLog" "AlignAndDedup:markDuplicates():157:56"
adlb::add_debug_symbol 53 "tmpsamtoolsLog:1" "AlignAndDedup:markDuplicates():158:54"
adlb::add_debug_symbol 54 "tmpnovosortLog" "AlignAndDedup:markDuplicates():159:54"
adlb::add_debug_symbol 55 "__t:39:2" "AlignAndDedup:markDuplicates():162:57"
adlb::add_debug_symbol 56 "__t:46:2" "AlignAndDedup:markDuplicates():168:60"
adlb::add_debug_symbol 57 "__t:50:2" "AlignAndDedup:markDuplicates():169:19"
adlb::add_debug_symbol 58 "__t:53:2" "AlignAndDedup:markDuplicates():169:42"
adlb::add_debug_symbol 59 "__t:54:2" "AlignAndDedup:markDuplicates():169:53"
adlb::add_debug_symbol 60 "metricsfile" "AlignAndDedup:markDuplicates():174:50"
adlb::add_debug_symbol 61 "alignedsortedbam" "AlignAndDedup:markDuplicates():175:55"
adlb::add_debug_symbol 62 "picardLog" "AlignAndDedup:markDuplicates():176:46"
adlb::add_debug_symbol 63 "sortLog:1" "AlignAndDedup:markDuplicates():177:44"
adlb::add_debug_symbol 64 "tmpnovosortLog:1" "AlignAndDedup:markDuplicates():178:54"
adlb::add_debug_symbol 65 "tmppicardLog" "AlignAndDedup:markDuplicates():179:52"
adlb::add_debug_symbol 66 "__t:72:1" "AlignAndDedup:markDuplicates():182:62"
adlb::add_debug_symbol 67 "__t:76:1" "AlignAndDedup:markDuplicates():183:12"
adlb::add_debug_symbol 68 "__t:77:1" "AlignAndDedup:markDuplicates():183:25"
adlb::add_debug_symbol 69 "__t:78:1" "AlignAndDedup:markDuplicates():183:36"
adlb::add_debug_symbol 70 "__t:80:1" "AlignAndDedup:markDuplicates():186:71"
adlb::add_debug_symbol 71 "__t:82:1" "AlignAndDedup:markDuplicates():186:88"
adlb::add_debug_symbol 72 "novoLog" "AlignAndDedup:markDuplicates():191:44"
adlb::add_debug_symbol 73 "tmpnovosortLog:2" "AlignAndDedup:markDuplicates():192:54"
adlb::add_debug_symbol 74 "__t:90:1" "AlignAndDedup:markDuplicates():195:60"
adlb::add_debug_symbol 75 "__t:94:1" "AlignAndDedup:markDuplicates():196:21"
adlb::add_debug_symbol 76 "__t:96:1" "AlignAndDedup:markDuplicates():196:42"
adlb::add_debug_symbol 77 "__t:97:1" "AlignAndDedup:markDuplicates():196:53"
adlb::add_debug_symbol 78 "flagstats" "AlignAndDedup:alignDedupRun():308:74"
adlb::add_debug_symbol 79 "stat" "AlignAndDedup:alignDedupRun():312:5"
adlb::add_debug_symbol 80 "__t:160" "AlignAndDedup:alignDedupRun():313:19"
adlb::add_debug_symbol 81 "__t:163" "AlignAndDedup:alignDedupRun():314:17"
adlb::add_debug_symbol 82 "__t:166" "AlignAndDedup:alignDedupRun():315:16"
adlb::add_debug_symbol 83 "perc_mapped" "AlignAndDedup:alignDedupRun():318:16"
adlb::add_debug_symbol 84 "__t:173" "AlignAndDedup:alignDedupRun():318:43"
adlb::add_debug_symbol 85 "cutoff_info" "AlignAndDedup:alignDedupRun():321:5"
adlb::add_debug_symbol 86 "__t:179" "AlignAndDedup:alignDedupRun():322:35"
adlb::add_debug_symbol 87 "__t:183" "AlignAndDedup:alignDedupRun():324:31"
adlb::add_debug_symbol 88 "__t:187" "AlignAndDedup:alignDedupRun():327:21"
adlb::add_debug_symbol 89 "__t:190" "AlignAndDedup:alignDedupRun():328:22"
adlb::add_debug_symbol 90 "__t:191" "AlignAndDedup:alignDedupRun():328:24"
adlb::add_debug_symbol 91 "m" "AlignAndDedup:alignDedupRun():340:6"
adlb::add_debug_symbol 92 "__t:200" "AlignAndDedup:alignDedupRun():343:6"
adlb::add_debug_symbol 93 "mssg" "AlignAndDedup:alignDedupRun():349:5"
adlb::add_debug_symbol 94 "__t:206" "AlignAndDedup:alignDedupRun():353:5"
adlb::add_debug_symbol 95 "message" "AlignAndDedup:alignDedupRun():359:4"
adlb::add_debug_symbol 96 "__t:212" "AlignAndDedup:alignDedupRun():362:4"
adlb::add_debug_symbol 97 "__t:215" "AlignAndDedup:alignDedupRun():371:4"
adlb::add_debug_symbol 98 "message_string" "AlignAndDedup:alignDedupRun():374:4"
adlb::add_debug_symbol 99 "__t:219" "AlignAndDedup:alignDedupRun():377:4"
adlb::add_debug_symbol 100 "newFile" "generalfunctions.general:append():14:16"
adlb::add_debug_symbol 101 "__t:11" "generalfunctions.general:exitIfFlagGiven():21:5"
adlb::add_debug_symbol 102 "tmplogs" "generalfunctions.general:logging():59:8"
adlb::add_debug_symbol 103 "__t:1" "generalfunctions.general:logging():59:30"
adlb::add_debug_symbol 104 "__t:3" "generalfunctions.general:logging():60:8"
adlb::add_debug_symbol 105 "__t:4" "generalfunctions.general:logging():60:24"
adlb::add_debug_symbol 106 "__t:5" "generalfunctions.general:logging():60:29"
adlb::add_debug_symbol 107 "__t:1" "generalfunctions.general:checkBam():77:32"
adlb::add_debug_symbol 108 "threads" "AlignAndDedup:alignReads():85:1"
adlb::add_debug_symbol 109 "__t:2" "AlignAndDedup:alignReads():85:26"
adlb::add_debug_symbol 110 "__t:5" "AlignAndDedup:alignReads():85:64"
adlb::add_debug_symbol 111 "__t:7" "AlignAndDedup:alignReads():88:24"
adlb::add_debug_symbol 112 "__t:11" "AlignAndDedup:alignReads():89:19"
adlb::add_debug_symbol 113 "alignedLog" "AlignAndDedup:alignReads():89:46"
adlb::add_debug_symbol 114 "__t:13" "AlignAndDedup:alignReads():90:27"
adlb::add_debug_symbol 115 "tmpalignedLog" "AlignAndDedup:alignReads():91:53"
adlb::add_debug_symbol 116 "__t:29" "AlignAndDedup:alignReads():93:5"
adlb::add_debug_symbol 117 "__t:73" "AlignAndDedup:alignReads():106:6"
adlb::add_debug_symbol 118 "__t:76" "AlignAndDedup:alignReads():108:57"
adlb::add_debug_symbol 119 "__t:80" "AlignAndDedup:alignReads():108:93"
adlb::add_debug_symbol 120 "__t:82" "AlignAndDedup:alignReads():109:10"
adlb::add_debug_symbol 121 "__t:83" "AlignAndDedup:alignReads():109:10"
adlb::add_debug_symbol 122 "__t:85" "AlignAndDedup:alignReads():114:59"
adlb::add_debug_symbol 123 "__t:89" "AlignAndDedup:alignReads():115:11"
adlb::add_debug_symbol 124 "startmsg:1" "bioappsLoggingFunctions.align_dedup_logging:novoalign_logged():35:1"
adlb::add_debug_symbol 125 "__t:95" "AlignAndDedup:alignReads():121:6"
adlb::add_debug_symbol 126 "__t:98" "AlignAndDedup:alignReads():123:57"
adlb::add_debug_symbol 127 "__t:101" "AlignAndDedup:alignReads():123:83"
adlb::add_debug_symbol 128 "__t:103" "AlignAndDedup:alignReads():124:10"
adlb::add_debug_symbol 129 "__t:104" "AlignAndDedup:alignReads():124:10"
adlb::add_debug_symbol 130 "__t:106" "AlignAndDedup:alignReads():129:59"
adlb::add_debug_symbol 131 "__t:109" "AlignAndDedup:alignReads():130:11"
adlb::add_debug_symbol 132 "__t:111" "AlignAndDedup:alignReads():130:36"
adlb::add_debug_symbol 133 "__t:112" "AlignAndDedup:alignReads():130:36"
turbine::start swift:main swift:constants
turbine::finalize
