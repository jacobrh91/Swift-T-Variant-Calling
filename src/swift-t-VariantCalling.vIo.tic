
# Generated by stc version 0.7.3
# date                    : 2017/07/10 02:58:23
# Turbine version         : 1.0.0
# Input filename          : /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift
# Output filename         : /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/swift-t-VariantCalling.vIo.tic
# STC home                : /usr/src/swift-t/swift-t-1.2/stc
# Turbine home            : /usr/src/swift-t/swift-t-1.2/turbine
# Compiler settings:
# stc.auto-declare              : true
# stc.c_preprocess              : true
# stc.checkpointing             : true
# stc.compiler-debug            : true
# stc.debugging                 : COMMENTS
# stc.ic.output-file            : 
# stc.input_filename            : /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift
# stc.log.file                  : 
# stc.log.trace                 : false
# stc.must_pass_wait_vars       : true
# stc.opt.algebra               : true
# stc.opt.array-build           : true
# stc.opt.batch-refcounts       : true
# stc.opt.cancel-refcounts      : true
# stc.opt.constant-fold         : true
# stc.opt.controlflow-fusion    : true
# stc.opt.dataflow-op-inline    : true
# stc.opt.dead-code-elim        : true
# stc.opt.demote-globals        : true
# stc.opt.disable-asserts       : false
# stc.opt.expand-loop-threshold-insts: 256
# stc.opt.expand-loop-threshold-iters: 16
# stc.opt.expand-loops          : false
# stc.opt.finalized-var         : true
# stc.opt.flatten-nested        : true
# stc.opt.full-function-inline  : false
# stc.opt.full-unroll           : false
# stc.opt.function-always-inline-threshold: 5
# stc.opt.function-inline       : true
# stc.opt.function-inline-threshold: 50
# stc.opt.function-signature    : true
# stc.opt.hoist                 : true
# stc.opt.hoist-refcounts       : true
# stc.opt.loop-simplify         : true
# stc.opt.max-iterations        : 10
# stc.opt.merge-refcounts       : true
# stc.opt.piggyback-refcounts   : true
# stc.opt.pipeline              : false
# stc.opt.propagate-aliases     : true
# stc.opt.reorder-insts         : false
# stc.opt.shared-constants      : true
# stc.opt.unroll-loop-threshold-insts: 192
# stc.opt.unroll-loop-threshold-iters: 8
# stc.opt.unroll-loops          : true
# stc.opt.value-number          : true
# stc.opt.wait-coalesce         : true
# stc.output_filename           : /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/swift-t-VariantCalling.vIo.tic
# stc.preproc.force-cpp         : false
# stc.preproc.force-gcc         : false
# stc.preprocess_only           : false
# stc.profile                   : false
# stc.refcounting               : true
# stc.rpath                     : /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps
# stc.stc_home                  : /usr/src/swift-t/swift-t-1.2/stc
# stc.turbine.version           : 1.0.0
# stc.turbine_home              : /usr/src/swift-t/swift-t-1.2/turbine
# stc.version                   : 0.7.3

# Metadata:

# rpath entries
lappend auto_path "/home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps"
package require turbine 1.0.0
namespace import turbine::*


proc swift:constants {  } {
    turbine::c::log "function:swift:constants"
    global c:s_-2
    turbine::allocate_custom c:s_-2 string 1 1 1 1
    turbine::store_string ${c:s_-2} ""
    global c:s__vcf-1
    turbine::allocate_custom c:s__vcf-1 string 1 1 2 1
    turbine::store_string ${c:s__vcf-1} "*.vcf"
    global c:s_sknownSite
    turbine::allocate_custom c:s_sknownSite string 1 1 3 1
    turbine::store_string ${c:s_sknownSite} "s/^/--knownSites /g"
    global c:s_sknown_g
    turbine::allocate_custom c:s_sknown_g string 1 1 4 1
    turbine::store_string ${c:s_sknown_g} "s/^/-known /g"
}

package require align 0.2


proc swift:main {  } {
    turbine::c::log "function: __entry"
    # Var: string[string] u:variables /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:70:0
    global u:variables
    # Var: string t:7 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:77:33
    # Var: string t:9 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:92:18
    # Var: string t:10 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:92:25
    # Var: string t:13 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:92:54
    # Var: string t:69 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:120:4
    # Var: string t:81 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:123:4
    # Var: $string v:configFilename VALUE_OF [string:configFilename]
    # Var: file u:docSampleInfo /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:104:32
    # Var: file u:failureLog /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:92:83
    # Var: file u:timingLog /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:93:82
    # Var: file u:configFile /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:66:0
    # Var: file u:sampleInfoFile /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:77:0
    # Var: file u:docRunfile /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:100:109
    # Var: *rw(file)[int] u:alignDedupBams /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:112:0
    # Var: $string v:f RENAMED [$string:__v:f]
    # Var: string t:3:5 RENAMED [string:__t:3] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():204:7
    # Var: string t:5:5 RENAMED [string:__t:5] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():204:25
    # Var: string t:7:5 RENAMED [string:__t:7] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():204:67
    # Var: string t:25:5 RENAMED [string:__t:25] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():219:28
    # Var: boolean t:28:5 RENAMED [boolean:__t:28] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():221:32
    # Var: $file v:configFile:1 VALUE_OF [file:configFile]
    # Var: $file v:configFile:2 VALUE_OF [file:configFile]
    # Var: $string$[int] v:configFileData VALUE_OF [string[int]:configFileData]
    # Var: string u:tmpLogDir:1 RENAMED [string:tmpLogDir] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():219:2
    lassign [ adlb::multicreate [ list string 1 1 5 ] [ list string 1 1 6 ] [ list string 3 1 7 ] [ list string 3 1 8 ] [ list string 1 1 9 ] [ list string 1 1 10 ] [ list container integer file_ref 2 1 17 ] [ list string 1 1 18 ] [ list string 1 1 19 ] [ list string 1 1 20 ] [ list string 5 1 21 ] [ list integer 1 1 22 ] [ list string 2 1 23 ] ] t:7 t:9 t:10 t:13 t:69 t:81 u:alignDedupBams t:3:5 t:5:5 t:7:5 t:25:5 t:28:5 u:tmpLogDir:1
    turbine::c::log "allocated t:7=<${t:7}> t:9=<${t:9}> t:10=<${t:10}> t:13=<${t:13}> t:69=<${t:69}>"
    turbine::c::log "allocated t:81=<${t:81}> u:alignDedupBams=<${u:alignDedupBams}> t:3:5=<${t:3:5}> t:5:5=<${t:5:5}> t:7:5=<${t:7:5}>"
    turbine::c::log "allocated t:25:5=<${t:25:5}> t:28:5=<${t:28:5}> u:tmpLogDir:1=<${u:tmpLogDir:1}>"
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 0 1 11 ] [ list file 3 1 12 ] [ list file 3 1 13 ] [ list file 1 1 14 ] [ list file 1 1 15 ] [ list file 0 1 16 ] ] [ list 1 1 1 0 0 1 ] ] u:docSampleInfo u:failureLog u:timingLog u:configFile u:sampleInfoFile u:docRunfile
    turbine::argv_accept_impl [ list "runfile" ]
    set v:configFilename [ turbine::argv_get_impl "runfile" ]
    set tcltmp:init_rc 1
    set v:configFile:1 [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:configFile:1 ${v:configFilename}
    turbine::store_file ${u:configFile} v:configFile:1 1
    set v:configFile:2 [ turbine::retrieve_file ${u:configFile} ]
    set v:configFileData [ turbine::file_lines_impl ${v:configFile:2} ]
    turbine::container_reference ${u:variables} "SAMPLEINFORMATION" ${t:7} string
    turbine::container_reference ${u:variables} "OUTPUTDIR" ${t:10} string
    turbine::container_reference ${u:variables} "DELIVERYFOLDER" ${t:13} string
    set wfilename:timingLog [ turbine::get_file_path ${u:timingLog} ]
    turbine::container_reference ${u:variables} "ANALYSIS" ${t:69} string
    turbine::container_reference ${u:variables} "ALIGN_DEDUP_STAGE" ${t:81} string
    set v:f [ file tail ${v:configFilename} ]
    turbine::container_reference ${u:variables} "SAMPLELB" ${t:3:5} string
    turbine::container_reference ${u:variables} "SAMPLEPL" ${t:5:5} string
    turbine::container_reference ${u:variables} "SAMPLECN" ${t:7:5} string
    turbine::container_reference ${u:variables} "TMPDIR" ${t:25:5} string
    dict for {tcltmp:ignore v:line} ${v:configFileData} {
        # Var: string[int] u:keyValuePair RENAMED [string[int]:keyValuePair] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:getConfigVariables():43:2
        # Var: $string$[int] v:keyValuePair VALUE_OF [string[int]:keyValuePair]
        # Var: $string v:alias:name VALUE_OF [string:__alias:name]
        # Var: $string v:alias:value VALUE_OF [string:__alias:value]
        lassign [ adlb::multicreate [ list container integer string 1 2 24 ] ] u:keyValuePair
        turbine::c::log "allocated u:keyValuePair=<${u:keyValuePair}>"
        set v:keyValuePair [ turbine::split_impl ${v:line} "=" ]
        turbine::build_rec ${u:keyValuePair} ${v:keyValuePair} [ list container integer string ] 0 1
        set a:name [ adlb::subscript_container ${u:keyValuePair} 0 ]
        set v:alias:name [ turbine::retrieve_string ${a:name} ]
        set a:value [ adlb::subscript_container ${u:keyValuePair} 1 ]
        set v:alias:value [ turbine::retrieve_string ${a:value} CACHED 1 ]
        turbine::container_insert ${u:variables} ${v:alias:name} ${v:alias:value} string 0
        adlb::write_refcount_decr ${u:keyValuePair} 1
    }
    turbine::rule [ list ${wfilename:timingLog} ] "__entry-call_foreign-write {${wfilename:timingLog}} {${u:timingLog}}"
    turbine::rule [ list ${t:25:5} ] "__entry-async_op-strcat ${t:25:5} ${u:tmpLogDir:1}"
    turbine::rule [ list ${t:81} ] "__entry-optmerged ${t:10} ${t:25:5} ${t:28:5} ${t:69} ${t:81} ${t:9} ${u:alignDedupBams} {${u:failureLog}} {${u:timingLog}} ${u:tmpLogDir:1}"
    turbine::rule [ list ${t:10} ] [ list __entry-optmerged-19 ${t:10} ${t:13} ${t:25:5} ${t:9} ${v:f} ${u:configFile} ${u:docRunfile} ${u:failureLog} ${u:timingLog} ]
    turbine::rule [ list ${t:7} ] "__entry-optmerged-21 ${t:10} ${t:13} ${t:25:5} ${t:28:5} ${t:3:5} ${t:5:5} ${t:7} ${t:7:5} ${u:alignDedupBams} {${u:docSampleInfo}} {${u:failureLog}} {${u:sampleInfoFile}} ${u:tmpLogDir:1}"
    turbine::rule [ list ${u:alignDedupBams} ] "__entry-optmerged-29 ${t:25:5} ${u:alignDedupBams} {${u:timingLog}}"
    turbine::decr_local_file_refcount v:configFile:1
    adlb::write_refcount_decr ${u:variables} 1
}


proc __entry-call_foreign-write { wfilename:timingLog u:timingLog } {
    # Var: $file v:timingLog VALUE_OF [file:timingLog]
    # Var: $string v:__wfilename:timingLog VALUE_OF [string:__wfilename:timingLog]
    set v:__wfilename:timingLog [ turbine::retrieve_string ${wfilename:timingLog} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:timingLog [ turbine::create_local_file_ref ${v:__wfilename:timingLog} ${tcltmp:init_rc} 1 ]
    turbine::file_write_local v:timingLog "App status\tTime\n"
    turbine::store_file ${u:timingLog} v:timingLog 0
}


proc __entry-async_op-strcat { t:25:5 u:tmpLogDir:1 } {
    # Var: $string v:t:25:5 VALUE_OF [string:__t:25:5]
    # Var: $string v:tmpLogDir:1 VALUE_OF [string:tmpLogDir:1]
    set v:t:25:5 [ turbine::retrieve_string ${t:25:5} CACHED 1 ]
    set v:tmpLogDir:1 "${v:t:25:5}/timinglogs/"
    turbine::store_string ${u:tmpLogDir:1} ${v:tmpLogDir:1}
}


proc __entry-optmerged { t:10 t:25:5 t:28:5 t:69 t:81 t:9 u:alignDedupBams u:failureLog u:timingLog u:tmpLogDir:1 } {
    # Var: $string v:t:81 VALUE_OF [string:__t:81]
    # Var: $boolean v:t:80 VALUE_OF [boolean:__t:80]
    # Var: $boolean v:t:84 VALUE_OF [boolean:__t:84]
    # Var: $boolean v:t:88 VALUE_OF [boolean:__t:88]
    # Var: $boolean v:t:28:5 VALUE_OF [boolean:__t:28:5]
    set v:t:81 [ turbine::retrieve_string ${t:81} CACHED 1 ]
    set v:t:80 [ expr { ! [ string equal ${v:t:81} "E" ] } ]
    set v:t:84 [ expr { ! [ string equal ${v:t:81} "End" ] } ]
    set v:t:88 [ expr { ! [ string equal ${v:t:81} "end" ] } ]
    set v:t:28:5 [ string equal ${v:t:81} "Y" ]
    turbine::store_integer ${t:28:5} ${v:t:28:5}
    turbine::rule [ list ${t:69} ] "__entry-optmerged-1 ${t:10} ${t:25:5} ${t:69} ${t:9} ${v:t:80} ${v:t:84} ${v:t:88} ${u:alignDedupBams} {${u:failureLog}} {${u:timingLog}} ${u:tmpLogDir:1}"
}


proc __entry-optmerged-1 { t:10 t:25:5 t:69 t:9 v:t:80 v:t:84 v:t:88 u:alignDedupBams u:failureLog u:timingLog u:tmpLogDir:1 } {
    # Var: $string v:t:69 VALUE_OF [string:__t:69]
    # Var: $boolean v:t:68 VALUE_OF [boolean:__t:68]
    # Var: $boolean v:t:72 VALUE_OF [boolean:__t:72]
    # Var: $boolean v:t:76 VALUE_OF [boolean:__t:76]
    # Var: $boolean v:t:67 VALUE_OF [boolean:__t:67]
    # Var: $boolean v:t:66 VALUE_OF [boolean:__t:66]
    # Var: $boolean v:t:65 VALUE_OF [boolean:__t:65]
    # Var: $boolean v:t:64 VALUE_OF [boolean:__t:64]
    # Var: $boolean v:t:63 VALUE_OF [boolean:__t:63]
    set v:t:69 [ turbine::retrieve_string ${t:69} CACHED 1 ]
    set v:t:68 [ expr { ! [ string equal ${v:t:69} "ALIGN" ] } ]
    set v:t:72 [ expr { ! [ string equal ${v:t:69} "ALIGN_ONLY" ] } ]
    set v:t:76 [ expr { ! [ string equal ${v:t:69} "ALIGNMENT" ] } ]
    set v:t:67 [ expr { ${v:t:68} && ${v:t:72} } ]
    set v:t:66 [ expr { ${v:t:67} && ${v:t:76} } ]
    set v:t:65 [ expr { ${v:t:66} && ${v:t:80} } ]
    set v:t:64 [ expr { ${v:t:65} && ${v:t:84} } ]
    set v:t:63 [ expr { ${v:t:64} && ${v:t:88} } ]
    if { ${v:t:63} } {
        # Var: string[string] u:variables /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:70:0
        global u:variables
        # Var: string t:97 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:__entry():127:5
        lassign [ adlb::multicreate [ list string 1 1 25 ] ] t:97
        turbine::c::log "allocated t:97=<${t:97}>"
        turbine::read_refcount_incr ${u:alignDedupBams} 2
        turbine::read_refcount_incr ${t:25:5} 2
        turbine::read_refcount_incr ${t:10} 2
        turbine::file_read_refcount_incr ${u:timingLog} 2
        turbine::read_refcount_incr ${t:9} 1
        turbine::file_read_refcount_incr ${u:failureLog} 2
        turbine::read_refcount_incr ${u:tmpLogDir:1} 2
        turbine::container_reference ${u:variables} "SPLIT" ${t:97} string
        turbine::rule [ list ${t:97} ] "__entry-optmerged-2 ${t:10} ${t:25:5} ${t:9} ${t:97} ${u:alignDedupBams} {${u:failureLog}} {${u:timingLog}} ${u:tmpLogDir:1}"
    }
    turbine::read_refcount_decr ${u:tmpLogDir:1} 1
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${t:9} 1
    turbine::file_read_refcount_decr ${u:timingLog} 1
    turbine::read_refcount_decr ${t:10} 1
    turbine::read_refcount_decr ${t:25:5} 1
    turbine::read_refcount_decr ${u:alignDedupBams} 1
}


proc __entry-optmerged-2 { t:10 t:25:5 t:9 t:97 u:alignDedupBams u:failureLog u:timingLog u:tmpLogDir:1 } {
    # Var: $string v:t:97 VALUE_OF [string:__t:97]
    # Var: $boolean v:t:96 VALUE_OF [boolean:__t:96]
    # Var: $boolean v:t:100 VALUE_OF [boolean:__t:100]
    # Var: $boolean v:t:104 VALUE_OF [boolean:__t:104]
    # Var: $boolean v:t:108 VALUE_OF [boolean:__t:108]
    # Var: $boolean v:t:112 VALUE_OF [boolean:__t:112]
    # Var: $boolean v:t:95 VALUE_OF [boolean:__t:95]
    # Var: $boolean v:t:94 VALUE_OF [boolean:__t:94]
    # Var: $boolean v:t:93 VALUE_OF [boolean:__t:93]
    # Var: $boolean v:t:92 VALUE_OF [boolean:__t:92]
    set v:t:97 [ turbine::retrieve_string ${t:97} CACHED 1 ]
    set v:t:96 [ string equal ${v:t:97} "Yes" ]
    set v:t:100 [ string equal ${v:t:97} "YES" ]
    set v:t:104 [ string equal ${v:t:97} "yes" ]
    set v:t:108 [ string equal ${v:t:97} "Y" ]
    set v:t:112 [ string equal ${v:t:97} "y" ]
    set v:t:95 [ expr { ${v:t:96} || ${v:t:100} } ]
    set v:t:94 [ expr { ${v:t:95} || ${v:t:104} } ]
    set v:t:93 [ expr { ${v:t:94} || ${v:t:108} } ]
    set v:t:92 [ expr { ${v:t:93} || ${v:t:112} } ]
    if { ${v:t:92} } {
        # Var: string[string] u:variables /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:70:0
        global u:variables
        # Var: *rw(*rw(file)[int])[int] u:splitBams /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:__entry():134:2
        # Var: string t:119 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:__entry():136:6
        # Var: string t:1:3 RENAMED [string:__t:1] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/SplitByChr.swift:splitByChrMain():68:26
        # Var: boolean t:20:3 RENAMED [boolean:__t:20] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/SplitByChr.swift:splitByChrMain():84:31
        lassign [ adlb::multicreate [ list container integer ref 2 1 26 ] [ list string 1 1 27 ] [ list string 1 1 28 ] [ list integer 1 1 29 ] ] u:splitBams t:119 t:1:3 t:20:3
        turbine::c::log "allocated u:splitBams=<${u:splitBams}> t:119=<${t:119}> t:1:3=<${t:1:3}> t:20:3=<${t:20:3}>"
        turbine::read_refcount_incr ${t:10} 1
        turbine::read_refcount_incr ${t:9} 1
        turbine::file_read_refcount_incr ${u:failureLog} 1
        turbine::container_reference ${u:variables} "CHR_SPLIT_STAGE" ${t:119} string
        turbine::container_reference ${u:variables} "CHRNAMES" ${t:1:3} string
        turbine::rule [ list ${t:1:3} ] "__entry-call_foreign-split ${t:10} ${t:1:3} ${t:20:3} ${t:9} ${u:alignDedupBams} {${u:failureLog}} ${u:splitBams}"
        turbine::rule [ list ${t:119} ] "__entry-optmerged-3 ${t:10} ${t:119} ${t:20:3} ${t:25:5} {${u:failureLog}} ${u:splitBams} {${u:timingLog}} ${u:tmpLogDir:1}"
    } else {
        # Var: string[string] u:variables /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:70:0
        global u:variables
        # Var: *rw(file)[int] u:VCF_list:1 RENAMED [*rw(file)[int]:VCF_list] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:__entry():179:2
        # Var: string t:186 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:__entry():182:6
        lassign [ adlb::multicreate [ list container integer file_ref 2 1 102 ] [ list string 2 1 103 ] ] u:VCF_list:1 t:186
        turbine::c::log "allocated u:VCF_list:1=<${u:VCF_list:1}> t:186=<${t:186}>"
        turbine::read_refcount_incr ${t:25:5} 1
        turbine::file_read_refcount_incr ${u:timingLog} 1
        turbine::container_reference ${u:variables} "VC_STAGE" ${t:186} string
        turbine::rule [ list ${u:VCF_list:1} ] "__entry-chain7 ${u:VCF_list:1} ${t:25:5} {${u:timingLog}}"
        turbine::rule [ list ${u:alignDedupBams} ] "VCNoSplitMain-foreach-wait1 ${u:VCF_list:1} ${t:10} ${t:186} ${t:25:5} ${u:alignDedupBams} {${u:failureLog}} ${u:tmpLogDir:1}"
        turbine::rule [ list ${t:186} ] "__entry-optmerged-18 ${u:VCF_list:1} ${t:186} {${u:timingLog}}"
    }
    turbine::read_refcount_decr ${u:tmpLogDir:1} 1
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${t:9} 1
    turbine::file_read_refcount_decr ${u:timingLog} 1
    turbine::read_refcount_decr ${t:10} 1
    turbine::read_refcount_decr ${t:25:5} 1
    turbine::read_refcount_decr ${u:alignDedupBams} 1
}


proc __entry-call_foreign-split { t:10 t:1:3 t:20:3 t:9 u:alignDedupBams u:failureLog u:splitBams } {
    # Var: $string v:t:1:3 VALUE_OF [string:__t:1:3]
    # Var: $string$[int] v:indices VALUE_OF [string[int]:indices]
    set v:t:1:3 [ turbine::retrieve_string ${t:1:3} CACHED 1 ]
    set v:indices [ turbine::split_impl ${v:t:1:3} ":" ]
    set tcltmp:iters [ dict size ${v:indices} ]
    turbine::file_read_refcount_incr ${u:failureLog} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:9} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:20:3} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:10} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${u:alignDedupBams} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${u:splitBams} [ expr { ${tcltmp:iters} } ]
    adlb::write_refcount_incr ${u:splitBams} [ expr { ${tcltmp:iters} } ]
    dict for {v:chrIndex:1 v:chr} ${v:indices} {
        turbine::rule [ list ${u:alignDedupBams} ] [ list splitByChrMain-foreach-wait2 ${t:10} ${t:20:3} ${t:9} ${v:chr} ${v:chrIndex:1} ${u:alignDedupBams} ${u:failureLog} ${u:splitBams} ]
    }
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${t:9} 1
    turbine::read_refcount_decr ${t:20:3} 1
    turbine::read_refcount_decr ${t:10} 1
    turbine::read_refcount_decr ${u:alignDedupBams} 1
    turbine::read_refcount_decr ${u:splitBams} 1
    adlb::write_refcount_decr ${u:splitBams} 1
}


proc splitByChrMain-foreach-wait2 { t:10 t:20:3 t:9 v:chr v:chrIndex:1 u:alignDedupBams u:failureLog u:splitBams } {
    set tcltmp:container_sz [ adlb::enumerate ${u:alignDedupBams} count all 0 ]
    set tcltmp:iters ${tcltmp:container_sz}
    turbine::file_read_refcount_incr ${u:failureLog} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:9} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:20:3} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:10} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${u:alignDedupBams} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${u:splitBams} [ expr { 2 * ${tcltmp:iters} - 1 } ]
    adlb::write_refcount_incr ${u:splitBams} [ expr { ${tcltmp:iters} - 1 } ]
    splitByChrMain-foreach2:outer ${t:10} ${t:20:3} ${t:9} ${v:chr} ${v:chrIndex:1} ${u:failureLog} ${u:splitBams} ${u:alignDedupBams} 0 [ expr { ${tcltmp:container_sz} - 1 } ] 1
}


proc splitByChrMain-foreach2:outer { t:10 t:20:3 t:9 v:chr v:chrIndex:1 u:failureLog u:splitBams u:alignDedupBams tcltmp:lo tcltmp:hi tcltmp:inc } {
    if { [ expr { ${tcltmp:lo} > ${tcltmp:hi} } ] } {
        return
    }
    while {1} {
        set tcltmp:itersleft [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
        if { [ expr { ${tcltmp:itersleft} <= 64 } ] } {
            splitByChrMain-foreach2:inner ${t:10} ${t:20:3} ${t:9} ${v:chr} ${v:chrIndex:1} ${u:failureLog} ${u:splitBams} ${u:alignDedupBams} ${tcltmp:lo} ${tcltmp:hi} ${tcltmp:inc}
            return
        } else {
            set tcltmp:skip [ expr { ${tcltmp:inc} * max(64,((${tcltmp:itersleft} - 1) / 16) + 1) } ]
            for { set tcltmp:splitstart [ expr { ${tcltmp:lo} + ${tcltmp:skip} } ] } { ${tcltmp:splitstart} <= ${tcltmp:hi} } { incr tcltmp:splitstart ${tcltmp:skip} } {
                set tcltmp:splitend [ expr { min(${tcltmp:hi},${tcltmp:splitstart} + ${tcltmp:skip} - 1) } ]
                set tcltmp:prio [ turbine::get_priority ]
                turbine::set_priority ${tcltmp:prio}
                adlb::spawn 0 [ list splitByChrMain-foreach2:outer ${t:10} ${t:20:3} ${t:9} ${v:chr} ${v:chrIndex:1} ${u:failureLog} ${u:splitBams} ${u:alignDedupBams} ${tcltmp:splitstart} ${tcltmp:splitend} ${tcltmp:inc} ]
                turbine::reset_priority
            }
            set tcltmp:hi [ expr { ${tcltmp:lo} + ${tcltmp:skip} - 1 } ]
        }
    }
}


proc splitByChrMain-foreach2:inner { t:10 t:20:3 t:9 v:chr v:chrIndex:1 u:failureLog u:splitBams u:alignDedupBams tcltmp:lo tcltmp:hi tcltmp:inc } {
    set tcltmp:splitlen [ expr { ${tcltmp:hi} - ${tcltmp:lo} + 1 } ]
    set tcltmp:contents [ adlb::enumerate ${u:alignDedupBams} dict ${tcltmp:splitlen} ${tcltmp:lo} ]
    dict for {v:sampleIndex:2 u:bam} ${tcltmp:contents} {
        # Var: string u:outputName:1 RENAMED [string:outputName] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/SplitByChr.swift:splitByChrMain():80:3
        lassign [ adlb::multicreate [ list string 2 1 30 ] ] u:outputName:1
        turbine::c::log "allocated u:outputName:1=<${u:outputName:1}>"
        turbine::file_read_refcount_incr ${u:bam} 2
        set optf:bam [ turbine::get_file_path ${u:bam} ]
        turbine::rule [ list ${t:20:3} ] [ list splitByChrMain-if1 ${t:20:3} ${t:9} ${v:chr} ${v:chrIndex:1} ${v:sampleIndex:2} ${u:bam} ${u:failureLog} ${u:outputName:1} ${u:splitBams} ]
        turbine::rule [ list ${optf:bam} ${t:10} ] [ list strlen-argwait ${optf:bam} ${t:10} ${v:chr} ${u:outputName:1} ]
    }
    set tcltmp:iters [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
    turbine::read_refcount_decr ${u:alignDedupBams} [ expr { ${tcltmp:iters} } ]
}


proc splitByChrMain-if1 { t:20:3 t:9 v:chr v:chrIndex:1 v:sampleIndex:2 u:bam u:failureLog u:outputName:1 u:splitBams } {
    # Var: $boolean v:__t:20 RENAMED [$boolean:__v:__t:20] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/SplitByChr.swift:splitByChrMain():84:34
    set v:__t:20 [ turbine::retrieve_integer ${t:20:3} CACHED 1 ]
    if { ${v:__t:20} } {
        # Var: string[string] u:variables /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:70:0
        global u:variables
        # Var: file u:chrDedupSortedBam RENAMED [file:chrDedupSortedBam] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/SplitByChr.swift:splitByChrMain():93:29
        # Var: int u:threads RENAMED [int:threads] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/SplitByChr.swift:splitByChrMain():97:4
        # Var: string t:26:3 RENAMED [string:__t:26] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/SplitByChr.swift:splitByChrMain():97:31
        # Var: string t:29:3 RENAMED [string:__t:29] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/SplitByChr.swift:splitByChrMain():97:60
        # Var: string t:32:3 RENAMED [string:__t:32] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/SplitByChr.swift:splitByChrMain():99:38
        # Var: string[int] t:34:3 RENAMED [string[int]:__t:34] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/SplitByChr.swift:splitByChrMain():100:20
        # Var: boolean t:37:3 RENAMED [boolean:__t:37] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/SplitByChr.swift:splitByChrMain():104:11
        # Var: $string v:t:35:3 VALUE_OF [string:__t:35:3]
        lassign [ adlb::multicreate [ list integer 1 1 32 ] [ list string 1 1 33 ] [ list string 1 1 34 ] [ list string 1 1 35 ] [ list container integer string 1 1 36 ] [ list integer 1 1 37 ] ] u:threads t:26:3 t:29:3 t:32:3 t:34:3 t:37:3
        turbine::c::log "allocated u:threads=<${u:threads}> t:26:3=<${t:26:3}> t:29:3=<${t:29:3}> t:32:3=<${t:32:3}> t:34:3=<${t:34:3}>"
        turbine::c::log "allocated t:37:3=<${t:37:3}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 2 1 31 ] ] [ list 1 ] ] u:chrDedupSortedBam
        turbine::read_refcount_incr ${t:9} 1
        turbine::container_reference ${u:variables} "CORES" ${t:26:3} string
        turbine::container_reference ${u:variables} "PROCPERNODE" ${t:29:3} string
        turbine::container_reference ${u:variables} "SAMTOOLSEXE" ${t:32:3} string
        set v:t:35:3 "${v:chr}"
        turbine::array_kv_build ${t:34:3} [ ::adlb::dict_create 0 ${v:t:35:3} ] 1 integer string
        f:samtools_view ${u:chrDedupSortedBam} ${t:32:3} ${u:bam} ${u:threads} ${t:34:3} -100 "HARD" "RANK"
        turbine::rule [ list ${u:outputName:1} ] "__entry-copy_in_filename ${t:37:3} ${t:9} ${v:chrIndex:1} ${v:sampleIndex:2} {${u:chrDedupSortedBam}} ${u:outputName:1} ${u:splitBams}"
        turbine::rule [ list ${t:26:3} ${t:29:3} ] "__entry-async_op-parse_int ${t:26:3} ${t:29:3} ${u:threads}"
        turbine::read_refcount_decr ${t:34:3} 1
        turbine::read_refcount_decr ${t:32:3} 1
        turbine::read_refcount_decr ${u:threads} 1
    } else {
        turbine::file_read_refcount_incr ${u:failureLog} 1
        turbine::rule [ list ${u:outputName:1} ] "file_exists-argwait ${v:chrIndex:1} ${v:sampleIndex:2} {${u:failureLog}} ${u:outputName:1} ${u:splitBams}"
    }
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${t:9} 1
    turbine::read_refcount_decr ${u:outputName:1} 1
    turbine::file_read_refcount_decr ${u:bam} 1
    turbine::read_refcount_decr ${u:splitBams} 1
}


proc __entry-copy_in_filename { t:37:3 t:9 v:chrIndex:1 v:sampleIndex:2 u:chrDedupSortedBam u:outputName:1 u:splitBams } {
    # Var: string[string] u:variables /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:70:0
    global u:variables
    # Var: $string v:outputName:1:1 VALUE_OF [string:outputName:1]
    set v:outputName:1:1 [ turbine::retrieve_string ${u:outputName:1} CACHED 1 ]
    turbine::set_filename_val ${u:chrDedupSortedBam} ${v:outputName:1:1}
    turbine::rule [ list [ turbine::get_file_td ${u:chrDedupSortedBam} ] ] "f:checkBam ${t:37:3} ${u:variables} {${u:chrDedupSortedBam}}"
    turbine::rule [ list ${t:37:3} ] [ list __entry-async_op-not ${t:37:3} ${t:9} ${v:chrIndex:1} ${v:outputName:1:1} ${v:sampleIndex:2} ${u:chrDedupSortedBam} ${u:splitBams} ]
}


proc __entry-async_op-not { t:37:3 t:9 v:chrIndex:1 v:outputName:1:1 v:sampleIndex:2 u:chrDedupSortedBam u:splitBams } {
    # Var: $boolean v:t:37:3 VALUE_OF [boolean:__t:37:3]
    # Var: $boolean v:t:36:3 VALUE_OF [boolean:__t:36:3]
    set v:t:37:3 [ turbine::retrieve_integer ${t:37:3} CACHED 1 ]
    set v:t:36:3 [ expr { ! ${v:t:37:3} } ]
    if { ${v:t:36:3} } {
        # Var: string u:message:1 RENAMED [string:message] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/SplitByChr.swift:splitByChrMain():108:5
        # Var: boolean t:41:3 RENAMED [boolean:__t:41] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/SplitByChr.swift:splitByChrMain():112:5
        # Var: file t:42:3 RENAMED [file:__t:42] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/SplitByChr.swift:splitByChrMain():112:12
        # Var: $string v:message:1 VALUE_OF [string:message:1]
        lassign [ adlb::multicreate [ list string 2 1 38 ] [ list integer 1 1 39 ] ] u:message:1 t:41:3
        turbine::c::log "allocated u:message:1=<${u:message:1}> t:41:3=<${t:41:3}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 40 ] ] [ list 0 ] ] t:42:3
        turbine::read_refcount_incr ${t:9} 1
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:append ${t:41:3} {${t:42:3}} ${u:message:1}"
        turbine::reset_priority
        set v:message:1 "FAILURE: ${v:outputName:1:1} contains no alignments. Chromosome splitting failed\n"
        turbine::store_string ${u:message:1} ${v:message:1}
        turbine::rule [ list ${t:41:3} ] "splitByChrMain-chain1 ${t:41:3} ${u:message:1}"
        turbine::rule [ list ${t:9} ] "__entry-call_foreign-input {${t:42:3}} ${t:9}"
    } else {
        turbine::file_read_refcount_incr ${u:chrDedupSortedBam} 1
        set v:t:50:3 [ turbine::create_nested ${u:splitBams} ${v:chrIndex:1} container integer file_ref 0 1 0 0 ]
        turbine::container_insert ${v:t:50:3} ${v:sampleIndex:2} ${u:chrDedupSortedBam} file_ref 1
    }
    turbine::read_refcount_decr ${t:9} 1
    turbine::file_read_refcount_decr ${u:chrDedupSortedBam} 1
    turbine::read_refcount_decr ${u:splitBams} 1
    adlb::write_refcount_decr ${u:splitBams} 1
}


proc splitByChrMain-chain1 { t:41:3 u:message:1 } {
    # Var: string[string] u:variables /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:70:0
    global u:variables
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:exitIfFlagGiven ${u:variables} ${u:message:1}"
    turbine::reset_priority
    turbine::read_refcount_decr ${t:41:3} 1
}


proc __entry-call_foreign-input { t:42:3 t:9 } {
    # Var: $string v:t:9:2 VALUE_OF [string:__t:9]
    # Var: $file v:t:42:3 VALUE_OF [file:__t:42:3]
    set v:t:9:2 [ turbine::retrieve_string ${t:9} CACHED 1 ]
    set tcltmp:init_rc 1
    set v:t:42:3 [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:t:42:3 ${v:t:9:2}
    turbine::store_file ${t:42:3} v:t:42:3 1
    turbine::decr_local_file_refcount v:t:42:3
}


proc __entry-async_op-parse_int { t:26:3 t:29:3 u:threads } {
    # Var: $string v:t:29:3 VALUE_OF [string:__t:29:3]
    # Var: $int v:t:28:3 VALUE_OF [int:__t:28:3]
    # Var: $string v:t:26:3 VALUE_OF [string:__t:26:3]
    # Var: $int v:t:25:3 VALUE_OF [int:__t:25:3]
    # Var: $int v:t:24:3 VALUE_OF [int:__t:24:3]
    # Var: $int v:threads VALUE_OF [int:threads]
    set v:t:29:3 [ turbine::retrieve_string ${t:29:3} CACHED 1 ]
    set v:t:28:3 [ turbine::parse_int_impl ${v:t:29:3} 10 ]
    set v:t:26:3 [ turbine::retrieve_string ${t:26:3} CACHED 1 ]
    set v:t:25:3 [ turbine::parse_int_impl ${v:t:26:3} 10 ]
    set v:t:24:3 [ turbine::divide_integer_impl ${v:t:25:3} ${v:t:28:3} ]
    set v:threads [ expr { ${v:t:24:3} - 1 } ]
    turbine::store_integer ${u:threads} ${v:threads}
}


proc file_exists-argwait { v:chrIndex:1 v:sampleIndex:2 u:failureLog u:outputName:1 u:splitBams } {
    # Var: $string v:f:6 RENAMED [$string:__v:f]
    # Var: $boolean v:o:4 RENAMED [$boolean:__v:o]
    set v:f:6 [ turbine::retrieve_string ${u:outputName:1} CACHED 1 ]
    set v:o:4 [ file exists ${v:f:6} ]
    if { ${v:o:4} } {
        # Var: file t:53:3 RENAMED [file:__t:53] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/SplitByChr.swift:splitByChrMain():129:16
        # Var: $file v:t:53:3 VALUE_OF [file:__t:53:3]
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 41 ] ] [ list 0 ] ] t:53:3
        set v:t:52:3 [ turbine::create_nested ${u:splitBams} ${v:chrIndex:1} container integer file_ref 0 1 0 0 ]
        set tcltmp:init_rc 1
        set v:t:53:3 [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
        turbine::input_file_local v:t:53:3 ${v:f:6}
        turbine::store_file ${t:53:3} v:t:53:3 1
        turbine::container_insert ${v:t:52:3} ${v:sampleIndex:2} ${t:53:3} file_ref 1
        turbine::decr_local_file_refcount v:t:53:3
    } else {
        # Var: string u:m:1 RENAMED [string:m] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/SplitByChr.swift:splitByChrMain():132:5
        # Var: boolean t:57:3 RENAMED [boolean:__t:57] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/SplitByChr.swift:splitByChrMain():135:5
        # Var: $string v:m:1 VALUE_OF [string:m:1]
        lassign [ adlb::multicreate [ list string 2 1 42 ] [ list integer 1 1 43 ] ] u:m:1 t:57:3
        turbine::c::log "allocated u:m:1=<${u:m:1}> t:57:3=<${t:57:3}>"
        turbine::file_read_refcount_incr ${u:failureLog} 1
        set v:m:1 "ERROR: ${v:f:6} not found. Did you set CHR_SPLIT_STAGE to 'N' by accident?\n"
        turbine::store_string ${u:m:1} ${v:m:1}
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:append ${t:57:3} {${u:failureLog}} ${u:m:1}"
        turbine::reset_priority
        turbine::rule [ list ${t:57:3} ] "splitByChrMain-chain2 ${t:57:3} ${u:m:1}"
    }
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${u:splitBams} 1
    adlb::write_refcount_decr ${u:splitBams} 1
}


proc splitByChrMain-chain2 { t:57:3 u:m:1 } {
    # Var: string[string] u:variables /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:70:0
    global u:variables
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:exitIfFlagGiven ${u:variables} ${u:m:1}"
    turbine::reset_priority
    turbine::read_refcount_decr ${t:57:3} 1
}


proc strlen-argwait { optf:bam t:10 v:chr u:outputName:1 } {
    # Var: $string v:s:10 RENAMED [$string:__v:s]
    # Var: $int v:n:8 RENAMED [$int:__v:n]
    # Var: $int v:t:6:3 VALUE_OF [int:__t:6:3]
    # Var: $string v:prefix VALUE_OF [string:prefix]
    # Var: $string v:f:7 RENAMED [$string:__v:f]
    # Var: $int v:n:9 RENAMED [$int:__v:n]
    # Var: $int v:t:11:3 VALUE_OF [int:__t:11:3]
    # Var: $string v:sampleName:2 VALUE_OF [string:sampleName:2]
    # Var: $string v:t:10:10 VALUE_OF [string:__t:10]
    # Var: $string v:outputName:1:3 VALUE_OF [string:outputName:1]
    set v:s:10 [ turbine::retrieve_string ${optf:bam} CACHED 1 ]
    set v:n:8 [ string length ${v:s:10} ]
    set v:t:6:3 [ expr { ${v:n:8} - 4 } ]
    set v:prefix [ turbine::substring_impl ${v:s:10} 0 ${v:t:6:3} ]
    set v:f:7 [ file tail ${v:prefix} ]
    set v:n:9 [ string length ${v:f:7} ]
    set v:t:11:3 [ expr { ${v:n:9} - 15 } ]
    set v:sampleName:2 [ turbine::substring_impl ${v:f:7} 0 ${v:t:11:3} ]
    set v:t:10:10 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:outputName:1:3 "${v:t:10:10}/${v:sampleName:2}/realign/${v:f:7}.${v:chr}.bam"
    turbine::store_string ${u:outputName:1} ${v:outputName:1:3}
}


proc __entry-optmerged-3 { t:10 t:119 t:20:3 t:25:5 u:failureLog u:splitBams u:timingLog u:tmpLogDir:1 } {
    # Var: $string v:t:119 VALUE_OF [string:__t:119]
    # Var: $boolean v:t:118 VALUE_OF [boolean:__t:118]
    # Var: $boolean v:t:122 VALUE_OF [boolean:__t:122]
    # Var: $boolean v:t:126 VALUE_OF [boolean:__t:126]
    # Var: $boolean v:t:20:3 VALUE_OF [boolean:__t:20:3]
    # Var: $boolean v:t:117 VALUE_OF [boolean:__t:117]
    # Var: $boolean v:t:116 VALUE_OF [boolean:__t:116]
    set v:t:119 [ turbine::retrieve_string ${t:119} CACHED 1 ]
    set v:t:118 [ expr { ! [ string equal ${v:t:119} "E" ] } ]
    set v:t:122 [ expr { ! [ string equal ${v:t:119} "End" ] } ]
    set v:t:126 [ expr { ! [ string equal ${v:t:119} "end" ] } ]
    set v:t:20:3 [ string equal ${v:t:119} "Y" ]
    turbine::store_integer ${t:20:3} ${v:t:20:3}
    set v:t:117 [ expr { ${v:t:118} && ${v:t:122} } ]
    set v:t:116 [ expr { ${v:t:117} && ${v:t:126} } ]
    if { ${v:t:116} } {
        # Var: string[string] u:variables /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:70:0
        global u:variables
        # Var: *rw(*rw(file)[int])[int] u:splitVCFs /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:__entry():146:3
        # Var: string t:142 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:__entry():149:7
        # Var: boolean t:45:2 RENAMED [boolean:__t:45] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():375:24
        # Var: boolean t:49:2 RENAMED [boolean:__t:49] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():376:24
        # Var: boolean t:53:2 RENAMED [boolean:__t:53] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():377:24
        # Var: boolean t:57:2 RENAMED [boolean:__t:57] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():378:24
        # Var: boolean t:61:2 RENAMED [boolean:__t:61] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():379:24
        # Var: boolean t:21:2 RENAMED [boolean:__t:21] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():373:33
        lassign [ adlb::multicreate [ list container integer ref 3 1 44 ] [ list string 1 1 45 ] [ list integer 1 1 46 ] [ list integer 1 1 47 ] [ list integer 1 1 48 ] [ list integer 1 1 49 ] [ list integer 1 1 50 ] [ list integer 1 1 51 ] ] u:splitVCFs t:142 t:45:2 t:49:2 t:53:2 t:57:2 t:61:2 t:21:2
        turbine::c::log "allocated u:splitVCFs=<${u:splitVCFs}> t:142=<${t:142}> t:45:2=<${t:45:2}> t:49:2=<${t:49:2}> t:53:2=<${t:53:2}>"
        turbine::c::log "allocated t:57:2=<${t:57:2}> t:61:2=<${t:61:2}> t:21:2=<${t:21:2}>"
        turbine::read_refcount_incr ${t:25:5} 3
        turbine::file_read_refcount_incr ${u:timingLog} 2
        turbine::file_read_refcount_incr ${u:failureLog} 2
        turbine::read_refcount_incr ${u:splitBams} 1
        turbine::read_refcount_incr ${t:10} 2
        turbine::read_refcount_incr ${u:tmpLogDir:1} 2
        turbine::container_reference ${u:variables} "VC_STAGE" ${t:142} string
        turbine::rule [ list ${u:splitVCFs} ] "__entry-chain5 ${t:25:5} ${u:splitVCFs} {${u:timingLog}}"
        turbine::rule [ list ${t:142} ] "__entry-optmerged-4 ${t:10} ${t:142} ${t:21:2} ${t:25:5} ${t:45:2} ${t:49:2} ${t:53:2} ${t:57:2} ${t:61:2} {${u:failureLog}} ${u:splitVCFs} {${u:timingLog}} ${u:tmpLogDir:1}"
        turbine::rule [ list ${u:splitBams} ] "__entry-optmerged-9 ${t:10} ${t:21:2} ${t:25:5} ${t:45:2} ${t:49:2} ${t:53:2} ${t:57:2} ${t:61:2} {${u:failureLog}} ${u:splitBams} ${u:splitVCFs} ${u:tmpLogDir:1}"
    }
    turbine::read_refcount_decr ${u:tmpLogDir:1} 1
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::file_read_refcount_decr ${u:timingLog} 1
    turbine::read_refcount_decr ${t:10} 1
    turbine::read_refcount_decr ${t:25:5} 1
    turbine::read_refcount_decr ${u:splitBams} 1
}


proc __entry-chain5 { t:25:5 u:splitVCFs u:timingLog } {
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:logging ${t:25:5} {${u:timingLog}}"
    turbine::reset_priority
    turbine::read_refcount_decr ${u:splitVCFs} 1
}


proc __entry-optmerged-4 { t:10 t:142 t:21:2 t:25:5 t:45:2 t:49:2 t:53:2 t:57:2 t:61:2 u:failureLog u:splitVCFs u:timingLog u:tmpLogDir:1 } {
    # Var: $string v:t:142 VALUE_OF [string:__t:142]
    # Var: $boolean v:t:141 VALUE_OF [boolean:__t:141]
    # Var: $boolean v:t:145 VALUE_OF [boolean:__t:145]
    # Var: $boolean v:t:149 VALUE_OF [boolean:__t:149]
    # Var: $boolean v:t:25:2 VALUE_OF [boolean:__t:25:2]
    # Var: $boolean v:t:29:2 VALUE_OF [boolean:__t:29:2]
    # Var: $boolean v:t:33:2 VALUE_OF [boolean:__t:33:2]
    # Var: $boolean v:t:37:2 VALUE_OF [boolean:__t:37:2]
    # Var: $boolean v:t:41:2 VALUE_OF [boolean:__t:41:2]
    # Var: $boolean v:t:45:2 VALUE_OF [boolean:__t:45:2]
    # Var: $boolean v:t:49:2 VALUE_OF [boolean:__t:49:2]
    # Var: $boolean v:t:53:2 VALUE_OF [boolean:__t:53:2]
    # Var: $boolean v:t:57:2 VALUE_OF [boolean:__t:57:2]
    # Var: $boolean v:t:61:2 VALUE_OF [boolean:__t:61:2]
    # Var: $boolean v:t:140 VALUE_OF [boolean:__t:140]
    # Var: $boolean v:t:139 VALUE_OF [boolean:__t:139]
    # Var: $boolean v:t:24:2 VALUE_OF [boolean:__t:24:2]
    # Var: $boolean v:t:23:2 VALUE_OF [boolean:__t:23:2]
    # Var: $boolean v:t:22:2 VALUE_OF [boolean:__t:22:2]
    # Var: $boolean v:t:21:2 VALUE_OF [boolean:__t:21:2]
    set v:t:142 [ turbine::retrieve_string ${t:142} CACHED 1 ]
    set v:t:141 [ expr { ! [ string equal ${v:t:142} "E" ] } ]
    set v:t:145 [ expr { ! [ string equal ${v:t:142} "End" ] } ]
    set v:t:149 [ expr { ! [ string equal ${v:t:142} "end" ] } ]
    set v:t:25:2 [ string equal ${v:t:142} "Y" ]
    set v:t:29:2 [ string equal ${v:t:142} "y" ]
    set v:t:33:2 [ string equal ${v:t:142} "YES" ]
    set v:t:37:2 [ string equal ${v:t:142} "yes" ]
    set v:t:41:2 [ string equal ${v:t:142} "Yes" ]
    set v:t:45:2 [ string equal ${v:t:142} "End" ]
    turbine::store_integer ${t:45:2} ${v:t:45:2}
    set v:t:49:2 [ string equal ${v:t:142} "end" ]
    turbine::store_integer ${t:49:2} ${v:t:49:2}
    set v:t:53:2 [ string equal ${v:t:142} "E" ]
    turbine::store_integer ${t:53:2} ${v:t:53:2}
    set v:t:57:2 [ string equal ${v:t:142} "e" ]
    turbine::store_integer ${t:57:2} ${v:t:57:2}
    set v:t:61:2 [ string equal ${v:t:142} "END" ]
    turbine::store_integer ${t:61:2} ${v:t:61:2}
    set v:t:140 [ expr { ${v:t:141} && ${v:t:145} } ]
    set v:t:139 [ expr { ${v:t:140} && ${v:t:149} } ]
    if { ${v:t:139} } {
        # Var: string[string] u:variables /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:70:0
        global u:variables
        # Var: *rw(file)[int] u:VCF_list /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:__entry():160:4
        # Var: string t:165 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:__entry():163:8
        # Var: boolean t:21:1 RENAMED [boolean:__t:21] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/CombineVariants.swift:combineVariantsMain():67:36
        lassign [ adlb::multicreate [ list container integer file_ref 2 1 52 ] [ list string 1 1 53 ] [ list integer 1 1 54 ] ] u:VCF_list t:165 t:21:1
        turbine::c::log "allocated u:VCF_list=<${u:VCF_list}> t:165=<${t:165}> t:21:1=<${t:21:1}>"
        turbine::read_refcount_incr ${u:splitVCFs} 1
        turbine::read_refcount_incr ${t:25:5} 1
        turbine::read_refcount_incr ${t:10} 1
        turbine::file_read_refcount_incr ${u:timingLog} 2
        turbine::file_read_refcount_incr ${u:failureLog} 1
        turbine::read_refcount_incr ${u:tmpLogDir:1} 1
        turbine::container_reference ${u:variables} "COMBINE_VARIANT_STAGE" ${t:165} string
        turbine::rule [ list ${u:VCF_list} ] "__entry-chain6 ${u:VCF_list} ${t:25:5} {${u:timingLog}}"
        turbine::rule [ list ${t:165} ] "__entry-optmerged-5 ${u:VCF_list} ${t:165} ${t:21:1} {${u:timingLog}}"
        turbine::rule [ list ${u:splitVCFs} ] "__entry-optmerged-6 ${u:VCF_list} ${t:10} ${t:21:1} {${u:failureLog}} ${u:splitVCFs} ${u:tmpLogDir:1}"
    }
    set v:t:24:2 [ expr { ${v:t:25:2} || ${v:t:29:2} } ]
    set v:t:23:2 [ expr { ${v:t:24:2} || ${v:t:33:2} } ]
    set v:t:22:2 [ expr { ${v:t:23:2} || ${v:t:37:2} } ]
    set v:t:21:2 [ expr { ${v:t:22:2} || ${v:t:41:2} } ]
    turbine::store_integer ${t:21:2} ${v:t:21:2}
    turbine::read_refcount_decr ${u:tmpLogDir:1} 1
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::file_read_refcount_decr ${u:timingLog} 1
    turbine::read_refcount_decr ${t:10} 1
    turbine::read_refcount_decr ${t:25:5} 1
    turbine::read_refcount_decr ${u:splitVCFs} 1
}


proc __entry-chain6 { u:VCF_list t:25:5 u:timingLog } {
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:logging ${t:25:5} {${u:timingLog}}"
    turbine::reset_priority
    turbine::read_refcount_decr ${u:VCF_list} 1
}


proc __entry-optmerged-5 { u:VCF_list t:165 t:21:1 u:timingLog } {
    # Var: $string v:t:165 VALUE_OF [string:__t:165]
    # Var: $boolean v:t:164 VALUE_OF [boolean:__t:164]
    # Var: $boolean v:t:168 VALUE_OF [boolean:__t:168]
    # Var: $boolean v:t:172 VALUE_OF [boolean:__t:172]
    # Var: $boolean v:t:21:1 VALUE_OF [boolean:__t:21:1]
    # Var: $boolean v:t:163 VALUE_OF [boolean:__t:163]
    # Var: $boolean v:t:162 VALUE_OF [boolean:__t:162]
    set v:t:165 [ turbine::retrieve_string ${t:165} CACHED 1 ]
    set v:t:164 [ expr { ! [ string equal ${v:t:165} "E" ] } ]
    set v:t:168 [ expr { ! [ string equal ${v:t:165} "End" ] } ]
    set v:t:172 [ expr { ! [ string equal ${v:t:165} "end" ] } ]
    set v:t:21:1 [ string equal ${v:t:165} "Y" ]
    turbine::store_integer ${t:21:1} ${v:t:21:1}
    set v:t:163 [ expr { ${v:t:164} && ${v:t:168} } ]
    set v:t:162 [ expr { ${v:t:163} && ${v:t:172} } ]
    if { ${v:t:162} } {
        # Var: string[string] u:variables /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:70:0
        global u:variables
        turbine::file_read_refcount_incr ${u:timingLog} 1
        turbine::read_refcount_incr ${u:VCF_list} 2
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:jointGenotypingMain ${u:VCF_list} ${u:variables} {${u:timingLog}}"
        turbine::reset_priority
        turbine::rule [ list ${u:VCF_list} ] "__entry-call_foreign-size ${u:VCF_list}"
    }
    turbine::read_refcount_decr ${u:VCF_list} 1
    turbine::file_read_refcount_decr ${u:timingLog} 1
}


proc __entry-call_foreign-size { u:VCF_list } {
    # Var: file$[int] v:VCF_list VALUE_OF [*rw(file)[int]:VCF_list]
    # Var: $int v:t:178 VALUE_OF [int:__t:178]
    # Var: $boolean v:t:177 VALUE_OF [boolean:__t:177]
    # Var: $void v:t:176 VALUE_OF [void:__t:176]
    set v:VCF_list [ adlb::enumerate ${u:VCF_list} dict all 0 0 ]
    set v:t:178 [ dict size ${v:VCF_list} ]
    set v:t:177 [ expr { ${v:t:178} != 0 } ]
    turbine::assert_impl ${v:t:177} "FAILURE: The VCFs array was empty"
    turbine::read_refcount_decr ${u:VCF_list} 1
}


proc __entry-optmerged-6 { u:VCF_list t:10 t:21:1 u:failureLog u:splitVCFs u:tmpLogDir:1 } {
    # Var: *rw(file)[int]$[int] v:splitVCFs VALUE_OF [*rw(*rw(file)[int])[int]:splitVCFs]
    # Var: $int v:t:155 VALUE_OF [int:__t:155]
    # Var: $boolean v:t:154 VALUE_OF [boolean:__t:154]
    # Var: $void v:t:153 VALUE_OF [void:__t:153]
    set v:splitVCFs [ adlb::enumerate ${u:splitVCFs} dict all 0 0 ]
    set v:t:155 [ dict size ${v:splitVCFs} ]
    set v:t:154 [ expr { ${v:t:155} != 0 } ]
    turbine::assert_impl ${v:t:154} "FAILURE: The split variants array was empty: none of the split bam files had their varianted called"
    set tcltmp:iters [ dict size ${v:splitVCFs} ]
    turbine::file_read_refcount_incr ${u:failureLog} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${u:tmpLogDir:1} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:21:1} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:10} [ expr { 2 * ${tcltmp:iters} } ]
    adlb::write_refcount_incr ${u:VCF_list} [ expr { ${tcltmp:iters} } ]
    dict for {v:sampleIndex u:sampleSet} ${v:splitVCFs} {
        # Var: string[int] u:pieces RENAMED [string[int]:pieces] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/CombineVariants.swift:combineVariantsMain():54:2
        # Var: string u:chr RENAMED [string:chr] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/CombineVariants.swift:combineVariantsMain():55:2
        # Var: string u:sampleName RENAMED [string:sampleName] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/CombineVariants.swift:combineVariantsMain():61:16
        # Var: string u:outputName RENAMED [string:outputName] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/CombineVariants.swift:combineVariantsMain():63:2
        lassign [ adlb::multicreate [ list container integer string 1 2 55 ] [ list string 1 1 56 ] [ list string 1 1 57 ] [ list string 2 1 58 ] ] u:pieces u:chr u:sampleName u:outputName
        turbine::c::log "allocated u:pieces=<${u:pieces}> u:chr=<${u:chr}> u:sampleName=<${u:sampleName}> u:outputName=<${u:outputName}>"
        turbine::read_refcount_incr ${u:sampleSet} 2
        set a:t:1:1 [ adlb::subscript_container ${u:sampleSet} 0 ]
        turbine::rule [ list ${a:t:1:1} ] "combineVariantsMain-call-basename1 {${a:t:1:1}} ${t:10} ${u:chr} ${u:outputName} ${u:pieces} ${u:sampleName}"
        turbine::rule [ list ${t:21:1} ] "combineVariantsMain-if1 ${u:VCF_list} ${t:10} ${t:21:1} ${v:sampleIndex} ${u:chr} {${u:failureLog}} ${u:outputName} ${u:sampleName} ${u:sampleSet} ${u:tmpLogDir:1}"
    }
    turbine::read_refcount_decr ${u:tmpLogDir:1} 1
    turbine::read_refcount_decr ${t:21:1} 1
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${t:10} 1
    turbine::read_refcount_decr ${u:splitVCFs} 1
    adlb::write_refcount_decr ${u:VCF_list} 1
}


proc combineVariantsMain-call-basename1 { a:t:1:1 t:10 u:chr u:outputName u:pieces u:sampleName } {
    set a:1 [ adlb::acquire_ref ${a:t:1:1} file_ref 1 1 ]
    turbine::rule [ list [ turbine::get_file_td ${a:1} ] ] "basename-argwait {${a:1}} ${t:10} ${u:chr} ${u:outputName} ${u:pieces} ${u:sampleName}"
}


proc basename-argwait { a:1 t:10 u:chr u:outputName u:pieces u:sampleName } {
    # Var: $file v:p:2 RENAMED [$file:__v:p]
    # Var: $string v:f:2 RENAMED [$string:__v:f]
    # Var: $int v:n RENAMED [$int:__v:n]
    # Var: $int v:t:3:1 VALUE_OF [int:__t:3:1]
    # Var: $string v:trimmed VALUE_OF [string:trimmed]
    # Var: $int v:n:1 RENAMED [$int:__v:n]
    # Var: $string$[int] v:pieces VALUE_OF [string[int]:pieces]
    # Var: $int v:t:8:1 VALUE_OF [int:__t:8:1]
    # Var: $int v:t:7:1 VALUE_OF [int:__t:7:1]
    # Var: $string v:alias:chr VALUE_OF [string:__alias:chr]
    # Var: $int v:n:2 RENAMED [$int:__v:n]
    # Var: $int v:t:12:1 VALUE_OF [int:__t:12:1]
    # Var: $int v:t:11:1 VALUE_OF [int:__t:11:1]
    # Var: $string v:sampleName VALUE_OF [string:sampleName]
    set v:p:2 [ turbine::retrieve_file ${a:1} CACHED 1 ]
    set v:f:2 [ file tail ${v:p:2} ]
    set v:n [ string length ${v:f:2} ]
    set v:t:3:1 [ expr { ${v:n} - 10 } ]
    set v:trimmed [ turbine::substring_impl ${v:f:2} 0 ${v:t:3:1} ]
    set v:n:1 [ string length ${v:trimmed} ]
    set v:pieces [ turbine::split_impl ${v:trimmed} "." ]
    turbine::build_rec ${u:pieces} ${v:pieces} [ list container integer string ] 0 1
    set v:t:8:1 [ dict size ${v:pieces} ]
    set v:t:7:1 [ expr { ${v:t:8:1} - 1 } ]
    set a:chr [ adlb::subscript_container ${u:pieces} ${v:t:7:1} ]
    set v:alias:chr [ turbine::retrieve_string ${a:chr} CACHED 1 ]
    turbine::store_string ${u:chr} ${v:alias:chr}
    set v:n:2 [ string length ${v:alias:chr} ]
    set v:t:12:1 [ expr { ${v:n:1} - ${v:n:2} } ]
    set v:t:11:1 [ expr { ${v:t:12:1} - 29 } ]
    set v:sampleName [ turbine::substring_impl ${v:trimmed} 0 ${v:t:11:1} ]
    turbine::store_string ${u:sampleName} ${v:sampleName}
    turbine::rule [ list ${t:10} ] [ list __entry-async_op-strcat-1 ${t:10} ${v:sampleName} ${u:outputName} ]
    adlb::write_refcount_decr ${u:pieces} 1
}


proc __entry-async_op-strcat-1 { t:10 v:sampleName u:outputName } {
    # Var: $string v:t:10:3 VALUE_OF [string:__t:10]
    # Var: $string v:outputName VALUE_OF [string:outputName]
    set v:t:10:3 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:outputName "${v:t:10:3}/${v:sampleName}/variant/${v:sampleName}.wDedups.sorted.recalibrated.g.vcf"
    turbine::store_string ${u:outputName} ${v:outputName}
}


proc combineVariantsMain-if1 { u:VCF_list t:10 t:21:1 v:sampleIndex u:chr u:failureLog u:outputName u:sampleName u:sampleSet u:tmpLogDir:1 } {
    # Var: $boolean v:__t:21 RENAMED [$boolean:__v:__t:21] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/CombineVariants.swift:combineVariantsMain():67:39
    set v:__t:21 [ turbine::retrieve_integer ${t:21:1} CACHED 1 ]
    if { ${v:__t:21} } {
        # Var: string[string] u:variables /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:70:0
        global u:variables
        # Var: string[int] u:chrSampleArray RENAMED [string[int]:chrSampleArray] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/CombineVariants.swift:combineVariantsMain():70:3
        # Var: file u:gvcfSample RENAMED [file:gvcfSample] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/CombineVariants.swift:combineVariantsMain():86:21
        # Var: file u:combineLog RENAMED [file:combineLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/CombineVariants.swift:combineVariantsMain():90:29
        # Var: file u:tmpcombineLog RENAMED [file:tmpcombineLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/CombineVariants.swift:combineVariantsMain():94:64
        # Var: string t:41:1 RENAMED [string:__t:41] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/CombineVariants.swift:combineVariantsMain():96:64
        # Var: string t:43:1 RENAMED [string:__t:43] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/CombineVariants.swift:combineVariantsMain():97:13
        # Var: string t:45:1 RENAMED [string:__t:45] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/CombineVariants.swift:combineVariantsMain():98:13
        # Var: string t:46:1 RENAMED [string:__t:46] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/CombineVariants.swift:combineVariantsMain():98:20
        # Var: string t:49:1 RENAMED [string:__t:49] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/CombineVariants.swift:combineVariantsMain():98:47
        # Var: string t:51:1 RENAMED [string:__t:51] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/CombineVariants.swift:combineVariantsMain():99:13
        # Var: string t:55:1 RENAMED [string:__t:55] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/CombineVariants.swift:combineVariantsMain():99:47
        # Var: $int v:t:4:6 VALUE_OF [int:__t:4:6]
        # Var: $string v:t:3:6 VALUE_OF [string:__t:3:6]
        # Var: $string v:startmsg VALUE_OF [string:startmsg]
        lassign [ adlb::multicreate [ list container integer string 1 1 59 ] [ list string 1 1 63 ] [ list string 1 1 64 ] [ list string 1 1 65 ] [ list string 1 1 66 ] [ list string 1 1 67 ] [ list string 1 1 68 ] [ list string 1 1 69 ] ] u:chrSampleArray t:41:1 t:43:1 t:45:1 t:46:1 t:49:1 t:51:1 t:55:1
        turbine::c::log "allocated u:chrSampleArray=<${u:chrSampleArray}> t:41:1=<${t:41:1}> t:43:1=<${t:43:1}> t:45:1=<${t:45:1}> t:46:1=<${t:46:1}>"
        turbine::c::log "allocated t:49:1=<${t:49:1}> t:51:1=<${t:51:1}> t:55:1=<${t:55:1}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 60 ] [ list file 0 1 61 ] [ list file 1 1 62 ] ] [ list 1 1 1 ] ] u:gvcfSample u:combineLog u:tmpcombineLog
        turbine::read_refcount_incr ${u:sampleName} 1
        turbine::read_refcount_incr ${u:chr} 1
        turbine::read_refcount_incr ${t:10} 1
        turbine::read_refcount_incr ${u:outputName} 1
        turbine::read_refcount_incr ${u:sampleSet} 1
        turbine::read_refcount_incr ${u:tmpLogDir:1} 1
        turbine::container_reference ${u:variables} "JAVAEXE" ${t:41:1} string
        turbine::container_reference ${u:variables} "GATKJAR" ${t:43:1} string
        turbine::container_reference ${u:variables} "REFGENOMEDIR" ${t:46:1} string
        turbine::container_reference ${u:variables} "REFGENOME" ${t:49:1} string
        turbine::container_reference ${u:variables} "DBSNP" ${t:55:1} string
        set v:t:4:6 [ clock seconds ]
        set v:t:3:6 ${v:t:4:6}
        set v:startmsg "CombineGVCFs start\t${v:t:3:6}\n"
        turbine::rule [ list ${u:sampleSet} ] "combineVariantsMain-foreach-wait2 ${u:chrSampleArray} ${u:sampleSet}"
        turbine::rule [ list ${u:outputName} ] "__entry-copy_in_filename-1 {${u:gvcfSample}} ${u:outputName}"
        turbine::rule [ list ${u:sampleName} ] [ list __entry-optmerged-7 ${u:VCF_list} ${t:10} ${t:41:1} ${t:43:1} ${t:45:1} ${t:51:1} ${v:sampleIndex} ${v:startmsg} ${u:chr} ${u:chrSampleArray} ${u:combineLog} ${u:gvcfSample} ${u:outputName} ${u:sampleName} ${u:tmpLogDir:1} ${u:tmpcombineLog} ]
        turbine::rule [ list ${t:46:1} ] "__entry-optmerged-8 ${t:45:1} ${t:46:1} ${t:49:1} ${t:51:1} ${t:55:1}"
    } else {
        turbine::file_read_refcount_incr ${u:failureLog} 1
        turbine::rule [ list ${u:outputName} ] "file_exists-argwait-1 ${u:VCF_list} ${v:sampleIndex} {${u:failureLog}} ${u:outputName}"
    }
    turbine::read_refcount_decr ${u:tmpLogDir:1} 1
    turbine::read_refcount_decr ${u:sampleName} 1
    turbine::read_refcount_decr ${u:sampleSet} 1
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${u:outputName} 1
    turbine::read_refcount_decr ${t:10} 1
    turbine::read_refcount_decr ${u:chr} 1
}


proc combineVariantsMain-foreach-wait2 { u:chrSampleArray u:sampleSet } {
    set tcltmp:container_sz [ adlb::enumerate ${u:sampleSet} count all 0 ]
    set tcltmp:iters ${tcltmp:container_sz}
    turbine::read_refcount_incr ${u:sampleSet} [ expr { ${tcltmp:iters} - 1 } ]
    adlb::write_refcount_incr ${u:chrSampleArray} [ expr { ${tcltmp:iters} - 1 } ]
    combineVariantsMain-foreach2:outer ${u:chrSampleArray} ${u:sampleSet} 0 [ expr { ${tcltmp:container_sz} - 1 } ] 1
}


proc combineVariantsMain-foreach2:outer { u:chrSampleArray u:sampleSet tcltmp:lo tcltmp:hi tcltmp:inc } {
    if { [ expr { ${tcltmp:lo} > ${tcltmp:hi} } ] } {
        return
    }
    while {1} {
        set tcltmp:itersleft [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
        if { [ expr { ${tcltmp:itersleft} <= 64 } ] } {
            combineVariantsMain-foreach2:inner ${u:chrSampleArray} ${u:sampleSet} ${tcltmp:lo} ${tcltmp:hi} ${tcltmp:inc}
            return
        } else {
            set tcltmp:skip [ expr { ${tcltmp:inc} * max(64,((${tcltmp:itersleft} - 1) / 16) + 1) } ]
            for { set tcltmp:splitstart [ expr { ${tcltmp:lo} + ${tcltmp:skip} } ] } { ${tcltmp:splitstart} <= ${tcltmp:hi} } { incr tcltmp:splitstart ${tcltmp:skip} } {
                set tcltmp:splitend [ expr { min(${tcltmp:hi},${tcltmp:splitstart} + ${tcltmp:skip} - 1) } ]
                set tcltmp:prio [ turbine::get_priority ]
                turbine::set_priority ${tcltmp:prio}
                adlb::spawn 0 "combineVariantsMain-foreach2:outer ${u:chrSampleArray} ${u:sampleSet} ${tcltmp:splitstart} ${tcltmp:splitend} ${tcltmp:inc}"
                turbine::reset_priority
            }
            set tcltmp:hi [ expr { ${tcltmp:lo} + ${tcltmp:skip} - 1 } ]
        }
    }
}


proc combineVariantsMain-foreach2:inner { u:chrSampleArray u:sampleSet tcltmp:lo tcltmp:hi tcltmp:inc } {
    set tcltmp:splitlen [ expr { ${tcltmp:hi} - ${tcltmp:lo} + 1 } ]
    set tcltmp:contents [ adlb::enumerate ${u:sampleSet} dict ${tcltmp:splitlen} ${tcltmp:lo} ]
    dict for {v:index u:chrBam} ${tcltmp:contents} {
        # Var: $int v:varFlagPos VALUE_OF [int:varFlagPos]
        # Var: $int v:namePos VALUE_OF [int:namePos]
        turbine::file_read_refcount_incr ${u:chrBam} 1
        set v:varFlagPos [ expr { ${v:index} * 2 } ]
        set v:namePos [ expr { ${v:varFlagPos} + 1 } ]
        turbine::container_insert ${u:chrSampleArray} ${v:varFlagPos} "--variant" string 0
        set optf:chrBam [ turbine::get_file_path ${u:chrBam} ]
        turbine::rule [ list ${optf:chrBam} ] "__entry-arr_copy_in_imm {${optf:chrBam}} ${v:namePos} ${u:chrSampleArray}"
    }
    set tcltmp:iters [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
    turbine::read_refcount_decr ${u:sampleSet} [ expr { ${tcltmp:iters} } ]
}


proc __entry-arr_copy_in_imm { optf:chrBam v:namePos u:chrSampleArray } {
    # Var: $string v:of:chrBam VALUE_OF [string:__of:chrBam]
    set v:of:chrBam [ turbine::retrieve_string ${optf:chrBam} CACHED 1 ]
    turbine::container_insert ${u:chrSampleArray} ${v:namePos} ${v:of:chrBam} string 1
}


proc __entry-copy_in_filename-1 { u:gvcfSample u:outputName } {
    # Var: $string v:outputName:1 VALUE_OF [string:outputName]
    set v:outputName:1 [ turbine::retrieve_string ${u:outputName} CACHED 1 ]
    turbine::set_filename_val ${u:gvcfSample} ${v:outputName:1}
}


proc __entry-optmerged-7 { u:VCF_list t:10 t:41:1 t:43:1 t:45:1 t:51:1 v:sampleIndex v:startmsg u:chr u:chrSampleArray u:combineLog u:gvcfSample u:outputName u:sampleName u:tmpLogDir:1 u:tmpcombineLog } {
    # Var: $string v:sampleName:5 VALUE_OF [string:sampleName]
    set v:sampleName:5 [ turbine::retrieve_string ${u:sampleName} CACHED 1 ]
    turbine::rule [ list ${t:10} ] [ list __entry-async_op-strcat-2 ${u:VCF_list} ${t:10} ${t:41:1} ${t:43:1} ${t:45:1} ${t:51:1} ${v:sampleIndex} ${v:sampleName:5} ${v:startmsg} ${u:chrSampleArray} ${u:combineLog} ${u:gvcfSample} ${u:outputName} ${u:tmpcombineLog} ]
    turbine::rule [ list ${u:chr} ${u:tmpLogDir:1} ] [ list __entry-async_op-strcat-3 ${v:sampleName:5} ${u:chr} ${u:tmpLogDir:1} ${u:tmpcombineLog} ]
}


proc __entry-async_op-strcat-2 { u:VCF_list t:10 t:41:1 t:43:1 t:45:1 t:51:1 v:sampleIndex v:sampleName:5 v:startmsg u:chrSampleArray u:combineLog u:gvcfSample u:outputName u:tmpcombineLog } {
    # Var: $string v:t:10:4 VALUE_OF [string:__t:10]
    # Var: $string v:t:29:1 VALUE_OF [string:__t:29:1]
    set v:t:10:4 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:t:29:1 "${v:t:10:4}/${v:sampleName:5}/logs/${v:sampleName:5}_CombineGVCFs.log"
    turbine::set_filename_val ${u:combineLog} ${v:t:29:1}
    turbine::rule [ list ${t:41:1} ${t:43:1} ${t:45:1} ${t:51:1} ${u:chrSampleArray} ${u:outputName} ] [ list CombineGVCFs_logged-chain1 ${u:VCF_list} ${t:41:1} ${t:43:1} ${t:45:1} ${t:51:1} ${v:sampleIndex} ${v:startmsg} ${v:t:29:1} ${u:chrSampleArray} ${u:combineLog} ${u:gvcfSample} ${u:outputName} ${u:tmpcombineLog} ]
}


proc CombineGVCFs_logged-chain1 { u:VCF_list t:41:1 t:43:1 t:45:1 t:51:1 v:sampleIndex v:startmsg v:t:29:1 u:chrSampleArray u:combineLog u:gvcfSample u:outputName u:tmpcombineLog } {
    # Var: $string v:javaexe RENAMED [$string:__v:javaexe] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/merge_vcf.swift:CombineGVCFs():3:124
    # Var: $string v:gatkjar RENAMED [$string:__v:gatkjar] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/merge_vcf.swift:CombineGVCFs():3:124
    # Var: $string v:reference RENAMED [$string:__v:reference] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/merge_vcf.swift:CombineGVCFs():3:124
    # Var: $string v:dbsnp RENAMED [$string:__v:dbsnp] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/merge_vcf.swift:CombineGVCFs():3:124
    # Var: $string$[int] v:variants RENAMED [$string$[int]:__v:variants] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/merge_vcf.swift:CombineGVCFs():3:124
    # Var: $string v:__filename:outputfile RENAMED [$string:__v:__filename:outputfile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/merge_vcf.swift:CombineGVCFs():3:124
    # Var: $file v:outputfile RENAMED [$file:__v:outputfile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/merge_vcf.swift:CombineGVCFs():3:124
    # Var: $file v:outLog RENAMED [$file:__v:outLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/merge_vcf.swift:CombineGVCFs():3:124
    # Var: $int v:t:9:6 VALUE_OF [int:__t:9:6]
    # Var: $string v:t:8:6 VALUE_OF [string:__t:8:6]
    # Var: $string v:endmsg VALUE_OF [string:endmsg]
    # Var: $string v:t:11:6 VALUE_OF [string:__t:11:6]
    set v:javaexe [ turbine::retrieve_string ${t:41:1} CACHED 1 ]
    set v:gatkjar [ turbine::retrieve_string ${t:43:1} CACHED 1 ]
    set v:reference [ turbine::retrieve_string ${t:45:1} CACHED 1 ]
    set v:dbsnp [ turbine::retrieve_string ${t:51:1} CACHED 1 ]
    set v:variants [ turbine::unpack_args ${u:chrSampleArray} 1 string ]
    set v:__filename:outputfile [ turbine::retrieve_string ${u:outputName} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile [ turbine::create_local_file_ref ${v:__filename:outputfile} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:outLog [ turbine::create_local_file_ref ${v:t:29:1} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javaexe "-Xmx8g" "-jar" ${v:gatkjar} "-T" "CombineGVCFs" "-R" ${v:reference} "--dbsnp" ${v:dbsnp} {*}${v:variants} "-o" ${v:__filename:outputfile} [ dict create "stderr" ${v:t:29:1} ] ]
    turbine::exec_external ${v:javaexe} [ dict create "stderr" ${v:t:29:1} ] "-Xmx8g" "-jar" ${v:gatkjar} "-T" "CombineGVCFs" "-R" ${v:reference} "--dbsnp" ${v:dbsnp} {*}${v:variants} "-o" ${v:__filename:outputfile}
    turbine::store_file ${u:gvcfSample} v:outputfile 0
    turbine::store_file ${u:combineLog} v:outLog 0
    set v:t:9:6 [ clock seconds ]
    set v:t:8:6 ${v:t:9:6}
    set v:endmsg "CombineGVCFs end\t${v:t:8:6}\n"
    set v:t:11:6 "${v:startmsg}${v:endmsg}"
    set wfilename:tmpcombineLog [ turbine::get_file_path ${u:tmpcombineLog} ]
    turbine::rule [ list ${wfilename:tmpcombineLog} ] [ list __entry-call_foreign-write-1 ${u:VCF_list} ${v:sampleIndex} ${v:t:11:6} ${wfilename:tmpcombineLog} ${u:gvcfSample} ${u:tmpcombineLog} ]
    turbine::decr_local_file_refcount v:outputfile
    turbine::decr_local_file_refcount v:outLog
    turbine::read_refcount_decr ${u:chrSampleArray} 1
}


proc __entry-call_foreign-write-1 { u:VCF_list v:sampleIndex v:t:11:6 wfilename:tmpcombineLog u:gvcfSample u:tmpcombineLog } {
    # Var: $file v:tmpcombineLog VALUE_OF [file:tmpcombineLog]
    # Var: $string v:__wfilename:tmpcombineLog VALUE_OF [string:__wfilename:tmpcombineLog]
    set v:__wfilename:tmpcombineLog [ turbine::retrieve_string ${wfilename:tmpcombineLog} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:tmpcombineLog [ turbine::create_local_file_ref ${v:__wfilename:tmpcombineLog} ${tcltmp:init_rc} 1 ]
    turbine::file_write_local v:tmpcombineLog ${v:t:11:6}
    turbine::store_file ${u:tmpcombineLog} v:tmpcombineLog 0
    turbine::container_insert ${u:VCF_list} ${v:sampleIndex} ${u:gvcfSample} file_ref 1
}


proc __entry-async_op-strcat-3 { v:sampleName:5 u:chr u:tmpLogDir:1 u:tmpcombineLog } {
    # Var: $string v:tmpLogDir:1:1 VALUE_OF [string:tmpLogDir:1]
    # Var: $string v:chr:2 VALUE_OF [string:chr]
    # Var: $string v:t:38:1 VALUE_OF [string:__t:38:1]
    set v:tmpLogDir:1:1 [ turbine::retrieve_string ${u:tmpLogDir:1} CACHED 1 ]
    set v:chr:2 [ turbine::retrieve_string ${u:chr} CACHED 1 ]
    set v:t:38:1 "${v:tmpLogDir:1:1}${v:sampleName:5}.${v:chr:2}_CombineGVCFs.log"
    turbine::set_filename_val ${u:tmpcombineLog} ${v:t:38:1}
}


proc __entry-optmerged-8 { t:45:1 t:46:1 t:49:1 t:51:1 t:55:1 } {
    # Var: $string v:t:46:1 VALUE_OF [string:__t:46:1]
    set v:t:46:1 [ turbine::retrieve_string ${t:46:1} CACHED 1 ]
    turbine::rule [ list ${t:49:1} ] [ list __entry-async_op-strcat-4 ${t:45:1} ${t:49:1} ${v:t:46:1} ]
    turbine::rule [ list ${t:55:1} ] [ list __entry-async_op-strcat-5 ${t:51:1} ${t:55:1} ${v:t:46:1} ]
}


proc __entry-async_op-strcat-4 { t:45:1 t:49:1 v:t:46:1 } {
    # Var: $string v:t:49:1 VALUE_OF [string:__t:49:1]
    # Var: $string v:t:45:1 VALUE_OF [string:__t:45:1]
    set v:t:49:1 [ turbine::retrieve_string ${t:49:1} CACHED 1 ]
    set v:t:45:1 "${v:t:46:1}/${v:t:49:1}"
    turbine::store_string ${t:45:1} ${v:t:45:1}
}


proc __entry-async_op-strcat-5 { t:51:1 t:55:1 v:t:46:1 } {
    # Var: $string v:t:55:1 VALUE_OF [string:__t:55:1]
    # Var: $string v:t:51:1 VALUE_OF [string:__t:51:1]
    set v:t:55:1 [ turbine::retrieve_string ${t:55:1} CACHED 1 ]
    set v:t:51:1 "${v:t:46:1}/${v:t:55:1}"
    turbine::store_string ${t:51:1} ${v:t:51:1}
}


proc file_exists-argwait-1 { u:VCF_list v:sampleIndex u:failureLog u:outputName } {
    # Var: $string v:f:3 RENAMED [$string:__v:f]
    # Var: $boolean v:o RENAMED [$boolean:__v:o]
    set v:f:3 [ turbine::retrieve_string ${u:outputName} CACHED 1 ]
    set v:o [ file exists ${v:f:3} ]
    if { ${v:o} } {
        # Var: file t:58:1 RENAMED [file:__t:58] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/CombineVariants.swift:combineVariantsMain():107:4
        # Var: $file v:t:58:1 VALUE_OF [file:__t:58:1]
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 70 ] ] [ list 0 ] ] t:58:1
        set tcltmp:init_rc 1
        set v:t:58:1 [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
        turbine::input_file_local v:t:58:1 ${v:f:3}
        turbine::store_file ${t:58:1} v:t:58:1 1
        turbine::container_insert ${u:VCF_list} ${v:sampleIndex} ${t:58:1} file_ref 0
        turbine::decr_local_file_refcount v:t:58:1
    } else {
        # Var: string u:message RENAMED [string:message] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/CombineVariants.swift:combineVariantsMain():110:4
        # Var: boolean t:62:1 RENAMED [boolean:__t:62] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/CombineVariants.swift:combineVariantsMain():113:4
        # Var: $string v:message VALUE_OF [string:message]
        lassign [ adlb::multicreate [ list string 2 1 71 ] [ list integer 1 1 72 ] ] u:message t:62:1
        turbine::c::log "allocated u:message=<${u:message}> t:62:1=<${t:62:1}>"
        turbine::file_read_refcount_incr ${u:failureLog} 1
        set v:message "ERROR: ${v:f:3} not found. Did you set COMBINE_VARIANT_STAGE to 'N' by accident?\n"
        turbine::store_string ${u:message} ${v:message}
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:append ${t:62:1} {${u:failureLog}} ${u:message}"
        turbine::reset_priority
        turbine::rule [ list ${t:62:1} ] "combineVariantsMain-chain2 ${t:62:1} ${u:message}"
    }
    turbine::file_read_refcount_decr ${u:failureLog} 1
    adlb::write_refcount_decr ${u:VCF_list} 1
}


proc combineVariantsMain-chain2 { t:62:1 u:message } {
    # Var: string[string] u:variables /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:70:0
    global u:variables
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:exitIfFlagGiven ${u:variables} ${u:message}"
    turbine::reset_priority
    turbine::read_refcount_decr ${t:62:1} 1
}


proc __entry-optmerged-9 { t:10 t:21:2 t:25:5 t:45:2 t:49:2 t:53:2 t:57:2 t:61:2 u:failureLog u:splitBams u:splitVCFs u:tmpLogDir:1 } {
    # Var: *rw(file)[int]$[int] v:splitBams VALUE_OF [*rw(*rw(file)[int])[int]:splitBams]
    # Var: $int v:t:132 VALUE_OF [int:__t:132]
    # Var: $boolean v:t:131 VALUE_OF [boolean:__t:131]
    # Var: $void v:t:130 VALUE_OF [void:__t:130]
    set v:splitBams [ adlb::enumerate ${u:splitBams} dict all 0 0 ]
    set v:t:132 [ dict size ${v:splitBams} ]
    set v:t:131 [ expr { ${v:t:132} != 0 } ]
    turbine::assert_impl ${v:t:131} "FAILURE: The split bam out array was empty: none of the samples were split properly"
    set tcltmp:iters [ dict size ${v:splitBams} ]
    turbine::file_read_refcount_incr ${u:failureLog} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${u:tmpLogDir:1} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:45:2} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:61:2} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:21:2} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:53:2} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:49:2} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:10} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:57:2} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:25:5} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${u:splitVCFs} [ expr { ${tcltmp:iters} } ]
    adlb::write_refcount_incr ${u:splitVCFs} [ expr { ${tcltmp:iters} } ]
    dict for {v:chrIndex u:chrSet} ${v:splitBams} {
        # Var: string[int] u:pieces:1 RENAMED [string[int]:pieces] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():362:2
        # Var: string u:chr:1 RENAMED [string:chr] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():363:2
        # Var: string u:sampleName:1 RENAMED [string:sampleName] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():366:2
        lassign [ adlb::multicreate [ list container integer string 1 2 73 ] [ list string 1 1 74 ] [ list string 1 1 75 ] ] u:pieces:1 u:chr:1 u:sampleName:1
        turbine::c::log "allocated u:pieces:1=<${u:pieces:1}> u:chr:1=<${u:chr:1}> u:sampleName:1=<${u:sampleName:1}>"
        turbine::read_refcount_incr ${u:chrSet} 2
        set a:t:1:2 [ adlb::subscript_container ${u:chrSet} 0 ]
        turbine::rule [ list ${a:t:1:2} ] "VCSplitMain-call-basename1 {${a:t:1:2}} ${u:chr:1} ${u:pieces:1} ${u:sampleName:1}"
        turbine::rule [ list ${u:chrSet} ] "VCSplitMain-foreach-wait2 ${t:10} ${t:21:2} ${t:25:5} ${t:45:2} ${t:49:2} ${t:53:2} ${t:57:2} ${t:61:2} ${v:chrIndex} ${u:chr:1} ${u:chrSet} {${u:failureLog}} ${u:sampleName:1} ${u:splitVCFs} ${u:tmpLogDir:1}"
    }
    turbine::read_refcount_decr ${t:53:2} 1
    turbine::read_refcount_decr ${u:tmpLogDir:1} 1
    turbine::read_refcount_decr ${t:57:2} 1
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${t:61:2} 1
    turbine::read_refcount_decr ${t:45:2} 1
    turbine::read_refcount_decr ${t:21:2} 1
    turbine::read_refcount_decr ${t:10} 1
    turbine::read_refcount_decr ${t:25:5} 1
    turbine::read_refcount_decr ${t:49:2} 1
    turbine::read_refcount_decr ${u:splitVCFs} 1
    turbine::read_refcount_decr ${u:splitBams} 1
    adlb::write_refcount_decr ${u:splitVCFs} 1
}


proc VCSplitMain-call-basename1 { a:t:1:2 u:chr:1 u:pieces:1 u:sampleName:1 } {
    set a:1:1 [ adlb::acquire_ref ${a:t:1:2} file_ref 1 1 ]
    turbine::rule [ list [ turbine::get_file_td ${a:1:1} ] ] "basename-argwait-1 {${a:1:1}} ${u:chr:1} ${u:pieces:1} ${u:sampleName:1}"
}


proc basename-argwait-1 { a:1:1 u:chr:1 u:pieces:1 u:sampleName:1 } {
    # Var: $file v:p:3 RENAMED [$file:__v:p]
    # Var: $string v:f:4 RENAMED [$string:__v:f]
    # Var: $int v:n:5 RENAMED [$int:__v:n]
    # Var: $int v:t:3:2 VALUE_OF [int:__t:3:2]
    # Var: $string v:trimmed:1 VALUE_OF [string:trimmed:1]
    # Var: $int v:n:6 RENAMED [$int:__v:n]
    # Var: $string$[int] v:pieces:1:1 VALUE_OF [string[int]:pieces:1]
    # Var: $int v:t:8:2 VALUE_OF [int:__t:8:2]
    # Var: $int v:t:7:2 VALUE_OF [int:__t:7:2]
    # Var: $string v:alias:chr:1 VALUE_OF [string:__alias:chr:1]
    # Var: $int v:n:7 RENAMED [$int:__v:n]
    # Var: $int v:t:12:2 VALUE_OF [int:__t:12:2]
    # Var: $int v:t:11:2 VALUE_OF [int:__t:11:2]
    # Var: $string v:sampleName:1:1 VALUE_OF [string:sampleName:1]
    set v:p:3 [ turbine::retrieve_file ${a:1:1} CACHED 1 ]
    set v:f:4 [ file tail ${v:p:3} ]
    set v:n:5 [ string length ${v:f:4} ]
    set v:t:3:2 [ expr { ${v:n:5} - 8 } ]
    set v:trimmed:1 [ turbine::substring_impl ${v:f:4} 0 ${v:t:3:2} ]
    set v:n:6 [ string length ${v:trimmed:1} ]
    set v:pieces:1:1 [ turbine::split_impl ${v:trimmed:1} "." ]
    turbine::build_rec ${u:pieces:1} ${v:pieces:1:1} [ list container integer string ] 0 1
    set v:t:8:2 [ dict size ${v:pieces:1:1} ]
    set v:t:7:2 [ expr { ${v:t:8:2} - 1 } ]
    set a:chr:1 [ adlb::subscript_container ${u:pieces:1} ${v:t:7:2} ]
    set v:alias:chr:1 [ turbine::retrieve_string ${a:chr:1} CACHED 1 ]
    turbine::store_string ${u:chr:1} ${v:alias:chr:1}
    set v:n:7 [ string length ${v:alias:chr:1} ]
    set v:t:12:2 [ expr { ${v:n:6} - ${v:n:7} } ]
    set v:t:11:2 [ expr { ${v:t:12:2} - 16 } ]
    set v:sampleName:1:1 [ turbine::substring_impl ${v:trimmed:1} 0 ${v:t:11:2} ]
    turbine::store_string ${u:sampleName:1} ${v:sampleName:1:1}
    adlb::write_refcount_decr ${u:pieces:1} 1
}


proc VCSplitMain-foreach-wait2 { t:10 t:21:2 t:25:5 t:45:2 t:49:2 t:53:2 t:57:2 t:61:2 v:chrIndex u:chr:1 u:chrSet u:failureLog u:sampleName:1 u:splitVCFs u:tmpLogDir:1 } {
    set tcltmp:container_sz [ adlb::enumerate ${u:chrSet} count all 0 ]
    set tcltmp:iters ${tcltmp:container_sz}
    turbine::read_refcount_incr ${u:chr:1} [ expr { 2 * ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${u:tmpLogDir:1} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:45:2} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:61:2} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:21:2} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:53:2} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:10} [ expr { 2 * ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${u:chrSet} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${u:splitVCFs} [ expr { 2 * ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${u:sampleName:1} [ expr { 2 * ${tcltmp:iters} - 1 } ]
    turbine::file_read_refcount_incr ${u:failureLog} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:49:2} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:57:2} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:25:5} [ expr { ${tcltmp:iters} - 1 } ]
    adlb::write_refcount_incr ${u:splitVCFs} [ expr { ${tcltmp:iters} - 1 } ]
    VCSplitMain-foreach2:outer ${t:10} ${t:21:2} ${t:25:5} ${t:45:2} ${t:49:2} ${t:53:2} ${t:57:2} ${t:61:2} ${v:chrIndex} ${u:chr:1} ${u:failureLog} ${u:sampleName:1} ${u:splitVCFs} ${u:tmpLogDir:1} ${u:chrSet} 0 [ expr { ${tcltmp:container_sz} - 1 } ] 1
}


proc VCSplitMain-foreach2:outer { t:10 t:21:2 t:25:5 t:45:2 t:49:2 t:53:2 t:57:2 t:61:2 v:chrIndex u:chr:1 u:failureLog u:sampleName:1 u:splitVCFs u:tmpLogDir:1 u:chrSet tcltmp:lo tcltmp:hi tcltmp:inc } {
    if { [ expr { ${tcltmp:lo} > ${tcltmp:hi} } ] } {
        return
    }
    while {1} {
        set tcltmp:itersleft [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
        if { [ expr { ${tcltmp:itersleft} <= 64 } ] } {
            VCSplitMain-foreach2:inner ${t:10} ${t:21:2} ${t:25:5} ${t:45:2} ${t:49:2} ${t:53:2} ${t:57:2} ${t:61:2} ${v:chrIndex} ${u:chr:1} ${u:failureLog} ${u:sampleName:1} ${u:splitVCFs} ${u:tmpLogDir:1} ${u:chrSet} ${tcltmp:lo} ${tcltmp:hi} ${tcltmp:inc}
            return
        } else {
            set tcltmp:skip [ expr { ${tcltmp:inc} * max(64,((${tcltmp:itersleft} - 1) / 16) + 1) } ]
            for { set tcltmp:splitstart [ expr { ${tcltmp:lo} + ${tcltmp:skip} } ] } { ${tcltmp:splitstart} <= ${tcltmp:hi} } { incr tcltmp:splitstart ${tcltmp:skip} } {
                set tcltmp:splitend [ expr { min(${tcltmp:hi},${tcltmp:splitstart} + ${tcltmp:skip} - 1) } ]
                set tcltmp:prio [ turbine::get_priority ]
                turbine::set_priority ${tcltmp:prio}
                adlb::spawn 0 "VCSplitMain-foreach2:outer ${t:10} ${t:21:2} ${t:25:5} ${t:45:2} ${t:49:2} ${t:53:2} ${t:57:2} ${t:61:2} ${v:chrIndex} ${u:chr:1} {${u:failureLog}} ${u:sampleName:1} ${u:splitVCFs} ${u:tmpLogDir:1} ${u:chrSet} ${tcltmp:splitstart} ${tcltmp:splitend} ${tcltmp:inc}"
                turbine::reset_priority
            }
            set tcltmp:hi [ expr { ${tcltmp:lo} + ${tcltmp:skip} - 1 } ]
        }
    }
}


proc VCSplitMain-foreach2:inner { t:10 t:21:2 t:25:5 t:45:2 t:49:2 t:53:2 t:57:2 t:61:2 v:chrIndex u:chr:1 u:failureLog u:sampleName:1 u:splitVCFs u:tmpLogDir:1 u:chrSet tcltmp:lo tcltmp:hi tcltmp:inc } {
    set tcltmp:splitlen [ expr { ${tcltmp:hi} - ${tcltmp:lo} + 1 } ]
    set tcltmp:contents [ adlb::enumerate ${u:chrSet} dict ${tcltmp:splitlen} ${tcltmp:lo} ]
    dict for {v:sampleIndex:1 u:inputBam} ${tcltmp:contents} {
        turbine::file_read_refcount_incr ${u:inputBam} 1
        turbine::rule [ list ${t:21:2} ${t:45:2} ${t:49:2} ${t:53:2} ${t:57:2} ${t:61:2} ] "__entry-async_op-or ${t:10} ${t:21:2} ${t:25:5} ${t:45:2} ${t:49:2} ${t:53:2} ${t:57:2} ${t:61:2} ${v:chrIndex} ${v:sampleIndex:1} ${u:chr:1} {${u:failureLog}} {${u:inputBam}} ${u:sampleName:1} ${u:splitVCFs} ${u:tmpLogDir:1}"
    }
    set tcltmp:iters [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
    turbine::read_refcount_decr ${u:chrSet} [ expr { ${tcltmp:iters} } ]
}


proc __entry-async_op-or { t:10 t:21:2 t:25:5 t:45:2 t:49:2 t:53:2 t:57:2 t:61:2 v:chrIndex v:sampleIndex:1 u:chr:1 u:failureLog u:inputBam u:sampleName:1 u:splitVCFs u:tmpLogDir:1 } {
    # Var: $boolean v:t:21:2:1 VALUE_OF [boolean:__t:21:2]
    # Var: $boolean v:t:45:2:1 VALUE_OF [boolean:__t:45:2]
    # Var: $boolean v:t:20:2 VALUE_OF [boolean:__t:20:2]
    # Var: $boolean v:t:49:2:1 VALUE_OF [boolean:__t:49:2]
    # Var: $boolean v:t:19:2 VALUE_OF [boolean:__t:19:2]
    # Var: $boolean v:t:53:2:1 VALUE_OF [boolean:__t:53:2]
    # Var: $boolean v:t:18:2 VALUE_OF [boolean:__t:18:2]
    # Var: $boolean v:t:57:2:1 VALUE_OF [boolean:__t:57:2]
    # Var: $boolean v:t:17:2 VALUE_OF [boolean:__t:17:2]
    # Var: $boolean v:t:61:2:1 VALUE_OF [boolean:__t:61:2]
    # Var: $boolean v:t:16:2 VALUE_OF [boolean:__t:16:2]
    set v:t:21:2:1 [ turbine::retrieve_integer ${t:21:2} CACHED 1 ]
    set v:t:45:2:1 [ turbine::retrieve_integer ${t:45:2} CACHED 1 ]
    set v:t:20:2 [ expr { ${v:t:21:2:1} || ${v:t:45:2:1} } ]
    set v:t:49:2:1 [ turbine::retrieve_integer ${t:49:2} CACHED 1 ]
    set v:t:19:2 [ expr { ${v:t:20:2} || ${v:t:49:2:1} } ]
    set v:t:53:2:1 [ turbine::retrieve_integer ${t:53:2} CACHED 1 ]
    set v:t:18:2 [ expr { ${v:t:19:2} || ${v:t:53:2:1} } ]
    set v:t:57:2:1 [ turbine::retrieve_integer ${t:57:2} CACHED 1 ]
    set v:t:17:2 [ expr { ${v:t:18:2} || ${v:t:57:2:1} } ]
    set v:t:61:2:1 [ turbine::retrieve_integer ${t:61:2} CACHED 1 ]
    set v:t:16:2 [ expr { ${v:t:17:2} || ${v:t:61:2:1} } ]
    if { ${v:t:16:2} } {
        # Var: string[string] u:variables /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:70:0
        global u:variables
        # Var: file u:recalfiles RENAMED [file:recalfiles] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():387:8
        # Var: string[int] u:recalparmsindels RENAMED [string[int]:recalparmsindels] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():393:4
        # Var: string[int] u:realparms RENAMED [string[int]:realparms] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():396:4
        # Var: string t:71:1 RENAMED [string:__t:71] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():389:28
        # Var: string t:72:1 RENAMED [string:__t:72] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():389:35
        # Var: string t:75:1 RENAMED [string:__t:75] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():389:62
        # Var: string t:78:1 RENAMED [string:__t:78] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():390:7
        # Var: file u:recalibratedbam RENAMED [file:recalibratedbam] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():405:63
        # Var: file u:gvcfVariants RENAMED [file:gvcfVariants] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():415:60
        # Var: int u:threads:2 RENAMED [int:threads] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callChrVariants():224:1
        # Var: string t:2:7 RENAMED [string:__t:2] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callChrVariants():224:26
        # Var: string t:5:7 RENAMED [string:__t:5] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callChrVariants():224:55
        # Var: int u:ploidy RENAMED [int:ploidy] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callChrVariants():226:1
        # Var: file u:haploLog RENAMED [file:haploLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callChrVariants():233:54
        # Var: file u:tmphaploLog RENAMED [file:tmphaploLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callChrVariants():236:60
        # Var: string t:25:6 RENAMED [string:__t:25] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callChrVariants():238:57
        # Var: string t:27:6 RENAMED [string:__t:27] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callChrVariants():238:74
        # Var: string t:29:6 RENAMED [string:__t:29] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callChrVariants():239:8
        # Var: string t:33:6 RENAMED [string:__t:33] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callChrVariants():239:42
        # Var: string t:35:6 RENAMED [string:__t:35] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callChrVariants():241:8
        # Var: string t:39:6 RENAMED [string:__t:39] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callChrVariants():241:42
        # Var: $int v:t:4:1:2 VALUE_OF [int:__t:4:1:2]
        # Var: $string v:t:3:1:2 VALUE_OF [string:__t:3:1:2]
        # Var: $string v:startmsg:1 VALUE_OF [string:startmsg:1]
        lassign [ adlb::multicreate [ list container integer string 1 1 77 ] [ list container integer string 1 1 78 ] [ list string 1 1 79 ] [ list string 1 1 80 ] [ list string 1 1 81 ] [ list string 1 1 82 ] [ list integer 1 1 85 ] [ list string 1 1 86 ] [ list string 1 1 87 ] [ list integer 1 1 88 ] [ list string 1 1 91 ] [ list string 1 1 92 ] [ list string 1 1 93 ] [ list string 1 1 94 ] [ list string 1 1 95 ] [ list string 1 1 96 ] ] u:recalparmsindels u:realparms t:71:1 t:72:1 t:75:1 t:78:1 u:threads:2 t:2:7 t:5:7 u:ploidy t:25:6 t:27:6 t:29:6 t:33:6 t:35:6 t:39:6
        turbine::c::log "allocated u:recalparmsindels=<${u:recalparmsindels}> u:realparms=<${u:realparms}> t:71:1=<${t:71:1}> t:72:1=<${t:72:1}> t:75:1=<${t:75:1}>"
        turbine::c::log "allocated t:78:1=<${t:78:1}> u:threads:2=<${u:threads:2}> t:2:7=<${t:2:7}> t:5:7=<${t:5:7}> u:ploidy=<${u:ploidy}>"
        turbine::c::log "allocated t:25:6=<${t:25:6}> t:27:6=<${t:27:6}> t:29:6=<${t:29:6}> t:33:6=<${t:33:6}> t:35:6=<${t:35:6}>"
        turbine::c::log "allocated t:39:6=<${t:39:6}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 76 ] [ list file 2 1 83 ] [ list file 1 1 84 ] [ list file 0 1 89 ] [ list file 1 1 90 ] ] [ list 1 1 1 1 1 ] ] u:recalfiles u:recalibratedbam u:gvcfVariants u:haploLog u:tmphaploLog
        turbine::read_refcount_incr ${t:25:5} 1
        turbine::read_refcount_incr ${u:chr:1} 1
        turbine::file_read_refcount_incr ${u:inputBam} 1
        turbine::read_refcount_incr ${u:sampleName:1} 1
        turbine::read_refcount_incr ${u:tmpLogDir:1} 1
        turbine::container_reference ${u:variables} "REFGENOMEDIR" ${t:72:1} string
        turbine::container_reference ${u:variables} "INDELDIR" ${t:75:1} string
        f:find_files ${u:recalfiles} ${t:71:1} ${t:78:1} -100 "HARD" "RANK"
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:recalibrationWrapper {${u:recalibratedbam}} ${u:sampleName:1} ${u:chr:1} ${u:variables} {${u:inputBam}} ${u:realparms} ${u:recalparmsindels}"
        turbine::reset_priority
        turbine::container_reference ${u:variables} "CORES" ${t:2:7} string
        turbine::container_reference ${u:variables} "PROCPERNODE" ${t:5:7} string
        turbine::container_reference ${u:variables} "JAVAEXE" ${t:25:6} string
        turbine::container_reference ${u:variables} "GATKJAR" ${t:27:6} string
        turbine::container_reference ${u:variables} "REFGENOME" ${t:33:6} string
        turbine::container_reference ${u:variables} "DBSNP" ${t:39:6} string
        set v:t:4:1:2 [ clock seconds ]
        set v:t:3:1:2 ${v:t:4:1:2}
        set v:startmsg:1 "HaplotypeCaller start\t${v:t:3:1:2}\n"
        turbine::rule [ list ${t:2:7} ${t:5:7} ] "__entry-async_op-parse_int-1 ${t:2:7} ${t:5:7} ${u:threads:2}"
        turbine::rule [ list ${t:72:1} ] "__entry-optmerged-10 ${t:29:6} ${t:33:6} ${t:35:6} ${t:39:6} ${t:71:1} ${t:72:1} ${t:75:1}"
        turbine::rule [ list ${u:chr:1} ] [ list __entry-optmerged-11 ${t:10} ${t:25:5} ${t:25:6} ${t:27:6} ${t:29:6} ${t:35:6} ${t:78:1} ${v:chrIndex} ${v:sampleIndex:1} ${v:startmsg:1} ${u:chr:1} ${u:gvcfVariants} ${u:haploLog} ${u:ploidy} ${u:realparms} ${u:recalfiles} ${u:recalibratedbam} ${u:recalparmsindels} ${u:sampleName:1} ${u:splitVCFs} ${u:threads:2} ${u:tmpLogDir:1} ${u:tmphaploLog} ]
        turbine::read_refcount_decr ${t:78:1} 1
        turbine::read_refcount_decr ${t:71:1} 1
    } else {
        turbine::file_read_refcount_incr ${u:failureLog} 1
        turbine::rule [ list ${t:10} ${u:chr:1} ${u:sampleName:1} ] "__entry-async_op-strcat-11 ${t:10} ${v:chrIndex} ${v:sampleIndex:1} ${u:chr:1} {${u:failureLog}} ${u:sampleName:1} ${u:splitVCFs}"
    }
    turbine::read_refcount_decr ${u:tmpLogDir:1} 1
    turbine::read_refcount_decr ${u:chr:1} 1
    turbine::read_refcount_decr ${t:10} 1
    turbine::read_refcount_decr ${u:sampleName:1} 1
    turbine::read_refcount_decr ${u:splitVCFs} 1
    turbine::file_read_refcount_decr ${u:inputBam} 1
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${t:25:5} 1
}


proc __entry-async_op-parse_int-1 { t:2:7 t:5:7 u:threads:2 } {
    # Var: $string v:t:5:7 VALUE_OF [string:__t:5:7]
    # Var: $int v:t:4:7 VALUE_OF [int:__t:4:7]
    # Var: $string v:t:2:7 VALUE_OF [string:__t:2:7]
    # Var: $int v:t:1:10 VALUE_OF [int:__t:1:10]
    # Var: $int v:threads:2 VALUE_OF [int:threads:2]
    set v:t:5:7 [ turbine::retrieve_string ${t:5:7} CACHED 1 ]
    set v:t:4:7 [ turbine::parse_int_impl ${v:t:5:7} 10 ]
    set v:t:2:7 [ turbine::retrieve_string ${t:2:7} CACHED 1 ]
    set v:t:1:10 [ turbine::parse_int_impl ${v:t:2:7} 10 ]
    set v:threads:2 [ turbine::divide_integer_impl ${v:t:1:10} ${v:t:4:7} ]
    turbine::store_integer ${u:threads:2} ${v:threads:2}
}


proc __entry-optmerged-10 { t:29:6 t:33:6 t:35:6 t:39:6 t:71:1 t:72:1 t:75:1 } {
    # Var: $string v:t:72:1:1 VALUE_OF [string:__t:72:1]
    set v:t:72:1:1 [ turbine::retrieve_string ${t:72:1} CACHED 1 ]
    turbine::rule [ list ${t:75:1} ] [ list __entry-async_op-strcat-6 ${t:71:1} ${t:75:1} ${v:t:72:1:1} ]
    turbine::rule [ list ${t:33:6} ] [ list __entry-async_op-strcat-7 ${t:29:6} ${t:33:6} ${v:t:72:1:1} ]
    turbine::rule [ list ${t:39:6} ] [ list __entry-async_op-strcat-8 ${t:35:6} ${t:39:6} ${v:t:72:1:1} ]
}


proc __entry-async_op-strcat-6 { t:71:1 t:75:1 v:t:72:1:1 } {
    # Var: $string v:t:75:1 VALUE_OF [string:__t:75:1]
    # Var: $string v:t:71:1 VALUE_OF [string:__t:71:1]
    set v:t:75:1 [ turbine::retrieve_string ${t:75:1} CACHED 1 ]
    set v:t:71:1 "${v:t:72:1:1}/${v:t:75:1}/"
    turbine::store_string ${t:71:1} ${v:t:71:1}
}


proc __entry-async_op-strcat-7 { t:29:6 t:33:6 v:t:72:1:1 } {
    # Var: $string v:t:33:6 VALUE_OF [string:__t:33:6]
    # Var: $string v:t:29:6 VALUE_OF [string:__t:29:6]
    set v:t:33:6 [ turbine::retrieve_string ${t:33:6} CACHED 1 ]
    set v:t:29:6 "${v:t:72:1:1}/${v:t:33:6}"
    turbine::store_string ${t:29:6} ${v:t:29:6}
}


proc __entry-async_op-strcat-8 { t:35:6 t:39:6 v:t:72:1:1 } {
    # Var: $string v:t:39:6 VALUE_OF [string:__t:39:6]
    # Var: $string v:t:35:6 VALUE_OF [string:__t:35:6]
    set v:t:39:6 [ turbine::retrieve_string ${t:39:6} CACHED 1 ]
    set v:t:35:6 "${v:t:72:1:1}/${v:t:39:6}"
    turbine::store_string ${t:35:6} ${v:t:35:6}
}


proc __entry-optmerged-11 { t:10 t:25:5 t:25:6 t:27:6 t:29:6 t:35:6 t:78:1 v:chrIndex v:sampleIndex:1 v:startmsg:1 u:chr:1 u:gvcfVariants u:haploLog u:ploidy u:realparms u:recalfiles u:recalibratedbam u:recalparmsindels u:sampleName:1 u:splitVCFs u:threads:2 u:tmpLogDir:1 u:tmphaploLog } {
    # Var: $string v:chr:1:2 VALUE_OF [string:chr:1]
    # Var: $string v:t:78:1 VALUE_OF [string:__t:78:1]
    # Var: $boolean v:t:8:7 VALUE_OF [boolean:__t:8:7]
    # Var: $boolean v:t:10:7 VALUE_OF [boolean:__t:10:7]
    # Var: $boolean v:t:7:7 VALUE_OF [boolean:__t:7:7]
    set v:chr:1:2 [ turbine::retrieve_string ${u:chr:1} CACHED 1 ]
    set v:t:78:1 "*${v:chr:1:2}.vcf"
    turbine::store_string ${t:78:1} ${v:t:78:1}
    set v:t:8:7 [ string equal ${v:chr:1:2} "M" ]
    set v:t:10:7 [ string equal ${v:chr:1:2} "chrM" ]
    set v:t:7:7 [ expr { ${v:t:8:7} || ${v:t:10:7} } ]
    if { ${v:t:7:7} } {
        turbine::store_integer ${u:ploidy} 1
    } else {
        turbine::store_integer ${u:ploidy} 2
    }
    turbine::rule [ list ${u:sampleName:1} ] [ list __entry-optmerged-12 ${t:10} ${t:25:5} ${t:25:6} ${t:27:6} ${t:29:6} ${t:35:6} ${v:chr:1:2} ${v:chrIndex} ${v:sampleIndex:1} ${v:startmsg:1} ${u:gvcfVariants} ${u:haploLog} ${u:ploidy} ${u:realparms} ${u:recalfiles} ${u:recalibratedbam} ${u:recalparmsindels} ${u:sampleName:1} ${u:splitVCFs} ${u:threads:2} ${u:tmpLogDir:1} ${u:tmphaploLog} ]
}


proc __entry-optmerged-12 { t:10 t:25:5 t:25:6 t:27:6 t:29:6 t:35:6 v:chr:1:2 v:chrIndex v:sampleIndex:1 v:startmsg:1 u:gvcfVariants u:haploLog u:ploidy u:realparms u:recalfiles u:recalibratedbam u:recalparmsindels u:sampleName:1 u:splitVCFs u:threads:2 u:tmpLogDir:1 u:tmphaploLog } {
    # Var: $string v:sampleName:1:2 VALUE_OF [string:sampleName:1]
    set v:sampleName:1:2 [ turbine::retrieve_string ${u:sampleName:1} CACHED 1 ]
    turbine::rule [ list ${t:25:5} ] [ list __entry-async_op-strcat-9 ${t:25:5} ${v:chr:1:2} ${v:sampleName:1:2} ${u:realparms} ${u:recalfiles} ${u:recalparmsindels} ]
    turbine::rule [ list ${u:tmpLogDir:1} ] [ list __entry-async_op-strcat-10 ${v:chr:1:2} ${v:sampleName:1:2} ${u:tmpLogDir:1} ${u:tmphaploLog} ]
    turbine::rule [ list ${t:10} ] [ list __entry-optmerged-13 ${t:10} ${t:25:6} ${t:27:6} ${t:29:6} ${t:35:6} ${v:chr:1:2} ${v:chrIndex} ${v:sampleIndex:1} ${v:sampleName:1:2} ${v:startmsg:1} ${u:gvcfVariants} ${u:haploLog} ${u:ploidy} ${u:recalibratedbam} ${u:splitVCFs} ${u:threads:2} ${u:tmphaploLog} ]
}


proc __entry-async_op-strcat-9 { t:25:5 v:chr:1:2 v:sampleName:1:2 u:realparms u:recalfiles u:recalparmsindels } {
    # Var: $string v:t:25:5:1 VALUE_OF [string:__t:25:5]
    # Var: $string v:t:65:1:1 VALUE_OF [string:__t:65:1]
    set v:t:25:5:1 [ turbine::retrieve_string ${t:25:5} CACHED 1 ]
    set v:t:65:1:1 "${v:t:25:5:1}/${v:sampleName:1:2}.${v:chr:1:2}.recal_foundfiles.txt"
    turbine::set_filename_val ${u:recalfiles} ${v:t:65:1:1}
    turbine::rule [ list [ turbine::get_file_td ${u:recalfiles} ] ] [ list VCSplitMain-chain1 ${v:t:65:1:1} ${u:realparms} ${u:recalfiles} ${u:recalparmsindels} ]
}


proc VCSplitMain-chain1 { v:t:65:1:1 u:realparms u:recalfiles u:recalparmsindels } {
    # Var: string c:s_sknownSite OPT_TEMPORARY
    global c:s_sknownSite
    # Var: file t:84:1 RENAMED [file:__t:84] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():394:27
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 97 ] ] [ list 0 ] ] t:84:1
    f:sed ${t:84:1} ${u:recalfiles} ${c:s_sknownSite} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${t:84:1} ] ] [ list __entry-call_foreign-read ${t:84:1} ${v:t:65:1:1} ${u:realparms} ${u:recalfiles} ${u:recalparmsindels} ]
}


proc __entry-call_foreign-read { t:84:1 v:t:65:1:1 u:realparms u:recalfiles u:recalparmsindels } {
    # Var: $file v:t:84:1:1 VALUE_OF [file:__t:84:1]
    # Var: $string v:t:83:1 VALUE_OF [string:__t:83:1]
    # Var: $int v:n:4 RENAMED [$int:__v:n]
    # Var: $string v:t:82:1 VALUE_OF [string:__t:82:1]
    # Var: $string v:o:2 RENAMED [$string:__v:o]
    # Var: $string$[int] v:recalparmsindels VALUE_OF [string[int]:recalparmsindels]
    set v:t:84:1:1 [ turbine::retrieve_file ${t:84:1} CACHED 1 ]
    set v:t:83:1 [ turbine::file_read_local ${v:t:84:1:1} ]
    set v:n:4 [ string length ${v:t:83:1} ]
    set v:t:82:1 [ turbine::replace_all_impl ${v:t:83:1} "\n" " " 0 ${v:n:4} ]
    set v:o:2 [ string trim ${v:t:82:1} ]
    set v:recalparmsindels [ turbine::split_impl ${v:o:2} " " ]
    turbine::build_rec ${u:recalparmsindels} ${v:recalparmsindels} [ list container integer string ] 0 1
    turbine::rule [ list ] [ list VCSplitMain-chain2 ${v:t:65:1:1} ${u:realparms} ${u:recalfiles} ]
}


proc VCSplitMain-chain2 { v:t:65:1:1 u:realparms u:recalfiles } {
    # Var: string c:s_sknown_g OPT_TEMPORARY
    global c:s_sknown_g
    # Var: file t:93:1 RENAMED [file:__t:93] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():397:27
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 98 ] ] [ list 0 ] ] t:93:1
    f:sed ${t:93:1} ${u:recalfiles} ${c:s_sknown_g} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${t:93:1} ] ] [ list __entry-call_foreign-read-1 ${t:93:1} ${v:t:65:1:1} ${u:realparms} ${u:recalfiles} ]
}


proc __entry-call_foreign-read-1 { t:93:1 v:t:65:1:1 u:realparms u:recalfiles } {
    # Var: $file v:t:93:1:1 VALUE_OF [file:__t:93:1]
    # Var: $string v:t:92:1 VALUE_OF [string:__t:92:1]
    # Var: $int v:n:3 RENAMED [$int:__v:n]
    # Var: $string v:t:91:1 VALUE_OF [string:__t:91:1]
    # Var: $string v:o:1 RENAMED [$string:__v:o]
    # Var: $string$[int] v:realparms VALUE_OF [string[int]:realparms]
    set v:t:93:1:1 [ turbine::retrieve_file ${t:93:1} CACHED 1 ]
    set v:t:92:1 [ turbine::file_read_local ${v:t:93:1:1} ]
    set v:n:3 [ string length ${v:t:92:1} ]
    set v:t:91:1 [ turbine::replace_all_impl ${v:t:92:1} "\n" " " 0 ${v:n:3} ]
    set v:o:1 [ string trim ${v:t:91:1} ]
    set v:realparms [ turbine::split_impl ${v:o:1} " " ]
    turbine::build_rec ${u:realparms} ${v:realparms} [ list container integer string ] 0 1
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list VCSplitMain-chain3 ${v:t:65:1:1} ${u:recalfiles} ]
    turbine::reset_priority
}


proc VCSplitMain-chain3 { v:t:65:1:1 u:recalfiles } {
    # Var: $file v:f:11 RENAMED [$file:__v:f] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:rm():55:6
    # Var: $void v:v:2 RENAMED [$void:__v:v] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:rm():55:6
    set v:f:11 [ turbine::retrieve_file ${u:recalfiles} CACHED 1 ]
    turbine::c::log [ list exec: "rm" ${v:t:65:1:1} [ dict create ] ]
    turbine::exec_external "rm" [ dict create ] ${v:t:65:1:1}
}


proc __entry-async_op-strcat-10 { v:chr:1:2 v:sampleName:1:2 u:tmpLogDir:1 u:tmphaploLog } {
    # Var: $string v:tmpLogDir:1:2 VALUE_OF [string:tmpLogDir:1]
    # Var: $string v:t:22:6 VALUE_OF [string:__t:22:6]
    set v:tmpLogDir:1:2 [ turbine::retrieve_string ${u:tmpLogDir:1} CACHED 1 ]
    set v:t:22:6 "${v:tmpLogDir:1:2}${v:sampleName:1:2}.${v:chr:1:2}_HaplotypeCaller.log"
    turbine::set_filename_val ${u:tmphaploLog} ${v:t:22:6}
}


proc __entry-optmerged-13 { t:10 t:25:6 t:27:6 t:29:6 t:35:6 v:chr:1:2 v:chrIndex v:sampleIndex:1 v:sampleName:1:2 v:startmsg:1 u:gvcfVariants u:haploLog u:ploidy u:recalibratedbam u:splitVCFs u:threads:2 u:tmphaploLog } {
    # Var: $string v:t:10:8 VALUE_OF [string:__t:10]
    # Var: $string v:LogDir:1 VALUE_OF [string:LogDir:1]
    # Var: $string v:t:16:6 VALUE_OF [string:__t:16:6]
    # Var: $string v:t:100:1:1 VALUE_OF [string:__t:100:1]
    # Var: $string v:t:107:1 VALUE_OF [string:__t:107:1]
    set v:t:10:8 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:LogDir:1 "${v:t:10:8}/${v:sampleName:1:2}/logs/"
    set v:t:16:6 "${v:LogDir:1}${v:sampleName:1:2}.${v:chr:1:2}_HaplotypeCaller.log"
    turbine::set_filename_val ${u:haploLog} ${v:t:16:6}
    set v:t:100:1:1 "${v:t:10:8}/${v:sampleName:1:2}/realign/${v:sampleName:1:2}.wDedups.sorted.recalibrated.${v:chr:1:2}.bam"
    set v:t:107:1 "${v:t:10:8}/${v:sampleName:1:2}/variant/${v:sampleName:1:2}.wDedups.sorted.recalibrated.${v:chr:1:2}.g.vcf"
    turbine::set_filename_val ${u:recalibratedbam} ${v:t:100:1:1}
    turbine::set_filename_val ${u:gvcfVariants} ${v:t:107:1}
    turbine::rule [ list ${t:25:6} ${t:27:6} ${t:29:6} ${t:35:6} [ turbine::get_file_td ${u:recalibratedbam} ] ${u:threads:2} ] [ list HaplotypeCaller_logged-chain1 ${t:25:6} ${t:27:6} ${t:29:6} ${t:35:6} ${v:chr:1:2} ${v:chrIndex} ${v:sampleIndex:1} ${v:startmsg:1} ${v:t:100:1:1} ${v:t:107:1} ${v:t:16:6} ${u:gvcfVariants} ${u:haploLog} ${u:ploidy} ${u:recalibratedbam} ${u:splitVCFs} ${u:threads:2} ${u:tmphaploLog} ]
}


proc HaplotypeCaller_logged-chain1 { t:25:6 t:27:6 t:29:6 t:35:6 v:chr:1:2 v:chrIndex v:sampleIndex:1 v:startmsg:1 v:t:100:1:1 v:t:107:1 v:t:16:6 u:gvcfVariants u:haploLog u:ploidy u:recalibratedbam u:splitVCFs u:threads:2 u:tmphaploLog } {
    # Var: $string v:javaexe:1 RENAMED [$string:__v:javaexe] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:HaplotypeCaller():92:9
    # Var: $string v:gatkjar:1 RENAMED [$string:__v:gatkjar] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:HaplotypeCaller():92:9
    # Var: $string v:reference:1 RENAMED [$string:__v:reference] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:HaplotypeCaller():92:9
    # Var: $string v:dbsnp:1 RENAMED [$string:__v:dbsnp] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:HaplotypeCaller():92:9
    # Var: $int v:ploidy RENAMED [$int:__v:ploidy] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:HaplotypeCaller():92:9
    # Var: $int v:thr RENAMED [$int:__v:thr] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:HaplotypeCaller():92:9
    # Var: $file v:inputFile:1 RENAMED [$file:__v:inputFile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:HaplotypeCaller():92:9
    # Var: $file v:outputfile:1 RENAMED [$file:__v:outputfile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:HaplotypeCaller():92:9
    # Var: $file v:outLog:1 RENAMED [$file:__v:outLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:HaplotypeCaller():92:9
    # Var: $int v:t:9:1:1 VALUE_OF [int:__t:9:1:1]
    # Var: $string v:t:8:1:1 VALUE_OF [string:__t:8:1:1]
    # Var: $string v:endmsg:1 VALUE_OF [string:endmsg:1]
    # Var: $string v:t:11:1:1 VALUE_OF [string:__t:11:1:1]
    set v:javaexe:1 [ turbine::retrieve_string ${t:25:6} CACHED 1 ]
    set v:gatkjar:1 [ turbine::retrieve_string ${t:27:6} CACHED 1 ]
    set v:reference:1 [ turbine::retrieve_string ${t:29:6} CACHED 1 ]
    set v:dbsnp:1 [ turbine::retrieve_string ${t:35:6} CACHED 1 ]
    set v:ploidy [ turbine::retrieve_integer ${u:ploidy} CACHED 1 ]
    set v:thr [ turbine::retrieve_integer ${u:threads:2} CACHED 1 ]
    set v:inputFile:1 [ turbine::retrieve_file ${u:recalibratedbam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:1 [ turbine::create_local_file_ref ${v:t:107:1} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:outLog:1 [ turbine::create_local_file_ref ${v:t:16:6} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javaexe:1 "-Xmx8g" "-jar" ${v:gatkjar:1} "-T" "HaplotypeCaller" "-R" ${v:reference:1} "-I" ${v:t:100:1:1} "--dbsnp" ${v:dbsnp:1} "-o" ${v:t:107:1} "--emitRefConfidence" "GVCF" "-gt_mode" "DISCOVERY" "-A" "Coverage" "-A" "FisherStrand" "-A" "StrandOddsRatio" "-A" "HaplotypeScore" "-A" "MappingQualityRankSumTest" "-A" "QualByDepth" "-A" "RMSMappingQuality" "-A" "ReadPosRankSumTest" "-stand_call_conf" 30 "-stand_emit_conf" 30 "--sample_ploidy" ${v:ploidy} "-nt" 1 "-nct" ${v:thr} "-L" ${v:chr:1:2} [ dict create "stderr" ${v:t:16:6} ] ]
    turbine::exec_external ${v:javaexe:1} [ dict create "stderr" ${v:t:16:6} ] "-Xmx8g" "-jar" ${v:gatkjar:1} "-T" "HaplotypeCaller" "-R" ${v:reference:1} "-I" ${v:t:100:1:1} "--dbsnp" ${v:dbsnp:1} "-o" ${v:t:107:1} "--emitRefConfidence" "GVCF" "-gt_mode" "DISCOVERY" "-A" "Coverage" "-A" "FisherStrand" "-A" "StrandOddsRatio" "-A" "HaplotypeScore" "-A" "MappingQualityRankSumTest" "-A" "QualByDepth" "-A" "RMSMappingQuality" "-A" "ReadPosRankSumTest" "-stand_call_conf" 30 "-stand_emit_conf" 30 "--sample_ploidy" ${v:ploidy} "-nt" 1 "-nct" ${v:thr} "-L" ${v:chr:1:2}
    turbine::store_file ${u:gvcfVariants} v:outputfile:1 0
    turbine::store_file ${u:haploLog} v:outLog:1 0
    set v:t:114:1 [ turbine::create_nested ${u:splitVCFs} ${v:sampleIndex:1} container integer file_ref 0 1 1 1 ]
    turbine::container_insert ${v:t:114:1} ${v:chrIndex} ${u:gvcfVariants} file_ref 1
    set v:t:9:1:1 [ clock seconds ]
    set v:t:8:1:1 ${v:t:9:1:1}
    set v:endmsg:1 "HaplotypeCaller end\t${v:t:8:1:1}\n"
    set v:t:11:1:1 "${v:startmsg:1}${v:endmsg:1}"
    set wfilename:tmphaploLog [ turbine::get_file_path ${u:tmphaploLog} ]
    turbine::rule [ list ${wfilename:tmphaploLog} ] [ list __entry-call_foreign-write-2 ${v:t:11:1:1} ${wfilename:tmphaploLog} ${u:tmphaploLog} ]
    turbine::decr_local_file_refcount v:outputfile:1
    turbine::decr_local_file_refcount v:outLog:1
}


proc __entry-call_foreign-write-2 { v:t:11:1:1 wfilename:tmphaploLog u:tmphaploLog } {
    # Var: $file v:tmphaploLog VALUE_OF [file:tmphaploLog]
    # Var: $string v:__wfilename:tmphaploLog VALUE_OF [string:__wfilename:tmphaploLog]
    set v:__wfilename:tmphaploLog [ turbine::retrieve_string ${wfilename:tmphaploLog} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:tmphaploLog [ turbine::create_local_file_ref ${v:__wfilename:tmphaploLog} ${tcltmp:init_rc} 1 ]
    turbine::file_write_local v:tmphaploLog ${v:t:11:1:1}
    turbine::store_file ${u:tmphaploLog} v:tmphaploLog 0
}


proc __entry-async_op-strcat-11 { t:10 v:chrIndex v:sampleIndex:1 u:chr:1 u:failureLog u:sampleName:1 u:splitVCFs } {
    # Var: $string v:t:10:9 VALUE_OF [string:__t:10]
    # Var: $string v:sampleName:1:10 VALUE_OF [string:sampleName:1]
    # Var: $string v:chr:1:9 VALUE_OF [string:chr:1]
    # Var: $string v:vcfFileLocation VALUE_OF [string:vcfFileLocation]
    # Var: $boolean v:o:3 RENAMED [$boolean:__v:o]
    set v:t:10:9 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:sampleName:1:10 [ turbine::retrieve_string ${u:sampleName:1} CACHED 1 ]
    set v:chr:1:9 [ turbine::retrieve_string ${u:chr:1} CACHED 1 ]
    set v:vcfFileLocation "${v:t:10:9}/${v:sampleName:1:10}/variant/${v:sampleName:1:10}.wDedups.sorted.recalibrated.${v:chr:1:9}.g.vcf"
    set v:o:3 [ file exists ${v:vcfFileLocation} ]
    if { ${v:o:3} } {
        # Var: file t:123:1 RENAMED [file:__t:123] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():432:14
        # Var: $file v:t:123:1 VALUE_OF [file:__t:123:1]
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 99 ] ] [ list 0 ] ] t:123:1
        set v:t:122:1 [ turbine::create_nested ${u:splitVCFs} ${v:sampleIndex:1} container integer file_ref 0 1 0 0 ]
        set tcltmp:init_rc 1
        set v:t:123:1 [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
        turbine::input_file_local v:t:123:1 ${v:vcfFileLocation}
        turbine::store_file ${t:123:1} v:t:123:1 1
        turbine::container_insert ${v:t:122:1} ${v:chrIndex} ${t:123:1} file_ref 1
        turbine::decr_local_file_refcount v:t:123:1
    } else {
        # Var: string u:m RENAMED [string:m] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():435:5
        # Var: boolean t:127:1 RENAMED [boolean:__t:127] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCSplitMain():438:5
        # Var: $string v:m VALUE_OF [string:m]
        lassign [ adlb::multicreate [ list string 2 1 100 ] [ list integer 1 1 101 ] ] u:m t:127:1
        turbine::c::log "allocated u:m=<${u:m}> t:127:1=<${t:127:1}>"
        turbine::file_read_refcount_incr ${u:failureLog} 1
        set v:m "ERROR: ${v:vcfFileLocation} not found. Did you set VC_STAGE to 'N' by accident?\n"
        turbine::store_string ${u:m} ${v:m}
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:append ${t:127:1} {${u:failureLog}} ${u:m}"
        turbine::reset_priority
        turbine::rule [ list ${t:127:1} ] "VCSplitMain-chain5 ${t:127:1} ${u:m}"
    }
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${u:splitVCFs} 1
    adlb::write_refcount_decr ${u:splitVCFs} 1
}


proc VCSplitMain-chain5 { t:127:1 u:m } {
    # Var: string[string] u:variables /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:70:0
    global u:variables
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:exitIfFlagGiven ${u:variables} ${u:m}"
    turbine::reset_priority
    turbine::read_refcount_decr ${t:127:1} 1
}


proc __entry-chain7 { u:VCF_list:1 t:25:5 u:timingLog } {
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:logging ${t:25:5} {${u:timingLog}}"
    turbine::reset_priority
    turbine::read_refcount_decr ${u:VCF_list:1} 1
}


proc VCNoSplitMain-foreach-wait1 { u:VCF_list:1 t:10 t:186 t:25:5 u:alignDedupBams u:failureLog u:tmpLogDir:1 } {
    set tcltmp:container_sz [ adlb::enumerate ${u:alignDedupBams} count all 0 ]
    set tcltmp:iters ${tcltmp:container_sz}
    turbine::file_read_refcount_incr ${u:failureLog} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${u:tmpLogDir:1} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:186} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:10} [ expr { 2 * ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${u:alignDedupBams} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:25:5} [ expr { ${tcltmp:iters} - 1 } ]
    adlb::write_refcount_incr ${u:VCF_list:1} [ expr { ${tcltmp:iters} - 1 } ]
    VCNoSplitMain-foreach1:outer ${u:VCF_list:1} ${t:10} ${t:186} ${t:25:5} ${u:failureLog} ${u:tmpLogDir:1} ${u:alignDedupBams} 0 [ expr { ${tcltmp:container_sz} - 1 } ] 1
}


proc VCNoSplitMain-foreach1:outer { u:VCF_list:1 t:10 t:186 t:25:5 u:failureLog u:tmpLogDir:1 u:alignDedupBams tcltmp:lo tcltmp:hi tcltmp:inc } {
    if { [ expr { ${tcltmp:lo} > ${tcltmp:hi} } ] } {
        return
    }
    while {1} {
        set tcltmp:itersleft [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
        if { [ expr { ${tcltmp:itersleft} <= 64 } ] } {
            VCNoSplitMain-foreach1:inner ${u:VCF_list:1} ${t:10} ${t:186} ${t:25:5} ${u:failureLog} ${u:tmpLogDir:1} ${u:alignDedupBams} ${tcltmp:lo} ${tcltmp:hi} ${tcltmp:inc}
            return
        } else {
            set tcltmp:skip [ expr { ${tcltmp:inc} * max(64,((${tcltmp:itersleft} - 1) / 16) + 1) } ]
            for { set tcltmp:splitstart [ expr { ${tcltmp:lo} + ${tcltmp:skip} } ] } { ${tcltmp:splitstart} <= ${tcltmp:hi} } { incr tcltmp:splitstart ${tcltmp:skip} } {
                set tcltmp:splitend [ expr { min(${tcltmp:hi},${tcltmp:splitstart} + ${tcltmp:skip} - 1) } ]
                set tcltmp:prio [ turbine::get_priority ]
                turbine::set_priority ${tcltmp:prio}
                adlb::spawn 0 "VCNoSplitMain-foreach1:outer ${u:VCF_list:1} ${t:10} ${t:186} ${t:25:5} {${u:failureLog}} ${u:tmpLogDir:1} ${u:alignDedupBams} ${tcltmp:splitstart} ${tcltmp:splitend} ${tcltmp:inc}"
                turbine::reset_priority
            }
            set tcltmp:hi [ expr { ${tcltmp:lo} + ${tcltmp:skip} - 1 } ]
        }
    }
}


proc VCNoSplitMain-foreach1:inner { u:VCF_list:1 t:10 t:186 t:25:5 u:failureLog u:tmpLogDir:1 u:alignDedupBams tcltmp:lo tcltmp:hi tcltmp:inc } {
    set tcltmp:splitlen [ expr { ${tcltmp:hi} - ${tcltmp:lo} + 1 } ]
    set tcltmp:contents [ adlb::enumerate ${u:alignDedupBams} dict ${tcltmp:splitlen} ${tcltmp:lo} ]
    dict for {v:index:1 u:sample} ${tcltmp:contents} {
        # Var: string u:sampleName:3 RENAMED [string:sampleName] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCNoSplitMain():277:2
        lassign [ adlb::multicreate [ list string 2 1 104 ] ] u:sampleName:3
        turbine::c::log "allocated u:sampleName:3=<${u:sampleName:3}>"
        turbine::file_read_refcount_incr ${u:sample} 1
        turbine::rule [ list [ turbine::get_file_td ${u:sample} ] ] "basename-argwait-2 {${u:sample}} ${u:sampleName:3}"
        turbine::rule [ list ${t:186} ] "__entry-optmerged-14 ${u:VCF_list:1} ${t:10} ${t:186} ${t:25:5} ${v:index:1} {${u:failureLog}} ${u:sampleName:3} ${u:tmpLogDir:1}"
    }
    set tcltmp:iters [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
    turbine::read_refcount_decr ${u:alignDedupBams} [ expr { ${tcltmp:iters} } ]
}


proc basename-argwait-2 { u:sample u:sampleName:3 } {
    # Var: $file v:p:5 RENAMED [$file:__v:p]
    # Var: $string v:f:9 RENAMED [$string:__v:f]
    # Var: $int v:n:12 RENAMED [$int:__v:n]
    # Var: $int v:t:2:4 VALUE_OF [int:__t:2:4]
    # Var: $string v:sampleName:3 VALUE_OF [string:sampleName:3]
    set v:p:5 [ turbine::retrieve_file ${u:sample} CACHED 1 ]
    set v:f:9 [ file tail ${v:p:5} ]
    set v:n:12 [ string length ${v:f:9} ]
    set v:t:2:4 [ expr { ${v:n:12} - 23 } ]
    set v:sampleName:3 [ turbine::substring_impl ${v:f:9} 0 ${v:t:2:4} ]
    turbine::store_string ${u:sampleName:3} ${v:sampleName:3}
}


proc __entry-optmerged-14 { u:VCF_list:1 t:10 t:186 t:25:5 v:index:1 u:failureLog u:sampleName:3 u:tmpLogDir:1 } {
    # Var: $string v:t:186:3 VALUE_OF [string:__t:186]
    # Var: $boolean v:t:14:4 VALUE_OF [boolean:__t:14:4]
    # Var: $boolean v:t:18:4 VALUE_OF [boolean:__t:18:4]
    # Var: $boolean v:t:22:4 VALUE_OF [boolean:__t:22:4]
    # Var: $boolean v:t:26:4 VALUE_OF [boolean:__t:26:4]
    # Var: $boolean v:t:30:4 VALUE_OF [boolean:__t:30:4]
    # Var: $boolean v:t:34:4 VALUE_OF [boolean:__t:34:4]
    # Var: $boolean v:t:38:4 VALUE_OF [boolean:__t:38:4]
    # Var: $boolean v:t:42:4 VALUE_OF [boolean:__t:42:4]
    # Var: $boolean v:t:46:4 VALUE_OF [boolean:__t:46:4]
    # Var: $boolean v:t:50:4 VALUE_OF [boolean:__t:50:4]
    # Var: $boolean v:t:13:4 VALUE_OF [boolean:__t:13:4]
    # Var: $boolean v:t:12:4 VALUE_OF [boolean:__t:12:4]
    # Var: $boolean v:t:11:4 VALUE_OF [boolean:__t:11:4]
    # Var: $boolean v:t:10:4:1 VALUE_OF [boolean:__t:10:4]
    # Var: $boolean v:t:9:4 VALUE_OF [boolean:__t:9:4]
    # Var: $boolean v:t:8:4 VALUE_OF [boolean:__t:8:4]
    # Var: $boolean v:t:7:4 VALUE_OF [boolean:__t:7:4]
    # Var: $boolean v:t:6:4 VALUE_OF [boolean:__t:6:4]
    # Var: $boolean v:t:5:4 VALUE_OF [boolean:__t:5:4]
    set v:t:186:3 [ turbine::retrieve_string ${t:186} CACHED 1 ]
    set v:t:14:4 [ string equal ${v:t:186:3} "Y" ]
    set v:t:18:4 [ string equal ${v:t:186:3} "y" ]
    set v:t:22:4 [ string equal ${v:t:186:3} "YES" ]
    set v:t:26:4 [ string equal ${v:t:186:3} "yes" ]
    set v:t:30:4 [ string equal ${v:t:186:3} "Yes" ]
    set v:t:34:4 [ string equal ${v:t:186:3} "End" ]
    set v:t:38:4 [ string equal ${v:t:186:3} "end" ]
    set v:t:42:4 [ string equal ${v:t:186:3} "E" ]
    set v:t:46:4 [ string equal ${v:t:186:3} "e" ]
    set v:t:50:4 [ string equal ${v:t:186:3} "END" ]
    set v:t:13:4 [ expr { ${v:t:14:4} || ${v:t:18:4} } ]
    set v:t:12:4 [ expr { ${v:t:13:4} || ${v:t:22:4} } ]
    set v:t:11:4 [ expr { ${v:t:12:4} || ${v:t:26:4} } ]
    set v:t:10:4:1 [ expr { ${v:t:11:4} || ${v:t:30:4} } ]
    set v:t:9:4 [ expr { ${v:t:10:4:1} || ${v:t:34:4} } ]
    set v:t:8:4 [ expr { ${v:t:9:4} || ${v:t:38:4} } ]
    set v:t:7:4 [ expr { ${v:t:8:4} || ${v:t:42:4} } ]
    set v:t:6:4 [ expr { ${v:t:7:4} || ${v:t:46:4} } ]
    set v:t:5:4 [ expr { ${v:t:6:4} || ${v:t:50:4} } ]
    if { ${v:t:5:4} } {
        # Var: string c:s_-2 OPT_TEMPORARY
        global c:s_-2
        # Var: string c:s__vcf-1 OPT_TEMPORARY
        global c:s__vcf-1
        # Var: string[string] u:variables /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:70:0
        global u:variables
        # Var: file u:recalfiles:1 RENAMED [file:recalfiles] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCNoSplitMain():295:61
        # Var: string[int] u:recalparmsindels:1 RENAMED [string[int]:recalparmsindels] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCNoSplitMain():300:3
        # Var: string[int] u:realparms:1 RENAMED [string[int]:realparms] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCNoSplitMain():303:3
        # Var: string t:59:3 RENAMED [string:__t:59] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCNoSplitMain():296:27
        # Var: string t:60:3 RENAMED [string:__t:60] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCNoSplitMain():296:34
        # Var: string t:63:2 RENAMED [string:__t:63] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCNoSplitMain():296:61
        # Var: file u:inputBam:1 RENAMED [file:inputBam] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCNoSplitMain():312:3
        # Var: file u:recalibratedbam:1 RENAMED [file:recalibratedbam] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCNoSplitMain():317:12
        # Var: file u:gvcfVariants:1 RENAMED [file:gvcfVariants] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCNoSplitMain():327:8
        # Var: int u:threads:3 RENAMED [int:threads] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callVariants():251:1
        # Var: string t:2:8 RENAMED [string:__t:2] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callVariants():251:26
        # Var: string t:5:8 RENAMED [string:__t:5] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callVariants():251:55
        # Var: file u:haploLog:1 RENAMED [file:haploLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callVariants():256:44
        # Var: file u:tmphaploLog:1 RENAMED [file:tmphaploLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callVariants():259:50
        # Var: string t:18:7 RENAMED [string:__t:18] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callVariants():261:57
        # Var: string t:20:7 RENAMED [string:__t:20] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callVariants():262:8
        # Var: string t:22:7 RENAMED [string:__t:22] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callVariants():263:8
        # Var: string t:26:7 RENAMED [string:__t:26] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callVariants():263:42
        # Var: string t:28:7 RENAMED [string:__t:28] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callVariants():265:8
        # Var: string t:32:7 RENAMED [string:__t:32] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:callVariants():265:42
        # Var: $int v:t:4:1:3 VALUE_OF [int:__t:4:1:3]
        # Var: $string v:t:3:1:3 VALUE_OF [string:__t:3:1:3]
        # Var: $string v:startmsg:2 VALUE_OF [string:startmsg:2]
        lassign [ adlb::multicreate [ list container integer string 1 1 106 ] [ list container integer string 1 1 107 ] [ list string 1 1 108 ] [ list string 1 1 109 ] [ list string 1 1 110 ] [ list integer 1 1 114 ] [ list string 1 1 115 ] [ list string 1 1 116 ] [ list string 1 1 119 ] [ list string 1 1 120 ] [ list string 1 1 121 ] [ list string 1 1 122 ] [ list string 1 1 123 ] [ list string 1 1 124 ] ] u:recalparmsindels:1 u:realparms:1 t:59:3 t:60:3 t:63:2 u:threads:3 t:2:8 t:5:8 t:18:7 t:20:7 t:22:7 t:26:7 t:28:7 t:32:7
        turbine::c::log "allocated u:recalparmsindels:1=<${u:recalparmsindels:1}> u:realparms:1=<${u:realparms:1}> t:59:3=<${t:59:3}> t:60:3=<${t:60:3}> t:63:2=<${t:63:2}>"
        turbine::c::log "allocated u:threads:3=<${u:threads:3}> t:2:8=<${t:2:8}> t:5:8=<${t:5:8}> t:18:7=<${t:18:7}> t:20:7=<${t:20:7}>"
        turbine::c::log "allocated t:22:7=<${t:22:7}> t:26:7=<${t:26:7}> t:28:7=<${t:28:7}> t:32:7=<${t:32:7}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 105 ] [ list file 1 1 111 ] [ list file 2 1 112 ] [ list file 1 1 113 ] [ list file 0 1 117 ] [ list file 1 1 118 ] ] [ list 1 0 1 1 1 1 ] ] u:recalfiles:1 u:inputBam:1 u:recalibratedbam:1 u:gvcfVariants:1 u:haploLog:1 u:tmphaploLog:1
        turbine::read_refcount_incr ${t:25:5} 1
        turbine::read_refcount_incr ${u:sampleName:3} 1
        turbine::read_refcount_incr ${u:tmpLogDir:1} 1
        turbine::container_reference ${u:variables} "REFGENOMEDIR" ${t:60:3} string
        turbine::container_reference ${u:variables} "INDELDIR" ${t:63:2} string
        f:find_files ${u:recalfiles:1} ${t:59:3} ${c:s__vcf-1} -100 "HARD" "RANK"
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:recalibrationWrapper {${u:recalibratedbam:1}} ${u:sampleName:3} ${c:s_-2} ${u:variables} {${u:inputBam:1}} ${u:realparms:1} ${u:recalparmsindels:1}"
        turbine::reset_priority
        turbine::container_reference ${u:variables} "CORES" ${t:2:8} string
        turbine::container_reference ${u:variables} "PROCPERNODE" ${t:5:8} string
        turbine::container_reference ${u:variables} "JAVAEXE" ${t:18:7} string
        turbine::container_reference ${u:variables} "GATKJAR" ${t:20:7} string
        turbine::container_reference ${u:variables} "REFGENOME" ${t:26:7} string
        turbine::container_reference ${u:variables} "DBSNP" ${t:32:7} string
        set v:t:4:1:3 [ clock seconds ]
        set v:t:3:1:3 ${v:t:4:1:3}
        set v:startmsg:2 "HaplotypeCaller start\t${v:t:3:1:3}\n"
        turbine::rule [ list ${t:2:8} ${t:5:8} ] "__entry-async_op-parse_int-2 ${t:2:8} ${t:5:8} ${u:threads:3}"
        turbine::rule [ list ${u:sampleName:3} ] [ list __entry-optmerged-15 ${u:VCF_list:1} ${t:10} ${t:18:7} ${t:20:7} ${t:22:7} ${t:25:5} ${t:28:7} ${v:index:1} ${v:startmsg:2} ${u:gvcfVariants:1} ${u:haploLog:1} ${u:inputBam:1} ${u:realparms:1} ${u:recalfiles:1} ${u:recalibratedbam:1} ${u:recalparmsindels:1} ${u:sampleName:3} ${u:threads:3} ${u:tmpLogDir:1} ${u:tmphaploLog:1} ]
        turbine::rule [ list ${t:60:3} ] "__entry-optmerged-17 ${t:22:7} ${t:26:7} ${t:28:7} ${t:32:7} ${t:59:3} ${t:60:3} ${t:63:2}"
        turbine::read_refcount_decr ${t:59:3} 1
    } else {
        turbine::file_read_refcount_incr ${u:failureLog} 1
        turbine::rule [ list ${t:10} ${u:sampleName:3} ] "__entry-async_op-strcat-17 ${u:VCF_list:1} ${t:10} ${v:index:1} {${u:failureLog}} ${u:sampleName:3}"
    }
    turbine::read_refcount_decr ${u:tmpLogDir:1} 1
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${t:10} 1
    turbine::read_refcount_decr ${t:25:5} 1
    turbine::read_refcount_decr ${u:sampleName:3} 1
}


proc __entry-async_op-parse_int-2 { t:2:8 t:5:8 u:threads:3 } {
    # Var: $string v:t:5:8 VALUE_OF [string:__t:5:8]
    # Var: $int v:t:4:8 VALUE_OF [int:__t:4:8]
    # Var: $string v:t:2:8 VALUE_OF [string:__t:2:8]
    # Var: $int v:t:1:13 VALUE_OF [int:__t:1:13]
    # Var: $int v:threads:3 VALUE_OF [int:threads:3]
    set v:t:5:8 [ turbine::retrieve_string ${t:5:8} CACHED 1 ]
    set v:t:4:8 [ turbine::parse_int_impl ${v:t:5:8} 10 ]
    set v:t:2:8 [ turbine::retrieve_string ${t:2:8} CACHED 1 ]
    set v:t:1:13 [ turbine::parse_int_impl ${v:t:2:8} 10 ]
    set v:threads:3 [ turbine::divide_integer_impl ${v:t:1:13} ${v:t:4:8} ]
    turbine::store_integer ${u:threads:3} ${v:threads:3}
}


proc __entry-optmerged-15 { u:VCF_list:1 t:10 t:18:7 t:20:7 t:22:7 t:25:5 t:28:7 v:index:1 v:startmsg:2 u:gvcfVariants:1 u:haploLog:1 u:inputBam:1 u:realparms:1 u:recalfiles:1 u:recalibratedbam:1 u:recalparmsindels:1 u:sampleName:3 u:threads:3 u:tmpLogDir:1 u:tmphaploLog:1 } {
    # Var: $string v:sampleName:3:1 VALUE_OF [string:sampleName:3]
    set v:sampleName:3:1 [ turbine::retrieve_string ${u:sampleName:3} CACHED 1 ]
    turbine::rule [ list ${t:25:5} ] [ list __entry-async_op-strcat-12 ${t:25:5} ${v:sampleName:3:1} ${u:realparms:1} ${u:recalfiles:1} ${u:recalparmsindels:1} ]
    turbine::rule [ list ${u:tmpLogDir:1} ] [ list __entry-async_op-strcat-13 ${v:sampleName:3:1} ${u:tmpLogDir:1} ${u:tmphaploLog:1} ]
    turbine::rule [ list ${t:10} ] [ list __entry-optmerged-16 ${u:VCF_list:1} ${t:10} ${t:18:7} ${t:20:7} ${t:22:7} ${t:28:7} ${v:index:1} ${v:sampleName:3:1} ${v:startmsg:2} ${u:gvcfVariants:1} ${u:haploLog:1} ${u:inputBam:1} ${u:recalibratedbam:1} ${u:threads:3} ${u:tmphaploLog:1} ]
}


proc __entry-async_op-strcat-12 { t:25:5 v:sampleName:3:1 u:realparms:1 u:recalfiles:1 u:recalparmsindels:1 } {
    # Var: $string v:t:25:5:2 VALUE_OF [string:__t:25:5]
    # Var: $string v:t:54:4 VALUE_OF [string:__t:54:4]
    set v:t:25:5:2 [ turbine::retrieve_string ${t:25:5} CACHED 1 ]
    set v:t:54:4 "${v:t:25:5:2}/${v:sampleName:3:1}.recal_foundfiles.txt"
    turbine::set_filename_val ${u:recalfiles:1} ${v:t:54:4}
    turbine::rule [ list [ turbine::get_file_td ${u:recalfiles:1} ] ] [ list VCNoSplitMain-chain1 ${v:t:54:4} ${u:realparms:1} ${u:recalfiles:1} ${u:recalparmsindels:1} ]
}


proc VCNoSplitMain-chain1 { v:t:54:4 u:realparms:1 u:recalfiles:1 u:recalparmsindels:1 } {
    # Var: string c:s_sknownSite OPT_TEMPORARY
    global c:s_sknownSite
    # Var: file t:72:2 RENAMED [file:__t:72] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCNoSplitMain():301:26
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 125 ] ] [ list 0 ] ] t:72:2
    f:sed ${t:72:2} ${u:recalfiles:1} ${c:s_sknownSite} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${t:72:2} ] ] [ list __entry-call_foreign-read-2 ${t:72:2} ${v:t:54:4} ${u:realparms:1} ${u:recalfiles:1} ${u:recalparmsindels:1} ]
}


proc __entry-call_foreign-read-2 { t:72:2 v:t:54:4 u:realparms:1 u:recalfiles:1 u:recalparmsindels:1 } {
    # Var: $file v:t:72:2 VALUE_OF [file:__t:72:2]
    # Var: $string v:t:71:2 VALUE_OF [string:__t:71:2]
    # Var: $int v:n:11 RENAMED [$int:__v:n]
    # Var: $string v:t:70:2 VALUE_OF [string:__t:70:2]
    # Var: $string v:o:6 RENAMED [$string:__v:o]
    # Var: $string$[int] v:recalparmsindels:1 VALUE_OF [string[int]:recalparmsindels:1]
    set v:t:72:2 [ turbine::retrieve_file ${t:72:2} CACHED 1 ]
    set v:t:71:2 [ turbine::file_read_local ${v:t:72:2} ]
    set v:n:11 [ string length ${v:t:71:2} ]
    set v:t:70:2 [ turbine::replace_all_impl ${v:t:71:2} "\n" " " 0 ${v:n:11} ]
    set v:o:6 [ string trim ${v:t:70:2} ]
    set v:recalparmsindels:1 [ turbine::split_impl ${v:o:6} " " ]
    turbine::build_rec ${u:recalparmsindels:1} ${v:recalparmsindels:1} [ list container integer string ] 0 1
    turbine::rule [ list ] [ list VCNoSplitMain-chain2 ${v:t:54:4} ${u:realparms:1} ${u:recalfiles:1} ]
}


proc VCNoSplitMain-chain2 { v:t:54:4 u:realparms:1 u:recalfiles:1 } {
    # Var: string c:s_sknown_g OPT_TEMPORARY
    global c:s_sknown_g
    # Var: file t:81:2 RENAMED [file:__t:81] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCNoSplitMain():304:26
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 126 ] ] [ list 0 ] ] t:81:2
    f:sed ${t:81:2} ${u:recalfiles:1} ${c:s_sknown_g} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${t:81:2} ] ] [ list __entry-call_foreign-read-3 ${t:81:2} ${v:t:54:4} ${u:realparms:1} ${u:recalfiles:1} ]
}


proc __entry-call_foreign-read-3 { t:81:2 v:t:54:4 u:realparms:1 u:recalfiles:1 } {
    # Var: $file v:t:81:2:1 VALUE_OF [file:__t:81:2]
    # Var: $string v:t:80:2 VALUE_OF [string:__t:80:2]
    # Var: $int v:n:10 RENAMED [$int:__v:n]
    # Var: $string v:t:79:2 VALUE_OF [string:__t:79:2]
    # Var: $string v:o:5 RENAMED [$string:__v:o]
    # Var: $string$[int] v:realparms:1 VALUE_OF [string[int]:realparms:1]
    set v:t:81:2:1 [ turbine::retrieve_file ${t:81:2} CACHED 1 ]
    set v:t:80:2 [ turbine::file_read_local ${v:t:81:2:1} ]
    set v:n:10 [ string length ${v:t:80:2} ]
    set v:t:79:2 [ turbine::replace_all_impl ${v:t:80:2} "\n" " " 0 ${v:n:10} ]
    set v:o:5 [ string trim ${v:t:79:2} ]
    set v:realparms:1 [ turbine::split_impl ${v:o:5} " " ]
    turbine::build_rec ${u:realparms:1} ${v:realparms:1} [ list container integer string ] 0 1
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list VCNoSplitMain-chain3 ${v:t:54:4} ${u:recalfiles:1} ]
    turbine::reset_priority
}


proc VCNoSplitMain-chain3 { v:t:54:4 u:recalfiles:1 } {
    # Var: $file v:f:12 RENAMED [$file:__v:f] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:rm():55:6
    # Var: $void v:v:3 RENAMED [$void:__v:v] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:rm():55:6
    set v:f:12 [ turbine::retrieve_file ${u:recalfiles:1} CACHED 1 ]
    turbine::c::log [ list exec: "rm" ${v:t:54:4} [ dict create ] ]
    turbine::exec_external "rm" [ dict create ] ${v:t:54:4}
}


proc __entry-async_op-strcat-13 { v:sampleName:3:1 u:tmpLogDir:1 u:tmphaploLog:1 } {
    # Var: $string v:tmpLogDir:1:3 VALUE_OF [string:tmpLogDir:1]
    # Var: $string v:t:16:7 VALUE_OF [string:__t:16:7]
    set v:tmpLogDir:1:3 [ turbine::retrieve_string ${u:tmpLogDir:1} CACHED 1 ]
    set v:t:16:7 "${v:tmpLogDir:1:3}${v:sampleName:3:1}_HaplotypeCaller.log"
    turbine::set_filename_val ${u:tmphaploLog:1} ${v:t:16:7}
}


proc __entry-optmerged-16 { u:VCF_list:1 t:10 t:18:7 t:20:7 t:22:7 t:28:7 v:index:1 v:sampleName:3:1 v:startmsg:2 u:gvcfVariants:1 u:haploLog:1 u:inputBam:1 u:recalibratedbam:1 u:threads:3 u:tmphaploLog:1 } {
    # Var: $string v:t:10:11 VALUE_OF [string:__t:10]
    # Var: $string v:t:88:2 VALUE_OF [string:__t:88:2]
    # Var: $string v:t:94:2 VALUE_OF [string:__t:94:2]
    # Var: $string v:t:101:2 VALUE_OF [string:__t:101:2]
    # Var: $string v:LogDir:2 VALUE_OF [string:LogDir:2]
    # Var: $file v:inputBam:1 VALUE_OF [file:inputBam:1]
    # Var: $string v:t:11:8 VALUE_OF [string:__t:11:8]
    set v:t:10:11 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:t:88:2 "${v:t:10:11}/${v:sampleName:3:1}/align/${v:sampleName:3:1}.wDedups.sorted.bam"
    set v:t:94:2 "${v:t:10:11}/${v:sampleName:3:1}/realign/${v:sampleName:3:1}.wDedups.sorted.recalibrated.bam"
    set v:t:101:2 "${v:t:10:11}/${v:sampleName:3:1}/variant/${v:sampleName:3:1}.wDedups.sorted.recalibrated.g.vcf"
    set v:LogDir:2 "${v:t:10:11}/${v:sampleName:3:1}/logs/"
    set tcltmp:init_rc 1
    set v:inputBam:1 [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:inputBam:1 ${v:t:88:2}
    turbine::store_file ${u:inputBam:1} v:inputBam:1 1
    turbine::set_filename_val ${u:recalibratedbam:1} ${v:t:94:2}
    turbine::set_filename_val ${u:gvcfVariants:1} ${v:t:101:2}
    set v:t:11:8 "${v:LogDir:2}${v:sampleName:3:1}_HaplotypeCaller.log"
    turbine::set_filename_val ${u:haploLog:1} ${v:t:11:8}
    turbine::rule [ list ${t:18:7} ${t:20:7} ${t:22:7} ${t:28:7} [ turbine::get_file_td ${u:recalibratedbam:1} ] ${u:threads:3} ] [ list HaplotypeCaller_logged-chain1-1 ${u:VCF_list:1} ${t:18:7} ${t:20:7} ${t:22:7} ${t:28:7} ${v:index:1} ${v:startmsg:2} ${v:t:101:2} ${v:t:11:8} ${v:t:94:2} ${u:gvcfVariants:1} ${u:haploLog:1} ${u:recalibratedbam:1} ${u:threads:3} ${u:tmphaploLog:1} ]
    turbine::decr_local_file_refcount v:inputBam:1
}


proc HaplotypeCaller_logged-chain1-1 { u:VCF_list:1 t:18:7 t:20:7 t:22:7 t:28:7 v:index:1 v:startmsg:2 v:t:101:2 v:t:11:8 v:t:94:2 u:gvcfVariants:1 u:haploLog:1 u:recalibratedbam:1 u:threads:3 u:tmphaploLog:1 } {
    # Var: $string v:javaexe:2 RENAMED [$string:__v:javaexe] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:HaplotypeCaller():120:9
    # Var: $string v:gatkjar:2 RENAMED [$string:__v:gatkjar] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:HaplotypeCaller():120:9
    # Var: $string v:reference:2 RENAMED [$string:__v:reference] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:HaplotypeCaller():120:9
    # Var: $string v:dbsnp:2 RENAMED [$string:__v:dbsnp] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:HaplotypeCaller():120:9
    # Var: $int v:thr:1 RENAMED [$int:__v:thr] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:HaplotypeCaller():120:9
    # Var: $file v:inputFile:2 RENAMED [$file:__v:inputFile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:HaplotypeCaller():120:9
    # Var: $file v:outputfile:2 RENAMED [$file:__v:outputfile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:HaplotypeCaller():120:9
    # Var: $file v:outLog:2 RENAMED [$file:__v:outLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:HaplotypeCaller():120:9
    # Var: $int v:t:9:1:2 VALUE_OF [int:__t:9:1:2]
    # Var: $string v:t:8:1:2 VALUE_OF [string:__t:8:1:2]
    # Var: $string v:endmsg:2 VALUE_OF [string:endmsg:2]
    # Var: $string v:t:11:1:2 VALUE_OF [string:__t:11:1:2]
    set v:javaexe:2 [ turbine::retrieve_string ${t:18:7} CACHED 1 ]
    set v:gatkjar:2 [ turbine::retrieve_string ${t:20:7} CACHED 1 ]
    set v:reference:2 [ turbine::retrieve_string ${t:22:7} CACHED 1 ]
    set v:dbsnp:2 [ turbine::retrieve_string ${t:28:7} CACHED 1 ]
    set v:thr:1 [ turbine::retrieve_integer ${u:threads:3} CACHED 1 ]
    set v:inputFile:2 [ turbine::retrieve_file ${u:recalibratedbam:1} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:2 [ turbine::create_local_file_ref ${v:t:101:2} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:outLog:2 [ turbine::create_local_file_ref ${v:t:11:8} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javaexe:2 "-Xmx8g" "-jar" ${v:gatkjar:2} "-T" "HaplotypeCaller" "-R" ${v:reference:2} "-I" ${v:t:94:2} "--dbsnp" ${v:dbsnp:2} "-o" ${v:t:101:2} "--emitRefConfidence" "GVCF" "-gt_mode" "DISCOVERY" "-A" "Coverage" "-A" "FisherStrand" "-A" "StrandOddsRatio" "-A" "HaplotypeScore" "-A" "MappingQualityRankSumTest" "-A" "QualByDepth" "-A" "RMSMappingQuality" "-A" "ReadPosRankSumTest" "-stand_call_conf" 30 "-stand_emit_conf" 30 "-nt" 1 "-nct" ${v:thr:1} [ dict create "stderr" ${v:t:11:8} ] ]
    turbine::exec_external ${v:javaexe:2} [ dict create "stderr" ${v:t:11:8} ] "-Xmx8g" "-jar" ${v:gatkjar:2} "-T" "HaplotypeCaller" "-R" ${v:reference:2} "-I" ${v:t:94:2} "--dbsnp" ${v:dbsnp:2} "-o" ${v:t:101:2} "--emitRefConfidence" "GVCF" "-gt_mode" "DISCOVERY" "-A" "Coverage" "-A" "FisherStrand" "-A" "StrandOddsRatio" "-A" "HaplotypeScore" "-A" "MappingQualityRankSumTest" "-A" "QualByDepth" "-A" "RMSMappingQuality" "-A" "ReadPosRankSumTest" "-stand_call_conf" 30 "-stand_emit_conf" 30 "-nt" 1 "-nct" ${v:thr:1}
    turbine::store_file ${u:gvcfVariants:1} v:outputfile:2 0
    turbine::store_file ${u:haploLog:1} v:outLog:2 0
    turbine::container_insert ${u:VCF_list:1} ${v:index:1} ${u:gvcfVariants:1} file_ref 1
    set v:t:9:1:2 [ clock seconds ]
    set v:t:8:1:2 ${v:t:9:1:2}
    set v:endmsg:2 "HaplotypeCaller end\t${v:t:8:1:2}\n"
    set v:t:11:1:2 "${v:startmsg:2}${v:endmsg:2}"
    set wfilename:tmphaploLog:1 [ turbine::get_file_path ${u:tmphaploLog:1} ]
    turbine::rule [ list ${wfilename:tmphaploLog:1} ] [ list __entry-call_foreign-write-3 ${v:t:11:1:2} ${wfilename:tmphaploLog:1} ${u:tmphaploLog:1} ]
    turbine::decr_local_file_refcount v:outputfile:2
    turbine::decr_local_file_refcount v:outLog:2
}


proc __entry-call_foreign-write-3 { v:t:11:1:2 wfilename:tmphaploLog:1 u:tmphaploLog:1 } {
    # Var: $file v:tmphaploLog:1 VALUE_OF [file:tmphaploLog:1]
    # Var: $string v:__wfilename:tmphaploLog:1 VALUE_OF [string:__wfilename:tmphaploLog:1]
    set v:__wfilename:tmphaploLog:1 [ turbine::retrieve_string ${wfilename:tmphaploLog:1} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:tmphaploLog:1 [ turbine::create_local_file_ref ${v:__wfilename:tmphaploLog:1} ${tcltmp:init_rc} 1 ]
    turbine::file_write_local v:tmphaploLog:1 ${v:t:11:1:2}
    turbine::store_file ${u:tmphaploLog:1} v:tmphaploLog:1 0
}


proc __entry-optmerged-17 { t:22:7 t:26:7 t:28:7 t:32:7 t:59:3 t:60:3 t:63:2 } {
    # Var: $string v:t:60:3 VALUE_OF [string:__t:60:3]
    set v:t:60:3 [ turbine::retrieve_string ${t:60:3} CACHED 1 ]
    turbine::rule [ list ${t:63:2} ] [ list __entry-async_op-strcat-14 ${t:59:3} ${t:63:2} ${v:t:60:3} ]
    turbine::rule [ list ${t:26:7} ] [ list __entry-async_op-strcat-15 ${t:22:7} ${t:26:7} ${v:t:60:3} ]
    turbine::rule [ list ${t:32:7} ] [ list __entry-async_op-strcat-16 ${t:28:7} ${t:32:7} ${v:t:60:3} ]
}


proc __entry-async_op-strcat-14 { t:59:3 t:63:2 v:t:60:3 } {
    # Var: $string v:t:63:2 VALUE_OF [string:__t:63:2]
    # Var: $string v:t:59:3 VALUE_OF [string:__t:59:3]
    set v:t:63:2 [ turbine::retrieve_string ${t:63:2} CACHED 1 ]
    set v:t:59:3 "${v:t:60:3}/${v:t:63:2}/"
    turbine::store_string ${t:59:3} ${v:t:59:3}
}


proc __entry-async_op-strcat-15 { t:22:7 t:26:7 v:t:60:3 } {
    # Var: $string v:t:26:7 VALUE_OF [string:__t:26:7]
    # Var: $string v:t:22:7 VALUE_OF [string:__t:22:7]
    set v:t:26:7 [ turbine::retrieve_string ${t:26:7} CACHED 1 ]
    set v:t:22:7 "${v:t:60:3}/${v:t:26:7}"
    turbine::store_string ${t:22:7} ${v:t:22:7}
}


proc __entry-async_op-strcat-16 { t:28:7 t:32:7 v:t:60:3 } {
    # Var: $string v:t:32:7 VALUE_OF [string:__t:32:7]
    # Var: $string v:t:28:7 VALUE_OF [string:__t:28:7]
    set v:t:32:7 [ turbine::retrieve_string ${t:32:7} CACHED 1 ]
    set v:t:28:7 "${v:t:60:3}/${v:t:32:7}"
    turbine::store_string ${t:28:7} ${v:t:28:7}
}


proc __entry-async_op-strcat-17 { u:VCF_list:1 t:10 v:index:1 u:failureLog u:sampleName:3 } {
    # Var: $string v:t:10:15 VALUE_OF [string:__t:10]
    # Var: $string v:sampleName:3:11 VALUE_OF [string:sampleName:3]
    # Var: $string v:vcfLocation VALUE_OF [string:vcfLocation]
    # Var: $boolean v:o:7 RENAMED [$boolean:__v:o]
    set v:t:10:15 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:sampleName:3:11 [ turbine::retrieve_string ${u:sampleName:3} CACHED 1 ]
    set v:vcfLocation "${v:t:10:15}/${v:sampleName:3:11}/variant/${v:sampleName:3:11}.wDedups.sorted.recalibrated.g.vcf"
    set v:o:7 [ file exists ${v:vcfLocation} ]
    if { ${v:o:7} } {
        # Var: file t:113:2 RENAMED [file:__t:113] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCNoSplitMain():343:4
        # Var: $file v:t:113:2 VALUE_OF [file:__t:113:2]
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 127 ] ] [ list 0 ] ] t:113:2
        set tcltmp:init_rc 1
        set v:t:113:2 [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
        turbine::input_file_local v:t:113:2 ${v:vcfLocation}
        turbine::store_file ${t:113:2} v:t:113:2 1
        turbine::container_insert ${u:VCF_list:1} ${v:index:1} ${t:113:2} file_ref 0
        turbine::decr_local_file_refcount v:t:113:2
    } else {
        # Var: string u:message:2 RENAMED [string:message] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCNoSplitMain():346:4
        # Var: boolean t:117:2 RENAMED [boolean:__t:117] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:VCNoSplitMain():349:4
        # Var: $string v:message:2 VALUE_OF [string:message:2]
        lassign [ adlb::multicreate [ list string 2 1 128 ] [ list integer 1 1 129 ] ] u:message:2 t:117:2
        turbine::c::log "allocated u:message:2=<${u:message:2}> t:117:2=<${t:117:2}>"
        turbine::file_read_refcount_incr ${u:failureLog} 1
        set v:message:2 "ERROR: ${v:vcfLocation} not found. Did you set VC_STAGE to 'N' by accident?\n"
        turbine::store_string ${u:message:2} ${v:message:2}
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:append ${t:117:2} {${u:failureLog}} ${u:message:2}"
        turbine::reset_priority
        turbine::rule [ list ${t:117:2} ] "VCNoSplitMain-chain5 ${t:117:2} ${u:message:2}"
    }
    turbine::file_read_refcount_decr ${u:failureLog} 1
    adlb::write_refcount_decr ${u:VCF_list:1} 1
}


proc VCNoSplitMain-chain5 { t:117:2 u:message:2 } {
    # Var: string[string] u:variables /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:70:0
    global u:variables
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:exitIfFlagGiven ${u:variables} ${u:message:2}"
    turbine::reset_priority
    turbine::read_refcount_decr ${t:117:2} 1
}


proc __entry-optmerged-18 { u:VCF_list:1 t:186 u:timingLog } {
    # Var: $string v:t:186 VALUE_OF [string:__t:186]
    # Var: $boolean v:t:185 VALUE_OF [boolean:__t:185]
    # Var: $boolean v:t:189 VALUE_OF [boolean:__t:189]
    # Var: $boolean v:t:193 VALUE_OF [boolean:__t:193]
    # Var: $boolean v:t:184 VALUE_OF [boolean:__t:184]
    # Var: $boolean v:t:183 VALUE_OF [boolean:__t:183]
    set v:t:186 [ turbine::retrieve_string ${t:186} CACHED 1 ]
    set v:t:185 [ expr { ! [ string equal ${v:t:186} "E" ] } ]
    set v:t:189 [ expr { ! [ string equal ${v:t:186} "End" ] } ]
    set v:t:193 [ expr { ! [ string equal ${v:t:186} "end" ] } ]
    set v:t:184 [ expr { ${v:t:185} && ${v:t:189} } ]
    set v:t:183 [ expr { ${v:t:184} && ${v:t:193} } ]
    if { ${v:t:183} } {
        # Var: string[string] u:variables /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:70:0
        global u:variables
        turbine::read_refcount_incr ${u:VCF_list:1} 2
        turbine::file_read_refcount_incr ${u:timingLog} 1
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:jointGenotypingMain ${u:VCF_list:1} ${u:variables} {${u:timingLog}}"
        turbine::reset_priority
        turbine::rule [ list ${u:VCF_list:1} ] "__entry-call_foreign-size-1 ${u:VCF_list:1}"
    }
    turbine::file_read_refcount_decr ${u:timingLog} 1
    turbine::read_refcount_decr ${u:VCF_list:1} 1
}


proc __entry-call_foreign-size-1 { u:VCF_list:1 } {
    # Var: file$[int] v:VCF_list:1 VALUE_OF [*rw(file)[int]:VCF_list:1]
    # Var: $int v:t:199 VALUE_OF [int:__t:199]
    # Var: $boolean v:t:198 VALUE_OF [boolean:__t:198]
    # Var: $void v:t:197 VALUE_OF [void:__t:197]
    set v:VCF_list:1 [ adlb::enumerate ${u:VCF_list:1} dict all 0 0 ]
    set v:t:199 [ dict size ${v:VCF_list:1} ]
    set v:t:198 [ expr { ${v:t:199} != 0 } ]
    turbine::assert_impl ${v:t:198} "FAILURE: The VCFs array was empty"
    turbine::read_refcount_decr ${u:VCF_list:1} 1
}


proc __entry-optmerged-19 { t:10 t:13 t:25:5 t:9 v:f u:configFile u:docRunfile u:failureLog u:timingLog } {
    # Var: $string v:dirname:7 RENAMED [$string:__v:dirname] /usr/src/swift-t/swift-t-1.2/turbine/export/unix.swift:mkdir():65:15
    set v:dirname:7 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list mkdir-app-leaf1 ${t:13} ${t:25:5} ${v:dirname:7} ${u:failureLog} ]
    turbine::reset_priority
    turbine::rule [ list ${t:13} ] [ list __entry-optmerged-20 ${t:13} ${t:9} ${v:dirname:7} ${v:f} ${u:configFile} ${u:docRunfile} ${u:failureLog} ${u:timingLog} ]
}


proc mkdir-app-leaf1 { t:13 t:25:5 v:dirname:7 u:failureLog } {
    # Var: $void v:v:11 RENAMED [$void:__v:v] /usr/src/swift-t/swift-t-1.2/turbine/export/unix.swift:mkdir():65:15
    turbine::c::log [ list exec: "mkdir" "-p" ${v:dirname:7} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:dirname:7}
    turbine::rule [ list ${t:25:5} ] [ list __entry-chain1 ${t:13} ${t:25:5} ${v:dirname:7} ${u:failureLog} ]
}


proc __entry-chain1 { t:13 t:25:5 v:dirname:7 u:failureLog } {
    # Var: $string v:dirname:1 RENAMED [$string:__v:dirname] /usr/src/swift-t/swift-t-1.2/turbine/export/unix.swift:mkdir():65:15
    # Var: $void v:v:1 RENAMED [$void:__v:v] /usr/src/swift-t/swift-t-1.2/turbine/export/unix.swift:mkdir():65:15
    set v:dirname:1 [ turbine::retrieve_string ${t:25:5} CACHED 1 ]
    turbine::c::log [ list exec: "mkdir" "-p" ${v:dirname:1} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:dirname:1}
    turbine::rule [ list ${t:13} ] [ list __entry-chain2 ${t:13} ${v:dirname:7} ${u:failureLog} ]
}


proc __entry-chain2 { t:13 v:dirname:7 u:failureLog } {
    # Var: $string v:t:13:5 VALUE_OF [string:__t:13]
    # Var: $string v:t:23 VALUE_OF [string:__t:23]
    # Var: $void v:v RENAMED [$void:__v:v] /usr/src/swift-t/swift-t-1.2/turbine/export/unix.swift:mkdir():65:15
    set v:t:13:5 [ turbine::retrieve_string ${t:13} CACHED 1 ]
    set v:t:23 "${v:dirname:7}/${v:t:13:5}/docs"
    turbine::c::log [ list exec: "mkdir" "-p" ${v:t:23} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:t:23}
    set wfilename:failureLog [ turbine::get_file_path ${u:failureLog} ]
    turbine::rule [ list ${wfilename:failureLog} ] "__entry-call_foreign-write-4 {${wfilename:failureLog}} {${u:failureLog}}"
}


proc __entry-call_foreign-write-4 { wfilename:failureLog u:failureLog } {
    # Var: $file v:failureLog VALUE_OF [file:failureLog]
    # Var: $string v:__wfilename:failureLog VALUE_OF [string:__wfilename:failureLog]
    set v:__wfilename:failureLog [ turbine::retrieve_string ${wfilename:failureLog} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:failureLog [ turbine::create_local_file_ref ${v:__wfilename:failureLog} ${tcltmp:init_rc} 1 ]
    turbine::file_write_local v:failureLog ""
    turbine::store_file ${u:failureLog} v:failureLog 0
}


proc __entry-optmerged-20 { t:13 t:9 v:dirname:7 v:f u:configFile u:docRunfile u:failureLog u:timingLog } {
    # Var: $string v:t:13 VALUE_OF [string:__t:13]
    # Var: $string v:t:9 VALUE_OF [string:__t:9]
    # Var: $string v:t:31 VALUE_OF [string:__t:31]
    # Var: $string v:t:39 VALUE_OF [string:__t:39]
    set v:t:13 [ turbine::retrieve_string ${t:13} CACHED 1 ]
    set v:t:9 "${v:dirname:7}/${v:t:13}/docs/Failures.log"
    turbine::store_string ${t:9} ${v:t:9}
    set v:t:31 "${v:dirname:7}/${v:t:13}/docs/Timing.log"
    set v:t:39 "${v:dirname:7}/${v:t:13}/docs/${v:f}"
    turbine::set_filename_val ${u:failureLog} ${v:t:9}
    turbine::set_filename_val ${u:timingLog} ${v:t:31}
    turbine::set_filename_val ${u:docRunfile} ${v:t:39}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry:wait:configFile ${v:t:39} ${u:configFile} ${u:docRunfile} ]
    turbine::reset_priority
}


proc __entry:wait:configFile { v:t:39 u:configFile u:docRunfile } {
    # Var: $file v:configFile VALUE_OF [file:configFile]
    # Var: $file v:docRunfile VALUE_OF [file:docRunfile]
    set v:configFile [ turbine::retrieve_file ${u:configFile} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:docRunfile [ turbine::create_local_file_ref ${v:t:39} ${tcltmp:init_rc} 1 ]
    turbine::copy_local_file_contents ${v:docRunfile} ${v:configFile}
    turbine::store_file ${u:docRunfile} v:docRunfile 0
}


proc __entry-optmerged-21 { t:10 t:13 t:25:5 t:28:5 t:3:5 t:5:5 t:7 t:7:5 u:alignDedupBams u:docSampleInfo u:failureLog u:sampleInfoFile u:tmpLogDir:1 } {
    # Var: $string v:p:1 RENAMED [$string:__v:p]
    # Var: $string v:f:1 RENAMED [$string:__v:f]
    # Var: $file v:sampleInfoFile:1 VALUE_OF [file:sampleInfoFile]
    # Var: $file v:sampleInfoFile:2 VALUE_OF [file:sampleInfoFile]
    # Var: $string$[int] v:sampleLines VALUE_OF [string[int]:sampleLines]
    set v:p:1 [ turbine::retrieve_string ${t:7} CACHED 1 ]
    set v:f:1 [ file tail ${v:p:1} ]
    set tcltmp:init_rc 1
    set v:sampleInfoFile:1 [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:sampleInfoFile:1 ${v:p:1}
    turbine::store_file ${u:sampleInfoFile} v:sampleInfoFile:1 1
    set v:sampleInfoFile:2 [ turbine::retrieve_file ${u:sampleInfoFile} ]
    set v:sampleLines [ turbine::file_lines_impl ${v:sampleInfoFile:2} ]
    set tcltmp:iters [ dict size ${v:sampleLines} ]
    turbine::file_read_refcount_incr ${u:failureLog} [ expr { 2 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:5:5} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${u:tmpLogDir:1} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:3:5} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:7:5} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:10} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:28:5} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:25:5} [ expr { ${tcltmp:iters} } ]
    adlb::write_refcount_incr ${u:alignDedupBams} [ expr { ${tcltmp:iters} } ]
    dict for {v:index:2 v:sample} ${v:sampleLines} {
        # Var: string[int] u:sampleInfo RENAMED [string[int]:sampleInfo] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():201:2
        # Var: string u:sampleName:4 RENAMED [string:sampleName] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():202:2
        # Var: string u:rgheader RENAMED [string:rgheader] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():203:2
        # Var: string u:LogDir RENAMED [string:LogDir] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():215:2
        # Var: string u:AlignDir RENAMED [string:AlignDir] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():216:2
        # Var: string u:RealignDir RENAMED [string:RealignDir] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():217:2
        # Var: string u:VarcallDir RENAMED [string:VarcallDir] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():218:2
        # Var: $string$[int] v:sampleInfo VALUE_OF [string[int]:sampleInfo]
        # Var: $string v:alias:sampleName:4 VALUE_OF [string:__alias:sampleName:4]
        lassign [ adlb::multicreate [ list container integer string 1 2 130 ] [ list string 1 1 131 ] [ list string 1 1 132 ] [ list string 1 1 133 ] [ list string 2 1 134 ] [ list string 1 1 135 ] [ list string 1 1 136 ] ] u:sampleInfo u:sampleName:4 u:rgheader u:LogDir u:AlignDir u:RealignDir u:VarcallDir
        turbine::c::log "allocated u:sampleInfo=<${u:sampleInfo}> u:sampleName:4=<${u:sampleName:4}> u:rgheader=<${u:rgheader}> u:LogDir=<${u:LogDir}> u:AlignDir=<${u:AlignDir}>"
        turbine::c::log "allocated u:RealignDir=<${u:RealignDir}> u:VarcallDir=<${u:VarcallDir}>"
        set v:sampleInfo [ turbine::split_impl ${v:sample} " " ]
        turbine::build_rec ${u:sampleInfo} ${v:sampleInfo} [ list container integer string ] 0 1
        set a:sampleName:4 [ adlb::subscript_container ${u:sampleInfo} 0 ]
        set v:alias:sampleName:4 [ turbine::retrieve_string ${a:sampleName:4} ]
        turbine::store_string ${u:sampleName:4} ${v:alias:sampleName:4}
        turbine::rule [ list ${t:28:5} ] [ list alignDedupMain-if1 ${u:AlignDir} ${u:LogDir} ${u:RealignDir} ${u:VarcallDir} ${t:25:5} ${t:28:5} ${v:alias:sampleName:4} ${v:index:2} ${u:alignDedupBams} ${u:failureLog} ${u:rgheader} ${u:sampleInfo} ${u:sampleName:4} ${u:tmpLogDir:1} ]
        turbine::rule [ list ${t:3:5} ${t:5:5} ${t:7:5} ] [ list __entry-async_op-sprintf ${t:3:5} ${t:5:5} ${t:7:5} ${v:alias:sampleName:4} ${u:rgheader} ]
        turbine::rule [ list ${t:10} ] [ list __entry-optmerged-28 ${u:AlignDir} ${u:LogDir} ${u:RealignDir} ${u:VarcallDir} ${t:10} ${v:alias:sampleName:4} ]
        adlb::write_refcount_decr ${u:sampleInfo} 1
    }
    turbine::rule [ list ${t:10} ${t:13} ] [ list __entry-async_op-strcat-29 ${t:10} ${t:13} ${v:f:1} ${u:docSampleInfo} ${u:sampleInfoFile} ]
    turbine::decr_local_file_refcount v:sampleInfoFile:1
    turbine::read_refcount_decr ${u:tmpLogDir:1} 1
    turbine::read_refcount_decr ${t:7:5} 1
    turbine::read_refcount_decr ${t:5:5} 1
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${t:25:5} 1
    turbine::read_refcount_decr ${t:28:5} 1
    turbine::read_refcount_decr ${t:3:5} 1
    adlb::write_refcount_decr ${u:alignDedupBams} 1
}


proc alignDedupMain-if1 { u:AlignDir u:LogDir u:RealignDir u:VarcallDir t:25:5 t:28:5 v:alias:sampleName:4 v:index:2 u:alignDedupBams u:failureLog u:rgheader u:sampleInfo u:sampleName:4 u:tmpLogDir:1 } {
    # Var: $boolean v:__t:28 RENAMED [$boolean:__v:__t:28] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():221:35
    set v:__t:28 [ turbine::retrieve_integer ${t:28:5} CACHED 1 ]
    if { ${v:__t:28} } {
        # Var: string[string] u:variables /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:70:0
        global u:variables
        # Var: file u:alignedbam RENAMED [file:alignedbam] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():232:50
        # Var: string t:39:5 RENAMED [string:__t:39] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():235:21
        # Var: file u:alignedsam RENAMED [file:alignedsam] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():235:67
        # Var: file u:tmpsamtoolsLog RENAMED [file:tmpsamtoolsLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():236:55
        # Var: string t:47:5 RENAMED [string:__t:47] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():241:7
        # Var: int u:threads:1 RENAMED [int:threads] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():254:3
        # Var: string t:51:5 RENAMED [string:__t:51] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():254:28
        # Var: string t:54:5 RENAMED [string:__t:54] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():254:57
        # Var: string t:56:5 RENAMED [string:__t:56] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():255:53
        # Var: string[int] t:58:4 RENAMED [string[int]:__t:58] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():255:96
        # Var: boolean t:60:4 RENAMED [boolean:__t:60] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():258:8
        lassign [ adlb::multicreate [ list string 1 1 138 ] [ list string 1 1 141 ] [ list integer 2 1 142 ] [ list string 1 1 143 ] [ list string 1 1 144 ] [ list string 2 1 145 ] [ list container integer string 2 1 146 ] [ list integer 1 1 147 ] ] t:39:5 t:47:5 u:threads:1 t:51:5 t:54:5 t:56:5 t:58:4 t:60:4
        turbine::c::log "allocated t:39:5=<${t:39:5}> t:47:5=<${t:47:5}> u:threads:1=<${u:threads:1}> t:51:5=<${t:51:5}> t:54:5=<${t:54:5}>"
        turbine::c::log "allocated t:56:5=<${t:56:5}> t:58:4=<${t:58:4}> t:60:4=<${t:60:4}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 3 1 137 ] [ list file 4 1 139 ] [ list file 1 1 140 ] ] [ list 1 1 1 ] ] u:alignedbam u:alignedsam u:tmpsamtoolsLog
        turbine::read_refcount_incr ${u:RealignDir} 1
        turbine::read_refcount_incr ${u:rgheader} 2
        turbine::read_refcount_incr ${t:25:5} 2
        turbine::read_refcount_incr ${u:sampleInfo} 1
        turbine::read_refcount_incr ${u:VarcallDir} 1
        turbine::read_refcount_incr ${u:LogDir} 3
        turbine::file_read_refcount_incr ${u:failureLog} 1
        turbine::read_refcount_incr ${u:sampleName:4} 2
        turbine::read_refcount_incr ${u:tmpLogDir:1} 2
        turbine::array_kv_build ${t:58:4} [ ::adlb::dict_create 0 "-u" ] 1 integer string
        turbine::container_reference ${u:variables} "PAIRED" ${t:47:5} string
        turbine::container_reference ${u:variables} "CORES" ${t:51:5} string
        turbine::container_reference ${u:variables} "PROCPERNODE" ${t:54:5} string
        turbine::container_reference ${u:variables} "SAMTOOLSEXE" ${t:56:5} string
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:samtools_view_logged {${u:alignedbam}} {${u:tmpsamtoolsLog}} ${t:56:5} {${u:alignedsam}} ${u:threads:1} ${t:58:4}"
        turbine::reset_priority
        turbine::rule [ list ${u:LogDir} ] "mkdir-app-leaf1-1 ${u:LogDir}"
        turbine::rule [ list ${u:RealignDir} ] "mkdir-app-leaf1-2 ${u:RealignDir}"
        turbine::rule [ list ${u:VarcallDir} ] "mkdir-app-leaf1-3 ${u:VarcallDir}"
        turbine::rule [ list ${t:25:5} ] [ list __entry-async_op-strcat-18 ${t:25:5} ${t:39:5} ${v:alias:sampleName:4} ${u:alignedsam} ]
        turbine::rule [ list ${t:47:5} ] "__entry-async_op-eq_string ${t:47:5} {${u:alignedsam}} ${u:rgheader} ${u:sampleInfo} ${u:sampleName:4}"
        turbine::rule [ list ${t:51:5} ${t:54:5} ] "__entry-async_op-parse_int-3 ${t:51:5} ${t:54:5} ${u:threads:1}"
        turbine::rule [ list ${u:AlignDir} ] [ list __entry-optmerged-22 ${u:AlignDir} ${u:LogDir} ${t:25:5} ${t:39:5} ${t:56:5} ${t:58:4} ${t:60:4} ${v:alias:sampleName:4} ${v:index:2} ${u:alignDedupBams} ${u:alignedbam} ${u:alignedsam} ${u:failureLog} ${u:threads:1} ${u:tmpLogDir:1} ]
        turbine::rule [ list ${u:tmpLogDir:1} ] [ list __entry-optmerged-27 ${v:alias:sampleName:4} ${u:tmpLogDir:1} ${u:tmpsamtoolsLog} ]
    } else {
        turbine::rule [ list ${u:AlignDir} ] [ list __entry-async_op-strcat-28 ${u:AlignDir} ${v:alias:sampleName:4} ${v:index:2} ${u:alignDedupBams} ${u:failureLog} ]
    }
    turbine::read_refcount_decr ${u:tmpLogDir:1} 1
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${u:LogDir} 1
    turbine::read_refcount_decr ${u:VarcallDir} 1
    turbine::read_refcount_decr ${u:sampleInfo} 1
    turbine::read_refcount_decr ${t:25:5} 1
    turbine::read_refcount_decr ${u:rgheader} 1
    turbine::read_refcount_decr ${u:sampleName:4} 1
    turbine::read_refcount_decr ${u:RealignDir} 1
    turbine::read_refcount_decr ${u:AlignDir} 1
}


proc mkdir-app-leaf1-1 { u:LogDir } {
    # Var: $string v:dirname:2 RENAMED [$string:__v:dirname] /usr/src/swift-t/swift-t-1.2/turbine/export/unix.swift:mkdir():65:15
    # Var: $void v:v:6 RENAMED [$void:__v:v] /usr/src/swift-t/swift-t-1.2/turbine/export/unix.swift:mkdir():65:15
    set v:dirname:2 [ turbine::retrieve_string ${u:LogDir} CACHED 1 ]
    turbine::c::log [ list exec: "mkdir" "-p" ${v:dirname:2} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:dirname:2}
}


proc mkdir-app-leaf1-2 { u:RealignDir } {
    # Var: $string v:dirname:4 RENAMED [$string:__v:dirname] /usr/src/swift-t/swift-t-1.2/turbine/export/unix.swift:mkdir():65:15
    # Var: $void v:v:8 RENAMED [$void:__v:v] /usr/src/swift-t/swift-t-1.2/turbine/export/unix.swift:mkdir():65:15
    set v:dirname:4 [ turbine::retrieve_string ${u:RealignDir} CACHED 1 ]
    turbine::c::log [ list exec: "mkdir" "-p" ${v:dirname:4} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:dirname:4}
}


proc mkdir-app-leaf1-3 { u:VarcallDir } {
    # Var: $string v:dirname:5 RENAMED [$string:__v:dirname] /usr/src/swift-t/swift-t-1.2/turbine/export/unix.swift:mkdir():65:15
    # Var: $void v:v:9 RENAMED [$void:__v:v] /usr/src/swift-t/swift-t-1.2/turbine/export/unix.swift:mkdir():65:15
    set v:dirname:5 [ turbine::retrieve_string ${u:VarcallDir} CACHED 1 ]
    turbine::c::log [ list exec: "mkdir" "-p" ${v:dirname:5} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:dirname:5}
}


proc __entry-async_op-strcat-18 { t:25:5 t:39:5 v:alias:sampleName:4 u:alignedsam } {
    # Var: $string v:t:25:5:3 VALUE_OF [string:__t:25:5]
    # Var: $string v:t:39:5 VALUE_OF [string:__t:39:5]
    set v:t:25:5:3 [ turbine::retrieve_string ${t:25:5} CACHED 1 ]
    set v:t:39:5 "${v:t:25:5:3}/align/${v:alias:sampleName:4}.noDedups.sam"
    turbine::store_string ${t:39:5} ${v:t:39:5}
    turbine::set_filename_val ${u:alignedsam} ${v:t:39:5}
}


proc __entry-async_op-eq_string { t:47:5 u:alignedsam u:rgheader u:sampleInfo u:sampleName:4 } {
    # Var: $string v:t:47:5 VALUE_OF [string:__t:47:5]
    # Var: $boolean v:t:46:5 VALUE_OF [boolean:__t:46:5]
    set v:t:47:5 [ turbine::retrieve_string ${t:47:5} CACHED 1 ]
    set v:t:46:5 [ string equal ${v:t:47:5} "1" ]
    if { ${v:t:46:5} } {
        # Var: string[string] u:variables /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:70:0
        global u:variables
        # Var: string[int] u:reads RENAMED [string[int]:reads] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():244:4
        # Var: $string v:alias:read1 VALUE_OF [string:__alias:read1]
        # Var: $string v:alias:read2 VALUE_OF [string:__alias:read2]
        lassign [ adlb::multicreate [ list container integer string 1 1 148 ] ] u:reads
        turbine::c::log "allocated u:reads=<${u:reads}>"
        set a:read1 [ adlb::subscript_container ${u:sampleInfo} 1 ]
        set v:alias:read1 [ turbine::retrieve_string ${a:read1} ]
        set a:read2 [ adlb::subscript_container ${u:sampleInfo} 2 ]
        set v:alias:read2 [ turbine::retrieve_string ${a:read2} ]
        turbine::array_kv_build ${u:reads} [ ::adlb::dict_create 0 ${v:alias:read1} 1 ${v:alias:read2} ] 1 integer string
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:alignReads {${u:alignedsam}} ${u:variables} ${u:sampleName:4} ${u:reads} ${u:rgheader}"
        turbine::reset_priority
    } else {
        # Var: string[string] u:variables /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:70:0
        global u:variables
        # Var: string[int] u:reads:1 RENAMED [string[int]:reads] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():249:4
        # Var: $string v:alias:read1:1 VALUE_OF [string:__alias:read1:1]
        lassign [ adlb::multicreate [ list container integer string 1 1 149 ] ] u:reads:1
        turbine::c::log "allocated u:reads:1=<${u:reads:1}>"
        set a:read1:1 [ adlb::subscript_container ${u:sampleInfo} 1 ]
        set v:alias:read1:1 [ turbine::retrieve_string ${a:read1:1} ]
        turbine::array_kv_build ${u:reads:1} [ ::adlb::dict_create 0 ${v:alias:read1:1} ] 1 integer string
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:alignReads {${u:alignedsam}} ${u:variables} ${u:sampleName:4} ${u:reads:1} ${u:rgheader}"
        turbine::reset_priority
    }
    turbine::read_refcount_decr ${u:sampleInfo} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::read_refcount_decr ${u:rgheader} 1
    turbine::read_refcount_decr ${u:sampleName:4} 1
}


proc __entry-async_op-parse_int-3 { t:51:5 t:54:5 u:threads:1 } {
    # Var: $string v:t:54:5 VALUE_OF [string:__t:54:5]
    # Var: $int v:t:53:5 VALUE_OF [int:__t:53:5]
    # Var: $string v:t:51:5 VALUE_OF [string:__t:51:5]
    # Var: $int v:t:50:5 VALUE_OF [int:__t:50:5]
    # Var: $int v:threads:1 VALUE_OF [int:threads:1]
    set v:t:54:5 [ turbine::retrieve_string ${t:54:5} CACHED 1 ]
    set v:t:53:5 [ turbine::parse_int_impl ${v:t:54:5} 10 ]
    set v:t:51:5 [ turbine::retrieve_string ${t:51:5} CACHED 1 ]
    set v:t:50:5 [ turbine::parse_int_impl ${v:t:51:5} 10 ]
    set v:threads:1 [ turbine::divide_integer_impl ${v:t:50:5} ${v:t:53:5} ]
    turbine::store_integer ${u:threads:1} ${v:threads:1}
}


proc __entry-optmerged-22 { u:AlignDir u:LogDir t:25:5 t:39:5 t:56:5 t:58:4 t:60:4 v:alias:sampleName:4 v:index:2 u:alignDedupBams u:alignedbam u:alignedsam u:failureLog u:threads:1 u:tmpLogDir:1 } {
    # Var: string[string] u:variables /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:70:0
    global u:variables
    # Var: $string v:AlignDir:1 VALUE_OF [string:AlignDir]
    # Var: $string v:t:37:5 VALUE_OF [string:__t:37:5]
    set v:AlignDir:1 [ turbine::retrieve_string ${u:AlignDir} CACHED 1 ]
    set v:t:37:5 "${v:AlignDir:1}${v:alias:sampleName:4}.noDedups.bam"
    turbine::set_filename_val ${u:alignedbam} ${v:t:37:5}
    turbine::rule [ list [ turbine::get_file_td ${u:alignedbam} ] ] "f:checkBam ${t:60:4} ${u:variables} {${u:alignedbam}}"
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list mkdir-app-leaf1-4 ${v:AlignDir:1} ]
    turbine::reset_priority
    turbine::rule [ list ${t:60:4} ] [ list alignDedupMain-if3 ${u:LogDir} ${t:25:5} ${t:39:5} ${t:56:5} ${t:58:4} ${t:60:4} ${v:AlignDir:1} ${v:alias:sampleName:4} ${v:index:2} ${v:t:37:5} ${u:alignDedupBams} ${u:alignedbam} ${u:alignedsam} ${u:failureLog} ${u:threads:1} ${u:tmpLogDir:1} ]
}


proc mkdir-app-leaf1-4 { v:AlignDir:1 } {
    # Var: $void v:v:7 RENAMED [$void:__v:v] /usr/src/swift-t/swift-t-1.2/turbine/export/unix.swift:mkdir():65:15
    turbine::c::log [ list exec: "mkdir" "-p" ${v:AlignDir:1} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:AlignDir:1}
}


proc alignDedupMain-if3 { u:LogDir t:25:5 t:39:5 t:56:5 t:58:4 t:60:4 v:AlignDir:1 v:alias:sampleName:4 v:index:2 v:t:37:5 u:alignDedupBams u:alignedbam u:alignedsam u:failureLog u:threads:1 u:tmpLogDir:1 } {
    # Var: $boolean v:__t:60 RENAMED [$boolean:__v:__t:60] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():258:23
    set v:__t:60 [ turbine::retrieve_integer ${t:60:4} CACHED 1 ]
    if { ${v:__t:60} } {
        # Var: string[string] u:variables /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:70:0
        global u:variables
        # Var: file u:dedupsortedbam RENAMED [file:dedupsortedbam] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():264:55
        # Var: boolean t:63:3 RENAMED [boolean:__t:63] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():268:9
        # Var: string t:19:8 RENAMED [string:__t:19] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():141:5
        # Var: $string v:t:61:4 VALUE_OF [string:__t:61:4]
        lassign [ adlb::multicreate [ list integer 1 1 151 ] [ list string 1 1 152 ] ] t:63:3 t:19:8
        turbine::c::log "allocated t:63:3=<${t:63:3}> t:19:8=<${t:19:8}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 3 1 150 ] ] [ list 1 ] ] u:dedupsortedbam
        adlb::write_refcount_incr ${u:alignDedupBams} 1
        turbine::read_refcount_incr ${t:58:4} 1
        turbine::read_refcount_incr ${u:threads:1} 2
        turbine::read_refcount_incr ${t:56:5} 2
        turbine::read_refcount_incr ${t:39:5} 2
        turbine::file_read_refcount_incr ${u:alignedsam} 2
        turbine::read_refcount_incr ${t:25:5} 2
        turbine::read_refcount_incr ${u:LogDir} 2
        turbine::file_read_refcount_incr ${u:failureLog} 1
        turbine::file_read_refcount_incr ${u:alignedbam} 1
        turbine::read_refcount_incr ${u:tmpLogDir:1} 3
        turbine::container_reference ${u:variables} "MARKDUPLICATESTOOL" ${t:19:8} string
        set v:t:61:4 "${v:AlignDir:1}${v:alias:sampleName:4}.wDedups.sorted.bam"
        turbine::set_filename_val ${u:dedupsortedbam} ${v:t:61:4}
        turbine::rule [ list [ turbine::get_file_td ${u:dedupsortedbam} ] ] "f:checkBam ${t:63:3} ${u:variables} {${u:dedupsortedbam}}"
        turbine::rule [ list ${t:19:8} ] [ list __entry-async_op-eq_string-1 ${u:LogDir} ${t:19:8} ${t:25:5} ${t:39:5} ${t:56:5} ${t:58:4} ${v:AlignDir:1} ${v:alias:sampleName:4} ${v:t:61:4} ${u:alignedbam} ${u:alignedsam} ${u:dedupsortedbam} ${u:threads:1} ${u:tmpLogDir:1} ]
        turbine::rule [ list ${t:63:3} ] [ list alignDedupMain-if4 ${u:LogDir} ${t:39:5} ${t:56:5} ${t:63:3} ${v:AlignDir:1} ${v:alias:sampleName:4} ${v:index:2} ${v:t:61:4} ${u:alignDedupBams} ${u:alignedsam} ${u:dedupsortedbam} ${u:failureLog} ${u:tmpLogDir:1} ]
    } else {
        # Var: string u:message:3 RENAMED [string:message] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():329:4
        # Var: boolean t:124:2 RENAMED [boolean:__t:124] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():332:4
        lassign [ adlb::multicreate [ list string 2 1 202 ] [ list integer 1 1 203 ] ] u:message:3 t:124:2
        turbine::c::log "allocated u:message:3=<${u:message:3}> t:124:2=<${t:124:2}>"
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:append ${t:124:2} {${u:failureLog}} ${u:message:3}"
        turbine::reset_priority
        turbine::rule [ list ${t:124:2} ] "alignDedupMain-chain3 ${t:124:2} ${u:message:3}"
        turbine::rule [ list ${u:LogDir} ] [ list __entry-async_op-strcat-27 ${u:LogDir} ${v:alias:sampleName:4} ${v:t:37:5} ${u:message:3} ]
    }
    turbine::read_refcount_decr ${u:tmpLogDir:1} 1
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${u:LogDir} 1
    turbine::read_refcount_decr ${t:25:5} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${t:39:5} 1
    turbine::read_refcount_decr ${t:56:5} 1
    turbine::read_refcount_decr ${u:threads:1} 1
    turbine::read_refcount_decr ${t:58:4} 1
    adlb::write_refcount_decr ${u:alignDedupBams} 1
}


proc __entry-async_op-eq_string-1 { u:LogDir t:19:8 t:25:5 t:39:5 t:56:5 t:58:4 v:AlignDir:1 v:alias:sampleName:4 v:t:61:4 u:alignedbam u:alignedsam u:dedupsortedbam u:threads:1 u:tmpLogDir:1 } {
    # Var: $string v:t:19:8 VALUE_OF [string:__t:19:8]
    # Var: $boolean v:t:18:8 VALUE_OF [boolean:__t:18:8]
    set v:t:19:8 [ turbine::retrieve_string ${t:19:8} CACHED 1 ]
    set v:t:18:8 [ string equal ${v:t:19:8} "SAMBLASTER" ]
    if { ${v:t:18:8} } {
        # Var: string[string] u:variables /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:70:0
        global u:variables
        # Var: file u:dedupsam RENAMED [file:dedupsam] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():142:64
        # Var: file u:dedupbam RENAMED [file:dedupbam] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():143:47
        # Var: string t:29:8 RENAMED [string:__t:29] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():144:16
        # Var: file u:samLog RENAMED [file:samLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():144:43
        # Var: file u:sortLog RENAMED [file:sortLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():145:44
        # Var: file u:tmpsamblasterLog RENAMED [file:tmpsamblasterLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():146:56
        # Var: file u:tmpsamtoolsLog:1 RENAMED [file:tmpsamtoolsLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():147:54
        # Var: file u:tmpnovosortLog RENAMED [file:tmpnovosortLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():148:54
        # Var: string t:39:7 RENAMED [string:__t:39] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():151:57
        # Var: string t:46:6 RENAMED [string:__t:46] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():157:60
        # Var: string[int] t:50:6 RENAMED [string[int]:__t:50] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():158:19
        # Var: int t:53:6 RENAMED [int:__t:53] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():158:42
        # Var: string t:54:6 RENAMED [string:__t:54] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():158:53
        # Var: $int v:t:4:1:4 VALUE_OF [int:__t:4:1:4]
        # Var: $string v:t:3:1:4 VALUE_OF [string:__t:3:1:4]
        # Var: $string v:startmsg:4 VALUE_OF [string:startmsg:4]
        # Var: $string v:t:27:8 VALUE_OF [string:__t:27:8]
        lassign [ adlb::multicreate [ list string 1 1 155 ] [ list string 1 1 161 ] [ list string 1 1 162 ] [ list container integer string 1 1 163 ] [ list integer 1 1 164 ] [ list string 1 1 165 ] ] t:29:8 t:39:7 t:46:6 t:50:6 t:53:6 t:54:6
        turbine::c::log "allocated t:29:8=<${t:29:8}> t:39:7=<${t:39:7}> t:46:6=<${t:46:6}> t:50:6=<${t:50:6}> t:53:6=<${t:53:6}>"
        turbine::c::log "allocated t:54:6=<${t:54:6}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 2 1 153 ] [ list file 2 1 154 ] [ list file 0 1 156 ] [ list file 1 1 157 ] [ list file 1 1 158 ] [ list file 1 1 159 ] [ list file 1 1 160 ] ] [ list 1 1 1 1 1 1 1 ] ] u:dedupsam u:dedupbam u:samLog u:sortLog u:tmpsamblasterLog u:tmpsamtoolsLog:1 u:tmpnovosortLog
        turbine::read_refcount_incr ${t:58:4} 1
        turbine::read_refcount_incr ${t:39:5} 1
        turbine::read_refcount_incr ${u:threads:1} 1
        turbine::read_refcount_incr ${t:56:5} 1
        turbine::file_read_refcount_incr ${u:alignedsam} 1
        turbine::read_refcount_incr ${t:25:5} 1
        turbine::file_read_refcount_incr ${u:dedupsortedbam} 1
        turbine::array_kv_build ${t:50:6} [ ::adlb::dict_create 0 "--compression" 1 "1" ] 1 integer string
        turbine::container_reference ${u:variables} "SAMBLASTEREXE" ${t:39:7} string
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:samtools_view_logged {${u:dedupbam}} {${u:tmpsamtoolsLog:1}} ${t:56:5} {${u:dedupsam}} ${u:threads:1} ${t:58:4}"
        turbine::reset_priority
        turbine::container_reference ${u:variables} "NOVOSORTEXE" ${t:46:6} string
        turbine::container_reference ${u:variables} "NOVOSORT_MEMLIMIT" ${t:54:6} string
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:novosort_logged {${u:dedupsortedbam}} {${u:sortLog}} {${u:tmpnovosortLog}} ${t:46:6} {${u:dedupbam}} ${t:25:5} ${u:threads:1} ${t:50:6} ${t:53:6}"
        turbine::reset_priority
        set v:t:4:1:4 [ clock seconds ]
        set v:t:3:1:4 ${v:t:4:1:4}
        set v:startmsg:4 "SAMBLASTER start\t${v:t:3:1:4}\n"
        set v:t:27:8 "${v:AlignDir:1}${v:alias:sampleName:4}.wDedups.bam"
        turbine::set_filename_val ${u:dedupbam} ${v:t:27:8}
        turbine::rule [ list ${t:25:5} ] [ list __entry-async_op-strcat-19 ${t:25:5} ${t:29:8} ${t:39:5} ${t:39:7} ${v:alias:sampleName:4} ${v:startmsg:4} ${u:alignedsam} ${u:dedupsam} ${u:samLog} ${u:tmpsamblasterLog} ]
        turbine::rule [ list ${t:54:6} ] "__entry-async_op-parse_int-4 ${t:53:6} ${t:54:6}"
        turbine::rule [ list ${u:tmpLogDir:1} ] [ list __entry-optmerged-23 ${v:alias:sampleName:4} ${u:tmpLogDir:1} ${u:tmpnovosortLog} ${u:tmpsamblasterLog} ${u:tmpsamtoolsLog:1} ]
        turbine::rule [ list ${u:LogDir} ] [ list __entry-optmerged-24 ${u:LogDir} ${t:29:8} ${v:alias:sampleName:4} ${u:samLog} ${u:sortLog} ]
    } else {
        # Var: $boolean v:t:56:6 VALUE_OF [boolean:__t:56:6]
        turbine::file_read_refcount_incr ${u:alignedbam} 1
        set v:t:56:6 [ string equal ${v:t:19:8} "PICARD" ]
        if { ${v:t:56:6} } {
            # Var: string[string] u:variables /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:70:0
            global u:variables
            # Var: file u:metricsfile RENAMED [file:metricsfile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():163:50
            # Var: file u:alignedsortedbam RENAMED [file:alignedsortedbam] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():164:55
            # Var: file u:picardLog RENAMED [file:picardLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():165:46
            # Var: file u:sortLog:1 RENAMED [file:sortLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():166:44
            # Var: file u:tmpnovosortLog:1 RENAMED [file:tmpnovosortLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():167:54
            # Var: file u:tmppicardLog RENAMED [file:tmppicardLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():168:52
            # Var: string t:72:4 RENAMED [string:__t:72] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():171:62
            # Var: string[int] t:76:4 RENAMED [string[int]:__t:76] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():172:12
            # Var: int t:77:4 RENAMED [int:__t:77] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():172:25
            # Var: string t:78:4 RENAMED [string:__t:78] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():172:36
            # Var: string t:80:4 RENAMED [string:__t:80] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():175:71
            # Var: string t:82:4 RENAMED [string:__t:82] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():175:88
            # Var: $int v:t:4:2:1 VALUE_OF [int:__t:4:2:1]
            # Var: $string v:t:3:2:1 VALUE_OF [string:__t:3:2:1]
            # Var: $string v:startmsg:1:1 VALUE_OF [string:startmsg:1:1]
            # Var: $string v:t:60:5 VALUE_OF [string:__t:60:5]
            # Var: $string v:t:62:5 VALUE_OF [string:__t:62:5]
            lassign [ adlb::multicreate [ list string 1 1 172 ] [ list container integer string 1 1 173 ] [ list integer 1 1 174 ] [ list string 1 1 175 ] [ list string 1 1 176 ] [ list string 1 1 177 ] ] t:72:4 t:76:4 t:77:4 t:78:4 t:80:4 t:82:4
            turbine::c::log "allocated t:72:4=<${t:72:4}> t:76:4=<${t:76:4}> t:77:4=<${t:77:4}> t:78:4=<${t:78:4}> t:80:4=<${t:80:4}>"
            turbine::c::log "allocated t:82:4=<${t:82:4}>"
            lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 0 1 166 ] [ list file 2 1 167 ] [ list file 0 1 168 ] [ list file 1 1 169 ] [ list file 1 1 170 ] [ list file 1 1 171 ] ] [ list 1 1 1 1 1 1 ] ] u:metricsfile u:alignedsortedbam u:picardLog u:sortLog:1 u:tmpnovosortLog:1 u:tmppicardLog
            turbine::read_refcount_incr ${t:25:5} 1
            turbine::array_kv_build ${t:76:4} [ ::adlb::dict_create ] 1 integer string
            turbine::container_reference ${u:variables} "NOVOSORTEXE" ${t:72:4} string
            turbine::container_reference ${u:variables} "NOVOSORT_MEMLIMIT" ${t:78:4} string
            set tcltmp:prio [ turbine::get_priority ]
            turbine::set_priority ${tcltmp:prio}
            adlb::spawn 0 "f:novosort_logged {${u:alignedsortedbam}} {${u:sortLog:1}} {${u:tmpnovosortLog:1}} ${t:72:4} {${u:alignedbam}} ${t:25:5} ${u:threads:1} ${t:76:4} ${t:77:4}"
            turbine::reset_priority
            turbine::container_reference ${u:variables} "JAVAEXE" ${t:80:4} string
            turbine::container_reference ${u:variables} "PICARDJAR" ${t:82:4} string
            set v:t:4:2:1 [ clock seconds ]
            set v:t:3:2:1 ${v:t:4:2:1}
            set v:startmsg:1:1 "PICARD start\t${v:t:3:2:1}\n"
            set v:t:60:5 "${v:AlignDir:1}${v:alias:sampleName:4}.picard.metrics"
            turbine::set_filename_val ${u:metricsfile} ${v:t:60:5}
            set v:t:62:5 "${v:AlignDir:1}${v:alias:sampleName:4}.noDedups.sorted.bam"
            turbine::set_filename_val ${u:alignedsortedbam} ${v:t:62:5}
            turbine::rule [ list ${t:78:4} ] "__entry-async_op-parse_int-5 ${t:77:4} ${t:78:4}"
            turbine::rule [ list ${u:tmpLogDir:1} ] [ list __entry-optmerged-25 ${v:alias:sampleName:4} ${u:tmpLogDir:1} ${u:tmpnovosortLog:1} ${u:tmppicardLog} ]
            turbine::rule [ list ${u:LogDir} ] [ list __entry-optmerged-26 ${u:LogDir} ${t:25:5} ${t:80:4} ${t:82:4} ${v:alias:sampleName:4} ${v:startmsg:1:1} ${v:t:60:5} ${v:t:61:4} ${v:t:62:5} ${u:alignedsortedbam} ${u:dedupsortedbam} ${u:metricsfile} ${u:picardLog} ${u:sortLog:1} ${u:tmppicardLog} ]
        } else {
            # Var: string[string] u:variables /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:70:0
            global u:variables
            # Var: file u:novoLog RENAMED [file:novoLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():180:44
            # Var: file u:tmpnovosortLog:2 RENAMED [file:tmpnovosortLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():181:54
            # Var: string t:90:4 RENAMED [string:__t:90] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():184:60
            # Var: string[int] t:94:4 RENAMED [string[int]:__t:94] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():185:21
            # Var: int t:96:4 RENAMED [int:__t:96] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():185:42
            # Var: string t:97:4 RENAMED [string:__t:97] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:markDuplicates():185:53
            lassign [ adlb::multicreate [ list string 1 1 180 ] [ list container integer string 1 1 181 ] [ list integer 1 1 182 ] [ list string 1 1 183 ] ] t:90:4 t:94:4 t:96:4 t:97:4
            turbine::c::log "allocated t:90:4=<${t:90:4}> t:94:4=<${t:94:4}> t:96:4=<${t:96:4}> t:97:4=<${t:97:4}>"
            lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 178 ] [ list file 1 1 179 ] ] [ list 1 1 ] ] u:novoLog u:tmpnovosortLog:2
            turbine::file_read_refcount_incr ${u:dedupsortedbam} 1
            turbine::array_kv_build ${t:94:4} [ ::adlb::dict_create 0 "--markDuplicates" ] 1 integer string
            turbine::container_reference ${u:variables} "NOVOSORTEXE" ${t:90:4} string
            turbine::container_reference ${u:variables} "NOVOSORT_MEMLIMIT" ${t:97:4} string
            set tcltmp:prio [ turbine::get_priority ]
            turbine::set_priority ${tcltmp:prio}
            adlb::spawn 0 "f:novosort_logged {${u:dedupsortedbam}} {${u:novoLog}} {${u:tmpnovosortLog:2}} ${t:90:4} {${u:alignedbam}} ${t:25:5} ${u:threads:1} ${t:94:4} ${t:96:4}"
            turbine::reset_priority
            turbine::rule [ list ${u:LogDir} ] [ list __entry-async_op-strcat-20 ${u:LogDir} ${v:alias:sampleName:4} ${u:novoLog} ]
            turbine::rule [ list ${u:tmpLogDir:1} ] [ list __entry-async_op-strcat-21 ${v:alias:sampleName:4} ${u:tmpLogDir:1} ${u:tmpnovosortLog:2} ]
            turbine::rule [ list ${t:97:4} ] "__entry-async_op-parse_int-6 ${t:96:4} ${t:97:4}"
        }
    }
    turbine::read_refcount_decr ${u:tmpLogDir:1} 1
    turbine::read_refcount_decr ${u:LogDir} 1
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
    turbine::read_refcount_decr ${t:25:5} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${t:39:5} 1
    turbine::read_refcount_decr ${t:56:5} 1
    turbine::read_refcount_decr ${u:threads:1} 1
    turbine::read_refcount_decr ${t:58:4} 1
}


proc __entry-async_op-strcat-19 { t:25:5 t:29:8 t:39:5 t:39:7 v:alias:sampleName:4 v:startmsg:4 u:alignedsam u:dedupsam u:samLog u:tmpsamblasterLog } {
    # Var: $string v:t:25:5:4 VALUE_OF [string:__t:25:5]
    # Var: $string v:t:22:8 VALUE_OF [string:__t:22:8]
    set v:t:25:5:4 [ turbine::retrieve_string ${t:25:5} CACHED 1 ]
    set v:t:22:8 "${v:t:25:5:4}/align/${v:alias:sampleName:4}.wDedups.sam"
    turbine::set_filename_val ${u:dedupsam} ${v:t:22:8}
    turbine::rule [ list ${t:29:8} ${t:39:5} ${t:39:7} [ turbine::get_file_td ${u:alignedsam} ] ] [ list samblaster_logged-chain1 ${t:29:8} ${t:39:5} ${t:39:7} ${v:startmsg:4} ${v:t:22:8} ${u:alignedsam} ${u:dedupsam} ${u:samLog} ${u:tmpsamblasterLog} ]
}


proc samblaster_logged-chain1 { t:29:8 t:39:5 t:39:7 v:startmsg:4 v:t:22:8 u:alignedsam u:dedupsam u:samLog u:tmpsamblasterLog } {
    # Var: $string v:samblasterexe RENAMED [$string:__v:samblasterexe] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samblaster():37:58
    # Var: $string v:__filename:inputFile:3 RENAMED [$string:__v:__filename:inputFile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samblaster():37:58
    # Var: $string v:__filename:outLog:3 RENAMED [$string:__v:__filename:outLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samblaster():37:58
    # Var: $file v:inputFile:3 RENAMED [$file:__v:inputFile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samblaster():37:58
    # Var: $file v:output:1 RENAMED [$file:__v:output] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samblaster():37:58
    # Var: $file v:outLog:3 RENAMED [$file:__v:outLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samblaster():37:58
    # Var: $int v:t:9:1:3 VALUE_OF [int:__t:9:1:3]
    # Var: $string v:t:8:1:3 VALUE_OF [string:__t:8:1:3]
    # Var: $string v:endmsg:4 VALUE_OF [string:endmsg:4]
    # Var: $string v:t:11:1:3 VALUE_OF [string:__t:11:1:3]
    set v:samblasterexe [ turbine::retrieve_string ${t:39:7} CACHED 1 ]
    set v:__filename:inputFile:3 [ turbine::retrieve_string ${t:39:5} CACHED 1 ]
    set v:__filename:outLog:3 [ turbine::retrieve_string ${t:29:8} CACHED 1 ]
    set v:inputFile:3 [ turbine::retrieve_file ${u:alignedsam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output:1 [ turbine::create_local_file_ref ${v:t:22:8} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:outLog:3 [ turbine::create_local_file_ref ${v:__filename:outLog:3} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:samblasterexe "-M" "-i" ${v:__filename:inputFile:3} [ dict create "stdout" ${v:t:22:8} "stderr" ${v:__filename:outLog:3} ] ]
    turbine::exec_external ${v:samblasterexe} [ dict create "stdout" ${v:t:22:8} "stderr" ${v:__filename:outLog:3} ] "-M" "-i" ${v:__filename:inputFile:3}
    turbine::store_file ${u:dedupsam} v:output:1 0
    turbine::store_file ${u:samLog} v:outLog:3 0
    set v:t:9:1:3 [ clock seconds ]
    set v:t:8:1:3 ${v:t:9:1:3}
    set v:endmsg:4 "SAMBLASTER end\t${v:t:8:1:3}\n"
    set v:t:11:1:3 "${v:startmsg:4}${v:endmsg:4}"
    set wfilename:tmpsamblasterLog [ turbine::get_file_path ${u:tmpsamblasterLog} ]
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list rm-app-leaf1 ${v:t:22:8} ${u:dedupsam} ]
    turbine::reset_priority
    turbine::rule [ list ${wfilename:tmpsamblasterLog} ] [ list __entry-call_foreign-write-5 ${v:t:11:1:3} ${wfilename:tmpsamblasterLog} ${u:tmpsamblasterLog} ]
    turbine::decr_local_file_refcount v:output:1
    turbine::decr_local_file_refcount v:outLog:3
}


proc rm-app-leaf1 { v:t:22:8 u:dedupsam } {
    # Var: $file v:f:14 RENAMED [$file:__v:f] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:rm():55:6
    # Var: $void v:v:5 RENAMED [$void:__v:v] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:rm():55:6
    set v:f:14 [ turbine::retrieve_file ${u:dedupsam} CACHED 1 ]
    turbine::c::log [ list exec: "rm" ${v:t:22:8} [ dict create ] ]
    turbine::exec_external "rm" [ dict create ] ${v:t:22:8}
}


proc __entry-call_foreign-write-5 { v:t:11:1:3 wfilename:tmpsamblasterLog u:tmpsamblasterLog } {
    # Var: $file v:tmpsamblasterLog VALUE_OF [file:tmpsamblasterLog]
    # Var: $string v:__wfilename:tmpsamblasterLog VALUE_OF [string:__wfilename:tmpsamblasterLog]
    set v:__wfilename:tmpsamblasterLog [ turbine::retrieve_string ${wfilename:tmpsamblasterLog} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:tmpsamblasterLog [ turbine::create_local_file_ref ${v:__wfilename:tmpsamblasterLog} ${tcltmp:init_rc} 1 ]
    turbine::file_write_local v:tmpsamblasterLog ${v:t:11:1:3}
    turbine::store_file ${u:tmpsamblasterLog} v:tmpsamblasterLog 0
}


proc __entry-async_op-parse_int-4 { t:53:6 t:54:6 } {
    # Var: $string v:t:54:6 VALUE_OF [string:__t:54:6]
    # Var: $int v:t:53:6 VALUE_OF [int:__t:53:6]
    set v:t:54:6 [ turbine::retrieve_string ${t:54:6} CACHED 1 ]
    set v:t:53:6 [ turbine::parse_int_impl ${v:t:54:6} 10 ]
    turbine::store_integer ${t:53:6} ${v:t:53:6}
}


proc __entry-optmerged-23 { v:alias:sampleName:4 u:tmpLogDir:1 u:tmpnovosortLog u:tmpsamblasterLog u:tmpsamtoolsLog:1 } {
    # Var: $string v:tmpLogDir:1:6 VALUE_OF [string:tmpLogDir:1]
    # Var: $string v:t:33:8 VALUE_OF [string:__t:33:8]
    # Var: $string v:t:35:7 VALUE_OF [string:__t:35:7]
    # Var: $string v:t:37:7 VALUE_OF [string:__t:37:7]
    set v:tmpLogDir:1:6 [ turbine::retrieve_string ${u:tmpLogDir:1} CACHED 1 ]
    set v:t:33:8 "${v:tmpLogDir:1:6}${v:alias:sampleName:4}_SamblasterDedup.log"
    set v:t:35:7 "${v:tmpLogDir:1:6}${v:alias:sampleName:4}_samtoolsDedup.log"
    set v:t:37:7 "${v:tmpLogDir:1:6}${v:alias:sampleName:4}_NovoSortDedup.log"
    turbine::set_filename_val ${u:tmpsamblasterLog} ${v:t:33:8}
    turbine::set_filename_val ${u:tmpsamtoolsLog:1} ${v:t:35:7}
    turbine::set_filename_val ${u:tmpnovosortLog} ${v:t:37:7}
}


proc __entry-optmerged-24 { u:LogDir t:29:8 v:alias:sampleName:4 u:samLog u:sortLog } {
    # Var: $string v:LogDir:4 VALUE_OF [string:LogDir]
    # Var: $string v:t:29:8 VALUE_OF [string:__t:29:8]
    # Var: $string v:t:31:8 VALUE_OF [string:__t:31:8]
    set v:LogDir:4 [ turbine::retrieve_string ${u:LogDir} CACHED 1 ]
    set v:t:29:8 "${v:LogDir:4}${v:alias:sampleName:4}_SamblasterDedup.log"
    turbine::store_string ${t:29:8} ${v:t:29:8}
    set v:t:31:8 "${v:LogDir:4}${v:alias:sampleName:4}_Sort.log"
    turbine::set_filename_val ${u:samLog} ${v:t:29:8}
    turbine::set_filename_val ${u:sortLog} ${v:t:31:8}
}


proc __entry-async_op-parse_int-5 { t:77:4 t:78:4 } {
    # Var: $string v:t:78:4 VALUE_OF [string:__t:78:4]
    # Var: $int v:t:77:4 VALUE_OF [int:__t:77:4]
    set v:t:78:4 [ turbine::retrieve_string ${t:78:4} CACHED 1 ]
    set v:t:77:4 [ turbine::parse_int_impl ${v:t:78:4} 10 ]
    turbine::store_integer ${t:77:4} ${v:t:77:4}
}


proc __entry-optmerged-25 { v:alias:sampleName:4 u:tmpLogDir:1 u:tmpnovosortLog:1 u:tmppicardLog } {
    # Var: $string v:tmpLogDir:1:9 VALUE_OF [string:tmpLogDir:1]
    # Var: $string v:t:68:4 VALUE_OF [string:__t:68:4]
    # Var: $string v:t:70:4 VALUE_OF [string:__t:70:4]
    set v:tmpLogDir:1:9 [ turbine::retrieve_string ${u:tmpLogDir:1} CACHED 1 ]
    set v:t:68:4 "${v:tmpLogDir:1:9}${v:alias:sampleName:4}_NovoSortDedup.log"
    set v:t:70:4 "${v:tmpLogDir:1:9}${v:alias:sampleName:4}_PicardDedup.log"
    turbine::set_filename_val ${u:tmpnovosortLog:1} ${v:t:68:4}
    turbine::set_filename_val ${u:tmppicardLog} ${v:t:70:4}
}


proc __entry-optmerged-26 { u:LogDir t:25:5 t:80:4 t:82:4 v:alias:sampleName:4 v:startmsg:1:1 v:t:60:5 v:t:61:4 v:t:62:5 u:alignedsortedbam u:dedupsortedbam u:metricsfile u:picardLog u:sortLog:1 u:tmppicardLog } {
    # Var: $string v:LogDir:6 VALUE_OF [string:LogDir]
    # Var: $string v:t:64:4 VALUE_OF [string:__t:64:4]
    # Var: $string v:t:66:4 VALUE_OF [string:__t:66:4]
    set v:LogDir:6 [ turbine::retrieve_string ${u:LogDir} CACHED 1 ]
    set v:t:64:4 "${v:LogDir:6}${v:alias:sampleName:4}_PicardDedup.log"
    set v:t:66:4 "${v:LogDir:6}${v:alias:sampleName:4}_Sort.log"
    turbine::set_filename_val ${u:picardLog} ${v:t:64:4}
    turbine::set_filename_val ${u:sortLog:1} ${v:t:66:4}
    turbine::rule [ list ${t:25:5} ${t:80:4} ${t:82:4} [ turbine::get_file_td ${u:alignedsortedbam} ] ] [ list picard_logged-chain1 ${t:25:5} ${t:80:4} ${t:82:4} ${v:startmsg:1:1} ${v:t:60:5} ${v:t:61:4} ${v:t:62:5} ${v:t:64:4} ${u:alignedsortedbam} ${u:dedupsortedbam} ${u:metricsfile} ${u:picardLog} ${u:tmppicardLog} ]
}


proc picard_logged-chain1 { t:25:5 t:80:4 t:82:4 v:startmsg:1:1 v:t:60:5 v:t:61:4 v:t:62:5 v:t:64:4 u:alignedsortedbam u:dedupsortedbam u:metricsfile u:picardLog u:tmppicardLog } {
    # Var: $string v:javaexe:3 RENAMED [$string:__v:javaexe] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:picard():55:243
    # Var: $string v:picardjar RENAMED [$string:__v:picardjar] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:picard():55:243
    # Var: $string v:tmpdir RENAMED [$string:__v:tmpdir] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:picard():55:243
    # Var: $file v:inputFile:4 RENAMED [$file:__v:inputFile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:picard():55:243
    # Var: $file v:outputfile:3 RENAMED [$file:__v:outputfile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:picard():55:243
    # Var: $file v:outLog:4 RENAMED [$file:__v:outLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:picard():55:243
    # Var: $file v:metricsfile RENAMED [$file:__v:metricsfile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:picard():55:243
    # Var: $int v:t:9:2:1 VALUE_OF [int:__t:9:2:1]
    # Var: $string v:t:8:2:1 VALUE_OF [string:__t:8:2:1]
    # Var: $string v:endmsg:1:1 VALUE_OF [string:endmsg:1:1]
    # Var: $string v:t:11:2:1 VALUE_OF [string:__t:11:2:1]
    set v:javaexe:3 [ turbine::retrieve_string ${t:80:4} CACHED 1 ]
    set v:picardjar [ turbine::retrieve_string ${t:82:4} CACHED 1 ]
    set v:tmpdir [ turbine::retrieve_string ${t:25:5} CACHED 1 ]
    set v:inputFile:4 [ turbine::retrieve_file ${u:alignedsortedbam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:3 [ turbine::create_local_file_ref ${v:t:61:4} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:outLog:4 [ turbine::create_local_file_ref ${v:t:64:4} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:metricsfile [ turbine::create_local_file_ref ${v:t:60:5} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javaexe:3 "-Xmx8g" "-jar" ${v:picardjar} "MarkDuplicates" "INPUT=" ${v:t:62:5} "OUTPUT=" ${v:t:61:4} "METRICS_FILE=" ${v:t:60:5} "TMP_DIR=" ${v:tmpdir} "ASSUME_SORTED=true" "MAX_RECORDS_IN_RAM=null" "CREATE_INDEX=true" "VALIDATION_STRINGENCY=SILENT" [ dict create "stderr" ${v:t:64:4} ] ]
    turbine::exec_external ${v:javaexe:3} [ dict create "stderr" ${v:t:64:4} ] "-Xmx8g" "-jar" ${v:picardjar} "MarkDuplicates" "INPUT=" ${v:t:62:5} "OUTPUT=" ${v:t:61:4} "METRICS_FILE=" ${v:t:60:5} "TMP_DIR=" ${v:tmpdir} "ASSUME_SORTED=true" "MAX_RECORDS_IN_RAM=null" "CREATE_INDEX=true" "VALIDATION_STRINGENCY=SILENT"
    turbine::store_file ${u:dedupsortedbam} v:outputfile:3 0
    turbine::store_file ${u:picardLog} v:outLog:4 0
    turbine::store_file ${u:metricsfile} v:metricsfile 0
    set v:t:9:2:1 [ clock seconds ]
    set v:t:8:2:1 ${v:t:9:2:1}
    set v:endmsg:1:1 "PICARD end\t${v:t:8:2:1}\n"
    set v:t:11:2:1 "${v:startmsg:1:1}${v:endmsg:1:1}"
    set wfilename:tmppicardLog [ turbine::get_file_path ${u:tmppicardLog} ]
    turbine::rule [ list ${wfilename:tmppicardLog} ] [ list __entry-call_foreign-write-6 ${v:t:11:2:1} ${wfilename:tmppicardLog} ${u:tmppicardLog} ]
    turbine::decr_local_file_refcount v:outputfile:3
    turbine::decr_local_file_refcount v:outLog:4
    turbine::decr_local_file_refcount v:metricsfile
}


proc __entry-call_foreign-write-6 { v:t:11:2:1 wfilename:tmppicardLog u:tmppicardLog } {
    # Var: $file v:tmppicardLog VALUE_OF [file:tmppicardLog]
    # Var: $string v:__wfilename:tmppicardLog VALUE_OF [string:__wfilename:tmppicardLog]
    set v:__wfilename:tmppicardLog [ turbine::retrieve_string ${wfilename:tmppicardLog} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:tmppicardLog [ turbine::create_local_file_ref ${v:__wfilename:tmppicardLog} ${tcltmp:init_rc} 1 ]
    turbine::file_write_local v:tmppicardLog ${v:t:11:2:1}
    turbine::store_file ${u:tmppicardLog} v:tmppicardLog 0
}


proc __entry-async_op-strcat-20 { u:LogDir v:alias:sampleName:4 u:novoLog } {
    # Var: $string v:LogDir:8 VALUE_OF [string:LogDir]
    # Var: $string v:t:86:4 VALUE_OF [string:__t:86:4]
    set v:LogDir:8 [ turbine::retrieve_string ${u:LogDir} CACHED 1 ]
    set v:t:86:4 "${v:LogDir:8}${v:alias:sampleName:4}_NovosortDedup.log"
    turbine::set_filename_val ${u:novoLog} ${v:t:86:4}
}


proc __entry-async_op-strcat-21 { v:alias:sampleName:4 u:tmpLogDir:1 u:tmpnovosortLog:2 } {
    # Var: $string v:tmpLogDir:1:11 VALUE_OF [string:tmpLogDir:1]
    # Var: $string v:t:88:4 VALUE_OF [string:__t:88:4]
    set v:tmpLogDir:1:11 [ turbine::retrieve_string ${u:tmpLogDir:1} CACHED 1 ]
    set v:t:88:4 "${v:tmpLogDir:1:11}${v:alias:sampleName:4}_NovoSortDedup.log"
    turbine::set_filename_val ${u:tmpnovosortLog:2} ${v:t:88:4}
}


proc __entry-async_op-parse_int-6 { t:96:4 t:97:4 } {
    # Var: $string v:t:97:4:1 VALUE_OF [string:__t:97:4]
    # Var: $int v:t:96:4 VALUE_OF [int:__t:96:4]
    set v:t:97:4:1 [ turbine::retrieve_string ${t:97:4} CACHED 1 ]
    set v:t:96:4 [ turbine::parse_int_impl ${v:t:97:4:1} 10 ]
    turbine::store_integer ${t:96:4} ${v:t:96:4}
}


proc alignDedupMain-if4 { u:LogDir t:39:5 t:56:5 t:63:3 v:AlignDir:1 v:alias:sampleName:4 v:index:2 v:t:61:4 u:alignDedupBams u:alignedsam u:dedupsortedbam u:failureLog u:tmpLogDir:1 } {
    # Var: $boolean v:__t:63:1 RENAMED [$boolean:__v:__t:63] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():268:24
    set v:__t:63:1 [ turbine::retrieve_integer ${t:63:3} CACHED 1 ]
    if { ${v:__t:63:1} } {
        # Var: string[string] u:variables /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:70:0
        global u:variables
        # Var: file u:flagstats RENAMED [file:flagstats] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():277:74
        # Var: file u:tmpsamtoolsflagstatLog RENAMED [file:tmpsamtoolsflagstatLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():278:65
        # Var: string[int] u:stat RENAMED [string[int]:stat] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():282:5
        # Var: string[int] t:72:3 RENAMED [string[int]:__t:72] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():283:19
        # Var: string[int] t:75:3 RENAMED [string[int]:__t:75] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():284:17
        # Var: string[int] t:78:3 RENAMED [string[int]:__t:78] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():285:16
        # Var: float u:perc_mapped RENAMED [float:perc_mapped] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():288:16
        # Var: float t:85:3 RENAMED [float:__t:85] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():288:43
        # Var: string u:cutoff_info RENAMED [string:cutoff_info] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():291:5
        # Var: string t:91:3 RENAMED [string:__t:91] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():292:35
        # Var: string t:95:3 RENAMED [string:__t:95] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():294:31
        # Var: float t:99:3 RENAMED [float:__t:99] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():297:21
        # Var: boolean t:102:3 RENAMED [boolean:__t:102] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():298:22
        # Var: float t:103:3 RENAMED [float:__t:103] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():298:24
        # Var: $int v:t:4:9 VALUE_OF [int:__t:4:9]
        # Var: $string v:t:3:9 VALUE_OF [string:__t:3:9]
        # Var: $string v:startmsg:3 VALUE_OF [string:startmsg:3]
        # Var: $string v:t:65:3 VALUE_OF [string:__t:65:3]
        lassign [ adlb::multicreate [ list container integer string 3 1 186 ] [ list container integer string 1 1 187 ] [ list container integer string 1 1 188 ] [ list container integer string 1 1 189 ] [ list float 1 1 190 ] [ list float 1 1 191 ] [ list string 2 1 192 ] [ list string 2 1 193 ] [ list string 2 1 194 ] [ list float 1 1 195 ] [ list integer 1 1 196 ] [ list float 1 1 197 ] ] u:stat t:72:3 t:75:3 t:78:3 u:perc_mapped t:85:3 u:cutoff_info t:91:3 t:95:3 t:99:3 t:102:3 t:103:3
        turbine::c::log "allocated u:stat=<${u:stat}> t:72:3=<${t:72:3}> t:75:3=<${t:75:3}> t:78:3=<${t:78:3}> u:perc_mapped=<${u:perc_mapped}>"
        turbine::c::log "allocated t:85:3=<${t:85:3}> u:cutoff_info=<${u:cutoff_info}> t:91:3=<${t:91:3}> t:95:3=<${t:95:3}> t:99:3=<${t:99:3}>"
        turbine::c::log "allocated t:102:3=<${t:102:3}> t:103:3=<${t:103:3}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 184 ] [ list file 1 1 185 ] ] [ list 1 1 ] ] u:flagstats u:tmpsamtoolsflagstatLog
        adlb::write_refcount_incr ${u:alignDedupBams} 1
        turbine::read_refcount_incr ${t:56:5} 1
        turbine::read_refcount_incr ${t:39:5} 1
        turbine::file_read_refcount_incr ${u:alignedsam} 1
        turbine::file_read_refcount_incr ${u:dedupsortedbam} 2
        turbine::read_refcount_incr ${u:tmpLogDir:1} 1
        set a:t:73:3 [ adlb::subscript_container ${u:stat} 4 ]
        set a:tot_mapped [ adlb::subscript_container ${t:72:3} 0 ]
        set a:t:76:3 [ adlb::subscript_container ${u:stat} 0 ]
        set a:tot_reads [ adlb::subscript_container ${t:75:3} 0 ]
        set a:t:79:3 [ adlb::subscript_container ${u:stat} 3 ]
        set a:tot_dups [ adlb::subscript_container ${t:78:3} 0 ]
        turbine::container_reference ${u:variables} "DUP_CUTOFF" ${t:91:3} string
        turbine::container_reference ${u:variables} "MAP_CUTOFF" ${t:95:3} string
        set v:t:4:9 [ clock seconds ]
        set v:t:3:9 ${v:t:4:9}
        set v:startmsg:3 "SAMTOOLS_FLAGSTATS start\t${v:t:3:9}\n"
        set v:t:65:3 "${v:AlignDir:1}${v:alias:sampleName:4}.wDedups.sorted.bam.flagstats"
        turbine::set_filename_val ${u:flagstats} ${v:t:65:3}
        turbine::rule [ list ${t:39:5} [ turbine::get_file_td ${u:alignedsam} ] ] "rm-app-leaf1-1 ${t:39:5} {${u:alignedsam}}"
        turbine::rule [ list ${u:tmpLogDir:1} ] [ list __entry-async_op-strcat-22 ${v:alias:sampleName:4} ${u:tmpLogDir:1} ${u:tmpsamtoolsflagstatLog} ]
        turbine::rule [ list ${a:t:73:3} ] "__entry-call_foreign-split-1 {${a:t:73:3}} ${t:72:3}"
        turbine::rule [ list ${a:t:76:3} ] "__entry-call_foreign-split-2 {${a:t:76:3}} ${t:75:3}"
        turbine::rule [ list ${a:t:79:3} ] "__entry-call_foreign-split-3 {${a:t:79:3}} ${t:78:3}"
        turbine::rule [ list ${a:tot_reads} ] [ list __entry-async_op-parse_float ${a:tot_dups} ${a:tot_reads} ${t:102:3} ${t:103:3} ${t:85:3} ${t:91:3} ${t:95:3} ${t:99:3} ${v:alias:sampleName:4} ${v:index:2} ${v:t:61:4} ${u:alignDedupBams} ${u:cutoff_info} ${u:dedupsortedbam} ${u:failureLog} ${u:perc_mapped} ]
        turbine::rule [ list ${a:tot_mapped} ] "__entry-async_op-parse_float-2 {${a:tot_mapped}} ${t:85:3}"
        turbine::rule [ list ${t:91:3} ] "__entry-async_op-parse_float-3 ${t:91:3} ${t:99:3}"
        turbine::rule [ list ${t:95:3} ] "__entry-async_op-parse_float-4 ${t:103:3} ${t:95:3}"
        turbine::rule [ list ${t:56:5} ] [ list samtools_flagstat_logged-chain1 ${t:56:5} ${v:startmsg:3} ${v:t:61:4} ${v:t:65:3} ${u:dedupsortedbam} ${u:flagstats} ${u:stat} ${u:tmpsamtoolsflagstatLog} ]
    } else {
        # Var: string u:mssg RENAMED [string:mssg] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():319:5
        # Var: boolean t:118:2 RENAMED [boolean:__t:118] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():323:5
        lassign [ adlb::multicreate [ list string 2 1 200 ] [ list integer 1 1 201 ] ] u:mssg t:118:2
        turbine::c::log "allocated u:mssg=<${u:mssg}> t:118:2=<${t:118:2}>"
        turbine::read_refcount_incr ${u:LogDir} 1
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:append ${t:118:2} {${u:failureLog}} ${u:mssg}"
        turbine::reset_priority
        turbine::rule [ list ${t:118:2} ] "alignDedupMain-chain2 ${t:118:2} ${u:mssg}"
        turbine::rule [ list ${u:LogDir} ] [ list __entry-async_op-strcat-26 ${u:LogDir} ${v:alias:sampleName:4} ${v:t:61:4} ${u:mssg} ]
    }
    turbine::read_refcount_decr ${u:tmpLogDir:1} 1
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::read_refcount_decr ${u:LogDir} 1
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::read_refcount_decr ${t:39:5} 1
    turbine::read_refcount_decr ${t:56:5} 1
    adlb::write_refcount_decr ${u:alignDedupBams} 1
}


proc rm-app-leaf1-1 { t:39:5 u:alignedsam } {
    # Var: $string v:__filename:f:2 RENAMED [$string:__v:__filename:f] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:rm():55:6
    # Var: $file v:f:13 RENAMED [$file:__v:f] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:rm():55:6
    # Var: $void v:v:4 RENAMED [$void:__v:v] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:rm():55:6
    set v:__filename:f:2 [ turbine::retrieve_string ${t:39:5} CACHED 1 ]
    set v:f:13 [ turbine::retrieve_file ${u:alignedsam} CACHED 1 ]
    turbine::c::log [ list exec: "rm" ${v:__filename:f:2} [ dict create ] ]
    turbine::exec_external "rm" [ dict create ] ${v:__filename:f:2}
}


proc __entry-async_op-strcat-22 { v:alias:sampleName:4 u:tmpLogDir:1 u:tmpsamtoolsflagstatLog } {
    # Var: $string v:tmpLogDir:1:5 VALUE_OF [string:tmpLogDir:1]
    # Var: $string v:t:68:3 VALUE_OF [string:__t:68:3]
    set v:tmpLogDir:1:5 [ turbine::retrieve_string ${u:tmpLogDir:1} CACHED 1 ]
    set v:t:68:3 "${v:tmpLogDir:1:5}${v:alias:sampleName:4}_samtoolsflagstat.log"
    turbine::set_filename_val ${u:tmpsamtoolsflagstatLog} ${v:t:68:3}
}


proc __entry-call_foreign-split-1 { a:t:73:3 t:72:3 } {
    # Var: $string v:alias:t:73:3 VALUE_OF [string:__alias:t:73:3]
    # Var: $string$[int] v:t:72:3 VALUE_OF [string[int]:__t:72:3]
    set v:alias:t:73:3 [ turbine::retrieve_string ${a:t:73:3} CACHED 1 ]
    set v:t:72:3 [ turbine::split_impl ${v:alias:t:73:3} " " ]
    turbine::build_rec ${t:72:3} ${v:t:72:3} [ list container integer string ] 0 1
}


proc __entry-call_foreign-split-2 { a:t:76:3 t:75:3 } {
    # Var: $string v:alias:t:76:3 VALUE_OF [string:__alias:t:76:3]
    # Var: $string$[int] v:t:75:3 VALUE_OF [string[int]:__t:75:3]
    set v:alias:t:76:3 [ turbine::retrieve_string ${a:t:76:3} CACHED 1 ]
    set v:t:75:3 [ turbine::split_impl ${v:alias:t:76:3} " " ]
    turbine::build_rec ${t:75:3} ${v:t:75:3} [ list container integer string ] 0 1
}


proc __entry-call_foreign-split-3 { a:t:79:3 t:78:3 } {
    # Var: $string v:alias:t:79:3 VALUE_OF [string:__alias:t:79:3]
    # Var: $string$[int] v:t:78:3 VALUE_OF [string[int]:__t:78:3]
    set v:alias:t:79:3 [ turbine::retrieve_string ${a:t:79:3} CACHED 1 ]
    set v:t:78:3 [ turbine::split_impl ${v:alias:t:79:3} " " ]
    turbine::build_rec ${t:78:3} ${v:t:78:3} [ list container integer string ] 0 1
}


proc __entry-async_op-parse_float { a:tot_dups a:tot_reads t:102:3 t:103:3 t:85:3 t:91:3 t:95:3 t:99:3 v:alias:sampleName:4 v:index:2 v:t:61:4 u:alignDedupBams u:cutoff_info u:dedupsortedbam u:failureLog u:perc_mapped } {
    # Var: $string v:alias:tot_reads VALUE_OF [string:__alias:tot_reads]
    # Var: $float v:t:84:3 VALUE_OF [float:__t:84:3]
    set v:alias:tot_reads [ turbine::retrieve_string ${a:tot_reads} CACHED 1 ]
    set v:t:84:3 [ turbine::string2float_impl ${v:alias:tot_reads} ]
    turbine::rule [ list ${t:85:3} ] "__entry-async_op-div_float ${t:102:3} ${t:103:3} ${t:85:3} ${v:t:84:3} ${u:perc_mapped}"
    turbine::rule [ list ${a:tot_dups} ] [ list __entry-async_op-parse_float-1 ${a:tot_dups} ${t:102:3} ${t:91:3} ${t:95:3} ${t:99:3} ${v:alias:sampleName:4} ${v:index:2} ${v:t:61:4} ${v:t:84:3} ${u:alignDedupBams} ${u:cutoff_info} ${u:dedupsortedbam} ${u:failureLog} ${u:perc_mapped} ]
}


proc __entry-async_op-div_float { t:102:3 t:103:3 t:85:3 v:t:84:3 u:perc_mapped } {
    # Var: $float v:t:85:3:1 VALUE_OF [float:__t:85:3]
    # Var: $float v:perc_mapped VALUE_OF [float:perc_mapped]
    set v:t:85:3:1 [ turbine::retrieve_float ${t:85:3} CACHED 1 ]
    set v:perc_mapped [ expr { ${v:t:85:3:1} / ${v:t:84:3} } ]
    turbine::store_float ${u:perc_mapped} ${v:perc_mapped}
    turbine::rule [ list ${t:103:3} ] "__entry-async_op-gt_float ${t:102:3} ${t:103:3} ${v:perc_mapped}"
}


proc __entry-async_op-gt_float { t:102:3 t:103:3 v:perc_mapped } {
    # Var: $float v:t:103:3:1 VALUE_OF [float:__t:103:3]
    # Var: $boolean v:t:102:3 VALUE_OF [boolean:__t:102:3]
    set v:t:103:3:1 [ turbine::retrieve_float ${t:103:3} CACHED 1 ]
    set v:t:102:3 [ expr { ${v:perc_mapped} > ${v:t:103:3:1} } ]
    turbine::store_integer ${t:102:3} ${v:t:102:3}
}


proc __entry-async_op-parse_float-1 { a:tot_dups t:102:3 t:91:3 t:95:3 t:99:3 v:alias:sampleName:4 v:index:2 v:t:61:4 v:t:84:3 u:alignDedupBams u:cutoff_info u:dedupsortedbam u:failureLog u:perc_mapped } {
    # Var: $string v:alias:tot_dups VALUE_OF [string:__alias:tot_dups]
    # Var: $float v:t:82:3 VALUE_OF [float:__t:82:3]
    # Var: $float v:t:81:3:1 VALUE_OF [float:__t:81:3]
    # Var: $float v:perc_dup VALUE_OF [float:perc_dup]
    set v:alias:tot_dups [ turbine::retrieve_string ${a:tot_dups} CACHED 1 ]
    set v:t:82:3 [ turbine::string2float_impl ${v:alias:tot_dups} ]
    set v:t:81:3:1 [ expr { ${v:t:82:3} * 100.0 } ]
    set v:perc_dup [ expr { ${v:t:81:3:1} / ${v:t:84:3} } ]
    turbine::rule [ list ${t:91:3} ${t:95:3} ${u:perc_mapped} ] [ list __entry-async_op-strcat-23 ${t:91:3} ${t:95:3} ${v:alias:sampleName:4} ${v:perc_dup} ${u:cutoff_info} ${u:perc_mapped} ]
    turbine::rule [ list ${t:102:3} ${t:99:3} ] [ list __entry-async_op-lt_float ${t:102:3} ${t:99:3} ${v:index:2} ${v:perc_dup} ${v:t:61:4} ${u:alignDedupBams} ${u:cutoff_info} ${u:dedupsortedbam} ${u:failureLog} ]
}


proc __entry-async_op-strcat-23 { t:91:3 t:95:3 v:alias:sampleName:4 v:perc_dup u:cutoff_info u:perc_mapped } {
    # Var: $string v:t:91:3 VALUE_OF [string:__t:91:3]
    # Var: $float v:perc_mapped:1 VALUE_OF [float:perc_mapped]
    # Var: $string v:t:95:3 VALUE_OF [string:__t:95:3]
    # Var: $string v:cutoff_info VALUE_OF [string:cutoff_info]
    set v:t:91:3 [ turbine::retrieve_string ${t:91:3} CACHED 1 ]
    set v:perc_mapped:1 [ turbine::retrieve_float ${u:perc_mapped} CACHED 1 ]
    set v:t:95:3 [ turbine::retrieve_string ${t:95:3} CACHED 1 ]
    set v:cutoff_info "${v:alias:sampleName:4}\tPercentDuplication=${v:perc_dup};DuplicationCutoff=${v:t:91:3}\tPercentMapped=${v:perc_mapped:1};MappingCutoff=${v:t:95:3}"
    turbine::store_string ${u:cutoff_info} ${v:cutoff_info}
}


proc __entry-async_op-lt_float { t:102:3 t:99:3 v:index:2 v:perc_dup v:t:61:4 u:alignDedupBams u:cutoff_info u:dedupsortedbam u:failureLog } {
    # Var: $float v:t:99:3:1 VALUE_OF [float:__t:99:3]
    # Var: $boolean v:t:98:3 VALUE_OF [boolean:__t:98:3]
    # Var: $boolean v:t:102:3:1 VALUE_OF [boolean:__t:102:3]
    # Var: $boolean v:t:97:3:1 VALUE_OF [boolean:__t:97:3]
    set v:t:99:3:1 [ turbine::retrieve_float ${t:99:3} CACHED 1 ]
    set v:t:98:3 [ expr { ${v:perc_dup} < ${v:t:99:3:1} } ]
    set v:t:102:3:1 [ turbine::retrieve_integer ${t:102:3} CACHED 1 ]
    set v:t:97:3:1 [ expr { ${v:t:98:3} && ${v:t:102:3:1} } ]
    if { ${v:t:97:3:1} } {
        turbine::file_read_refcount_incr ${u:dedupsortedbam} 1
        turbine::container_insert ${u:alignDedupBams} ${v:index:2} ${u:dedupsortedbam} file_ref 0
        turbine::rule [ list ${u:cutoff_info} ] "__entry-async_op-strcat-24 ${u:cutoff_info}"
    } else {
        # Var: string u:m:2 RENAMED [string:m] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():310:6
        # Var: boolean t:112:3 RENAMED [boolean:__t:112] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():313:6
        lassign [ adlb::multicreate [ list string 2 1 198 ] [ list integer 1 1 199 ] ] u:m:2 t:112:3
        turbine::c::log "allocated u:m:2=<${u:m:2}> t:112:3=<${t:112:3}>"
        turbine::file_read_refcount_incr ${u:failureLog} 1
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:append ${t:112:3} {${u:failureLog}} ${u:m:2}"
        turbine::reset_priority
        turbine::rule [ list ${t:112:3} ] "alignDedupMain-chain1 ${t:112:3} ${u:m:2}"
        turbine::rule [ list ${u:cutoff_info} ] [ list __entry-async_op-strcat-25 ${v:t:61:4} ${u:cutoff_info} ${u:m:2} ]
    }
    turbine::read_refcount_decr ${u:cutoff_info} 1
    turbine::file_read_refcount_decr ${u:failureLog} 1
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
    adlb::write_refcount_decr ${u:alignDedupBams} 1
}


proc __entry-async_op-strcat-24 { u:cutoff_info } {
    # Var: $string v:cutoff_info:1 VALUE_OF [string:cutoff_info]
    # Var: $string v:t:107:3 VALUE_OF [string:__t:107:3]
    # Var: $void v:t:106:3 VALUE_OF [void:__t:106:3]
    set v:cutoff_info:1 [ turbine::retrieve_string ${u:cutoff_info} CACHED 1 ]
    set v:t:107:3 "QC-Test SUCCESS: ${v:cutoff_info:1}"
    set v:t:106:3 [ turbine::printf_local ${v:t:107:3} ]
}


proc alignDedupMain-chain1 { t:112:3 u:m:2 } {
    # Var: string[string] u:variables /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:70:0
    global u:variables
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:exitIfFlagGiven ${u:variables} ${u:m:2}"
    turbine::reset_priority
    turbine::read_refcount_decr ${t:112:3} 1
}


proc __entry-async_op-strcat-25 { v:t:61:4 u:cutoff_info u:m:2 } {
    # Var: $string v:cutoff_info:2 VALUE_OF [string:cutoff_info]
    # Var: $string v:m:2 VALUE_OF [string:m:2]
    set v:cutoff_info:2 [ turbine::retrieve_string ${u:cutoff_info} CACHED 1 ]
    set v:m:2 "FAILURE: ${v:t:61:4} failed the QC test: ${v:cutoff_info:2}"
    turbine::store_string ${u:m:2} ${v:m:2}
}


proc __entry-async_op-parse_float-2 { a:tot_mapped t:85:3 } {
    # Var: $string v:alias:tot_mapped VALUE_OF [string:__alias:tot_mapped]
    # Var: $float v:t:86:3 VALUE_OF [float:__t:86:3]
    # Var: $float v:t:85:3 VALUE_OF [float:__t:85:3]
    set v:alias:tot_mapped [ turbine::retrieve_string ${a:tot_mapped} CACHED 1 ]
    set v:t:86:3 [ turbine::string2float_impl ${v:alias:tot_mapped} ]
    set v:t:85:3 [ expr { ${v:t:86:3} * 100.0 } ]
    turbine::store_float ${t:85:3} ${v:t:85:3}
}


proc __entry-async_op-parse_float-3 { t:91:3 t:99:3 } {
    # Var: $string v:t:91:3:1 VALUE_OF [string:__t:91:3]
    # Var: $float v:t:99:3 VALUE_OF [float:__t:99:3]
    set v:t:91:3:1 [ turbine::retrieve_string ${t:91:3} CACHED 1 ]
    set v:t:99:3 [ turbine::string2float_impl ${v:t:91:3:1} ]
    turbine::store_float ${t:99:3} ${v:t:99:3}
}


proc __entry-async_op-parse_float-4 { t:103:3 t:95:3 } {
    # Var: $string v:t:95:3:1 VALUE_OF [string:__t:95:3]
    # Var: $float v:t:103:3 VALUE_OF [float:__t:103:3]
    set v:t:95:3:1 [ turbine::retrieve_string ${t:95:3} CACHED 1 ]
    set v:t:103:3 [ turbine::string2float_impl ${v:t:95:3:1} ]
    turbine::store_float ${t:103:3} ${v:t:103:3}
}


proc samtools_flagstat_logged-chain1 { t:56:5 v:startmsg:3 v:t:61:4 v:t:65:3 u:dedupsortedbam u:flagstats u:stat u:tmpsamtoolsflagstatLog } {
    # Var: $string v:samtoolsexe RENAMED [$string:__v:samtoolsexe] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samtools_flagstat():61:42
    # Var: $file v:inputFile RENAMED [$file:__v:inputFile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samtools_flagstat():61:42
    # Var: $file v:output RENAMED [$file:__v:output] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samtools_flagstat():61:42
    # Var: $file v:flagstats VALUE_OF [file:flagstats]
    # Var: $string$[int] v:stat VALUE_OF [string[int]:stat]
    # Var: $int v:t:9:9 VALUE_OF [int:__t:9:9]
    # Var: $string v:t:8:9 VALUE_OF [string:__t:8:9]
    # Var: $string v:endmsg:3 VALUE_OF [string:endmsg:3]
    # Var: $string v:t:11:9 VALUE_OF [string:__t:11:9]
    set v:samtoolsexe [ turbine::retrieve_string ${t:56:5} CACHED 1 ]
    set v:inputFile [ turbine::retrieve_file ${u:dedupsortedbam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output [ turbine::create_local_file_ref ${v:t:65:3} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:samtoolsexe "flagstat" ${v:t:61:4} [ dict create "stdout" ${v:t:65:3} ] ]
    turbine::exec_external ${v:samtoolsexe} [ dict create "stdout" ${v:t:65:3} ] "flagstat" ${v:t:61:4}
    turbine::store_file ${u:flagstats} v:output 0
    set v:flagstats [ turbine::retrieve_file ${u:flagstats} CACHED 1 ]
    set v:stat [ turbine::file_lines_impl ${v:flagstats} ]
    turbine::build_rec ${u:stat} ${v:stat} [ list container integer string ] 0 1
    set v:t:9:9 [ clock seconds ]
    set v:t:8:9 ${v:t:9:9}
    set v:endmsg:3 "SAMTOOLS_FLAGSTATS end\t${v:t:8:9}\n"
    set v:t:11:9 "${v:startmsg:3}${v:endmsg:3}"
    set wfilename:tmpsamtoolsflagstatLog [ turbine::get_file_path ${u:tmpsamtoolsflagstatLog} ]
    turbine::rule [ list ${wfilename:tmpsamtoolsflagstatLog} ] [ list __entry-call_foreign-write-7 ${v:t:11:9} ${wfilename:tmpsamtoolsflagstatLog} ${u:tmpsamtoolsflagstatLog} ]
    turbine::decr_local_file_refcount v:output
}


proc __entry-call_foreign-write-7 { v:t:11:9 wfilename:tmpsamtoolsflagstatLog u:tmpsamtoolsflagstatLog } {
    # Var: $file v:tmpsamtoolsflagstatLog VALUE_OF [file:tmpsamtoolsflagstatLog]
    # Var: $string v:__wfilename:tmpsamtoolsflagstatLog VALUE_OF [string:__wfilename:tmpsamtoolsflagstatLog]
    set v:__wfilename:tmpsamtoolsflagstatLog [ turbine::retrieve_string ${wfilename:tmpsamtoolsflagstatLog} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:tmpsamtoolsflagstatLog [ turbine::create_local_file_ref ${v:__wfilename:tmpsamtoolsflagstatLog} ${tcltmp:init_rc} 1 ]
    turbine::file_write_local v:tmpsamtoolsflagstatLog ${v:t:11:9}
    turbine::store_file ${u:tmpsamtoolsflagstatLog} v:tmpsamtoolsflagstatLog 0
}


proc alignDedupMain-chain2 { t:118:2 u:mssg } {
    # Var: string[string] u:variables /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:70:0
    global u:variables
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:exitIfFlagGiven ${u:variables} ${u:mssg}"
    turbine::reset_priority
    turbine::read_refcount_decr ${t:118:2} 1
}


proc __entry-async_op-strcat-26 { u:LogDir v:alias:sampleName:4 v:t:61:4 u:mssg } {
    # Var: $string v:LogDir:3 VALUE_OF [string:LogDir]
    # Var: $string v:mssg VALUE_OF [string:mssg]
    set v:LogDir:3 [ turbine::retrieve_string ${u:LogDir} CACHED 1 ]
    set v:mssg "FAILURE: ${v:t:61:4} contains no alignments. Check the log files within ${v:LogDir:3}${v:alias:sampleName:4} for details.\n"
    turbine::store_string ${u:mssg} ${v:mssg}
}


proc alignDedupMain-chain3 { t:124:2 u:message:3 } {
    # Var: string[string] u:variables /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:70:0
    global u:variables
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:exitIfFlagGiven ${u:variables} ${u:message:3}"
    turbine::reset_priority
    turbine::read_refcount_decr ${t:124:2} 1
}


proc __entry-async_op-strcat-27 { u:LogDir v:alias:sampleName:4 v:t:37:5 u:message:3 } {
    # Var: $string v:LogDir:9 VALUE_OF [string:LogDir]
    # Var: $string v:message:3 VALUE_OF [string:message:3]
    set v:LogDir:9 [ turbine::retrieve_string ${u:LogDir} CACHED 1 ]
    set v:message:3 "FAILURE: ${v:t:37:5} contains no alignments. Check ${v:LogDir:9}${v:alias:sampleName:4}_Alignment.log for details.\n"
    turbine::store_string ${u:message:3} ${v:message:3}
}


proc __entry-optmerged-27 { v:alias:sampleName:4 u:tmpLogDir:1 u:tmpsamtoolsLog } {
    # Var: $string v:tmpLogDir:1:4 VALUE_OF [string:tmpLogDir:1]
    # Var: $string v:t:44:5 VALUE_OF [string:__t:44:5]
    set v:tmpLogDir:1:4 [ turbine::retrieve_string ${u:tmpLogDir:1} CACHED 1 ]
    set v:t:44:5 "${v:tmpLogDir:1:4}${v:alias:sampleName:4}_samtools.log"
    turbine::set_filename_val ${u:tmpsamtoolsLog} ${v:t:44:5}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list mkdir-app-leaf1-5 ${v:tmpLogDir:1:4} ]
    turbine::reset_priority
}


proc mkdir-app-leaf1-5 { v:tmpLogDir:1:4 } {
    # Var: $void v:v:10 RENAMED [$void:__v:v] /usr/src/swift-t/swift-t-1.2/turbine/export/unix.swift:mkdir():65:15
    turbine::c::log [ list exec: "mkdir" "-p" ${v:tmpLogDir:1:4} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:tmpLogDir:1:4}
}


proc __entry-async_op-strcat-28 { u:AlignDir v:alias:sampleName:4 v:index:2 u:alignDedupBams u:failureLog } {
    # Var: $string v:AlignDir:7 VALUE_OF [string:AlignDir]
    # Var: $string v:outputFile VALUE_OF [string:outputFile]
    # Var: $boolean v:o:8 RENAMED [$boolean:__v:o]
    set v:AlignDir:7 [ turbine::retrieve_string ${u:AlignDir} CACHED 1 ]
    set v:outputFile "${v:AlignDir:7}${v:alias:sampleName:4}.wDedups.sorted.bam"
    set v:o:8 [ file exists ${v:outputFile} ]
    if { ${v:o:8} } {
        # Var: file t:127:2 RENAMED [file:__t:127] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():341:4
        # Var: $file v:t:127:2 VALUE_OF [file:__t:127:2]
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 204 ] ] [ list 0 ] ] t:127:2
        set tcltmp:init_rc 1
        set v:t:127:2 [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
        turbine::input_file_local v:t:127:2 ${v:outputFile}
        turbine::store_file ${t:127:2} v:t:127:2 1
        turbine::container_insert ${u:alignDedupBams} ${v:index:2} ${t:127:2} file_ref 0
        turbine::decr_local_file_refcount v:t:127:2
    } else {
        # Var: string u:message_string RENAMED [string:message_string] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():344:4
        # Var: boolean t:131:1 RENAMED [boolean:__t:131] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignDedupMain():347:4
        # Var: $string v:message_string VALUE_OF [string:message_string]
        lassign [ adlb::multicreate [ list string 2 1 205 ] [ list integer 1 1 206 ] ] u:message_string t:131:1
        turbine::c::log "allocated u:message_string=<${u:message_string}> t:131:1=<${t:131:1}>"
        turbine::file_read_refcount_incr ${u:failureLog} 1
        set v:message_string "ERROR: ${v:outputFile} not found. Did you set ALIGN_DEDUP_STAGE to 'N' by accident?\n"
        turbine::store_string ${u:message_string} ${v:message_string}
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:append ${t:131:1} {${u:failureLog}} ${u:message_string}"
        turbine::reset_priority
        turbine::rule [ list ${t:131:1} ] "alignDedupMain-chain4 ${t:131:1} ${u:message_string}"
    }
    turbine::file_read_refcount_decr ${u:failureLog} 1
    adlb::write_refcount_decr ${u:alignDedupBams} 1
}


proc alignDedupMain-chain4 { t:131:1 u:message_string } {
    # Var: string[string] u:variables /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:70:0
    global u:variables
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:exitIfFlagGiven ${u:variables} ${u:message_string}"
    turbine::reset_priority
    turbine::read_refcount_decr ${t:131:1} 1
}


proc __entry-async_op-sprintf { t:3:5 t:5:5 t:7:5 v:alias:sampleName:4 u:rgheader } {
    # Var: $string v:t:3:5 VALUE_OF [string:__t:3:5]
    # Var: $string v:t:5:5 VALUE_OF [string:__t:5:5]
    # Var: $string v:t:7:5 VALUE_OF [string:__t:7:5]
    # Var: $string v:rgheader VALUE_OF [string:rgheader]
    set v:t:3:5 [ turbine::retrieve_string ${t:3:5} CACHED 1 ]
    set v:t:5:5 [ turbine::retrieve_string ${t:5:5} CACHED 1 ]
    set v:t:7:5 [ turbine::retrieve_string ${t:7:5} CACHED 1 ]
    set v:rgheader [ eval format [ list "@RG\tID:%s\tLB:%s\tPL:%s\tPU:%s\tSM:%s\tCN:%s" ${v:alias:sampleName:4} ${v:t:3:5} ${v:t:5:5} ${v:alias:sampleName:4} ${v:alias:sampleName:4} ${v:t:7:5} ] ]
    turbine::store_string ${u:rgheader} ${v:rgheader}
}


proc __entry-optmerged-28 { u:AlignDir u:LogDir u:RealignDir u:VarcallDir t:10 v:alias:sampleName:4 } {
    # Var: $string v:t:10:17 VALUE_OF [string:__t:10]
    # Var: $string v:LogDir VALUE_OF [string:LogDir]
    # Var: $string v:AlignDir VALUE_OF [string:AlignDir]
    # Var: $string v:RealignDir VALUE_OF [string:RealignDir]
    # Var: $string v:VarcallDir VALUE_OF [string:VarcallDir]
    set v:t:10:17 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:LogDir "${v:t:10:17}/${v:alias:sampleName:4}/logs/"
    turbine::store_string ${u:LogDir} ${v:LogDir}
    set v:AlignDir "${v:t:10:17}/${v:alias:sampleName:4}/align/"
    turbine::store_string ${u:AlignDir} ${v:AlignDir}
    set v:RealignDir "${v:t:10:17}/${v:alias:sampleName:4}/realign/"
    turbine::store_string ${u:RealignDir} ${v:RealignDir}
    set v:VarcallDir "${v:t:10:17}/${v:alias:sampleName:4}/variant/"
    turbine::store_string ${u:VarcallDir} ${v:VarcallDir}
}


proc __entry-async_op-strcat-29 { t:10 t:13 v:f:1 u:docSampleInfo u:sampleInfoFile } {
    # Var: $string v:t:10:16 VALUE_OF [string:__t:10]
    # Var: $string v:t:13:3 VALUE_OF [string:__t:13]
    # Var: $string v:t:47 VALUE_OF [string:__t:47]
    set v:t:10:16 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:t:13:3 [ turbine::retrieve_string ${t:13} CACHED 1 ]
    set v:t:47 "${v:t:10:16}/${v:t:13:3}/docs/${v:f:1}"
    turbine::set_filename_val ${u:docSampleInfo} ${v:t:47}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry:wait:sampleInfoFile ${v:t:47} ${u:docSampleInfo} ${u:sampleInfoFile} ]
    turbine::reset_priority
}


proc __entry:wait:sampleInfoFile { v:t:47 u:docSampleInfo u:sampleInfoFile } {
    # Var: $file v:sampleInfoFile VALUE_OF [file:sampleInfoFile]
    # Var: $file v:docSampleInfo VALUE_OF [file:docSampleInfo]
    set v:sampleInfoFile [ turbine::retrieve_file ${u:sampleInfoFile} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:docSampleInfo [ turbine::create_local_file_ref ${v:t:47} ${tcltmp:init_rc} 1 ]
    turbine::copy_local_file_contents ${v:docSampleInfo} ${v:sampleInfoFile}
    turbine::store_file ${u:docSampleInfo} v:docSampleInfo 0
}


proc __entry-optmerged-29 { t:25:5 u:alignDedupBams u:timingLog } {
    # Var: file$[int] v:alignDedupBams VALUE_OF [*rw(file)[int]:alignDedupBams]
    # Var: $int v:t:60 VALUE_OF [int:__t:60]
    # Var: $boolean v:t:59 VALUE_OF [boolean:__t:59]
    # Var: $void v:t:58 VALUE_OF [void:__t:58]
    set v:alignDedupBams [ adlb::enumerate ${u:alignDedupBams} dict all 0 0 ]
    set v:t:60 [ dict size ${v:alignDedupBams} ]
    set v:t:59 [ expr { ${v:t:60} != 0 } ]
    turbine::assert_impl ${v:t:59} "FAILURE: The align, sort, and dedup output array was empty: none of the samples finished properly"
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:logging ${t:25:5} {${u:timingLog}}"
    turbine::reset_priority
    turbine::read_refcount_decr ${u:alignDedupBams} 1
}


proc f:sed { u:o u:i u:command v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: sed"
    # Var: $boolean v:mapped_o OPT_TEMPORARY
    turbine::read_refcount_incr ${u:command} 1
    turbine::file_read_refcount_incr ${u:o} 1
    turbine::file_read_refcount_incr ${u:i} 2
    set filename:i [ turbine::get_file_path ${u:i} ]
    set v:mapped_o [ turbine::is_file_mapped ${u:o} ]
    set filename:o [ turbine::get_file_path ${u:o} ]
    if { ${v:mapped_o} } {
    } else {
        # Var: $string optf:o FILENAME_OF [file:o]
        set optf:o [ turbine::mktemp ]
        turbine::set_filename_val ${u:o} ${optf:o}
    }
    turbine::rule [ list ${filename:i} ${filename:o} ${u:command} [ turbine::get_file_td ${u:i} ] ] "sed-app-leaf1 {${filename:i}} {${filename:o}} ${v:mapped_o} {${u:command}} {${u:i}} {${u:o}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc sed-app-leaf1 { filename:i filename:o v:mapped_o u:command u:i u:o } {
    # Var: $string v:command VALUE_OF [string:command] /usr/src/swift-t/swift-t-1.2/turbine/export/unix.swift:sed():40:26
    # Var: $string v:__filename:i VALUE_OF [string:__filename:i] /usr/src/swift-t/swift-t-1.2/turbine/export/unix.swift:sed():40:26
    # Var: $string v:__filename:o VALUE_OF [string:__filename:o] /usr/src/swift-t/swift-t-1.2/turbine/export/unix.swift:sed():40:26
    # Var: $file v:i VALUE_OF [file:i] /usr/src/swift-t/swift-t-1.2/turbine/export/unix.swift:sed():40:26
    # Var: $file v:o VALUE_OF [file:o] /usr/src/swift-t/swift-t-1.2/turbine/export/unix.swift:sed():40:26
    # Var: $boolean v:3 EXPR_TEMPORARY /usr/src/swift-t/swift-t-1.2/turbine/export/unix.swift:sed():40:26
    set v:command [ turbine::retrieve_string ${u:command} CACHED 1 ]
    set v:__filename:i [ turbine::retrieve_string ${filename:i} ]
    set v:__filename:o [ turbine::retrieve_string ${filename:o} CACHED 1 ]
    set v:i [ turbine::retrieve_file ${u:i} CACHED 2 ]
    if { ${v:mapped_o} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:o [ turbine::create_local_file_ref ${v:__filename:o} ${tcltmp:init_rc} ${v:mapped_o} ]
    turbine::c::log [ list exec: "sed" ${v:command} ${v:__filename:i} [ dict create "stdout" ${v:__filename:o} ] ]
    turbine::exec_external "sed" [ dict create "stdout" ${v:__filename:o} ] ${v:command} ${v:__filename:i}
    set v:3 [ expr { ! ${v:mapped_o} } ]
    turbine::store_file ${u:o} v:o ${v:3}
    turbine::decr_local_file_refcount v:o
}


proc f:alignReads { u:outputSam u:vars u:sampleName u:reads u:rgheader } {
    turbine::c::log "function: alignReads"
    # Var: int u:threads /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():85:1
    # Var: string t:2 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():85:26
    # Var: string t:5 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():85:55
    # Var: string t:7 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():88:24
    # Var: string t:11 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():89:19
    # Var: file u:alignedLog /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():89:46
    # Var: string t:13 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():90:27
    # Var: file u:tmpalignedLog /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():91:53
    # Var: string t:19 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():93:5
    lassign [ adlb::multicreate [ list integer 3 1 207 ] [ list string 1 1 208 ] [ list string 1 1 209 ] [ list string 1 1 210 ] [ list string 3 1 211 ] [ list string 1 1 213 ] [ list string 1 1 215 ] ] u:threads t:2 t:5 t:7 t:11 t:13 t:19
    turbine::c::log "allocated u:threads=<${u:threads}> t:2=<${t:2}> t:5=<${t:5}> t:7=<${t:7}> t:11=<${t:11}>"
    turbine::c::log "allocated t:13=<${t:13}> t:19=<${t:19}>"
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 0 1 212 ] [ list file 3 1 214 ] ] [ list 1 1 ] ] u:alignedLog u:tmpalignedLog
    turbine::read_refcount_incr ${u:rgheader} 2
    turbine::read_refcount_incr ${u:vars} 9
    turbine::read_refcount_incr ${u:sampleName} 1
    turbine::file_read_refcount_incr ${u:outputSam} 2
    turbine::read_refcount_incr ${u:reads} 2
    turbine::container_reference ${u:vars} "CORES" ${t:2} string
    turbine::container_reference ${u:vars} "PROCPERNODE" ${t:5} string
    turbine::container_reference ${u:vars} "OUTPUTDIR" ${t:7} string
    turbine::container_reference ${u:vars} "TMPDIR" ${t:13} string
    turbine::container_reference ${u:vars} "PAIRED" ${t:19} string
    turbine::rule [ list ${t:2} ${t:5} ] "alignReads-async_op-parse_int ${t:2} ${t:5} ${u:threads}"
    turbine::rule [ list ${t:19} ] "alignReads-async_op-eq_string ${t:11} ${t:19} {${u:alignedLog}} {${u:outputSam}} {${u:reads}} {${u:rgheader}} ${u:threads} {${u:tmpalignedLog}} {${u:vars}}"
    turbine::rule [ list ${u:sampleName} ] "alignReads-optmerged ${t:11} ${t:13} ${t:7} {${u:alignedLog}} {${u:sampleName}} {${u:tmpalignedLog}}"
}


proc alignReads-async_op-parse_int { t:2 t:5 u:threads } {
    # Var: $string v:t:5 VALUE_OF [string:__t:5]
    # Var: $int v:t:4 VALUE_OF [int:__t:4]
    # Var: $string v:t:2 VALUE_OF [string:__t:2]
    # Var: $int v:t:1 VALUE_OF [int:__t:1]
    # Var: $int v:threads VALUE_OF [int:threads]
    set v:t:5 [ turbine::retrieve_string ${t:5} CACHED 1 ]
    set v:t:4 [ turbine::parse_int_impl ${v:t:5} 10 ]
    set v:t:2 [ turbine::retrieve_string ${t:2} CACHED 1 ]
    set v:t:1 [ turbine::parse_int_impl ${v:t:2} 10 ]
    set v:threads [ turbine::divide_integer_impl ${v:t:1} ${v:t:4} ]
    turbine::store_integer ${u:threads} ${v:threads}
}


proc alignReads-async_op-eq_string { t:11 t:19 u:alignedLog u:outputSam u:reads u:rgheader u:threads u:tmpalignedLog u:vars } {
    # Var: $string v:t:19 VALUE_OF [string:__t:19]
    # Var: $boolean v:t:18 VALUE_OF [boolean:__t:18]
    set v:t:19 [ turbine::retrieve_string ${t:19} CACHED 1 ]
    set v:t:18 [ string equal ${v:t:19} "1" ]
    if { ${v:t:18} } {
        # Var: string t:23 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():95:6
        lassign [ adlb::multicreate [ list string 1 1 216 ] ] t:23
        turbine::c::log "allocated t:23=<${t:23}>"
        turbine::read_refcount_incr ${u:reads} 1
        turbine::container_reference ${u:vars} "ALIGNERTOOL" ${t:23} string
        turbine::rule [ list ${t:23} ] "alignReads-async_op-eq_string-1 ${t:11} ${t:23} {${u:alignedLog}} {${u:outputSam}} {${u:reads}} {${u:rgheader}} ${u:threads} {${u:tmpalignedLog}} {${u:vars}}"
    } else {
        # Var: string t:45 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():110:6
        lassign [ adlb::multicreate [ list string 1 1 223 ] ] t:45
        turbine::c::log "allocated t:45=<${t:45}>"
        turbine::read_refcount_incr ${u:vars} 1
        turbine::container_reference ${u:vars} "ALIGNERTOOL" ${t:45} string
        turbine::rule [ list ${t:45} ] "alignReads-async_op-eq_string-2 ${t:11} ${t:45} {${u:alignedLog}} {${u:outputSam}} {${u:reads}} {${u:rgheader}} ${u:threads} {${u:tmpalignedLog}} {${u:vars}}"
    }
    turbine::file_read_refcount_decr ${u:outputSam} 1
    turbine::file_read_refcount_decr ${u:tmpalignedLog} 1
    turbine::read_refcount_decr ${u:threads} 1
    turbine::read_refcount_decr ${t:11} 1
    turbine::read_refcount_decr ${u:reads} 1
    turbine::read_refcount_decr ${u:vars} 1
    turbine::read_refcount_decr ${u:rgheader} 1
}


proc alignReads-async_op-eq_string-1 { t:11 t:23 u:alignedLog u:outputSam u:reads u:rgheader u:threads u:tmpalignedLog u:vars } {
    # Var: $string v:t:23 VALUE_OF [string:__t:23]
    # Var: $boolean v:t:22 VALUE_OF [boolean:__t:22]
    set v:t:23 [ turbine::retrieve_string ${t:23} CACHED 1 ]
    set v:t:22 [ string equal ${v:t:23} "BWAMEM" ]
    if { ${v:t:22} } {
        # Var: string t:26 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():97:57
        # Var: string t:30 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():97:93
        # Var: string[int] t:32 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():98:10
        # Var: string t:33 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():98:10
        # Var: $int v:t:4:1 VALUE_OF [int:__t:4:1]
        # Var: $string v:t:3:1 VALUE_OF [string:__t:3:1]
        # Var: $string v:startmsg VALUE_OF [string:startmsg]
        # Var: $boolean v:mapped_output RENAMED [$boolean:__v:mapped_output]
        # Var: $boolean v:4 RENAMED [$boolean:__v:4] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():4:101
        lassign [ adlb::multicreate [ list string 1 1 217 ] [ list string 1 1 218 ] [ list container integer string 1 1 219 ] [ list string 1 1 220 ] ] t:26 t:30 t:32 t:33
        turbine::c::log "allocated t:26=<${t:26}> t:30=<${t:30}> t:32=<${t:32}> t:33=<${t:33}>"
        turbine::read_refcount_incr ${u:vars} 1
        turbine::container_reference ${u:vars} "BWAEXE" ${t:26} string
        set a:t:28 [ adlb::subscript_container ${u:reads} 0 ]
        set a:t:29 [ adlb::subscript_container ${u:reads} 1 ]
        turbine::container_reference ${u:vars} "BWAINDEX" ${t:30} string
        turbine::container_reference ${u:vars} "BWAMEMPARAMS" ${t:33} string
        set v:t:4:1 [ clock seconds ]
        set v:t:3:1 ${v:t:4:1}
        set v:startmsg "BWAMEM start\t${v:t:3:1}\n"
        set v:mapped_output [ turbine::is_file_mapped ${u:outputSam} ]
        set filename:output [ turbine::get_file_path ${u:outputSam} ]
        if { ${v:mapped_output} } {
        } else {
            # Var: $string optf:output RENAMED [$string:__of:output]
            set optf:output [ turbine::mktemp ]
            turbine::set_filename_val ${u:outputSam} ${optf:output}
        }
        set v:4 [ expr { ! ${v:mapped_output} } ]
        turbine::rule [ list ${t:33} ] [ list alignReads-arr_copy_in_imm ${a:t:28} ${a:t:29} ${filename:output} ${t:11} ${t:26} ${t:30} ${t:32} ${t:33} ${v:4} ${v:mapped_output} ${v:startmsg} ${u:alignedLog} ${u:outputSam} ${u:rgheader} ${u:threads} ${u:tmpalignedLog} ]
    } else {
        # Var: string t:35 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():103:59
        # Var: string t:39 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():104:11
        # Var: $boolean v:mapped_output:2 RENAMED [$boolean:__v:mapped_output]
        # Var: $int v:t:4:2 VALUE_OF [int:__t:4:2]
        # Var: $string v:t:3:2 VALUE_OF [string:__t:3:2]
        # Var: $string v:startmsg:1 VALUE_OF [string:startmsg:1]
        lassign [ adlb::multicreate [ list string 1 1 221 ] [ list string 1 1 222 ] ] t:35 t:39
        turbine::c::log "allocated t:35=<${t:35}> t:39=<${t:39}>"
        turbine::container_reference ${u:vars} "NOVOALIGNEXE" ${t:35} string
        set a:t:37 [ adlb::subscript_container ${u:reads} 0 ]
        set a:t:38 [ adlb::subscript_container ${u:reads} 1 ]
        turbine::container_reference ${u:vars} "NOVOALIGNINDEX" ${t:39} string
        set v:t:4:2 [ clock seconds ]
        set v:t:3:2 ${v:t:4:2}
        set v:startmsg:1 "NOVOALIGN start\t${v:t:3:2}\n"
        set v:mapped_output:2 [ turbine::is_file_mapped ${u:outputSam} ]
        set filename:output:1 [ turbine::get_file_path ${u:outputSam} ]
        if { ${v:mapped_output:2} } {
        } else {
            # Var: $string optf:output:1 RENAMED [$string:__of:output]
            set optf:output:1 [ turbine::mktemp ]
            turbine::set_filename_val ${u:outputSam} ${optf:output:1}
        }
        turbine::rule [ list ${a:t:37} ${a:t:38} ${filename:output:1} ${t:11} ${t:35} ${t:39} ${u:rgheader} ${u:threads} ] [ list novoalign-app-leaf1 ${a:t:37} ${a:t:38} ${filename:output:1} ${t:11} ${t:35} ${t:39} ${v:mapped_output:2} ${v:startmsg:1} ${u:alignedLog} ${u:outputSam} ${u:rgheader} ${u:threads} ${u:tmpalignedLog} ]
    }
    turbine::file_read_refcount_decr ${u:outputSam} 1
    turbine::file_read_refcount_decr ${u:tmpalignedLog} 1
    turbine::read_refcount_decr ${u:threads} 1
    turbine::read_refcount_decr ${t:11} 1
    turbine::read_refcount_decr ${u:reads} 1
    turbine::read_refcount_decr ${u:vars} 1
    turbine::read_refcount_decr ${u:rgheader} 1
}


proc alignReads-arr_copy_in_imm { a:t:28 a:t:29 filename:output t:11 t:26 t:30 t:32 t:33 v:4 v:mapped_output v:startmsg u:alignedLog u:outputSam u:rgheader u:threads u:tmpalignedLog } {
    # Var: $string v:t:33 VALUE_OF [string:__t:33]
    set v:t:33 [ turbine::retrieve_string ${t:33} CACHED 1 ]
    turbine::array_kv_build ${t:32} [ ::adlb::dict_create 0 ${v:t:33} ] 1 integer string
    turbine::rule [ list ${a:t:28} ${a:t:29} ${filename:output} ${t:11} ${t:26} ${t:30} ${t:32} ${u:rgheader} ${u:threads} ] [ list bwa_mem-app-leaf1 ${a:t:28} ${a:t:29} ${filename:output} ${t:11} ${t:26} ${t:30} ${t:32} ${v:4} ${v:mapped_output} ${v:startmsg} ${u:alignedLog} ${u:outputSam} ${u:rgheader} ${u:threads} ${u:tmpalignedLog} ]
}


proc bwa_mem-app-leaf1 { a:t:28 a:t:29 filename:output t:11 t:26 t:30 t:32 v:4 v:mapped_output v:startmsg u:alignedLog u:outputSam u:rgheader u:threads u:tmpalignedLog } {
    # Var: $string v:bwaexe RENAMED [$string:__v:bwaexe] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():4:101
    # Var: $string$[int] v:bwamemparams RENAMED [$string$[int]:__v:bwamemparams] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():4:101
    # Var: $int v:PBSCORES RENAMED [$int:__v:PBSCORES] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():4:101
    # Var: $string v:rgheader RENAMED [$string:__v:rgheader] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():4:101
    # Var: $string v:INDEX RENAMED [$string:__v:INDEX] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():4:101
    # Var: $string v:read1 RENAMED [$string:__v:read1] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():4:101
    # Var: $string v:read2 RENAMED [$string:__v:read2] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():4:101
    # Var: $string v:__filename:output RENAMED [$string:__v:__filename:output] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():4:101
    # Var: $string v:__filename:outLog RENAMED [$string:__v:__filename:outLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():4:101
    # Var: $file v:output RENAMED [$file:__v:output] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():4:101
    # Var: $file v:outLog RENAMED [$file:__v:outLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():4:101
    # Var: $int v:t:9:1 VALUE_OF [int:__t:9:1]
    # Var: $string v:t:8:1 VALUE_OF [string:__t:8:1]
    # Var: $string v:endmsg VALUE_OF [string:endmsg]
    # Var: $string v:t:11:1 VALUE_OF [string:__t:11:1]
    set v:bwaexe [ turbine::retrieve_string ${t:26} CACHED 1 ]
    set v:bwamemparams [ turbine::unpack_args ${t:32} 1 string ]
    set v:PBSCORES [ turbine::retrieve_integer ${u:threads} CACHED 1 ]
    set v:rgheader [ turbine::retrieve_string ${u:rgheader} CACHED 1 ]
    set v:INDEX [ turbine::retrieve_string ${t:30} CACHED 1 ]
    set v:read1 [ turbine::retrieve_string ${a:t:28} ]
    set v:read2 [ turbine::retrieve_string ${a:t:29} CACHED 2 ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    set v:__filename:outLog [ turbine::retrieve_string ${t:11} CACHED 1 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    set tcltmp:init_rc 2
    set v:outLog [ turbine::create_local_file_ref ${v:__filename:outLog} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:bwaexe "mem" "-M" {*}${v:bwamemparams} "-t" ${v:PBSCORES} "-R" ${v:rgheader} ${v:INDEX} ${v:read1} ${v:read2} [ dict create "stdout" ${v:__filename:output} "stderr" ${v:__filename:outLog} ] ]
    turbine::exec_external ${v:bwaexe} [ dict create "stdout" ${v:__filename:output} "stderr" ${v:__filename:outLog} ] "mem" "-M" {*}${v:bwamemparams} "-t" ${v:PBSCORES} "-R" ${v:rgheader} ${v:INDEX} ${v:read1} ${v:read2}
    turbine::store_file ${u:outputSam} v:output ${v:4}
    turbine::store_file ${u:alignedLog} v:outLog 0
    set v:t:9:1 [ clock seconds ]
    set v:t:8:1 ${v:t:9:1}
    set v:endmsg "BWAMEM end\t${v:t:8:1}\n"
    set v:t:11:1 "${v:startmsg}${v:endmsg}"
    set wfilename:tmpalignedLog [ turbine::get_file_path ${u:tmpalignedLog} ]
    turbine::rule [ list ${wfilename:tmpalignedLog} ] [ list alignReads-call_foreign-write ${v:t:11:1} ${wfilename:tmpalignedLog} ${u:tmpalignedLog} ]
    turbine::decr_local_file_refcount v:output
    turbine::decr_local_file_refcount v:outLog
    turbine::read_refcount_decr ${t:32} 1
}


proc alignReads-call_foreign-write { v:t:11:1 wfilename:tmpalignedLog u:tmpalignedLog } {
    # Var: $file v:tmpalignedLog VALUE_OF [file:tmpalignedLog]
    # Var: $string v:__wfilename:tmpalignedLog VALUE_OF [string:__wfilename:tmpalignedLog]
    set v:__wfilename:tmpalignedLog [ turbine::retrieve_string ${wfilename:tmpalignedLog} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:tmpalignedLog [ turbine::create_local_file_ref ${v:__wfilename:tmpalignedLog} ${tcltmp:init_rc} 1 ]
    turbine::file_write_local v:tmpalignedLog ${v:t:11:1}
    turbine::store_file ${u:tmpalignedLog} v:tmpalignedLog 0
}


proc novoalign-app-leaf1 { a:t:37 a:t:38 filename:output:1 t:11 t:35 t:39 v:mapped_output:2 v:startmsg:1 u:alignedLog u:outputSam u:rgheader u:threads u:tmpalignedLog } {
    # Var: $string v:novoalignexe RENAMED [$string:__v:novoalignexe] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():14:99
    # Var: $int v:PBSCORES:1 RENAMED [$int:__v:PBSCORES] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():14:99
    # Var: $string v:INDEX:1 RENAMED [$string:__v:INDEX] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():14:99
    # Var: $string v:read1:1 RENAMED [$string:__v:read1] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():14:99
    # Var: $string v:read2:1 RENAMED [$string:__v:read2] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():14:99
    # Var: $string v:rgheader:1 RENAMED [$string:__v:rgheader] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():14:99
    # Var: $string v:__filename:output:1 RENAMED [$string:__v:__filename:output] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():14:99
    # Var: $string v:__filename:outLog:1 RENAMED [$string:__v:__filename:outLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():14:99
    # Var: $file v:output:1 RENAMED [$file:__v:output] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():14:99
    # Var: $file v:outLog:1 RENAMED [$file:__v:outLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():14:99
    # Var: $boolean v:4:1 RENAMED [$boolean:__v:4] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():14:99
    # Var: $int v:t:9:2 VALUE_OF [int:__t:9:2]
    # Var: $string v:t:8:2 VALUE_OF [string:__t:8:2]
    # Var: $string v:endmsg:1 VALUE_OF [string:endmsg:1]
    # Var: $string v:t:11:2 VALUE_OF [string:__t:11:2]
    set v:novoalignexe [ turbine::retrieve_string ${t:35} CACHED 1 ]
    set v:PBSCORES:1 [ turbine::retrieve_integer ${u:threads} CACHED 1 ]
    set v:INDEX:1 [ turbine::retrieve_string ${t:39} CACHED 1 ]
    set v:read1:1 [ turbine::retrieve_string ${a:t:37} ]
    set v:read2:1 [ turbine::retrieve_string ${a:t:38} CACHED 2 ]
    set v:rgheader:1 [ turbine::retrieve_string ${u:rgheader} CACHED 1 ]
    set v:__filename:output:1 [ turbine::retrieve_string ${filename:output:1} CACHED 1 ]
    set v:__filename:outLog:1 [ turbine::retrieve_string ${t:11} CACHED 1 ]
    if { ${v:mapped_output:2} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output:1 [ turbine::create_local_file_ref ${v:__filename:output:1} ${tcltmp:init_rc} ${v:mapped_output:2} ]
    set tcltmp:init_rc 2
    set v:outLog:1 [ turbine::create_local_file_ref ${v:__filename:outLog:1} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:novoalignexe "-c" ${v:PBSCORES:1} "-d" ${v:INDEX:1} "-f" ${v:read1:1} ${v:read2:1} "-o" "SAM" ${v:rgheader:1} [ dict create "stdout" ${v:__filename:output:1} "stderr" ${v:__filename:outLog:1} ] ]
    turbine::exec_external ${v:novoalignexe} [ dict create "stdout" ${v:__filename:output:1} "stderr" ${v:__filename:outLog:1} ] "-c" ${v:PBSCORES:1} "-d" ${v:INDEX:1} "-f" ${v:read1:1} ${v:read2:1} "-o" "SAM" ${v:rgheader:1}
    set v:4:1 [ expr { ! ${v:mapped_output:2} } ]
    turbine::store_file ${u:outputSam} v:output:1 ${v:4:1}
    turbine::store_file ${u:alignedLog} v:outLog:1 0
    set v:t:9:2 [ clock seconds ]
    set v:t:8:2 ${v:t:9:2}
    set v:endmsg:1 "NOVOALIGN end\t${v:t:8:2}\n"
    set v:t:11:2 "${v:startmsg:1}${v:endmsg:1}"
    set wfilename:tmpalignedLog:1 [ turbine::get_file_path ${u:tmpalignedLog} ]
    turbine::rule [ list ${wfilename:tmpalignedLog:1} ] [ list alignReads-call_foreign-write-1 ${v:t:11:2} ${wfilename:tmpalignedLog:1} ${u:tmpalignedLog} ]
    turbine::decr_local_file_refcount v:output:1
    turbine::decr_local_file_refcount v:outLog:1
}


proc alignReads-call_foreign-write-1 { v:t:11:2 wfilename:tmpalignedLog:1 u:tmpalignedLog } {
    # Var: $file v:tmpalignedLog:1 VALUE_OF [file:tmpalignedLog]
    # Var: $string v:__wfilename:tmpalignedLog:1 VALUE_OF [string:__wfilename:tmpalignedLog:1]
    set v:__wfilename:tmpalignedLog:1 [ turbine::retrieve_string ${wfilename:tmpalignedLog:1} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:tmpalignedLog:1 [ turbine::create_local_file_ref ${v:__wfilename:tmpalignedLog:1} ${tcltmp:init_rc} 1 ]
    turbine::file_write_local v:tmpalignedLog:1 ${v:t:11:2}
    turbine::store_file ${u:tmpalignedLog} v:tmpalignedLog:1 0
}


proc alignReads-async_op-eq_string-2 { t:11 t:45 u:alignedLog u:outputSam u:reads u:rgheader u:threads u:tmpalignedLog u:vars } {
    # Var: $string v:t:45 VALUE_OF [string:__t:45]
    # Var: $boolean v:t:44 VALUE_OF [boolean:__t:44]
    set v:t:45 [ turbine::retrieve_string ${t:45} CACHED 1 ]
    set v:t:44 [ string equal ${v:t:45} "BWAMEM" ]
    if { ${v:t:44} } {
        # Var: string t:48 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():112:57
        # Var: string t:51 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():112:83
        # Var: string[int] t:53 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():113:10
        # Var: string t:54 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():113:10
        # Var: $int v:t:4:3 VALUE_OF [int:__t:4:3]
        # Var: $string v:t:3:3 VALUE_OF [string:__t:3:3]
        # Var: $string v:startmsg:2 VALUE_OF [string:startmsg:2]
        # Var: $boolean v:mapped_output:3 RENAMED [$boolean:__v:mapped_output]
        # Var: $boolean v:4:2 RENAMED [$boolean:__v:4] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():9:95
        lassign [ adlb::multicreate [ list string 1 1 224 ] [ list string 1 1 225 ] [ list container integer string 1 1 226 ] [ list string 1 1 227 ] ] t:48 t:51 t:53 t:54
        turbine::c::log "allocated t:48=<${t:48}> t:51=<${t:51}> t:53=<${t:53}> t:54=<${t:54}>"
        turbine::container_reference ${u:vars} "BWAEXE" ${t:48} string
        set a:t:50 [ adlb::subscript_container ${u:reads} 0 ]
        turbine::container_reference ${u:vars} "BWAINDEX" ${t:51} string
        turbine::container_reference ${u:vars} "BWAMEMPARAMS" ${t:54} string
        set v:t:4:3 [ clock seconds ]
        set v:t:3:3 ${v:t:4:3}
        set v:startmsg:2 "BWAMEM start\t${v:t:3:3}\n"
        set v:mapped_output:3 [ turbine::is_file_mapped ${u:outputSam} ]
        set filename:output:2 [ turbine::get_file_path ${u:outputSam} ]
        if { ${v:mapped_output:3} } {
        } else {
            # Var: $string optf:output:2 RENAMED [$string:__of:output]
            set optf:output:2 [ turbine::mktemp ]
            turbine::set_filename_val ${u:outputSam} ${optf:output:2}
        }
        set v:4:2 [ expr { ! ${v:mapped_output:3} } ]
        turbine::rule [ list ${t:54} ] [ list alignReads-arr_copy_in_imm-1 ${a:t:50} ${filename:output:2} ${t:11} ${t:48} ${t:51} ${t:53} ${t:54} ${v:4:2} ${v:mapped_output:3} ${v:startmsg:2} ${u:alignedLog} ${u:outputSam} ${u:rgheader} ${u:threads} ${u:tmpalignedLog} ]
    } else {
        # Var: string t:56 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():118:59
        # Var: string t:59 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():119:11
        # Var: string[int] t:61 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():119:36
        # Var: string t:62 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/AlignAndDedup.swift:alignReads():119:36
        # Var: $int v:t:4:4 VALUE_OF [int:__t:4:4]
        # Var: $string v:t:3:4 VALUE_OF [string:__t:3:4]
        # Var: $string v:startmsg:3 VALUE_OF [string:startmsg:3]
        # Var: $boolean v:mapped_output:4 RENAMED [$boolean:__v:mapped_output]
        lassign [ adlb::multicreate [ list string 1 1 228 ] [ list string 1 1 229 ] [ list container integer string 1 1 230 ] [ list string 1 1 231 ] ] t:56 t:59 t:61 t:62
        turbine::c::log "allocated t:56=<${t:56}> t:59=<${t:59}> t:61=<${t:61}> t:62=<${t:62}>"
        turbine::container_reference ${u:vars} "NOVOALIGNEXE" ${t:56} string
        set a:t:58 [ adlb::subscript_container ${u:reads} 0 ]
        turbine::container_reference ${u:vars} "NOVOALIGNINDEX" ${t:59} string
        turbine::container_reference ${u:vars} "NOVOALIGNPARAMS" ${t:62} string
        set v:t:4:4 [ clock seconds ]
        set v:t:3:4 ${v:t:4:4}
        set v:startmsg:3 "NOVOALIGN start\t${v:t:3:4}\n"
        set v:mapped_output:4 [ turbine::is_file_mapped ${u:outputSam} ]
        set filename:output:3 [ turbine::get_file_path ${u:outputSam} ]
        if { ${v:mapped_output:4} } {
        } else {
            # Var: $string optf:output:3 RENAMED [$string:__of:output]
            set optf:output:3 [ turbine::mktemp ]
            turbine::set_filename_val ${u:outputSam} ${optf:output:3}
        }
        turbine::rule [ list ${t:62} ] [ list alignReads-arr_copy_in_imm-2 ${a:t:58} ${filename:output:3} ${t:11} ${t:56} ${t:59} ${t:61} ${t:62} ${v:mapped_output:4} ${v:startmsg:3} ${u:alignedLog} ${u:outputSam} ${u:rgheader} ${u:threads} ${u:tmpalignedLog} ]
    }
    turbine::file_read_refcount_decr ${u:outputSam} 1
    turbine::file_read_refcount_decr ${u:tmpalignedLog} 1
    turbine::read_refcount_decr ${u:threads} 1
    turbine::read_refcount_decr ${t:11} 1
    turbine::read_refcount_decr ${u:reads} 1
    turbine::read_refcount_decr ${u:vars} 1
    turbine::read_refcount_decr ${u:rgheader} 1
}


proc alignReads-arr_copy_in_imm-1 { a:t:50 filename:output:2 t:11 t:48 t:51 t:53 t:54 v:4:2 v:mapped_output:3 v:startmsg:2 u:alignedLog u:outputSam u:rgheader u:threads u:tmpalignedLog } {
    # Var: $string v:t:54 VALUE_OF [string:__t:54]
    set v:t:54 [ turbine::retrieve_string ${t:54} CACHED 1 ]
    turbine::array_kv_build ${t:53} [ ::adlb::dict_create 0 ${v:t:54} ] 1 integer string
    turbine::rule [ list ${a:t:50} ${filename:output:2} ${t:11} ${t:48} ${t:51} ${t:53} ${u:rgheader} ${u:threads} ] [ list bwa_mem-app-leaf1-1 ${a:t:50} ${filename:output:2} ${t:11} ${t:48} ${t:51} ${t:53} ${v:4:2} ${v:mapped_output:3} ${v:startmsg:2} ${u:alignedLog} ${u:outputSam} ${u:rgheader} ${u:threads} ${u:tmpalignedLog} ]
}


proc bwa_mem-app-leaf1-1 { a:t:50 filename:output:2 t:11 t:48 t:51 t:53 v:4:2 v:mapped_output:3 v:startmsg:2 u:alignedLog u:outputSam u:rgheader u:threads u:tmpalignedLog } {
    # Var: $string v:bwaexe:1 RENAMED [$string:__v:bwaexe] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():9:95
    # Var: $string$[int] v:bwamemparams:1 RENAMED [$string$[int]:__v:bwamemparams] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():9:95
    # Var: $int v:PBSCORES:2 RENAMED [$int:__v:PBSCORES] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():9:95
    # Var: $string v:rgheader:2 RENAMED [$string:__v:rgheader] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():9:95
    # Var: $string v:INDEX:2 RENAMED [$string:__v:INDEX] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():9:95
    # Var: $string v:read1:2 RENAMED [$string:__v:read1] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():9:95
    # Var: $string v:__filename:output:2 RENAMED [$string:__v:__filename:output] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():9:95
    # Var: $string v:__filename:outLog:2 RENAMED [$string:__v:__filename:outLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():9:95
    # Var: $file v:output:2 RENAMED [$file:__v:output] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():9:95
    # Var: $file v:outLog:2 RENAMED [$file:__v:outLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:bwa_mem():9:95
    # Var: $int v:t:9:3 VALUE_OF [int:__t:9:3]
    # Var: $string v:t:8:3 VALUE_OF [string:__t:8:3]
    # Var: $string v:endmsg:2 VALUE_OF [string:endmsg:2]
    # Var: $string v:t:11:3 VALUE_OF [string:__t:11:3]
    set v:bwaexe:1 [ turbine::retrieve_string ${t:48} CACHED 1 ]
    set v:bwamemparams:1 [ turbine::unpack_args ${t:53} 1 string ]
    set v:PBSCORES:2 [ turbine::retrieve_integer ${u:threads} CACHED 1 ]
    set v:rgheader:2 [ turbine::retrieve_string ${u:rgheader} CACHED 1 ]
    set v:INDEX:2 [ turbine::retrieve_string ${t:51} CACHED 1 ]
    set v:read1:2 [ turbine::retrieve_string ${a:t:50} CACHED 1 ]
    set v:__filename:output:2 [ turbine::retrieve_string ${filename:output:2} CACHED 1 ]
    set v:__filename:outLog:2 [ turbine::retrieve_string ${t:11} CACHED 1 ]
    if { ${v:mapped_output:3} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output:2 [ turbine::create_local_file_ref ${v:__filename:output:2} ${tcltmp:init_rc} ${v:mapped_output:3} ]
    set tcltmp:init_rc 2
    set v:outLog:2 [ turbine::create_local_file_ref ${v:__filename:outLog:2} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:bwaexe:1 "mem" "-M" {*}${v:bwamemparams:1} "-t" ${v:PBSCORES:2} "-R" ${v:rgheader:2} ${v:INDEX:2} ${v:read1:2} [ dict create "stdout" ${v:__filename:output:2} "stderr" ${v:__filename:outLog:2} ] ]
    turbine::exec_external ${v:bwaexe:1} [ dict create "stdout" ${v:__filename:output:2} "stderr" ${v:__filename:outLog:2} ] "mem" "-M" {*}${v:bwamemparams:1} "-t" ${v:PBSCORES:2} "-R" ${v:rgheader:2} ${v:INDEX:2} ${v:read1:2}
    turbine::store_file ${u:outputSam} v:output:2 ${v:4:2}
    turbine::store_file ${u:alignedLog} v:outLog:2 0
    set v:t:9:3 [ clock seconds ]
    set v:t:8:3 ${v:t:9:3}
    set v:endmsg:2 "BWAMEM end\t${v:t:8:3}\n"
    set v:t:11:3 "${v:startmsg:2}${v:endmsg:2}"
    set wfilename:tmpalignedLog:2 [ turbine::get_file_path ${u:tmpalignedLog} ]
    turbine::rule [ list ${wfilename:tmpalignedLog:2} ] [ list alignReads-call_foreign-write-2 ${v:t:11:3} ${wfilename:tmpalignedLog:2} ${u:tmpalignedLog} ]
    turbine::decr_local_file_refcount v:output:2
    turbine::decr_local_file_refcount v:outLog:2
    turbine::read_refcount_decr ${t:53} 1
}


proc alignReads-call_foreign-write-2 { v:t:11:3 wfilename:tmpalignedLog:2 u:tmpalignedLog } {
    # Var: $file v:tmpalignedLog:2 VALUE_OF [file:tmpalignedLog]
    # Var: $string v:__wfilename:tmpalignedLog:2 VALUE_OF [string:__wfilename:tmpalignedLog:2]
    set v:__wfilename:tmpalignedLog:2 [ turbine::retrieve_string ${wfilename:tmpalignedLog:2} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:tmpalignedLog:2 [ turbine::create_local_file_ref ${v:__wfilename:tmpalignedLog:2} ${tcltmp:init_rc} 1 ]
    turbine::file_write_local v:tmpalignedLog:2 ${v:t:11:3}
    turbine::store_file ${u:tmpalignedLog} v:tmpalignedLog:2 0
}


proc alignReads-arr_copy_in_imm-2 { a:t:58 filename:output:3 t:11 t:56 t:59 t:61 t:62 v:mapped_output:4 v:startmsg:3 u:alignedLog u:outputSam u:rgheader u:threads u:tmpalignedLog } {
    # Var: $string v:t:62 VALUE_OF [string:__t:62]
    set v:t:62 [ turbine::retrieve_string ${t:62} CACHED 1 ]
    turbine::array_kv_build ${t:61} [ ::adlb::dict_create 0 ${v:t:62} ] 1 integer string
    turbine::rule [ list ${a:t:58} ${filename:output:3} ${t:11} ${t:56} ${t:59} ${t:61} ${u:rgheader} ${u:threads} ] [ list novoalign-app-leaf1-1 ${a:t:58} ${filename:output:3} ${t:11} ${t:56} ${t:59} ${t:61} ${v:mapped_output:4} ${v:startmsg:3} ${u:alignedLog} ${u:outputSam} ${u:rgheader} ${u:threads} ${u:tmpalignedLog} ]
}


proc novoalign-app-leaf1-1 { a:t:58 filename:output:3 t:11 t:56 t:59 t:61 v:mapped_output:4 v:startmsg:3 u:alignedLog u:outputSam u:rgheader u:threads u:tmpalignedLog } {
    # Var: $string v:novoalignexe:1 RENAMED [$string:__v:novoalignexe] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():19:100
    # Var: $int v:PBSCORES:3 RENAMED [$int:__v:PBSCORES] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():19:100
    # Var: $string v:INDEX:3 RENAMED [$string:__v:INDEX] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():19:100
    # Var: $string v:read1:3 RENAMED [$string:__v:read1] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():19:100
    # Var: $string v:rgheader:3 RENAMED [$string:__v:rgheader] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():19:100
    # Var: $string v:__filename:output:3 RENAMED [$string:__v:__filename:output] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():19:100
    # Var: $string v:__filename:outLog:3 RENAMED [$string:__v:__filename:outLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():19:100
    # Var: $file v:output:3 RENAMED [$file:__v:output] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():19:100
    # Var: $file v:outLog:3 RENAMED [$file:__v:outLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():19:100
    # Var: $boolean v:4:3 RENAMED [$boolean:__v:4] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novoalign():19:100
    # Var: $int v:t:9:4 VALUE_OF [int:__t:9:4]
    # Var: $string v:t:8:4 VALUE_OF [string:__t:8:4]
    # Var: $string v:endmsg:3 VALUE_OF [string:endmsg:3]
    # Var: $string v:t:11:4 VALUE_OF [string:__t:11:4]
    set v:novoalignexe:1 [ turbine::retrieve_string ${t:56} CACHED 1 ]
    set v:PBSCORES:3 [ turbine::retrieve_integer ${u:threads} CACHED 1 ]
    set v:INDEX:3 [ turbine::retrieve_string ${t:59} CACHED 1 ]
    set v:read1:3 [ turbine::retrieve_string ${a:t:58} CACHED 1 ]
    set v:rgheader:3 [ turbine::retrieve_string ${u:rgheader} CACHED 1 ]
    set v:__filename:output:3 [ turbine::retrieve_string ${filename:output:3} CACHED 1 ]
    set v:__filename:outLog:3 [ turbine::retrieve_string ${t:11} CACHED 1 ]
    if { ${v:mapped_output:4} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output:3 [ turbine::create_local_file_ref ${v:__filename:output:3} ${tcltmp:init_rc} ${v:mapped_output:4} ]
    set tcltmp:init_rc 2
    set v:outLog:3 [ turbine::create_local_file_ref ${v:__filename:outLog:3} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:novoalignexe:1 "-c" ${v:PBSCORES:3} "-d" ${v:INDEX:3} "-f" ${v:read1:3} "-o" "SAM" ${v:rgheader:3} [ dict create "stdout" ${v:__filename:output:3} "stderr" ${v:__filename:outLog:3} ] ]
    turbine::exec_external ${v:novoalignexe:1} [ dict create "stdout" ${v:__filename:output:3} "stderr" ${v:__filename:outLog:3} ] "-c" ${v:PBSCORES:3} "-d" ${v:INDEX:3} "-f" ${v:read1:3} "-o" "SAM" ${v:rgheader:3}
    set v:4:3 [ expr { ! ${v:mapped_output:4} } ]
    turbine::store_file ${u:outputSam} v:output:3 ${v:4:3}
    turbine::store_file ${u:alignedLog} v:outLog:3 0
    set v:t:9:4 [ clock seconds ]
    set v:t:8:4 ${v:t:9:4}
    set v:endmsg:3 "NOVOALIGN end\t${v:t:8:4}\n"
    set v:t:11:4 "${v:startmsg:3}${v:endmsg:3}"
    set wfilename:tmpalignedLog:3 [ turbine::get_file_path ${u:tmpalignedLog} ]
    turbine::rule [ list ${wfilename:tmpalignedLog:3} ] [ list alignReads-call_foreign-write-3 ${v:t:11:4} ${wfilename:tmpalignedLog:3} ${u:tmpalignedLog} ]
    turbine::decr_local_file_refcount v:output:3
    turbine::decr_local_file_refcount v:outLog:3
    turbine::read_refcount_decr ${t:61} 1
}


proc alignReads-call_foreign-write-3 { v:t:11:4 wfilename:tmpalignedLog:3 u:tmpalignedLog } {
    # Var: $file v:tmpalignedLog:3 VALUE_OF [file:tmpalignedLog]
    # Var: $string v:__wfilename:tmpalignedLog:3 VALUE_OF [string:__wfilename:tmpalignedLog:3]
    set v:__wfilename:tmpalignedLog:3 [ turbine::retrieve_string ${wfilename:tmpalignedLog:3} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:tmpalignedLog:3 [ turbine::create_local_file_ref ${v:__wfilename:tmpalignedLog:3} ${tcltmp:init_rc} 1 ]
    turbine::file_write_local v:tmpalignedLog:3 ${v:t:11:4}
    turbine::store_file ${u:tmpalignedLog} v:tmpalignedLog:3 0
}


proc alignReads-optmerged { t:11 t:13 t:7 u:alignedLog u:sampleName u:tmpalignedLog } {
    turbine::rule [ list ${t:7} ] "alignReads-async_op-strcat ${t:11} ${t:7} {${u:alignedLog}} {${u:sampleName}}"
    turbine::rule [ list ${t:13} ] "alignReads-async_op-strcat-1 ${t:13} {${u:sampleName}} {${u:tmpalignedLog}}"
}


proc alignReads-async_op-strcat { t:11 t:7 u:alignedLog u:sampleName } {
    # Var: $string v:t:7 VALUE_OF [string:__t:7]
    # Var: $string v:sampleName VALUE_OF [string:sampleName]
    # Var: $string v:LogDir VALUE_OF [string:LogDir]
    # Var: $string v:t:11 VALUE_OF [string:__t:11]
    set v:t:7 [ turbine::retrieve_string ${t:7} CACHED 1 ]
    set v:sampleName [ turbine::retrieve_string ${u:sampleName} CACHED 1 ]
    set v:LogDir "${v:t:7}/${v:sampleName}/logs/"
    set v:t:11 "${v:LogDir}${v:sampleName}_Alignment.log"
    turbine::store_string ${t:11} ${v:t:11}
    turbine::set_filename_val ${u:alignedLog} ${v:t:11}
}


proc alignReads-async_op-strcat-1 { t:13 u:sampleName u:tmpalignedLog } {
    # Var: $string v:t:13 VALUE_OF [string:__t:13]
    # Var: $string v:tmpLogDir VALUE_OF [string:tmpLogDir]
    # Var: $string v:sampleName:2 VALUE_OF [string:sampleName]
    # Var: $string v:t:16 VALUE_OF [string:__t:16]
    set v:t:13 [ turbine::retrieve_string ${t:13} CACHED 1 ]
    set v:tmpLogDir "${v:t:13}/timinglogs/"
    set v:sampleName:2 [ turbine::retrieve_string ${u:sampleName} CACHED 1 ]
    set v:t:16 "${v:tmpLogDir}${v:sampleName:2}_Alignment.log"
    turbine::set_filename_val ${u:tmpalignedLog} ${v:t:16}
}


proc f:samtools_view { u:output u:samtoolsexe u:inputFile u:thr u:args v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: samtools_view"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::read_refcount_incr ${u:thr} 1
    turbine::read_refcount_incr ${u:samtoolsexe} 1
    turbine::file_read_refcount_incr ${u:inputFile} 2
    turbine::file_read_refcount_incr ${u:output} 1
    turbine::read_refcount_incr ${u:args} 1
    set filename:inputFile [ turbine::get_file_path ${u:inputFile} ]
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${filename:inputFile} ${filename:output} ${u:args} [ turbine::get_file_td ${u:inputFile} ] ${u:samtoolsexe} ${u:thr} ] "samtools_view-app-leaf1 {${filename:inputFile}} {${filename:output}} ${v:mapped_output} {${u:args}} {${u:inputFile}} {${u:output}} {${u:samtoolsexe}} {${u:thr}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc samtools_view-app-leaf1 { filename:inputFile filename:output v:mapped_output u:args u:inputFile u:output u:samtoolsexe u:thr } {
    # Var: $string v:samtoolsexe VALUE_OF [string:samtoolsexe] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samtools_view():25:58
    # Var: $int v:thr VALUE_OF [int:thr] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samtools_view():25:58
    # Var: $string v:__filename:inputFile VALUE_OF [string:__filename:inputFile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samtools_view():25:58
    # Var: $string$[int] v:args VALUE_OF [string[int]:args] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samtools_view():25:58
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samtools_view():25:58
    # Var: $file v:inputFile VALUE_OF [file:inputFile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samtools_view():25:58
    # Var: $file v:output VALUE_OF [file:output] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samtools_view():25:58
    # Var: $boolean v:3 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:samtools_view():25:58
    set v:samtoolsexe [ turbine::retrieve_string ${u:samtoolsexe} CACHED 1 ]
    set v:thr [ turbine::retrieve_integer ${u:thr} CACHED 1 ]
    set v:__filename:inputFile [ turbine::retrieve_string ${filename:inputFile} ]
    set v:args [ turbine::unpack_args ${u:args} 1 string ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    set v:inputFile [ turbine::retrieve_file ${u:inputFile} CACHED 2 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: __v:samtoolsexe "view" "-@" ${v:thr} "-bS" ${v:__filename:inputFile} {*}${v:args} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external ${v:samtoolsexe} [ dict create "stdout" ${v:__filename:output} ] "view" "-@" ${v:thr} "-bS" ${v:__filename:inputFile} {*}${v:args}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
    turbine::read_refcount_decr ${u:args} 1
}


proc f:samtools_view_logged { u:output u:tmptimeLog u:samtoolsexe u:inputFile u:thr u:args } {
    turbine::c::log "function: samtools_view_logged"
    # Var: $int v:t:4 VALUE_OF [int:__t:4]
    # Var: $string v:t:3 VALUE_OF [string:__t:3]
    # Var: $string v:startmsg VALUE_OF [string:startmsg]
    set v:t:4 [ clock seconds ]
    set v:t:3 ${v:t:4}
    set v:startmsg "SAMTOOLS_VIEW start\t${v:t:3}\n"
    turbine::rule [ list ] [ list samtools_view_logged-chain1 ${v:startmsg} ${u:args} ${u:inputFile} ${u:output} ${u:samtoolsexe} ${u:thr} ${u:tmptimeLog} ]
}


proc samtools_view_logged-chain1 { v:startmsg u:args u:inputFile u:output u:samtoolsexe u:thr u:tmptimeLog } {
    f:samtools_view ${u:output} ${u:samtoolsexe} ${u:inputFile} ${u:thr} ${u:args} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${u:output} ] ] [ list samtools_view_logged-chain2 ${v:startmsg} ${u:output} ${u:tmptimeLog} ]
    turbine::read_refcount_decr ${u:args} 1
    turbine::file_read_refcount_decr ${u:inputFile} 1
    turbine::read_refcount_decr ${u:samtoolsexe} 1
    turbine::read_refcount_decr ${u:thr} 1
}


proc samtools_view_logged-chain2 { v:startmsg u:output u:tmptimeLog } {
    # Var: $int v:t:9 VALUE_OF [int:__t:9]
    # Var: $string v:t:8 VALUE_OF [string:__t:8]
    # Var: $string v:endmsg VALUE_OF [string:endmsg]
    # Var: $string v:t:11 VALUE_OF [string:__t:11]
    # Var: $boolean v:mapped_tmptimeLog OPT_TEMPORARY
    set v:t:9 [ clock seconds ]
    set v:t:8 ${v:t:9}
    set v:endmsg "SAMTOOLS_VIEW end\t${v:t:8}\n"
    set v:t:11 "${v:startmsg}${v:endmsg}"
    set v:mapped_tmptimeLog [ turbine::is_file_mapped ${u:tmptimeLog} ]
    set wfilename:tmptimeLog [ turbine::get_file_path ${u:tmptimeLog} ]
    if { ${v:mapped_tmptimeLog} } {
    } else {
        # Var: $string optf:tmptimeLog FILENAME_OF [file:tmptimeLog]
        set optf:tmptimeLog [ turbine::mktemp ]
        turbine::set_filename_val ${u:tmptimeLog} ${optf:tmptimeLog}
    }
    turbine::rule [ list ${wfilename:tmptimeLog} ] [ list samtools_view_logged-call_foreign-write ${v:mapped_tmptimeLog} ${v:t:11} ${wfilename:tmptimeLog} ${u:tmptimeLog} ]
    turbine::file_read_refcount_decr ${u:output} 1
}


proc samtools_view_logged-call_foreign-write { v:mapped_tmptimeLog v:t:11 wfilename:tmptimeLog u:tmptimeLog } {
    # Var: $file v:tmptimeLog VALUE_OF [file:tmptimeLog]
    # Var: $string v:__wfilename:tmptimeLog VALUE_OF [string:__wfilename:tmptimeLog]
    set v:__wfilename:tmptimeLog [ turbine::retrieve_string ${wfilename:tmptimeLog} CACHED 1 ]
    if { ${v:mapped_tmptimeLog} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:tmptimeLog [ turbine::create_local_file_ref ${v:__wfilename:tmptimeLog} ${tcltmp:init_rc} ${v:mapped_tmptimeLog} ]
    turbine::file_write_local v:tmptimeLog ${v:t:11}
    turbine::store_file ${u:tmptimeLog} v:tmptimeLog 0
    turbine::decr_local_file_refcount v:tmptimeLog
}


proc f:novosort_logged { u:output u:outLog u:tmptimeLog u:novosortexe u:inputFile u:tmpdir u:thr u:sortoptions u:memFlag } {
    turbine::c::log "function: novosort_logged"
    # Var: $int v:t:4 VALUE_OF [int:__t:4]
    # Var: $string v:t:3 VALUE_OF [string:__t:3]
    # Var: $string v:startmsg VALUE_OF [string:startmsg]
    # Var: $boolean v:mapped_output RENAMED [$boolean:__v:mapped_output]
    # Var: $boolean v:mapped_outLog RENAMED [$boolean:__v:mapped_outLog]
    turbine::file_read_refcount_incr ${u:inputFile} 1
    set v:t:4 [ clock seconds ]
    set v:t:3 ${v:t:4}
    set v:startmsg "NOVOSORT start\t${v:t:3}\n"
    set filename:inputFile [ turbine::get_file_path ${u:inputFile} ]
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output RENAMED [$string:__of:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    set v:mapped_outLog [ turbine::is_file_mapped ${u:outLog} ]
    set filename:outLog [ turbine::get_file_path ${u:outLog} ]
    if { ${v:mapped_outLog} } {
    } else {
        # Var: $string optf:outLog RENAMED [$string:__of:outLog]
        set optf:outLog [ turbine::mktemp ]
        turbine::set_filename_val ${u:outLog} ${optf:outLog}
    }
    turbine::rule [ list ${filename:inputFile} ${filename:outLog} ${filename:output} [ turbine::get_file_td ${u:inputFile} ] ${u:memFlag} ${u:novosortexe} ${u:sortoptions} ${u:thr} ${u:tmpdir} ] [ list novosort-app-leaf1 ${filename:inputFile} ${filename:outLog} ${filename:output} ${v:mapped_outLog} ${v:mapped_output} ${v:startmsg} ${u:inputFile} ${u:memFlag} ${u:novosortexe} ${u:outLog} ${u:output} ${u:sortoptions} ${u:thr} ${u:tmpdir} ${u:tmptimeLog} ]
}


proc novosort-app-leaf1 { filename:inputFile filename:outLog filename:output v:mapped_outLog v:mapped_output v:startmsg u:inputFile u:memFlag u:novosortexe u:outLog u:output u:sortoptions u:thr u:tmpdir u:tmptimeLog } {
    # Var: $string v:novosortexe RENAMED [$string:__v:novosortexe] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novosort():43:112
    # Var: $int v:memFlag RENAMED [$int:__v:memFlag] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novosort():43:112
    # Var: $string v:tmpdir RENAMED [$string:__v:tmpdir] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novosort():43:112
    # Var: $int v:thr RENAMED [$int:__v:thr] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novosort():43:112
    # Var: $string v:__filename:inputFile RENAMED [$string:__v:__filename:inputFile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novosort():43:112
    # Var: $string v:__filename:output RENAMED [$string:__v:__filename:output] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novosort():43:112
    # Var: $string$[int] v:sortoptions RENAMED [$string$[int]:__v:sortoptions] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novosort():43:112
    # Var: $string v:__filename:outLog RENAMED [$string:__v:__filename:outLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novosort():43:112
    # Var: $file v:inputFile RENAMED [$file:__v:inputFile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novosort():43:112
    # Var: $file v:output RENAMED [$file:__v:output] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novosort():43:112
    # Var: $file v:outLog RENAMED [$file:__v:outLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novosort():43:112
    # Var: $boolean v:4 RENAMED [$boolean:__v:4] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novosort():43:112
    # Var: $boolean v:6 RENAMED [$boolean:__v:6] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/align_dedup.swift:novosort():43:112
    # Var: $int v:t:9 VALUE_OF [int:__t:9]
    # Var: $string v:t:8 VALUE_OF [string:__t:8]
    # Var: $string v:endmsg VALUE_OF [string:endmsg]
    # Var: $string v:t:11 VALUE_OF [string:__t:11]
    # Var: $boolean v:mapped_tmptimeLog OPT_TEMPORARY
    set v:novosortexe [ turbine::retrieve_string ${u:novosortexe} CACHED 1 ]
    set v:memFlag [ turbine::retrieve_integer ${u:memFlag} CACHED 1 ]
    set v:tmpdir [ turbine::retrieve_string ${u:tmpdir} CACHED 1 ]
    set v:thr [ turbine::retrieve_integer ${u:thr} CACHED 1 ]
    set v:__filename:inputFile [ turbine::retrieve_string ${filename:inputFile} ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    set v:sortoptions [ turbine::unpack_args ${u:sortoptions} 1 string ]
    set v:__filename:outLog [ turbine::retrieve_string ${filename:outLog} CACHED 1 ]
    set v:inputFile [ turbine::retrieve_file ${u:inputFile} CACHED 2 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    if { ${v:mapped_outLog} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:outLog [ turbine::create_local_file_ref ${v:__filename:outLog} ${tcltmp:init_rc} ${v:mapped_outLog} ]
    turbine::c::log [ list exec: __v:novosortexe "--index" "-m" ${v:memFlag} "--tmpdir" ${v:tmpdir} "--threads" ${v:thr} ${v:__filename:inputFile} "-o" ${v:__filename:output} {*}${v:sortoptions} [ dict create "stderr" ${v:__filename:outLog} ] ]
    turbine::exec_external ${v:novosortexe} [ dict create "stderr" ${v:__filename:outLog} ] "--index" "-m" ${v:memFlag} "--tmpdir" ${v:tmpdir} "--threads" ${v:thr} ${v:__filename:inputFile} "-o" ${v:__filename:output} {*}${v:sortoptions}
    set v:4 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:4}
    set v:6 [ expr { ! ${v:mapped_outLog} } ]
    turbine::store_file ${u:outLog} v:outLog ${v:6}
    set v:t:9 [ clock seconds ]
    set v:t:8 ${v:t:9}
    set v:endmsg "NOVOSORT end\t${v:t:8}\n"
    set v:t:11 "${v:startmsg}${v:endmsg}"
    set v:mapped_tmptimeLog [ turbine::is_file_mapped ${u:tmptimeLog} ]
    set wfilename:tmptimeLog [ turbine::get_file_path ${u:tmptimeLog} ]
    if { ${v:mapped_tmptimeLog} } {
    } else {
        # Var: $string optf:tmptimeLog FILENAME_OF [file:tmptimeLog]
        set optf:tmptimeLog [ turbine::mktemp ]
        turbine::set_filename_val ${u:tmptimeLog} ${optf:tmptimeLog}
    }
    turbine::rule [ list ${wfilename:tmptimeLog} ] [ list novosort_logged-call_foreign-write ${v:mapped_tmptimeLog} ${v:t:11} ${wfilename:tmptimeLog} ${u:tmptimeLog} ]
    turbine::decr_local_file_refcount v:output
    turbine::decr_local_file_refcount v:outLog
    turbine::read_refcount_decr ${u:sortoptions} 1
}


proc novosort_logged-call_foreign-write { v:mapped_tmptimeLog v:t:11 wfilename:tmptimeLog u:tmptimeLog } {
    # Var: $file v:tmptimeLog VALUE_OF [file:tmptimeLog]
    # Var: $string v:__wfilename:tmptimeLog VALUE_OF [string:__wfilename:tmptimeLog]
    set v:__wfilename:tmptimeLog [ turbine::retrieve_string ${wfilename:tmptimeLog} CACHED 1 ]
    if { ${v:mapped_tmptimeLog} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:tmptimeLog [ turbine::create_local_file_ref ${v:__wfilename:tmptimeLog} ${tcltmp:init_rc} ${v:mapped_tmptimeLog} ]
    turbine::file_write_local v:tmptimeLog ${v:t:11}
    turbine::store_file ${u:tmptimeLog} v:tmptimeLog 0
    turbine::decr_local_file_refcount v:tmptimeLog
}


proc f:append { u:signal u:f u:s } {
    turbine::c::log "function: append"
    # Var: file u:newFile /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:append():14:16
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 232 ] ] [ list 1 ] ] u:newFile
    turbine::file_read_refcount_incr ${u:f} 1
    set optf:f [ turbine::get_file_path ${u:f} ]
    set wfilename:newFile [ turbine::get_file_path ${u:newFile} ]
    turbine::rule [ list [ turbine::get_file_td ${u:f} ] ] "append-call_foreign-read {${wfilename:newFile}} {${u:f}} {${u:newFile}} {${u:s}} {${u:signal}}"
    turbine::rule [ list ${optf:f} ] "append-copy_in_filename {${optf:f}} {${u:newFile}}"
}


proc append-call_foreign-read { wfilename:newFile u:f u:newFile u:s u:signal } {
    # Var: $file v:f VALUE_OF [file:f]
    # Var: $string v:original VALUE_OF [string:original]
    set v:f [ turbine::retrieve_file ${u:f} CACHED 1 ]
    set v:original [ turbine::file_read_local ${v:f} ]
    turbine::rule [ list ${wfilename:newFile} ${u:s} ] [ list append-async_op-strcat ${v:original} ${wfilename:newFile} ${u:newFile} ${u:s} ${u:signal} ]
}


proc append-async_op-strcat { v:original wfilename:newFile u:newFile u:s u:signal } {
    # Var: $string v:s VALUE_OF [string:s]
    # Var: $string v:appended VALUE_OF [string:appended]
    # Var: $file v:newFile VALUE_OF [file:newFile]
    # Var: $string v:__wfilename:newFile VALUE_OF [string:__wfilename:newFile]
    set v:s [ turbine::retrieve_string ${u:s} CACHED 1 ]
    set v:appended "${v:original}${v:s}"
    set v:__wfilename:newFile [ turbine::retrieve_string ${wfilename:newFile} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:newFile [ turbine::create_local_file_ref ${v:__wfilename:newFile} ${tcltmp:init_rc} 1 ]
    turbine::file_write_local v:newFile ${v:appended}
    turbine::store_file ${u:newFile} v:newFile 0
    turbine::store_integer ${u:signal} 1
}


proc append-copy_in_filename { optf:f u:newFile } {
    # Var: $string v:of:f VALUE_OF [string:__of:f]
    set v:of:f [ turbine::retrieve_string ${optf:f} CACHED 1 ]
    turbine::set_filename_val ${u:newFile} ${v:of:f}
}


proc f:exitIfFlagGiven { u:vars u:message } {
    turbine::c::log "function: exitIfFlagGiven"
    # Var: string t:11 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:exitIfFlagGiven():21:5
    lassign [ adlb::multicreate [ list string 1 1 233 ] ] t:11
    turbine::c::log "allocated t:11=<${t:11}>"
    turbine::container_reference ${u:vars} "EXIT_ON_ERROR" ${t:11} string
    turbine::rule [ list ${t:11} ] "exitIfFlagGiven-optmerged ${t:11} {${u:message}}"
}


proc exitIfFlagGiven-optmerged { t:11 u:message } {
    # Var: $string v:t:11 VALUE_OF [string:__t:11]
    # Var: $boolean v:t:10 VALUE_OF [boolean:__t:10]
    # Var: $boolean v:t:14 VALUE_OF [boolean:__t:14]
    # Var: $boolean v:t:18 VALUE_OF [boolean:__t:18]
    # Var: $boolean v:t:22 VALUE_OF [boolean:__t:22]
    # Var: $boolean v:t:26 VALUE_OF [boolean:__t:26]
    # Var: $boolean v:t:30 VALUE_OF [boolean:__t:30]
    # Var: $boolean v:t:34 VALUE_OF [boolean:__t:34]
    # Var: $boolean v:t:38 VALUE_OF [boolean:__t:38]
    # Var: $boolean v:t:42 VALUE_OF [boolean:__t:42]
    # Var: $boolean v:t:46 VALUE_OF [boolean:__t:46]
    # Var: $boolean v:t:9 VALUE_OF [boolean:__t:9]
    # Var: $boolean v:t:8 VALUE_OF [boolean:__t:8]
    # Var: $boolean v:t:7 VALUE_OF [boolean:__t:7]
    # Var: $boolean v:t:6 VALUE_OF [boolean:__t:6]
    # Var: $boolean v:t:5 VALUE_OF [boolean:__t:5]
    # Var: $boolean v:t:4 VALUE_OF [boolean:__t:4]
    # Var: $boolean v:t:3 VALUE_OF [boolean:__t:3]
    # Var: $boolean v:t:2 VALUE_OF [boolean:__t:2]
    # Var: $boolean v:t:1 VALUE_OF [boolean:__t:1]
    set v:t:11 [ turbine::retrieve_string ${t:11} CACHED 1 ]
    set v:t:10 [ string equal ${v:t:11} "F" ]
    set v:t:14 [ string equal ${v:t:11} "f" ]
    set v:t:18 [ string equal ${v:t:11} "False" ]
    set v:t:22 [ string equal ${v:t:11} "false" ]
    set v:t:26 [ string equal ${v:t:11} "FALSE" ]
    set v:t:30 [ string equal ${v:t:11} "N" ]
    set v:t:34 [ string equal ${v:t:11} "n" ]
    set v:t:38 [ string equal ${v:t:11} "No" ]
    set v:t:42 [ string equal ${v:t:11} "NO" ]
    set v:t:46 [ string equal ${v:t:11} "no" ]
    set v:t:9 [ expr { ${v:t:10} || ${v:t:14} } ]
    set v:t:8 [ expr { ${v:t:9} || ${v:t:18} } ]
    set v:t:7 [ expr { ${v:t:8} || ${v:t:22} } ]
    set v:t:6 [ expr { ${v:t:7} || ${v:t:26} } ]
    set v:t:5 [ expr { ${v:t:6} || ${v:t:30} } ]
    set v:t:4 [ expr { ${v:t:5} || ${v:t:34} } ]
    set v:t:3 [ expr { ${v:t:4} || ${v:t:38} } ]
    set v:t:2 [ expr { ${v:t:3} || ${v:t:42} } ]
    set v:t:1 [ expr { ${v:t:2} || ${v:t:46} } ]
    if { ${v:t:1} } {
    } else {
        turbine::read_refcount_incr ${u:message} 1
        turbine::rule [ list ${u:message} ] "exitIfFlagGiven-async_op-assert {${u:message}}"
    }
    turbine::read_refcount_decr ${u:message} 1
}


proc exitIfFlagGiven-async_op-assert { u:message } {
    # Var: $string v:message VALUE_OF [string:message]
    # Var: $void v:t:50 VALUE_OF [void:__t:50]
    set v:message [ turbine::retrieve_string ${u:message} CACHED 1 ]
    turbine::assert_impl 0 ${v:message}
}


proc f:find_files { u:output u:dir u:pattern v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: find_files"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::read_refcount_incr ${u:dir} 1
    turbine::read_refcount_incr ${u:pattern} 1
    turbine::file_read_refcount_incr ${u:output} 1
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${filename:output} ${u:dir} ${u:pattern} ] "find_files-app-leaf1 {${filename:output}} ${v:mapped_output} {${u:dir}} {${u:output}} {${u:pattern}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc find_files-app-leaf1 { filename:output v:mapped_output u:dir u:output u:pattern } {
    # Var: $string v:dir VALUE_OF [string:dir] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:find_files():51:36
    # Var: $string v:pattern VALUE_OF [string:pattern] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:find_files():51:36
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:find_files():51:36
    # Var: $file v:output VALUE_OF [file:output] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:find_files():51:36
    # Var: $boolean v:3 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:find_files():51:36
    set v:dir [ turbine::retrieve_string ${u:dir} CACHED 1 ]
    set v:pattern [ turbine::retrieve_string ${u:pattern} CACHED 1 ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: "find" ${v:dir} "-name" ${v:pattern} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external "find" [ dict create "stdout" ${v:__filename:output} ] ${v:dir} "-name" ${v:pattern}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
}


proc f:logging { u:tmpdir u:timeLog } {
    turbine::c::log "function: logging"
    # Var: *rw(file)[int] u:tmplogs /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:logging():63:8
    # Var: string t:1 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:logging():63:30
    # Var: boolean t:3 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:logging():64:8
    # Var: string t:4 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:logging():64:24
    # Var: file t:5 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:logging():64:29
    # Var: $string optf:o RENAMED [$string:__of:o]
    lassign [ adlb::multicreate [ list container integer file_ref 2 1 234 ] [ list string 1 1 235 ] [ list integer 1 1 236 ] [ list string 1 1 237 ] ] u:tmplogs t:1 t:3 t:4
    turbine::c::log "allocated u:tmplogs=<${u:tmplogs}> t:1=<${t:1}> t:3=<${t:3}> t:4=<${t:4}>"
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 238 ] ] [ list 0 ] ] t:5
    turbine::glob [ list ${u:tmplogs} ] [ list ${t:1} ]
    set optf:o [ turbine::mktemp ]
    turbine::set_filename_val ${t:5} ${optf:o}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:append ${t:3} {${u:timeLog}} ${t:4}"
    turbine::reset_priority
    turbine::rule [ list ${t:3} ] "logging-chain1 ${t:3} ${u:tmplogs}"
    turbine::deeprule [ list ${u:tmplogs} ] [ list 1 ] [ list file_ref ] [ list cat-app-leaf1 ${optf:o} ${t:4} ${t:5} ${u:tmplogs} ]
    turbine::rule [ list ${u:tmpdir} ] "logging-async_op-strcat ${t:1} {${u:tmpdir}}"
}


proc logging-chain1 { t:3 u:tmplogs } {
    turbine::deeprule [ list ${u:tmplogs} ] [ list 1 ] [ list file_ref ] "rm-app-leaf1-2 ${u:tmplogs}"
    turbine::read_refcount_decr ${t:3} 1
}


proc rm-app-leaf1-2 { u:tmplogs } {
    # Var: $file$[int] v:f RENAMED [$file$[int]:__v:f] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:rm():59:6
    # Var: $void v:v RENAMED [$void:__v:v] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:rm():59:6
    set v:f [ turbine::unpack_args ${u:tmplogs} 1 file_ref ]
    turbine::c::log [ list exec: "rm" {*}${v:f} [ dict create ] ]
    turbine::exec_external "rm" [ dict create ] {*}${v:f}
    turbine::read_refcount_decr ${u:tmplogs} 1
}


proc cat-app-leaf1 { optf:o t:4 t:5 u:tmplogs } {
    # Var: $file$[int] v:f:1 RENAMED [$file$[int]:__v:f] /usr/src/swift-t/swift-t-1.2/turbine/export/unix.swift:cat():35:18
    # Var: $file v:o RENAMED [$file:__v:o] /usr/src/swift-t/swift-t-1.2/turbine/export/unix.swift:cat():35:18
    set v:f:1 [ turbine::unpack_args ${u:tmplogs} 1 file_ref ]
    set tcltmp:init_rc 1
    set v:o [ turbine::create_local_file_ref ${optf:o} ${tcltmp:init_rc} 0 ]
    turbine::c::log [ list exec: "cat" {*}${v:f:1} [ dict create "stdout" ${optf:o} ] ]
    turbine::exec_external "cat" [ dict create "stdout" ${optf:o} ] {*}${v:f:1}
    turbine::store_file ${t:5} v:o 1
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "logging-call_foreign-read ${t:4} {${t:5}}"
    turbine::reset_priority
    turbine::decr_local_file_refcount v:o
    turbine::read_refcount_decr ${u:tmplogs} 1
}


proc logging-call_foreign-read { t:4 t:5 } {
    # Var: $file v:t:5 VALUE_OF [file:__t:5]
    # Var: $string v:t:4 VALUE_OF [string:__t:4]
    set v:t:5 [ turbine::retrieve_file ${t:5} CACHED 1 ]
    set v:t:4 [ turbine::file_read_local ${v:t:5} ]
    turbine::store_string ${t:4} ${v:t:4}
}


proc logging-async_op-strcat { t:1 u:tmpdir } {
    # Var: $string v:tmpdir VALUE_OF [string:tmpdir]
    # Var: $string v:t:1 VALUE_OF [string:__t:1]
    set v:tmpdir [ turbine::retrieve_string ${u:tmpdir} CACHED 1 ]
    set v:t:1 "${v:tmpdir}/timinglogs/*"
    turbine::store_string ${t:1} ${v:t:1}
}


proc f:checkBam { u:success u:vars u:bamFile } {
    turbine::c::log "function: checkBam"
    # Var: string t:1 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/generalfunctions/general.swift:checkBam():79:32
    # Var: $string v:of:bamFile VALUE_OF [string:__of:bamFile]
    lassign [ adlb::multicreate [ list string 1 1 239 ] ] t:1
    turbine::c::log "allocated t:1=<${t:1}>"
    turbine::container_reference ${u:vars} "SAMTOOLSEXE" ${t:1} string
    set v:of:bamFile [ turbine::get_filename_val ${u:bamFile} ]
    turbine::rule [ list ${t:1} ] [ list samtools_view2-argwait ${t:1} ${v:of:bamFile} ${u:success} ]
    turbine::file_read_refcount_decr ${u:bamFile} 1
}


proc samtools_view2-argwait { t:1 v:of:bamFile u:success } {
    # Var: $string v:samtoolsexe RENAMED [$string:__v:samtoolsexe]
    # Var: $int v:numAlignments RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:success VALUE_OF [boolean:success]
    set v:samtoolsexe [ turbine::retrieve_string ${t:1} CACHED 1 ]
    set v:numAlignments [ alignment::samtools_view ${v:samtoolsexe} ${v:of:bamFile} ]
    set v:success [ expr { ${v:numAlignments} > 0 } ]
    turbine::store_integer ${u:success} ${v:success}
}


proc f:recalibrateBam { u:outBam u:sampleName u:chr u:var u:inputBam u:recalparmsindels } {
    turbine::c::log "function: recalibrateBam"
    # Var: string t:1 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():151:27
    # Var: int u:threads /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():158:1
    # Var: string t:18 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():158:26
    # Var: string t:21 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():158:54
    # Var: string t:23 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():161:17
    # Var: file u:recalLog /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():161:35
    # Var: string t:25 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():162:17
    # Var: file u:printLog /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():162:35
    # Var: string t:27 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():163:15
    # Var: file u:report /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():163:30
    # Var: string t:29 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():165:27
    # Var: file u:tmprecalLog /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():166:60
    # Var: file u:tmpprintLog /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():167:60
    # Var: string t:38 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():171:58
    # Var: string t:40 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():171:74
    # Var: string t:42 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():172:11
    # Var: string t:43 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():172:18
    # Var: string t:46 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():172:44
    # Var: string t:48 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():174:11
    # Var: string t:52 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():174:44
    # Var: boolean t:64 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrateBam():180:1
    # Var: $int v:t:4:1 VALUE_OF [int:__t:4:1]
    # Var: $string v:t:3:1 VALUE_OF [string:__t:3:1]
    # Var: $string v:startmsg VALUE_OF [string:startmsg]
    # Var: $int v:t:4:2 VALUE_OF [int:__t:4:2]
    # Var: $string v:t:3:2 VALUE_OF [string:__t:3:2]
    # Var: $string v:startmsg:1 VALUE_OF [string:startmsg:1]
    # Var: $boolean v:mapped_outputfile:2 RENAMED [$boolean:__v:mapped_outputfile]
    lassign [ adlb::multicreate [ list string 1 1 240 ] [ list integer 1 1 241 ] [ list string 1 1 242 ] [ list string 1 1 243 ] [ list string 1 1 244 ] [ list string 1 1 246 ] [ list string 1 1 248 ] [ list string 1 1 250 ] [ list string 1 1 253 ] [ list string 1 1 254 ] [ list string 1 1 255 ] [ list string 1 1 256 ] [ list string 1 1 257 ] [ list string 1 1 258 ] [ list string 1 1 259 ] [ list integer 0 1 260 ] ] t:1 u:threads t:18 t:21 t:23 t:25 t:27 t:29 t:38 t:40 t:42 t:43 t:46 t:48 t:52 t:64
    turbine::c::log "allocated t:1=<${t:1}> u:threads=<${u:threads}> t:18=<${t:18}> t:21=<${t:21}> t:23=<${t:23}>"
    turbine::c::log "allocated t:25=<${t:25}> t:27=<${t:27}> t:29=<${t:29}> t:38=<${t:38}> t:40=<${t:40}>"
    turbine::c::log "allocated t:42=<${t:42}> t:43=<${t:43}> t:46=<${t:46}> t:48=<${t:48}> t:52=<${t:52}>"
    turbine::c::log "allocated t:64=<${t:64}>"
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 0 1 245 ] [ list file 0 1 247 ] [ list file 1 1 249 ] [ list file 1 1 251 ] [ list file 1 1 252 ] ] [ list 1 1 1 1 1 ] ] u:recalLog u:printLog u:report u:tmprecalLog u:tmpprintLog
    turbine::read_refcount_incr ${u:sampleName} 1
    turbine::file_read_refcount_incr ${u:outBam} 1
    turbine::read_refcount_incr ${u:chr} 1
    turbine::file_read_refcount_incr ${u:inputBam} 1
    turbine::read_refcount_incr ${u:var} 9
    turbine::container_reference ${u:var} "OUTPUTDIR" ${t:1} string
    turbine::container_reference ${u:var} "CORES" ${t:18} string
    turbine::container_reference ${u:var} "PROCPERNODE" ${t:21} string
    turbine::container_reference ${u:var} "TMPDIR" ${t:29} string
    turbine::container_reference ${u:var} "JAVAEXE" ${t:38} string
    turbine::container_reference ${u:var} "GATKJAR" ${t:40} string
    turbine::container_reference ${u:var} "REFGENOMEDIR" ${t:43} string
    turbine::container_reference ${u:var} "REFGENOME" ${t:46} string
    turbine::container_reference ${u:var} "DBSNP" ${t:52} string
    set v:t:4:1 [ clock seconds ]
    set v:t:3:1 ${v:t:4:1}
    set v:startmsg "BaseRecalibrator start\t${v:t:3:1}\n"
    set v:t:4:2 [ clock seconds ]
    set v:t:3:2 ${v:t:4:2}
    set v:startmsg:1 "PrintReads start\t${v:t:3:2}\n"
    set filename:inputFile [ turbine::get_file_path ${u:inputBam} ]
    set v:mapped_outputfile:2 [ turbine::is_file_mapped ${u:outBam} ]
    set filename:outputfile:1 [ turbine::get_file_path ${u:outBam} ]
    if { ${v:mapped_outputfile:2} } {
    } else {
        # Var: $string optf:outputfile:1 RENAMED [$string:__of:outputfile]
        set optf:outputfile:1 [ turbine::mktemp ]
        turbine::set_filename_val ${u:outBam} ${optf:outputfile:1}
    }
    turbine::rule [ list ${t:18} ${t:21} ] [ list recalibrateBam-async_op-parse_int ${filename:inputFile} ${filename:outputfile:1} ${t:18} ${t:21} ${t:23} ${t:25} ${t:27} ${t:38} ${t:40} ${t:42} ${t:48} ${t:64} ${v:mapped_outputfile:2} ${v:startmsg} ${v:startmsg:1} ${u:inputBam} ${u:outBam} ${u:printLog} ${u:recalLog} ${u:recalparmsindels} ${u:report} ${u:threads} ${u:tmpprintLog} ${u:tmprecalLog} ${u:var} ]
    turbine::rule [ list ${t:43} ] "recalibrateBam-optmerged ${t:42} ${t:43} ${t:46} ${t:48} ${t:52}"
    turbine::rule [ list ${u:chr} ${u:sampleName} ] "recalibrateBam-optmerged-1 ${t:1} ${t:23} ${t:25} ${t:27} ${t:29} {${u:chr}} {${u:printLog}} {${u:recalLog}} {${u:report}} {${u:sampleName}} {${u:tmpprintLog}} {${u:tmprecalLog}}"
}


proc recalibrateBam-async_op-parse_int { filename:inputFile filename:outputfile:1 t:18 t:21 t:23 t:25 t:27 t:38 t:40 t:42 t:48 t:64 v:mapped_outputfile:2 v:startmsg v:startmsg:1 u:inputBam u:outBam u:printLog u:recalLog u:recalparmsindels u:report u:threads u:tmpprintLog u:tmprecalLog u:var } {
    # Var: $string v:t:21 VALUE_OF [string:__t:21]
    # Var: $int v:t:20 VALUE_OF [int:__t:20]
    # Var: $string v:t:18 VALUE_OF [string:__t:18]
    # Var: $int v:t:17 VALUE_OF [int:__t:17]
    # Var: $int v:threads VALUE_OF [int:threads]
    set v:t:21 [ turbine::retrieve_string ${t:21} CACHED 1 ]
    set v:t:20 [ turbine::parse_int_impl ${v:t:21} 10 ]
    set v:t:18 [ turbine::retrieve_string ${t:18} CACHED 1 ]
    set v:t:17 [ turbine::parse_int_impl ${v:t:18} 10 ]
    set v:threads [ turbine::divide_integer_impl ${v:t:17} ${v:t:20} ]
    turbine::store_integer ${u:threads} ${v:threads}
    turbine::rule [ list ${filename:inputFile} ${t:23} ${t:27} ${t:38} ${t:40} ${t:42} ${t:48} [ turbine::get_file_td ${u:inputBam} ] ${u:recalparmsindels} ${u:threads} ] [ list BaseRecalibrator-app-leaf1 ${filename:inputFile} ${filename:outputfile:1} ${t:23} ${t:25} ${t:27} ${t:38} ${t:40} ${t:42} ${t:48} ${t:64} ${v:mapped_outputfile:2} ${v:startmsg} ${v:startmsg:1} ${u:inputBam} ${u:outBam} ${u:printLog} ${u:recalLog} ${u:recalparmsindels} ${u:report} ${u:threads} ${u:tmpprintLog} ${u:tmprecalLog} ${u:var} ]
}


proc BaseRecalibrator-app-leaf1 { filename:inputFile filename:outputfile:1 t:23 t:25 t:27 t:38 t:40 t:42 t:48 t:64 v:mapped_outputfile:2 v:startmsg v:startmsg:1 u:inputBam u:outBam u:printLog u:recalLog u:recalparmsindels u:report u:threads u:tmpprintLog u:tmprecalLog u:var } {
    # Var: $string v:javaexe RENAMED [$string:__v:javaexe] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:BaseRecalibrator():47:9
    # Var: $string v:gatkjar RENAMED [$string:__v:gatkjar] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:BaseRecalibrator():47:9
    # Var: $string v:reference RENAMED [$string:__v:reference] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:BaseRecalibrator():47:9
    # Var: $string v:__filename:inputFile RENAMED [$string:__v:__filename:inputFile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:BaseRecalibrator():47:9
    # Var: $string v:dbsnp RENAMED [$string:__v:dbsnp] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:BaseRecalibrator():47:9
    # Var: $string$[int] v:knownindels RENAMED [$string$[int]:__v:knownindels] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:BaseRecalibrator():47:9
    # Var: $int v:thr RENAMED [$int:__v:thr] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:BaseRecalibrator():47:9
    # Var: $string v:__filename:outputfile RENAMED [$string:__v:__filename:outputfile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:BaseRecalibrator():47:9
    # Var: $string v:__filename:outLog RENAMED [$string:__v:__filename:outLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:BaseRecalibrator():47:9
    # Var: $file v:inputFile RENAMED [$file:__v:inputFile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:BaseRecalibrator():47:9
    # Var: $file v:outputfile RENAMED [$file:__v:outputfile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:BaseRecalibrator():47:9
    # Var: $file v:outLog RENAMED [$file:__v:outLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:BaseRecalibrator():47:9
    # Var: $int v:t:9:1 VALUE_OF [int:__t:9:1]
    # Var: $string v:t:8:1 VALUE_OF [string:__t:8:1]
    # Var: $string v:endmsg VALUE_OF [string:endmsg]
    # Var: $string v:t:11:1 VALUE_OF [string:__t:11:1]
    set v:javaexe [ turbine::retrieve_string ${t:38} ]
    set v:gatkjar [ turbine::retrieve_string ${t:40} ]
    set v:reference [ turbine::retrieve_string ${t:42} ]
    set v:__filename:inputFile [ turbine::retrieve_string ${filename:inputFile} ]
    set v:dbsnp [ turbine::retrieve_string ${t:48} CACHED 1 ]
    set v:knownindels [ turbine::unpack_args ${u:recalparmsindels} 1 string ]
    set v:thr [ turbine::retrieve_integer ${u:threads} ]
    set v:__filename:outputfile [ turbine::retrieve_string ${t:27} ]
    set v:__filename:outLog [ turbine::retrieve_string ${t:23} CACHED 1 ]
    set v:inputFile [ turbine::retrieve_file ${u:inputBam} ]
    set tcltmp:init_rc 2
    set v:outputfile [ turbine::create_local_file_ref ${v:__filename:outputfile} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:outLog [ turbine::create_local_file_ref ${v:__filename:outLog} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javaexe "-Xmx16g" "-jar" ${v:gatkjar} "-T" "BaseRecalibrator" "-R" ${v:reference} "-I" ${v:__filename:inputFile} "-knownSites" ${v:dbsnp} {*}${v:knownindels} "-nct" ${v:thr} "-o" ${v:__filename:outputfile} [ dict create "stderr" ${v:__filename:outLog} ] ]
    turbine::exec_external ${v:javaexe} [ dict create "stderr" ${v:__filename:outLog} ] "-Xmx16g" "-jar" ${v:gatkjar} "-T" "BaseRecalibrator" "-R" ${v:reference} "-I" ${v:__filename:inputFile} "-knownSites" ${v:dbsnp} {*}${v:knownindels} "-nct" ${v:thr} "-o" ${v:__filename:outputfile}
    turbine::store_file ${u:report} v:outputfile 0
    turbine::store_file ${u:recalLog} v:outLog 0
    set v:t:9:1 [ clock seconds ]
    set v:t:8:1 ${v:t:9:1}
    set v:endmsg "BaseRecalibrator end\t${v:t:8:1}\n"
    set v:t:11:1 "${v:startmsg}${v:endmsg}"
    set wfilename:tmprecalLog [ turbine::get_file_path ${u:tmprecalLog} ]
    turbine::rule [ list ${wfilename:tmprecalLog} ] [ list recalibrateBam-call_foreign-write ${v:t:11:1} ${wfilename:tmprecalLog} ${u:tmprecalLog} ]
    turbine::rule [ list ${filename:inputFile} ${filename:outputfile:1} ${t:25} ${t:27} ${t:38} ${t:40} ${t:42} [ turbine::get_file_td ${u:inputBam} ] [ turbine::get_file_td ${u:report} ] ${u:threads} ] [ list PrintReads-app-leaf1 ${filename:inputFile} ${filename:outputfile:1} ${t:25} ${t:27} ${t:38} ${t:40} ${t:42} ${t:64} ${v:mapped_outputfile:2} ${v:startmsg:1} ${u:inputBam} ${u:outBam} ${u:printLog} ${u:report} ${u:threads} ${u:tmpprintLog} ${u:var} ]
    turbine::decr_local_file_refcount v:outputfile
    turbine::decr_local_file_refcount v:outLog
    turbine::read_refcount_decr ${u:recalparmsindels} 1
}


proc recalibrateBam-call_foreign-write { v:t:11:1 wfilename:tmprecalLog u:tmprecalLog } {
    # Var: $file v:tmprecalLog VALUE_OF [file:tmprecalLog]
    # Var: $string v:__wfilename:tmprecalLog VALUE_OF [string:__wfilename:tmprecalLog]
    set v:__wfilename:tmprecalLog [ turbine::retrieve_string ${wfilename:tmprecalLog} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:tmprecalLog [ turbine::create_local_file_ref ${v:__wfilename:tmprecalLog} ${tcltmp:init_rc} 1 ]
    turbine::file_write_local v:tmprecalLog ${v:t:11:1}
    turbine::store_file ${u:tmprecalLog} v:tmprecalLog 0
}


proc PrintReads-app-leaf1 { filename:inputFile filename:outputfile:1 t:25 t:27 t:38 t:40 t:42 t:64 v:mapped_outputfile:2 v:startmsg:1 u:inputBam u:outBam u:printLog u:report u:threads u:tmpprintLog u:var } {
    # Var: $string v:javaexe:1 RENAMED [$string:__v:javaexe] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:PrintReads():61:9
    # Var: $string v:gatkjar:1 RENAMED [$string:__v:gatkjar] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:PrintReads():61:9
    # Var: $string v:reference:1 RENAMED [$string:__v:reference] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:PrintReads():61:9
    # Var: $string v:__filename:inputFile:1 RENAMED [$string:__v:__filename:inputFile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:PrintReads():61:9
    # Var: $string v:__filename:recalreport RENAMED [$string:__v:__filename:recalreport] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:PrintReads():61:9
    # Var: $int v:thr:1 RENAMED [$int:__v:thr] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:PrintReads():61:9
    # Var: $string v:__filename:outputfile:1 RENAMED [$string:__v:__filename:outputfile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:PrintReads():61:9
    # Var: $string v:__filename:outLog:1 RENAMED [$string:__v:__filename:outLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:PrintReads():61:9
    # Var: $file v:inputFile:1 RENAMED [$file:__v:inputFile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:PrintReads():61:9
    # Var: $file v:recalreport RENAMED [$file:__v:recalreport] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:PrintReads():61:9
    # Var: $file v:outputfile:1 RENAMED [$file:__v:outputfile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:PrintReads():61:9
    # Var: $file v:outLog:1 RENAMED [$file:__v:outLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:PrintReads():61:9
    # Var: $boolean v:4:1 RENAMED [$boolean:__v:4] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:PrintReads():61:9
    # Var: $int v:t:9:2 VALUE_OF [int:__t:9:2]
    # Var: $string v:t:8:2 VALUE_OF [string:__t:8:2]
    # Var: $string v:endmsg:1 VALUE_OF [string:endmsg:1]
    # Var: $string v:t:11:2 VALUE_OF [string:__t:11:2]
    set v:javaexe:1 [ turbine::retrieve_string ${t:38} CACHED 1 ]
    set v:gatkjar:1 [ turbine::retrieve_string ${t:40} CACHED 1 ]
    set v:reference:1 [ turbine::retrieve_string ${t:42} CACHED 1 ]
    set v:__filename:inputFile:1 [ turbine::retrieve_string ${filename:inputFile} ]
    set v:__filename:recalreport [ turbine::retrieve_string ${t:27} CACHED 1 ]
    set v:thr:1 [ turbine::retrieve_integer ${u:threads} CACHED 1 ]
    set v:__filename:outputfile:1 [ turbine::retrieve_string ${filename:outputfile:1} ]
    set v:__filename:outLog:1 [ turbine::retrieve_string ${t:25} CACHED 1 ]
    set v:inputFile:1 [ turbine::retrieve_file ${u:inputBam} CACHED 2 ]
    set v:recalreport [ turbine::retrieve_file ${u:report} CACHED 1 ]
    if { ${v:mapped_outputfile:2} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:outputfile:1 [ turbine::create_local_file_ref ${v:__filename:outputfile:1} ${tcltmp:init_rc} ${v:mapped_outputfile:2} ]
    set tcltmp:init_rc 2
    set v:outLog:1 [ turbine::create_local_file_ref ${v:__filename:outLog:1} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javaexe:1 "-Xmx16g" "-jar" ${v:gatkjar:1} "-T" "PrintReads" "-R" ${v:reference:1} "-I" ${v:__filename:inputFile:1} "-BQSR" ${v:__filename:recalreport} "-nct" ${v:thr:1} "--out" ${v:__filename:outputfile:1} [ dict create "stderr" ${v:__filename:outLog:1} ] ]
    turbine::exec_external ${v:javaexe:1} [ dict create "stderr" ${v:__filename:outLog:1} ] "-Xmx16g" "-jar" ${v:gatkjar:1} "-T" "PrintReads" "-R" ${v:reference:1} "-I" ${v:__filename:inputFile:1} "-BQSR" ${v:__filename:recalreport} "-nct" ${v:thr:1} "--out" ${v:__filename:outputfile:1}
    set v:4:1 [ expr { ! ${v:mapped_outputfile:2} } ]
    turbine::store_file ${u:outBam} v:outputfile:1 ${v:4:1}
    turbine::rule [ list [ turbine::get_file_td ${u:outBam} ] ] "f:checkBam ${t:64} {${u:var}} {${u:outBam}}"
    turbine::store_file ${u:printLog} v:outLog:1 0
    set v:t:9:2 [ clock seconds ]
    set v:t:8:2 ${v:t:9:2}
    set v:endmsg:1 "PrintReads end\t${v:t:8:2}\n"
    set v:t:11:2 "${v:startmsg:1}${v:endmsg:1}"
    set wfilename:tmpprintLog [ turbine::get_file_path ${u:tmpprintLog} ]
    turbine::rule [ list ${wfilename:tmpprintLog} ] [ list recalibrateBam-call_foreign-write-1 ${v:t:11:2} ${wfilename:tmpprintLog} ${u:tmpprintLog} ]
    turbine::decr_local_file_refcount v:outputfile:1
    turbine::decr_local_file_refcount v:outLog:1
    turbine::file_read_refcount_decr ${u:outBam} 1
}


proc recalibrateBam-call_foreign-write-1 { v:t:11:2 wfilename:tmpprintLog u:tmpprintLog } {
    # Var: $file v:tmpprintLog VALUE_OF [file:tmpprintLog]
    # Var: $string v:__wfilename:tmpprintLog VALUE_OF [string:__wfilename:tmpprintLog]
    set v:__wfilename:tmpprintLog [ turbine::retrieve_string ${wfilename:tmpprintLog} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:tmpprintLog [ turbine::create_local_file_ref ${v:__wfilename:tmpprintLog} ${tcltmp:init_rc} 1 ]
    turbine::file_write_local v:tmpprintLog ${v:t:11:2}
    turbine::store_file ${u:tmpprintLog} v:tmpprintLog 0
}


proc recalibrateBam-optmerged { t:42 t:43 t:46 t:48 t:52 } {
    # Var: $string v:t:43 VALUE_OF [string:__t:43]
    set v:t:43 [ turbine::retrieve_string ${t:43} CACHED 1 ]
    turbine::rule [ list ${t:46} ] [ list recalibrateBam-async_op-strcat ${t:42} ${t:46} ${v:t:43} ]
    turbine::rule [ list ${t:52} ] [ list recalibrateBam-async_op-strcat-1 ${t:48} ${t:52} ${v:t:43} ]
}


proc recalibrateBam-async_op-strcat { t:42 t:46 v:t:43 } {
    # Var: $string v:t:46 VALUE_OF [string:__t:46]
    # Var: $string v:t:42 VALUE_OF [string:__t:42]
    set v:t:46 [ turbine::retrieve_string ${t:46} CACHED 1 ]
    set v:t:42 "${v:t:43}/${v:t:46}"
    turbine::store_string ${t:42} ${v:t:42}
}


proc recalibrateBam-async_op-strcat-1 { t:48 t:52 v:t:43 } {
    # Var: $string v:t:52 VALUE_OF [string:__t:52]
    # Var: $string v:t:48 VALUE_OF [string:__t:48]
    set v:t:52 [ turbine::retrieve_string ${t:52} CACHED 1 ]
    set v:t:48 "${v:t:43}/${v:t:52}"
    turbine::store_string ${t:48} ${v:t:48}
}


proc recalibrateBam-optmerged-1 { t:1 t:23 t:25 t:27 t:29 u:chr u:printLog u:recalLog u:report u:sampleName u:tmpprintLog u:tmprecalLog } {
    turbine::rule [ list ${t:29} ] "recalibrateBam-async_op-strcat-2 ${t:29} {${u:chr}} {${u:sampleName}} {${u:tmpprintLog}} {${u:tmprecalLog}}"
    turbine::rule [ list ${t:1} ] "recalibrateBam-optmerged-2 ${t:1} ${t:23} ${t:25} ${t:27} {${u:chr}} {${u:printLog}} {${u:recalLog}} {${u:report}} {${u:sampleName}}"
}


proc recalibrateBam-async_op-strcat-2 { t:29 u:chr u:sampleName u:tmpprintLog u:tmprecalLog } {
    # Var: $string v:t:29 VALUE_OF [string:__t:29]
    # Var: $string v:tmpLogDir VALUE_OF [string:tmpLogDir]
    # Var: $string v:sampleName:4 VALUE_OF [string:sampleName]
    # Var: $string v:chr:2 VALUE_OF [string:chr]
    # Var: $string v:t:32 VALUE_OF [string:__t:32]
    # Var: $string v:t:35 VALUE_OF [string:__t:35]
    set v:t:29 [ turbine::retrieve_string ${t:29} CACHED 1 ]
    set v:tmpLogDir "${v:t:29}/timinglogs/"
    set v:sampleName:4 [ turbine::retrieve_string ${u:sampleName} CACHED 1 ]
    set v:chr:2 [ turbine::retrieve_string ${u:chr} CACHED 1 ]
    set v:t:32 "${v:tmpLogDir}${v:sampleName:4}.${v:chr:2}_BaseRecalibrator.log"
    set v:t:35 "${v:tmpLogDir}${v:sampleName:4}.${v:chr:2}_PrintReads.log"
    turbine::set_filename_val ${u:tmprecalLog} ${v:t:32}
    turbine::set_filename_val ${u:tmpprintLog} ${v:t:35}
}


proc recalibrateBam-optmerged-2 { t:1 t:23 t:25 t:27 u:chr u:printLog u:recalLog u:report u:sampleName } {
    # Var: $string v:t:1 VALUE_OF [string:__t:1]
    # Var: $string v:sampleName VALUE_OF [string:sampleName]
    # Var: $string v:chr VALUE_OF [string:chr]
    # Var: $string v:prePrefix VALUE_OF [string:prePrefix]
    # Var: $string v:preLogPrefix VALUE_OF [string:preLogPrefix]
    # Var: $string v:prefix VALUE_OF [string:prefix]
    # Var: $string v:t:27 VALUE_OF [string:__t:27]
    # Var: $string v:logPrefix VALUE_OF [string:logPrefix]
    # Var: $string v:t:25 VALUE_OF [string:__t:25]
    # Var: $string v:t:23 VALUE_OF [string:__t:23]
    set v:t:1 [ turbine::retrieve_string ${t:1} CACHED 1 ]
    set v:sampleName [ turbine::retrieve_string ${u:sampleName} CACHED 1 ]
    set v:chr [ turbine::retrieve_string ${u:chr} CACHED 1 ]
    set v:prePrefix "${v:t:1}/${v:sampleName}/realign/${v:sampleName}.wDedups.sorted.${v:chr}"
    set v:preLogPrefix "${v:t:1}/${v:sampleName}/logs/${v:sampleName}.wDedups.sorted.${v:chr}"
    set v:prefix [ turbine::replace_impl ${v:prePrefix} ".." "." 0 ]
    set v:t:27 "${v:prefix}recal_report.grp"
    turbine::store_string ${t:27} ${v:t:27}
    turbine::set_filename_val ${u:report} ${v:t:27}
    set v:logPrefix [ turbine::replace_impl ${v:preLogPrefix} ".." "." 0 ]
    set v:t:25 "${v:logPrefix}_PrintReads.log"
    turbine::store_string ${t:25} ${v:t:25}
    turbine::set_filename_val ${u:printLog} ${v:t:25}
    set v:t:23 "${v:logPrefix}_BaseRecalibrator.log"
    turbine::store_string ${t:23} ${v:t:23}
    turbine::set_filename_val ${u:recalLog} ${v:t:23}
}


proc f:recalibrationWrapper { u:recalibratedbam u:sampleName u:chr u:var u:inputBam u:realparms u:recalparmsindels } {
    turbine::c::log "function: recalibrationWrapper"
    # Var: string t:1 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrationWrapper():191:27
    # Var: string u:prefix /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrationWrapper():193:1
    # Var: string t:10 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrationWrapper():195:5
    lassign [ adlb::multicreate [ list string 2 1 261 ] [ list string 1 1 262 ] [ list string 1 1 263 ] ] t:1 u:prefix t:10
    turbine::c::log "allocated t:1=<${t:1}> u:prefix=<${u:prefix}> t:10=<${t:10}>"
    turbine::file_read_refcount_incr ${u:inputBam} 1
    turbine::read_refcount_incr ${u:chr} 2
    turbine::read_refcount_incr ${u:recalparmsindels} 1
    turbine::file_read_refcount_incr ${u:recalibratedbam} 1
    turbine::read_refcount_incr ${u:var} 4
    turbine::read_refcount_incr ${u:sampleName} 2
    turbine::container_reference ${u:var} "OUTPUTDIR" ${t:1} string
    turbine::container_reference ${u:var} "ANALYSIS" ${t:10} string
    turbine::rule [ list ${t:1} ${u:chr} ${u:sampleName} ] "recalibrationWrapper-async_op-strcat ${t:1} {${u:chr}} ${u:prefix} {${u:sampleName}}"
    turbine::rule [ list ${t:10} ] "recalibrationWrapper-async_op-eq_string ${t:1} ${t:10} {${u:chr}} {${u:inputBam}} ${u:prefix} {${u:realparms}} {${u:recalibratedbam}} {${u:recalparmsindels}} {${u:sampleName}} {${u:var}}"
}


proc recalibrationWrapper-async_op-strcat { t:1 u:chr u:prefix u:sampleName } {
    # Var: $string v:t:1 VALUE_OF [string:__t:1]
    # Var: $string v:sampleName VALUE_OF [string:sampleName]
    # Var: $string v:chr VALUE_OF [string:chr]
    # Var: $string v:prePrefix VALUE_OF [string:prePrefix]
    # Var: $string v:prefix VALUE_OF [string:prefix]
    set v:t:1 [ turbine::retrieve_string ${t:1} CACHED 1 ]
    set v:sampleName [ turbine::retrieve_string ${u:sampleName} CACHED 1 ]
    set v:chr [ turbine::retrieve_string ${u:chr} CACHED 1 ]
    set v:prePrefix "${v:t:1}/${v:sampleName}/realign/${v:sampleName}.${v:chr}"
    set v:prefix [ turbine::replace_impl ${v:prePrefix} ".." "." 0 ]
    turbine::store_string ${u:prefix} ${v:prefix}
}


proc recalibrationWrapper-async_op-eq_string { t:1 t:10 u:chr u:inputBam u:prefix u:realparms u:recalibratedbam u:recalparmsindels u:sampleName u:var } {
    # Var: $string v:t:10 VALUE_OF [string:__t:10]
    # Var: $boolean v:t:9 VALUE_OF [boolean:__t:9]
    set v:t:10 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:t:9 [ string equal ${v:t:10} "VC_REALIGN" ]
    if { ${v:t:9} } {
        # Var: string t:13 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrationWrapper():201:22
        # Var: file u:realignedbam /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrationWrapper():201:37
        # Var: void t:15 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrationWrapper():204:2
        # Var: string t:16 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrationWrapper():204:17
        lassign [ adlb::multicreate [ list string 1 1 264 ] [ list integer 1 1 266 ] [ list string 1 1 267 ] ] t:13 t:15 t:16
        turbine::c::log "allocated t:13=<${t:13}> t:15=<${t:15}> t:16=<${t:16}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 2 1 265 ] ] [ list 1 ] ] u:realignedbam
        turbine::file_read_refcount_incr ${u:inputBam} 1
        turbine::read_refcount_incr ${t:1} 1
        turbine::read_refcount_incr ${u:chr} 2
        turbine::read_refcount_incr ${u:realparms} 1
        turbine::read_refcount_incr ${u:var} 8
        turbine::read_refcount_incr ${u:prefix} 1
        turbine::read_refcount_incr ${u:sampleName} 2
        turbine::container_reference ${u:var} "SAMTOOLSEXE" ${t:16} string
        f:samtools_index ${t:15} ${t:16} ${u:inputBam} -100 "HARD" "RANK"
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:recalibrateBam {${u:recalibratedbam}} {${u:sampleName}} {${u:chr}} {${u:var}} {${u:realignedbam}} {${u:recalparmsindels}}"
        turbine::reset_priority
        turbine::rule [ list ${t:15} ] "recalibrationWrapper-chain1 ${t:1} ${t:13} ${t:15} {${u:chr}} {${u:inputBam}} {${u:realignedbam}} {${u:realparms}} {${u:sampleName}} {${u:var}}"
        turbine::rule [ list ${u:prefix} ] "recalibrationWrapper-async_op-strcat-3 ${t:13} ${u:prefix} {${u:realignedbam}}"
        turbine::read_refcount_decr ${t:16} 1
    } else {
        # Var: void t:18 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrationWrapper():214:2
        # Var: string t:19 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:recalibrationWrapper():214:17
        lassign [ adlb::multicreate [ list integer 1 1 286 ] [ list string 1 1 287 ] ] t:18 t:19
        turbine::c::log "allocated t:18=<${t:18}> t:19=<${t:19}>"
        turbine::container_reference ${u:var} "SAMTOOLSEXE" ${t:19} string
        f:samtools_index ${t:18} ${t:19} ${u:inputBam} -100 "HARD" "RANK"
        turbine::rule [ list ${t:18} ] "recalibrationWrapper-chain2 ${t:18} {${u:chr}} {${u:inputBam}} {${u:recalibratedbam}} {${u:recalparmsindels}} {${u:sampleName}} {${u:var}}"
        turbine::read_refcount_decr ${t:19} 1
    }
    turbine::read_refcount_decr ${u:sampleName} 1
    turbine::read_refcount_decr ${u:prefix} 1
    turbine::read_refcount_decr ${u:var} 1
    turbine::read_refcount_decr ${u:realparms} 1
    turbine::file_read_refcount_decr ${u:recalibratedbam} 1
    turbine::read_refcount_decr ${u:recalparmsindels} 1
    turbine::read_refcount_decr ${t:1} 1
    turbine::read_refcount_decr ${u:chr} 1
    turbine::file_read_refcount_decr ${u:inputBam} 1
}


proc recalibrationWrapper-chain1 { t:1 t:13 t:15 u:chr u:inputBam u:realignedbam u:realparms u:sampleName u:var } {
    # Var: int u:threads RENAMED [int:threads] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():119:1
    # Var: string t:18:1 RENAMED [string:__t:18] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():119:26
    # Var: string t:21 RENAMED [string:__t:21] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():119:54
    # Var: string t:23 RENAMED [string:__t:23] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():122:18
    # Var: file u:targetLog RENAMED [file:targetLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():122:36
    # Var: string t:25 RENAMED [string:__t:25] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():123:19
    # Var: file u:realignLog RENAMED [file:realignLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():123:37
    # Var: string t:27 RENAMED [string:__t:27] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():125:27
    # Var: file u:tmptargetLog RENAMED [file:tmptargetLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():126:61
    # Var: file u:tmprealignLog RENAMED [file:tmprealignLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():127:62
    # Var: string t:36 RENAMED [string:__t:36] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():129:18
    # Var: file u:intervals RENAMED [file:intervals] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():129:33
    # Var: string t:38 RENAMED [string:__t:38] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():132:69
    # Var: string t:40 RENAMED [string:__t:40] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():132:85
    # Var: string t:42 RENAMED [string:__t:42] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():133:8
    # Var: string t:43 RENAMED [string:__t:43] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():133:15
    # Var: string t:46 RENAMED [string:__t:46] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():133:41
    # Var: boolean t:58 RENAMED [boolean:__t:58] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/RealignRecalAndVC.swift:realignBam():140:1
    # Var: $int v:t:4:1:1 VALUE_OF [int:__t:4:1:1]
    # Var: $string v:t:3:1:1 VALUE_OF [string:__t:3:1:1]
    # Var: $string v:startmsg VALUE_OF [string:startmsg]
    # Var: $int v:t:4:2 VALUE_OF [int:__t:4:2]
    # Var: $string v:t:3:2 VALUE_OF [string:__t:3:2]
    # Var: $string v:startmsg:1 VALUE_OF [string:startmsg:1]
    lassign [ adlb::multicreate [ list integer 1 1 268 ] [ list string 1 1 269 ] [ list string 1 1 270 ] [ list string 1 1 271 ] [ list string 1 1 273 ] [ list string 1 1 275 ] [ list string 1 1 278 ] [ list string 1 1 280 ] [ list string 1 1 281 ] [ list string 1 1 282 ] [ list string 1 1 283 ] [ list string 1 1 284 ] [ list integer 0 1 285 ] ] u:threads t:18:1 t:21 t:23 t:25 t:27 t:36 t:38 t:40 t:42 t:43 t:46 t:58
    turbine::c::log "allocated u:threads=<${u:threads}> t:18:1=<${t:18:1}> t:21=<${t:21}> t:23=<${t:23}> t:25=<${t:25}>"
    turbine::c::log "allocated t:27=<${t:27}> t:36=<${t:36}> t:38=<${t:38}> t:40=<${t:40}> t:42=<${t:42}>"
    turbine::c::log "allocated t:43=<${t:43}> t:46=<${t:46}> t:58=<${t:58}>"
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 0 1 272 ] [ list file 0 1 274 ] [ list file 1 1 276 ] [ list file 1 1 277 ] [ list file 1 1 279 ] ] [ list 1 1 1 1 1 ] ] u:targetLog u:realignLog u:tmptargetLog u:tmprealignLog u:intervals
    turbine::container_reference ${u:var} "CORES" ${t:18:1} string
    turbine::container_reference ${u:var} "PROCPERNODE" ${t:21} string
    turbine::container_reference ${u:var} "TMPDIR" ${t:27} string
    turbine::container_reference ${u:var} "JAVAEXE" ${t:38} string
    turbine::container_reference ${u:var} "GATKJAR" ${t:40} string
    turbine::container_reference ${u:var} "REFGENOMEDIR" ${t:43} string
    turbine::container_reference ${u:var} "REFGENOME" ${t:46} string
    set v:t:4:1:1 [ clock seconds ]
    set v:t:3:1:1 ${v:t:4:1:1}
    set v:startmsg "RealignerTargetCreator start\t${v:t:3:1:1}\n"
    set v:t:4:2 [ clock seconds ]
    set v:t:3:2 ${v:t:4:2}
    set v:startmsg:1 "IndelRealigner start\t${v:t:3:2}\n"
    set filename:inputFile [ turbine::get_file_path ${u:inputBam} ]
    turbine::rule [ list ${t:18:1} ${t:21} ] [ list recalibrationWrapper-async_op-parse_int ${filename:inputFile} ${t:13} ${t:18:1} ${t:21} ${t:23} ${t:25} ${t:36} ${t:38} ${t:40} ${t:42} ${t:58} ${v:startmsg} ${v:startmsg:1} ${u:inputBam} ${u:intervals} ${u:realignLog} ${u:realignedbam} ${u:realparms} ${u:targetLog} ${u:threads} ${u:tmprealignLog} ${u:tmptargetLog} ${u:var} ]
    turbine::rule [ list ${t:43} ${t:46} ] "recalibrationWrapper-async_op-strcat-1 ${t:42} ${t:43} ${t:46}"
    turbine::rule [ list ${u:chr} ${u:sampleName} ] "recalibrationWrapper-optmerged ${t:1} ${t:23} ${t:25} ${t:27} ${t:36} {${u:chr}} {${u:intervals}} {${u:realignLog}} {${u:sampleName}} {${u:targetLog}} {${u:tmprealignLog}} {${u:tmptargetLog}}"
    turbine::read_refcount_decr ${t:15} 1
}


proc recalibrationWrapper-async_op-parse_int { filename:inputFile t:13 t:18:1 t:21 t:23 t:25 t:36 t:38 t:40 t:42 t:58 v:startmsg v:startmsg:1 u:inputBam u:intervals u:realignLog u:realignedbam u:realparms u:targetLog u:threads u:tmprealignLog u:tmptargetLog u:var } {
    # Var: $string v:t:21 VALUE_OF [string:__t:21]
    # Var: $int v:t:20:1 VALUE_OF [int:__t:20:1]
    # Var: $string v:t:18:1 VALUE_OF [string:__t:18:1]
    # Var: $int v:t:17:1 VALUE_OF [int:__t:17:1]
    # Var: $int v:threads VALUE_OF [int:threads]
    set v:t:21 [ turbine::retrieve_string ${t:21} CACHED 1 ]
    set v:t:20:1 [ turbine::parse_int_impl ${v:t:21} 10 ]
    set v:t:18:1 [ turbine::retrieve_string ${t:18:1} CACHED 1 ]
    set v:t:17:1 [ turbine::parse_int_impl ${v:t:18:1} 10 ]
    set v:threads [ turbine::divide_integer_impl ${v:t:17:1} ${v:t:20:1} ]
    turbine::store_integer ${u:threads} ${v:threads}
    turbine::rule [ list ${filename:inputFile} ${t:23} ${t:36} ${t:38} ${t:40} ${t:42} [ turbine::get_file_td ${u:inputBam} ] ${u:realparms} ${u:threads} ] [ list RealignerTargetCreator-app-leaf1 ${filename:inputFile} ${t:13} ${t:23} ${t:25} ${t:36} ${t:38} ${t:40} ${t:42} ${t:58} ${v:startmsg} ${v:startmsg:1} ${u:inputBam} ${u:intervals} ${u:realignLog} ${u:realignedbam} ${u:realparms} ${u:targetLog} ${u:threads} ${u:tmprealignLog} ${u:tmptargetLog} ${u:var} ]
}


proc RealignerTargetCreator-app-leaf1 { filename:inputFile t:13 t:23 t:25 t:36 t:38 t:40 t:42 t:58 v:startmsg v:startmsg:1 u:inputBam u:intervals u:realignLog u:realignedbam u:realparms u:targetLog u:threads u:tmprealignLog u:tmptargetLog u:var } {
    # Var: $string v:javaexe RENAMED [$string:__v:javaexe] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:RealignerTargetCreator():20:9
    # Var: $string v:gatkjar RENAMED [$string:__v:gatkjar] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:RealignerTargetCreator():20:9
    # Var: $string v:reference RENAMED [$string:__v:reference] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:RealignerTargetCreator():20:9
    # Var: $string v:__filename:inputFile RENAMED [$string:__v:__filename:inputFile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:RealignerTargetCreator():20:9
    # Var: $string$[int] v:known RENAMED [$string$[int]:__v:known] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:RealignerTargetCreator():20:9
    # Var: $int v:thr RENAMED [$int:__v:thr] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:RealignerTargetCreator():20:9
    # Var: $string v:__filename:outputfile RENAMED [$string:__v:__filename:outputfile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:RealignerTargetCreator():20:9
    # Var: $string v:__filename:outLog RENAMED [$string:__v:__filename:outLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:RealignerTargetCreator():20:9
    # Var: $file v:inputFile RENAMED [$file:__v:inputFile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:RealignerTargetCreator():20:9
    # Var: $file v:outputfile RENAMED [$file:__v:outputfile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:RealignerTargetCreator():20:9
    # Var: $file v:outLog RENAMED [$file:__v:outLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:RealignerTargetCreator():20:9
    # Var: $int v:t:9:1:1 VALUE_OF [int:__t:9:1:1]
    # Var: $string v:t:8:1:1 VALUE_OF [string:__t:8:1:1]
    # Var: $string v:endmsg VALUE_OF [string:endmsg]
    # Var: $string v:t:11:1:1 VALUE_OF [string:__t:11:1:1]
    set v:javaexe [ turbine::retrieve_string ${t:38} ]
    set v:gatkjar [ turbine::retrieve_string ${t:40} ]
    set v:reference [ turbine::retrieve_string ${t:42} ]
    set v:__filename:inputFile [ turbine::retrieve_string ${filename:inputFile} ]
    set v:known [ turbine::unpack_args ${u:realparms} 1 string ]
    set v:thr [ turbine::retrieve_integer ${u:threads} CACHED 1 ]
    set v:__filename:outputfile [ turbine::retrieve_string ${t:36} ]
    set v:__filename:outLog [ turbine::retrieve_string ${t:23} CACHED 1 ]
    set v:inputFile [ turbine::retrieve_file ${u:inputBam} ]
    set tcltmp:init_rc 2
    set v:outputfile [ turbine::create_local_file_ref ${v:__filename:outputfile} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:outLog [ turbine::create_local_file_ref ${v:__filename:outLog} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javaexe "-Xmx8g" "-jar" ${v:gatkjar} "-T" "RealignerTargetCreator" "-R" ${v:reference} "-I" ${v:__filename:inputFile} {*}${v:known} "-nt" ${v:thr} "-o" ${v:__filename:outputfile} [ dict create "stderr" ${v:__filename:outLog} ] ]
    turbine::exec_external ${v:javaexe} [ dict create "stderr" ${v:__filename:outLog} ] "-Xmx8g" "-jar" ${v:gatkjar} "-T" "RealignerTargetCreator" "-R" ${v:reference} "-I" ${v:__filename:inputFile} {*}${v:known} "-nt" ${v:thr} "-o" ${v:__filename:outputfile}
    turbine::store_file ${u:intervals} v:outputfile 0
    turbine::store_file ${u:targetLog} v:outLog 0
    set v:t:9:1:1 [ clock seconds ]
    set v:t:8:1:1 ${v:t:9:1:1}
    set v:endmsg "RealignerTargetCreator end\t${v:t:8:1:1}\n"
    set v:t:11:1:1 "${v:startmsg}${v:endmsg}"
    set wfilename:tmptargetLog [ turbine::get_file_path ${u:tmptargetLog} ]
    turbine::rule [ list ${wfilename:tmptargetLog} ] [ list recalibrationWrapper-call_foreign-write ${v:t:11:1:1} ${wfilename:tmptargetLog} ${u:tmptargetLog} ]
    turbine::rule [ list ${filename:inputFile} ${t:13} ${t:25} ${t:36} ${t:38} ${t:40} ${t:42} [ turbine::get_file_td ${u:inputBam} ] [ turbine::get_file_td ${u:intervals} ] ${u:realparms} ] [ list IndelRealigner-app-leaf1 ${filename:inputFile} ${t:13} ${t:25} ${t:36} ${t:38} ${t:40} ${t:42} ${t:58} ${v:startmsg:1} ${u:inputBam} ${u:intervals} ${u:realignLog} ${u:realignedbam} ${u:realparms} ${u:tmprealignLog} ${u:var} ]
    turbine::decr_local_file_refcount v:outputfile
    turbine::decr_local_file_refcount v:outLog
}


proc recalibrationWrapper-call_foreign-write { v:t:11:1:1 wfilename:tmptargetLog u:tmptargetLog } {
    # Var: $file v:tmptargetLog VALUE_OF [file:tmptargetLog]
    # Var: $string v:__wfilename:tmptargetLog VALUE_OF [string:__wfilename:tmptargetLog]
    set v:__wfilename:tmptargetLog [ turbine::retrieve_string ${wfilename:tmptargetLog} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:tmptargetLog [ turbine::create_local_file_ref ${v:__wfilename:tmptargetLog} ${tcltmp:init_rc} 1 ]
    turbine::file_write_local v:tmptargetLog ${v:t:11:1:1}
    turbine::store_file ${u:tmptargetLog} v:tmptargetLog 0
}


proc IndelRealigner-app-leaf1 { filename:inputFile t:13 t:25 t:36 t:38 t:40 t:42 t:58 v:startmsg:1 u:inputBam u:intervals u:realignLog u:realignedbam u:realparms u:tmprealignLog u:var } {
    # Var: $string v:javaexe:1 RENAMED [$string:__v:javaexe] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:IndelRealigner():33:9
    # Var: $string v:gatkjar:1 RENAMED [$string:__v:gatkjar] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:IndelRealigner():33:9
    # Var: $string v:reference:1 RENAMED [$string:__v:reference] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:IndelRealigner():33:9
    # Var: $string v:__filename:inputFile:1 RENAMED [$string:__v:__filename:inputFile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:IndelRealigner():33:9
    # Var: $string$[int] v:known:1 RENAMED [$string$[int]:__v:known] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:IndelRealigner():33:9
    # Var: $string v:__filename:intervals RENAMED [$string:__v:__filename:intervals] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:IndelRealigner():33:9
    # Var: $string v:__filename:outputfile:1 RENAMED [$string:__v:__filename:outputfile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:IndelRealigner():33:9
    # Var: $string v:__filename:outLog:1 RENAMED [$string:__v:__filename:outLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:IndelRealigner():33:9
    # Var: $file v:inputFile:1 RENAMED [$file:__v:inputFile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:IndelRealigner():33:9
    # Var: $file v:intervals RENAMED [$file:__v:intervals] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:IndelRealigner():33:9
    # Var: $file v:outputfile:1 RENAMED [$file:__v:outputfile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:IndelRealigner():33:9
    # Var: $file v:outLog:1 RENAMED [$file:__v:outLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:IndelRealigner():33:9
    # Var: $int v:t:9:2 VALUE_OF [int:__t:9:2]
    # Var: $string v:t:8:2 VALUE_OF [string:__t:8:2]
    # Var: $string v:endmsg:1 VALUE_OF [string:endmsg:1]
    # Var: $string v:t:11:2 VALUE_OF [string:__t:11:2]
    set v:javaexe:1 [ turbine::retrieve_string ${t:38} CACHED 1 ]
    set v:gatkjar:1 [ turbine::retrieve_string ${t:40} CACHED 1 ]
    set v:reference:1 [ turbine::retrieve_string ${t:42} CACHED 1 ]
    set v:__filename:inputFile:1 [ turbine::retrieve_string ${filename:inputFile} ]
    set v:known:1 [ turbine::unpack_args ${u:realparms} 1 string ]
    set v:__filename:intervals [ turbine::retrieve_string ${t:36} CACHED 1 ]
    set v:__filename:outputfile:1 [ turbine::retrieve_string ${t:13} CACHED 1 ]
    set v:__filename:outLog:1 [ turbine::retrieve_string ${t:25} CACHED 1 ]
    set v:inputFile:1 [ turbine::retrieve_file ${u:inputBam} CACHED 2 ]
    set v:intervals [ turbine::retrieve_file ${u:intervals} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:1 [ turbine::create_local_file_ref ${v:__filename:outputfile:1} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:outLog:1 [ turbine::create_local_file_ref ${v:__filename:outLog:1} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javaexe:1 "-Xmx8g" "-jar" ${v:gatkjar:1} "-T" "IndelRealigner" "-R" ${v:reference:1} "-I" ${v:__filename:inputFile:1} {*}${v:known:1} "--targetIntervals" ${v:__filename:intervals} "-o" ${v:__filename:outputfile:1} [ dict create "stderr" ${v:__filename:outLog:1} ] ]
    turbine::exec_external ${v:javaexe:1} [ dict create "stderr" ${v:__filename:outLog:1} ] "-Xmx8g" "-jar" ${v:gatkjar:1} "-T" "IndelRealigner" "-R" ${v:reference:1} "-I" ${v:__filename:inputFile:1} {*}${v:known:1} "--targetIntervals" ${v:__filename:intervals} "-o" ${v:__filename:outputfile:1}
    turbine::store_file ${u:realignedbam} v:outputfile:1 0
    turbine::rule [ list [ turbine::get_file_td ${u:realignedbam} ] ] "f:checkBam ${t:58} {${u:var}} {${u:realignedbam}}"
    turbine::store_file ${u:realignLog} v:outLog:1 0
    set v:t:9:2 [ clock seconds ]
    set v:t:8:2 ${v:t:9:2}
    set v:endmsg:1 "IndelRealigner end\t${v:t:8:2}\n"
    set v:t:11:2 "${v:startmsg:1}${v:endmsg:1}"
    set wfilename:tmprealignLog [ turbine::get_file_path ${u:tmprealignLog} ]
    turbine::rule [ list ${wfilename:tmprealignLog} ] [ list recalibrationWrapper-call_foreign-write-1 ${v:t:11:2} ${wfilename:tmprealignLog} ${u:tmprealignLog} ]
    turbine::decr_local_file_refcount v:outputfile:1
    turbine::decr_local_file_refcount v:outLog:1
    turbine::read_refcount_decr ${u:realparms} 1
}


proc recalibrationWrapper-call_foreign-write-1 { v:t:11:2 wfilename:tmprealignLog u:tmprealignLog } {
    # Var: $file v:tmprealignLog VALUE_OF [file:tmprealignLog]
    # Var: $string v:__wfilename:tmprealignLog VALUE_OF [string:__wfilename:tmprealignLog]
    set v:__wfilename:tmprealignLog [ turbine::retrieve_string ${wfilename:tmprealignLog} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:tmprealignLog [ turbine::create_local_file_ref ${v:__wfilename:tmprealignLog} ${tcltmp:init_rc} 1 ]
    turbine::file_write_local v:tmprealignLog ${v:t:11:2}
    turbine::store_file ${u:tmprealignLog} v:tmprealignLog 0
}


proc recalibrationWrapper-async_op-strcat-1 { t:42 t:43 t:46 } {
    # Var: $string v:t:43 VALUE_OF [string:__t:43]
    # Var: $string v:t:46 VALUE_OF [string:__t:46]
    # Var: $string v:t:42 VALUE_OF [string:__t:42]
    set v:t:43 [ turbine::retrieve_string ${t:43} CACHED 1 ]
    set v:t:46 [ turbine::retrieve_string ${t:46} CACHED 1 ]
    set v:t:42 "${v:t:43}/${v:t:46}"
    turbine::store_string ${t:42} ${v:t:42}
}


proc recalibrationWrapper-optmerged { t:1 t:23 t:25 t:27 t:36 u:chr u:intervals u:realignLog u:sampleName u:targetLog u:tmprealignLog u:tmptargetLog } {
    turbine::rule [ list ${t:27} ] "recalibrationWrapper-async_op-strcat-2 ${t:27} {${u:chr}} {${u:sampleName}} {${u:tmprealignLog}} {${u:tmptargetLog}}"
    turbine::rule [ list ${t:1} ] "recalibrationWrapper-optmerged-1 ${t:1} ${t:23} ${t:25} ${t:36} {${u:chr}} {${u:intervals}} {${u:realignLog}} {${u:sampleName}} {${u:targetLog}}"
}


proc recalibrationWrapper-async_op-strcat-2 { t:27 u:chr u:sampleName u:tmprealignLog u:tmptargetLog } {
    # Var: $string v:t:27 VALUE_OF [string:__t:27]
    # Var: $string v:tmpLogDir VALUE_OF [string:tmpLogDir]
    # Var: $string v:sampleName:7 VALUE_OF [string:sampleName]
    # Var: $string v:chr:4 VALUE_OF [string:chr]
    # Var: $string v:t:33 VALUE_OF [string:__t:33]
    # Var: $string v:t:30 VALUE_OF [string:__t:30]
    set v:t:27 [ turbine::retrieve_string ${t:27} CACHED 1 ]
    set v:tmpLogDir "${v:t:27}/timinglogs/"
    set v:sampleName:7 [ turbine::retrieve_string ${u:sampleName} CACHED 1 ]
    set v:chr:4 [ turbine::retrieve_string ${u:chr} CACHED 1 ]
    set v:t:33 "${v:tmpLogDir}${v:sampleName:7}.${v:chr:4}_IndelRealigner.log"
    set v:t:30 "${v:tmpLogDir}${v:sampleName:7}.${v:chr:4}_RealignTargetCreator.log"
    turbine::set_filename_val ${u:tmprealignLog} ${v:t:33}
    turbine::set_filename_val ${u:tmptargetLog} ${v:t:30}
}


proc recalibrationWrapper-optmerged-1 { t:1 t:23 t:25 t:36 u:chr u:intervals u:realignLog u:sampleName u:targetLog } {
    # Var: $string v:t:1:1 VALUE_OF [string:__t:1]
    # Var: $string v:sampleName:2 VALUE_OF [string:sampleName]
    # Var: $string v:chr:1 VALUE_OF [string:chr]
    # Var: $string v:prePrefix:1:1 VALUE_OF [string:prePrefix:1]
    # Var: $string v:preLogPrefix VALUE_OF [string:preLogPrefix]
    # Var: $string v:prefix:1:1 VALUE_OF [string:prefix:1]
    # Var: $string v:t:36 VALUE_OF [string:__t:36]
    # Var: $string v:logPrefix VALUE_OF [string:logPrefix]
    # Var: $string v:t:23 VALUE_OF [string:__t:23]
    # Var: $string v:t:25 VALUE_OF [string:__t:25]
    set v:t:1:1 [ turbine::retrieve_string ${t:1} CACHED 1 ]
    set v:sampleName:2 [ turbine::retrieve_string ${u:sampleName} CACHED 1 ]
    set v:chr:1 [ turbine::retrieve_string ${u:chr} CACHED 1 ]
    set v:prePrefix:1:1 "${v:t:1:1}/${v:sampleName:2}/realign/${v:sampleName:2}.wDedups.sorted.${v:chr:1}"
    set v:preLogPrefix "${v:t:1:1}/${v:sampleName:2}/logs/${v:sampleName:2}.wDedups.sorted.${v:chr:1}"
    set v:prefix:1:1 [ turbine::replace_impl ${v:prePrefix:1:1} ".." "." 0 ]
    set v:t:36 "${v:prefix:1:1}.realignTargetCreator.intervals"
    turbine::store_string ${t:36} ${v:t:36}
    turbine::set_filename_val ${u:intervals} ${v:t:36}
    set v:logPrefix [ turbine::replace_impl ${v:preLogPrefix} ".." "." 0 ]
    set v:t:23 "${v:logPrefix}_RealignTargetCreator.log"
    turbine::store_string ${t:23} ${v:t:23}
    turbine::set_filename_val ${u:targetLog} ${v:t:23}
    set v:t:25 "${v:logPrefix}_IndelRealigner.log"
    turbine::store_string ${t:25} ${v:t:25}
    turbine::set_filename_val ${u:realignLog} ${v:t:25}
}


proc recalibrationWrapper-async_op-strcat-3 { t:13 u:prefix u:realignedbam } {
    # Var: $string v:prefix:1 VALUE_OF [string:prefix]
    # Var: $string v:t:13 VALUE_OF [string:__t:13]
    set v:prefix:1 [ turbine::retrieve_string ${u:prefix} CACHED 1 ]
    set v:t:13 "${v:prefix:1}.realigned.bam"
    turbine::store_string ${t:13} ${v:t:13}
    turbine::set_filename_val ${u:realignedbam} ${v:t:13}
}


proc recalibrationWrapper-chain2 { t:18 u:chr u:inputBam u:recalibratedbam u:recalparmsindels u:sampleName u:var } {
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:recalibrateBam {${u:recalibratedbam}} {${u:sampleName}} {${u:chr}} {${u:var}} {${u:inputBam}} {${u:recalparmsindels}}"
    turbine::reset_priority
    turbine::read_refcount_decr ${t:18} 1
}


proc f:samtools_index { u:signal u:samtoolsdir u:inputFilename v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: samtools_index"
    turbine::file_read_refcount_incr ${u:inputFilename} 2
    turbine::read_refcount_incr ${u:samtoolsdir} 1
    set filename:inputFilename [ turbine::get_file_path ${u:inputFilename} ]
    turbine::rule [ list ${filename:inputFilename} [ turbine::get_file_td ${u:inputFilename} ] ${u:samtoolsdir} ] "samtools_index-app-leaf1 {${filename:inputFilename}} {${u:inputFilename}} {${u:samtoolsdir}} {${u:signal}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc samtools_index-app-leaf1 { filename:inputFilename u:inputFilename u:samtoolsdir u:signal } {
    # Var: $string v:samtoolsdir VALUE_OF [string:samtoolsdir] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:samtools_index():7:21
    # Var: $string v:__filename:inputFilename VALUE_OF [string:__filename:inputFilename] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:samtools_index():7:21
    # Var: $file v:inputFilename VALUE_OF [file:inputFilename] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:samtools_index():7:21
    # Var: $void v:signal VALUE_OF [void:signal] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/realign_varcal.swift:samtools_index():7:21
    set v:samtoolsdir [ turbine::retrieve_string ${u:samtoolsdir} CACHED 1 ]
    set v:__filename:inputFilename [ turbine::retrieve_string ${filename:inputFilename} ]
    set v:inputFilename [ turbine::retrieve_file ${u:inputFilename} CACHED 2 ]
    turbine::c::log [ list exec: __v:samtoolsdir "index" ${v:__filename:inputFilename} [ dict create ] ]
    turbine::exec_external ${v:samtoolsdir} [ dict create ] "index" ${v:__filename:inputFilename}
    turbine::store_void ${u:signal}
}


proc f:jointGenotypingMain { u:inputVCFs u:vars u:timeLog } {
    turbine::c::log "function: jointGenotypingMain"
    # Var: string t:2 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/JointGenotyping.swift:jointGenotypingMain():38:5
    lassign [ adlb::multicreate [ list string 1 1 288 ] ] t:2
    turbine::c::log "allocated t:2=<${t:2}>"
    turbine::read_refcount_incr ${u:vars} 1
    turbine::container_reference ${u:vars} "JOINT_GENOTYPING_STAGE" ${t:2} string
    turbine::rule [ list ${t:2} ] "jointGenotypingMain-async_op-eq_string ${t:2} {${u:inputVCFs}} {${u:timeLog}} {${u:vars}}"
}


proc jointGenotypingMain-async_op-eq_string { t:2 u:inputVCFs u:timeLog u:vars } {
    # Var: $string v:t:2 VALUE_OF [string:__t:2]
    # Var: $boolean v:t:1 VALUE_OF [boolean:__t:1]
    set v:t:2 [ turbine::retrieve_string ${t:2} CACHED 1 ]
    set v:t:1 [ string equal ${v:t:2} "Y" ]
    if { ${v:t:1} } {
        # Var: string t:6 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/JointGenotyping.swift:jointGenotypingMain():41:25
        # Var: string t:9 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/JointGenotyping.swift:jointGenotypingMain():41:49
        # Var: file u:jointVCF /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/JointGenotyping.swift:jointGenotypingMain():41:73
        # Var: file u:jointLog /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/JointGenotyping.swift:jointGenotypingMain():44:73
        # Var: string t:27 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/JointGenotyping.swift:jointGenotypingMain():47:28
        # Var: file u:tmpjointLog /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/JointGenotyping.swift:jointGenotypingMain():48:39
        # Var: string[int] u:variantSampleArray /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/JointGenotyping.swift:jointGenotypingMain():51:2
        # Var: string t:36 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/JointGenotyping.swift:jointGenotypingMain():65:58
        # Var: string t:38 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/JointGenotyping.swift:jointGenotypingMain():65:75
        # Var: string t:40 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/JointGenotyping.swift:jointGenotypingMain():65:92
        # Var: string t:41 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/JointGenotyping.swift:jointGenotypingMain():65:99
        # Var: string t:44 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/JointGenotyping.swift:jointGenotypingMain():66:14
        # Var: string t:46 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/JointGenotyping.swift:jointGenotypingMain():66:54
        # Var: $int v:t:4:1 VALUE_OF [int:__t:4:1]
        # Var: $string v:t:3:1 VALUE_OF [string:__t:3:1]
        # Var: $string v:startmsg VALUE_OF [string:startmsg]
        lassign [ adlb::multicreate [ list string 1 1 289 ] [ list string 1 1 290 ] [ list string 1 1 293 ] [ list container integer string 1 1 295 ] [ list string 1 1 296 ] [ list string 1 1 297 ] [ list string 1 1 298 ] [ list string 1 1 299 ] [ list string 1 1 300 ] [ list string 1 1 301 ] ] t:6 t:9 t:27 u:variantSampleArray t:36 t:38 t:40 t:41 t:44 t:46
        turbine::c::log "allocated t:6=<${t:6}> t:9=<${t:9}> t:27=<${t:27}> u:variantSampleArray=<${u:variantSampleArray}> t:36=<${t:36}>"
        turbine::c::log "allocated t:38=<${t:38}> t:40=<${t:40}> t:41=<${t:41}> t:44=<${t:44}> t:46=<${t:46}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 0 1 291 ] [ list file 0 1 292 ] [ list file 1 1 294 ] ] [ list 1 1 1 ] ] u:jointVCF u:jointLog u:tmpjointLog
        turbine::read_refcount_incr ${u:inputVCFs} 1
        turbine::read_refcount_incr ${u:vars} 8
        turbine::file_read_refcount_incr ${u:timeLog} 1
        turbine::container_reference ${u:vars} "OUTPUTDIR" ${t:6} string
        turbine::container_reference ${u:vars} "DELIVERYFOLDER" ${t:9} string
        turbine::container_reference ${u:vars} "TMPDIR" ${t:27} string
        turbine::container_reference ${u:vars} "JAVAEXE" ${t:36} string
        turbine::container_reference ${u:vars} "GATKJAR" ${t:38} string
        turbine::container_reference ${u:vars} "REFGENOMEDIR" ${t:41} string
        turbine::container_reference ${u:vars} "REFGENOME" ${t:44} string
        turbine::container_reference ${u:vars} "CORES" ${t:46} string
        set v:t:4:1 [ clock seconds ]
        set v:t:3:1 ${v:t:4:1}
        set v:startmsg "GenotypeGVCFs start\t${v:t:3:1}\n"
        turbine::rule [ list ${u:inputVCFs} ] "jointGenotypingMain-foreach-wait1 {${u:inputVCFs}} ${u:variantSampleArray}"
        turbine::rule [ list ${t:27} ] "jointGenotypingMain-async_op-strcat ${t:27} {${u:tmpjointLog}}"
        turbine::rule [ list ${t:41} ${t:44} ] "jointGenotypingMain-async_op-strcat-1 ${t:40} ${t:41} ${t:44}"
        turbine::rule [ list ${t:6} ${t:9} ] [ list jointGenotypingMain-optmerged ${t:36} ${t:38} ${t:40} ${t:46} ${t:6} ${t:9} ${v:startmsg} ${u:jointLog} ${u:jointVCF} ${u:timeLog} ${u:tmpjointLog} ${u:variantSampleArray} ]
    }
    turbine::file_read_refcount_decr ${u:timeLog} 1
    turbine::read_refcount_decr ${u:vars} 1
    turbine::read_refcount_decr ${u:inputVCFs} 1
}


proc jointGenotypingMain-foreach-wait1 { u:inputVCFs u:variantSampleArray } {
    set tcltmp:container_sz [ adlb::enumerate ${u:inputVCFs} count all 0 ]
    set tcltmp:iters ${tcltmp:container_sz}
    turbine::read_refcount_incr ${u:inputVCFs} [ expr { ${tcltmp:iters} - 1 } ]
    adlb::write_refcount_incr ${u:variantSampleArray} [ expr { ${tcltmp:iters} - 1 } ]
    jointGenotypingMain-foreach1:outer ${u:variantSampleArray} ${u:inputVCFs} 0 [ expr { ${tcltmp:container_sz} - 1 } ] 1
}


proc jointGenotypingMain-foreach1:outer { u:variantSampleArray u:inputVCFs tcltmp:lo tcltmp:hi tcltmp:inc } {
    if { [ expr { ${tcltmp:lo} > ${tcltmp:hi} } ] } {
        return
    }
    while {1} {
        set tcltmp:itersleft [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
        if { [ expr { ${tcltmp:itersleft} <= 64 } ] } {
            jointGenotypingMain-foreach1:inner ${u:variantSampleArray} ${u:inputVCFs} ${tcltmp:lo} ${tcltmp:hi} ${tcltmp:inc}
            return
        } else {
            set tcltmp:skip [ expr { ${tcltmp:inc} * max(64,((${tcltmp:itersleft} - 1) / 16) + 1) } ]
            for { set tcltmp:splitstart [ expr { ${tcltmp:lo} + ${tcltmp:skip} } ] } { ${tcltmp:splitstart} <= ${tcltmp:hi} } { incr tcltmp:splitstart ${tcltmp:skip} } {
                set tcltmp:splitend [ expr { min(${tcltmp:hi},${tcltmp:splitstart} + ${tcltmp:skip} - 1) } ]
                set tcltmp:prio [ turbine::get_priority ]
                turbine::set_priority ${tcltmp:prio}
                adlb::spawn 0 "jointGenotypingMain-foreach1:outer ${u:variantSampleArray} {${u:inputVCFs}} ${tcltmp:splitstart} ${tcltmp:splitend} ${tcltmp:inc}"
                turbine::reset_priority
            }
            set tcltmp:hi [ expr { ${tcltmp:lo} + ${tcltmp:skip} - 1 } ]
        }
    }
}


proc jointGenotypingMain-foreach1:inner { u:variantSampleArray u:inputVCFs tcltmp:lo tcltmp:hi tcltmp:inc } {
    set tcltmp:splitlen [ expr { ${tcltmp:hi} - ${tcltmp:lo} + 1 } ]
    set tcltmp:contents [ adlb::enumerate ${u:inputVCFs} dict ${tcltmp:splitlen} ${tcltmp:lo} ]
    dict for {v:index u:sampleVCF} ${tcltmp:contents} {
        # Var: $int v:varFlagPos VALUE_OF [int:varFlagPos]
        # Var: $int v:namePos VALUE_OF [int:namePos]
        turbine::file_read_refcount_incr ${u:sampleVCF} 1
        set v:varFlagPos [ expr { ${v:index} * 2 } ]
        set v:namePos [ expr { ${v:varFlagPos} + 1 } ]
        turbine::container_insert ${u:variantSampleArray} ${v:varFlagPos} "--variant" string 0
        set optf:sampleVCF [ turbine::get_file_path ${u:sampleVCF} ]
        turbine::rule [ list ${optf:sampleVCF} ] "jointGenotypingMain-arr_copy_in_imm {${optf:sampleVCF}} ${v:namePos} ${u:variantSampleArray}"
    }
    set tcltmp:iters [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
    turbine::read_refcount_decr ${u:inputVCFs} [ expr { ${tcltmp:iters} } ]
}


proc jointGenotypingMain-arr_copy_in_imm { optf:sampleVCF v:namePos u:variantSampleArray } {
    # Var: $string v:of:sampleVCF VALUE_OF [string:__of:sampleVCF]
    set v:of:sampleVCF [ turbine::retrieve_string ${optf:sampleVCF} CACHED 1 ]
    turbine::container_insert ${u:variantSampleArray} ${v:namePos} ${v:of:sampleVCF} string 1
}


proc jointGenotypingMain-async_op-strcat { t:27 u:tmpjointLog } {
    # Var: $string v:t:27 VALUE_OF [string:__t:27]
    # Var: $string v:tmpLogDir VALUE_OF [string:tmpLogDir]
    # Var: $string v:t:30 VALUE_OF [string:__t:30]
    set v:t:27 [ turbine::retrieve_string ${t:27} CACHED 1 ]
    set v:tmpLogDir "${v:t:27}/timinglogs/"
    set v:t:30 "${v:tmpLogDir}jointVCF.log"
    turbine::set_filename_val ${u:tmpjointLog} ${v:t:30}
}


proc jointGenotypingMain-async_op-strcat-1 { t:40 t:41 t:44 } {
    # Var: $string v:t:41 VALUE_OF [string:__t:41]
    # Var: $string v:t:44 VALUE_OF [string:__t:44]
    # Var: $string v:t:40 VALUE_OF [string:__t:40]
    set v:t:41 [ turbine::retrieve_string ${t:41} CACHED 1 ]
    set v:t:44 [ turbine::retrieve_string ${t:44} CACHED 1 ]
    set v:t:40 "${v:t:41}/${v:t:44}"
    turbine::store_string ${t:40} ${v:t:40}
}


proc jointGenotypingMain-optmerged { t:36 t:38 t:40 t:46 t:6 t:9 v:startmsg u:jointLog u:jointVCF u:timeLog u:tmpjointLog u:variantSampleArray } {
    # Var: $string v:t:6 VALUE_OF [string:__t:6]
    # Var: $string v:t:9 VALUE_OF [string:__t:9]
    # Var: $string v:t:5 VALUE_OF [string:__t:5]
    # Var: $string v:t:12 VALUE_OF [string:__t:12]
    # Var: $string v:t:20 VALUE_OF [string:__t:20]
    set v:t:6 [ turbine::retrieve_string ${t:6} CACHED 1 ]
    set v:t:9 [ turbine::retrieve_string ${t:9} CACHED 1 ]
    set v:t:5 "${v:t:6}/${v:t:9}/jointVCFs/jointVCFcalled.vcf"
    set v:t:12 "${v:t:6}/${v:t:9}/jointVCFs/jointVCF.log"
    set v:t:20 "${v:t:6}/${v:t:9}/jointVCFs"
    turbine::set_filename_val ${u:jointVCF} ${v:t:5}
    turbine::set_filename_val ${u:jointLog} ${v:t:12}
    turbine::rule [ list ${t:36} ${t:38} ${t:40} ${t:46} ${u:variantSampleArray} ] [ list GenotypeGVCFs_logged-chain1 ${t:36} ${t:38} ${t:40} ${t:46} ${v:startmsg} ${v:t:12} ${v:t:5} ${u:jointLog} ${u:jointVCF} ${u:timeLog} ${u:tmpjointLog} ${u:variantSampleArray} ]
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list mkdir-app-leaf1-6 ${v:t:20} ]
    turbine::reset_priority
}


proc GenotypeGVCFs_logged-chain1 { t:36 t:38 t:40 t:46 v:startmsg v:t:12 v:t:5 u:jointLog u:jointVCF u:timeLog u:tmpjointLog u:variantSampleArray } {
    # Var: $string v:javaexe RENAMED [$string:__v:javaexe] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/joint_vcf.swift:GenotypeGVCFs():3:125
    # Var: $string v:gatkjar RENAMED [$string:__v:gatkjar] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/joint_vcf.swift:GenotypeGVCFs():3:125
    # Var: $string v:reference RENAMED [$string:__v:reference] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/joint_vcf.swift:GenotypeGVCFs():3:125
    # Var: $string$[int] v:variants RENAMED [$string$[int]:__v:variants] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/joint_vcf.swift:GenotypeGVCFs():3:125
    # Var: $string v:threads RENAMED [$string:__v:threads] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/joint_vcf.swift:GenotypeGVCFs():3:125
    # Var: $file v:outputfile RENAMED [$file:__v:outputfile] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/joint_vcf.swift:GenotypeGVCFs():3:125
    # Var: $file v:outLog RENAMED [$file:__v:outLog] /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/bioapps/joint_vcf.swift:GenotypeGVCFs():3:125
    # Var: $int v:t:9:1 VALUE_OF [int:__t:9:1]
    # Var: $string v:t:8:1 VALUE_OF [string:__t:8:1]
    # Var: $string v:endmsg VALUE_OF [string:endmsg]
    # Var: $string v:t:11:1 VALUE_OF [string:__t:11:1]
    set v:javaexe [ turbine::retrieve_string ${t:36} CACHED 1 ]
    set v:gatkjar [ turbine::retrieve_string ${t:38} CACHED 1 ]
    set v:reference [ turbine::retrieve_string ${t:40} CACHED 1 ]
    set v:variants [ turbine::unpack_args ${u:variantSampleArray} 1 string ]
    set v:threads [ turbine::retrieve_string ${t:46} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile [ turbine::create_local_file_ref ${v:t:5} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:outLog [ turbine::create_local_file_ref ${v:t:12} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javaexe "-Xmx8g" "-jar" ${v:gatkjar} "-T" "GenotypeGVCFs" "-R" ${v:reference} {*}${v:variants} "-o" ${v:t:5} "-nt" ${v:threads} [ dict create "stderr" ${v:t:12} ] ]
    turbine::exec_external ${v:javaexe} [ dict create "stderr" ${v:t:12} ] "-Xmx8g" "-jar" ${v:gatkjar} "-T" "GenotypeGVCFs" "-R" ${v:reference} {*}${v:variants} "-o" ${v:t:5} "-nt" ${v:threads}
    turbine::store_file ${u:jointVCF} v:outputfile 0
    turbine::store_file ${u:jointLog} v:outLog 0
    set v:t:9:1 [ clock seconds ]
    set v:t:8:1 ${v:t:9:1}
    set v:endmsg "GenotypeGVCFs end\t${v:t:8:1}\n"
    set v:t:11:1 "${v:startmsg}${v:endmsg}"
    set wfilename:tmpjointLog [ turbine::get_file_path ${u:tmpjointLog} ]
    turbine::rule [ list ${wfilename:tmpjointLog} ] [ list jointGenotypingMain-call_foreign-write ${v:t:11:1} ${wfilename:tmpjointLog} ${u:timeLog} ${u:tmpjointLog} ]
    turbine::decr_local_file_refcount v:outputfile
    turbine::decr_local_file_refcount v:outLog
    turbine::read_refcount_decr ${u:variantSampleArray} 1
}


proc jointGenotypingMain-call_foreign-write { v:t:11:1 wfilename:tmpjointLog u:timeLog u:tmpjointLog } {
    # Var: string[string] u:variables /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/VariantCalling.swift:70:0
    global u:variables
    # Var: $file v:tmpjointLog VALUE_OF [file:tmpjointLog]
    # Var: $string v:__wfilename:tmpjointLog VALUE_OF [string:__wfilename:tmpjointLog]
    # Var: string t:48 EXPR_TEMPORARY /home/azza/swift-project/src/nw_code/Swift-T-Variant-Calling/src/JointGenotyping.swift:jointGenotypingMain():68:10
    lassign [ adlb::multicreate [ list string 1 1 302 ] ] t:48
    turbine::c::log "allocated t:48=<${t:48}>"
    set v:__wfilename:tmpjointLog [ turbine::retrieve_string ${wfilename:tmpjointLog} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:tmpjointLog [ turbine::create_local_file_ref ${v:__wfilename:tmpjointLog} ${tcltmp:init_rc} 1 ]
    turbine::file_write_local v:tmpjointLog ${v:t:11:1}
    turbine::store_file ${u:tmpjointLog} v:tmpjointLog 0
    turbine::container_reference ${u:variables} "TMPDIR" ${t:48} string
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:logging ${t:48} {${u:timeLog}}"
    turbine::reset_priority
}


proc mkdir-app-leaf1-6 { v:t:20 } {
    # Var: $void v:v RENAMED [$void:__v:v] /usr/src/swift-t/swift-t-1.2/turbine/export/unix.swift:mkdir():65:15
    turbine::c::log [ list exec: "mkdir" "-p" ${v:t:20} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:t:20}
}

turbine::defaults
turbine::declare_custom_work_types COASTER
turbine::init $servers "Swift"
turbine::enable_read_refcount
adlb::declare_struct_type 16 s:location [ list "rank" integer "strictness" string "accuracy" string ]
turbine::check_constants "WORKER\[WORKER\]" ${turbine::WORK_TASK} 0 "CONTROL" ${turbine::WORK_TASK} 0 "ADLB_RANK_ANY" ${adlb::RANK_ANY} -100
lassign [ turbine::declare_globals [ list "u:variables" ] [ list [ list container string string 1 1 303 ] ] ] u:variables
adlb::add_debug_symbol 1 "__c:s_-2" ""
adlb::add_debug_symbol 2 "__c:s__vcf-1" ""
adlb::add_debug_symbol 3 "__c:s_sknownSite" ""
adlb::add_debug_symbol 4 "__c:s_sknown_g" ""
adlb::add_debug_symbol 5 "__t:7" "VariantCalling:77:33"
adlb::add_debug_symbol 6 "__t:9" "VariantCalling:92:18"
adlb::add_debug_symbol 7 "__t:10" "VariantCalling:92:25"
adlb::add_debug_symbol 8 "__t:13" "VariantCalling:92:54"
adlb::add_debug_symbol 9 "__t:69" "VariantCalling:120:4"
adlb::add_debug_symbol 10 "__t:81" "VariantCalling:123:4"
adlb::add_debug_symbol 11 "docSampleInfo" "VariantCalling:104:32"
adlb::add_debug_symbol 12 "failureLog" "VariantCalling:92:83"
adlb::add_debug_symbol 13 "timingLog" "VariantCalling:93:82"
adlb::add_debug_symbol 14 "configFile" "VariantCalling:66:0"
adlb::add_debug_symbol 15 "sampleInfoFile" "VariantCalling:77:0"
adlb::add_debug_symbol 16 "docRunfile" "VariantCalling:100:109"
adlb::add_debug_symbol 17 "alignDedupBams" "VariantCalling:112:0"
adlb::add_debug_symbol 18 "__t:3:5" "AlignAndDedup:alignDedupMain():204:7"
adlb::add_debug_symbol 19 "__t:5:5" "AlignAndDedup:alignDedupMain():204:25"
adlb::add_debug_symbol 20 "__t:7:5" "AlignAndDedup:alignDedupMain():204:67"
adlb::add_debug_symbol 21 "__t:25:5" "AlignAndDedup:alignDedupMain():219:28"
adlb::add_debug_symbol 22 "__t:28:5" "AlignAndDedup:alignDedupMain():221:32"
adlb::add_debug_symbol 23 "tmpLogDir:1" "AlignAndDedup:alignDedupMain():219:2"
adlb::add_debug_symbol 24 "keyValuePair" "generalfunctions.general:getConfigVariables():43:2"
adlb::add_debug_symbol 25 "__t:97" "VariantCalling:__entry():127:5"
adlb::add_debug_symbol 26 "splitBams" "VariantCalling:__entry():134:2"
adlb::add_debug_symbol 27 "__t:119" "VariantCalling:__entry():136:6"
adlb::add_debug_symbol 28 "__t:1:3" "SplitByChr:splitByChrMain():68:26"
adlb::add_debug_symbol 29 "__t:20:3" "SplitByChr:splitByChrMain():84:31"
adlb::add_debug_symbol 30 "outputName:1" "SplitByChr:splitByChrMain():80:3"
adlb::add_debug_symbol 31 "chrDedupSortedBam" "SplitByChr:splitByChrMain():93:29"
adlb::add_debug_symbol 32 "threads" "SplitByChr:splitByChrMain():97:4"
adlb::add_debug_symbol 33 "__t:26:3" "SplitByChr:splitByChrMain():97:31"
adlb::add_debug_symbol 34 "__t:29:3" "SplitByChr:splitByChrMain():97:60"
adlb::add_debug_symbol 35 "__t:32:3" "SplitByChr:splitByChrMain():99:38"
adlb::add_debug_symbol 36 "__t:34:3" "SplitByChr:splitByChrMain():100:20"
adlb::add_debug_symbol 37 "__t:37:3" "SplitByChr:splitByChrMain():104:11"
adlb::add_debug_symbol 38 "message:1" "SplitByChr:splitByChrMain():108:5"
adlb::add_debug_symbol 39 "__t:41:3" "SplitByChr:splitByChrMain():112:5"
adlb::add_debug_symbol 40 "__t:42:3" "SplitByChr:splitByChrMain():112:12"
adlb::add_debug_symbol 41 "__t:53:3" "SplitByChr:splitByChrMain():129:16"
adlb::add_debug_symbol 42 "m:1" "SplitByChr:splitByChrMain():132:5"
adlb::add_debug_symbol 43 "__t:57:3" "SplitByChr:splitByChrMain():135:5"
adlb::add_debug_symbol 44 "splitVCFs" "VariantCalling:__entry():146:3"
adlb::add_debug_symbol 45 "__t:142" "VariantCalling:__entry():149:7"
adlb::add_debug_symbol 46 "__t:45:2" "RealignRecalAndVC:VCSplitMain():375:24"
adlb::add_debug_symbol 47 "__t:49:2" "RealignRecalAndVC:VCSplitMain():376:24"
adlb::add_debug_symbol 48 "__t:53:2" "RealignRecalAndVC:VCSplitMain():377:24"
adlb::add_debug_symbol 49 "__t:57:2" "RealignRecalAndVC:VCSplitMain():378:24"
adlb::add_debug_symbol 50 "__t:61:2" "RealignRecalAndVC:VCSplitMain():379:24"
adlb::add_debug_symbol 51 "__t:21:2" "RealignRecalAndVC:VCSplitMain():373:33"
adlb::add_debug_symbol 52 "VCF_list" "VariantCalling:__entry():160:4"
adlb::add_debug_symbol 53 "__t:165" "VariantCalling:__entry():163:8"
adlb::add_debug_symbol 54 "__t:21:1" "CombineVariants:combineVariantsMain():67:36"
adlb::add_debug_symbol 55 "pieces" "CombineVariants:combineVariantsMain():54:2"
adlb::add_debug_symbol 56 "chr" "CombineVariants:combineVariantsMain():55:2"
adlb::add_debug_symbol 57 "sampleName" "CombineVariants:combineVariantsMain():61:16"
adlb::add_debug_symbol 58 "outputName" "CombineVariants:combineVariantsMain():63:2"
adlb::add_debug_symbol 59 "chrSampleArray" "CombineVariants:combineVariantsMain():70:3"
adlb::add_debug_symbol 60 "gvcfSample" "CombineVariants:combineVariantsMain():86:21"
adlb::add_debug_symbol 61 "combineLog" "CombineVariants:combineVariantsMain():90:29"
adlb::add_debug_symbol 62 "tmpcombineLog" "CombineVariants:combineVariantsMain():94:64"
adlb::add_debug_symbol 63 "__t:41:1" "CombineVariants:combineVariantsMain():96:64"
adlb::add_debug_symbol 64 "__t:43:1" "CombineVariants:combineVariantsMain():97:13"
adlb::add_debug_symbol 65 "__t:45:1" "CombineVariants:combineVariantsMain():98:13"
adlb::add_debug_symbol 66 "__t:46:1" "CombineVariants:combineVariantsMain():98:20"
adlb::add_debug_symbol 67 "__t:49:1" "CombineVariants:combineVariantsMain():98:47"
adlb::add_debug_symbol 68 "__t:51:1" "CombineVariants:combineVariantsMain():99:13"
adlb::add_debug_symbol 69 "__t:55:1" "CombineVariants:combineVariantsMain():99:47"
adlb::add_debug_symbol 70 "__t:58:1" "CombineVariants:combineVariantsMain():107:4"
adlb::add_debug_symbol 71 "message" "CombineVariants:combineVariantsMain():110:4"
adlb::add_debug_symbol 72 "__t:62:1" "CombineVariants:combineVariantsMain():113:4"
adlb::add_debug_symbol 73 "pieces:1" "RealignRecalAndVC:VCSplitMain():362:2"
adlb::add_debug_symbol 74 "chr:1" "RealignRecalAndVC:VCSplitMain():363:2"
adlb::add_debug_symbol 75 "sampleName:1" "RealignRecalAndVC:VCSplitMain():366:2"
adlb::add_debug_symbol 76 "recalfiles" "RealignRecalAndVC:VCSplitMain():387:8"
adlb::add_debug_symbol 77 "recalparmsindels" "RealignRecalAndVC:VCSplitMain():393:4"
adlb::add_debug_symbol 78 "realparms" "RealignRecalAndVC:VCSplitMain():396:4"
adlb::add_debug_symbol 79 "__t:71:1" "RealignRecalAndVC:VCSplitMain():389:28"
adlb::add_debug_symbol 80 "__t:72:1" "RealignRecalAndVC:VCSplitMain():389:35"
adlb::add_debug_symbol 81 "__t:75:1" "RealignRecalAndVC:VCSplitMain():389:62"
adlb::add_debug_symbol 82 "__t:78:1" "RealignRecalAndVC:VCSplitMain():390:7"
adlb::add_debug_symbol 83 "recalibratedbam" "RealignRecalAndVC:VCSplitMain():405:63"
adlb::add_debug_symbol 84 "gvcfVariants" "RealignRecalAndVC:VCSplitMain():415:60"
adlb::add_debug_symbol 85 "threads:2" "RealignRecalAndVC:callChrVariants():224:1"
adlb::add_debug_symbol 86 "__t:2:7" "RealignRecalAndVC:callChrVariants():224:26"
adlb::add_debug_symbol 87 "__t:5:7" "RealignRecalAndVC:callChrVariants():224:55"
adlb::add_debug_symbol 88 "ploidy" "RealignRecalAndVC:callChrVariants():226:1"
adlb::add_debug_symbol 89 "haploLog" "RealignRecalAndVC:callChrVariants():233:54"
adlb::add_debug_symbol 90 "tmphaploLog" "RealignRecalAndVC:callChrVariants():236:60"
adlb::add_debug_symbol 91 "__t:25:6" "RealignRecalAndVC:callChrVariants():238:57"
adlb::add_debug_symbol 92 "__t:27:6" "RealignRecalAndVC:callChrVariants():238:74"
adlb::add_debug_symbol 93 "__t:29:6" "RealignRecalAndVC:callChrVariants():239:8"
adlb::add_debug_symbol 94 "__t:33:6" "RealignRecalAndVC:callChrVariants():239:42"
adlb::add_debug_symbol 95 "__t:35:6" "RealignRecalAndVC:callChrVariants():241:8"
adlb::add_debug_symbol 96 "__t:39:6" "RealignRecalAndVC:callChrVariants():241:42"
adlb::add_debug_symbol 97 "__t:84:1" "RealignRecalAndVC:VCSplitMain():394:27"
adlb::add_debug_symbol 98 "__t:93:1" "RealignRecalAndVC:VCSplitMain():397:27"
adlb::add_debug_symbol 99 "__t:123:1" "RealignRecalAndVC:VCSplitMain():432:14"
adlb::add_debug_symbol 100 "m" "RealignRecalAndVC:VCSplitMain():435:5"
adlb::add_debug_symbol 101 "__t:127:1" "RealignRecalAndVC:VCSplitMain():438:5"
adlb::add_debug_symbol 102 "VCF_list:1" "VariantCalling:__entry():179:2"
adlb::add_debug_symbol 103 "__t:186" "VariantCalling:__entry():182:6"
adlb::add_debug_symbol 104 "sampleName:3" "RealignRecalAndVC:VCNoSplitMain():277:2"
adlb::add_debug_symbol 105 "recalfiles:1" "RealignRecalAndVC:VCNoSplitMain():295:61"
adlb::add_debug_symbol 106 "recalparmsindels:1" "RealignRecalAndVC:VCNoSplitMain():300:3"
adlb::add_debug_symbol 107 "realparms:1" "RealignRecalAndVC:VCNoSplitMain():303:3"
adlb::add_debug_symbol 108 "__t:59:3" "RealignRecalAndVC:VCNoSplitMain():296:27"
adlb::add_debug_symbol 109 "__t:60:3" "RealignRecalAndVC:VCNoSplitMain():296:34"
adlb::add_debug_symbol 110 "__t:63:2" "RealignRecalAndVC:VCNoSplitMain():296:61"
adlb::add_debug_symbol 111 "inputBam:1" "RealignRecalAndVC:VCNoSplitMain():312:3"
adlb::add_debug_symbol 112 "recalibratedbam:1" "RealignRecalAndVC:VCNoSplitMain():317:12"
adlb::add_debug_symbol 113 "gvcfVariants:1" "RealignRecalAndVC:VCNoSplitMain():327:8"
adlb::add_debug_symbol 114 "threads:3" "RealignRecalAndVC:callVariants():251:1"
adlb::add_debug_symbol 115 "__t:2:8" "RealignRecalAndVC:callVariants():251:26"
adlb::add_debug_symbol 116 "__t:5:8" "RealignRecalAndVC:callVariants():251:55"
adlb::add_debug_symbol 117 "haploLog:1" "RealignRecalAndVC:callVariants():256:44"
adlb::add_debug_symbol 118 "tmphaploLog:1" "RealignRecalAndVC:callVariants():259:50"
adlb::add_debug_symbol 119 "__t:18:7" "RealignRecalAndVC:callVariants():261:57"
adlb::add_debug_symbol 120 "__t:20:7" "RealignRecalAndVC:callVariants():262:8"
adlb::add_debug_symbol 121 "__t:22:7" "RealignRecalAndVC:callVariants():263:8"
adlb::add_debug_symbol 122 "__t:26:7" "RealignRecalAndVC:callVariants():263:42"
adlb::add_debug_symbol 123 "__t:28:7" "RealignRecalAndVC:callVariants():265:8"
adlb::add_debug_symbol 124 "__t:32:7" "RealignRecalAndVC:callVariants():265:42"
adlb::add_debug_symbol 125 "__t:72:2" "RealignRecalAndVC:VCNoSplitMain():301:26"
adlb::add_debug_symbol 126 "__t:81:2" "RealignRecalAndVC:VCNoSplitMain():304:26"
adlb::add_debug_symbol 127 "__t:113:2" "RealignRecalAndVC:VCNoSplitMain():343:4"
adlb::add_debug_symbol 128 "message:2" "RealignRecalAndVC:VCNoSplitMain():346:4"
adlb::add_debug_symbol 129 "__t:117:2" "RealignRecalAndVC:VCNoSplitMain():349:4"
adlb::add_debug_symbol 130 "sampleInfo" "AlignAndDedup:alignDedupMain():201:2"
adlb::add_debug_symbol 131 "sampleName:4" "AlignAndDedup:alignDedupMain():202:2"
adlb::add_debug_symbol 132 "rgheader" "AlignAndDedup:alignDedupMain():203:2"
adlb::add_debug_symbol 133 "LogDir" "AlignAndDedup:alignDedupMain():215:2"
adlb::add_debug_symbol 134 "AlignDir" "AlignAndDedup:alignDedupMain():216:2"
adlb::add_debug_symbol 135 "RealignDir" "AlignAndDedup:alignDedupMain():217:2"
adlb::add_debug_symbol 136 "VarcallDir" "AlignAndDedup:alignDedupMain():218:2"
adlb::add_debug_symbol 137 "alignedbam" "AlignAndDedup:alignDedupMain():232:50"
adlb::add_debug_symbol 138 "__t:39:5" "AlignAndDedup:alignDedupMain():235:21"
adlb::add_debug_symbol 139 "alignedsam" "AlignAndDedup:alignDedupMain():235:67"
adlb::add_debug_symbol 140 "tmpsamtoolsLog" "AlignAndDedup:alignDedupMain():236:55"
adlb::add_debug_symbol 141 "__t:47:5" "AlignAndDedup:alignDedupMain():241:7"
adlb::add_debug_symbol 142 "threads:1" "AlignAndDedup:alignDedupMain():254:3"
adlb::add_debug_symbol 143 "__t:51:5" "AlignAndDedup:alignDedupMain():254:28"
adlb::add_debug_symbol 144 "__t:54:5" "AlignAndDedup:alignDedupMain():254:57"
adlb::add_debug_symbol 145 "__t:56:5" "AlignAndDedup:alignDedupMain():255:53"
adlb::add_debug_symbol 146 "__t:58:4" "AlignAndDedup:alignDedupMain():255:96"
adlb::add_debug_symbol 147 "__t:60:4" "AlignAndDedup:alignDedupMain():258:8"
adlb::add_debug_symbol 148 "reads" "AlignAndDedup:alignDedupMain():244:4"
adlb::add_debug_symbol 149 "reads:1" "AlignAndDedup:alignDedupMain():249:4"
adlb::add_debug_symbol 150 "dedupsortedbam" "AlignAndDedup:alignDedupMain():264:55"
adlb::add_debug_symbol 151 "__t:63:3" "AlignAndDedup:alignDedupMain():268:9"
adlb::add_debug_symbol 152 "__t:19:8" "AlignAndDedup:markDuplicates():141:5"
adlb::add_debug_symbol 153 "dedupsam" "AlignAndDedup:markDuplicates():142:64"
adlb::add_debug_symbol 154 "dedupbam" "AlignAndDedup:markDuplicates():143:47"
adlb::add_debug_symbol 155 "__t:29:8" "AlignAndDedup:markDuplicates():144:16"
adlb::add_debug_symbol 156 "samLog" "AlignAndDedup:markDuplicates():144:43"
adlb::add_debug_symbol 157 "sortLog" "AlignAndDedup:markDuplicates():145:44"
adlb::add_debug_symbol 158 "tmpsamblasterLog" "AlignAndDedup:markDuplicates():146:56"
adlb::add_debug_symbol 159 "tmpsamtoolsLog:1" "AlignAndDedup:markDuplicates():147:54"
adlb::add_debug_symbol 160 "tmpnovosortLog" "AlignAndDedup:markDuplicates():148:54"
adlb::add_debug_symbol 161 "__t:39:7" "AlignAndDedup:markDuplicates():151:57"
adlb::add_debug_symbol 162 "__t:46:6" "AlignAndDedup:markDuplicates():157:60"
adlb::add_debug_symbol 163 "__t:50:6" "AlignAndDedup:markDuplicates():158:19"
adlb::add_debug_symbol 164 "__t:53:6" "AlignAndDedup:markDuplicates():158:42"
adlb::add_debug_symbol 165 "__t:54:6" "AlignAndDedup:markDuplicates():158:53"
adlb::add_debug_symbol 166 "metricsfile" "AlignAndDedup:markDuplicates():163:50"
adlb::add_debug_symbol 167 "alignedsortedbam" "AlignAndDedup:markDuplicates():164:55"
adlb::add_debug_symbol 168 "picardLog" "AlignAndDedup:markDuplicates():165:46"
adlb::add_debug_symbol 169 "sortLog:1" "AlignAndDedup:markDuplicates():166:44"
adlb::add_debug_symbol 170 "tmpnovosortLog:1" "AlignAndDedup:markDuplicates():167:54"
adlb::add_debug_symbol 171 "tmppicardLog" "AlignAndDedup:markDuplicates():168:52"
adlb::add_debug_symbol 172 "__t:72:4" "AlignAndDedup:markDuplicates():171:62"
adlb::add_debug_symbol 173 "__t:76:4" "AlignAndDedup:markDuplicates():172:12"
adlb::add_debug_symbol 174 "__t:77:4" "AlignAndDedup:markDuplicates():172:25"
adlb::add_debug_symbol 175 "__t:78:4" "AlignAndDedup:markDuplicates():172:36"
adlb::add_debug_symbol 176 "__t:80:4" "AlignAndDedup:markDuplicates():175:71"
adlb::add_debug_symbol 177 "__t:82:4" "AlignAndDedup:markDuplicates():175:88"
adlb::add_debug_symbol 178 "novoLog" "AlignAndDedup:markDuplicates():180:44"
adlb::add_debug_symbol 179 "tmpnovosortLog:2" "AlignAndDedup:markDuplicates():181:54"
adlb::add_debug_symbol 180 "__t:90:4" "AlignAndDedup:markDuplicates():184:60"
adlb::add_debug_symbol 181 "__t:94:4" "AlignAndDedup:markDuplicates():185:21"
adlb::add_debug_symbol 182 "__t:96:4" "AlignAndDedup:markDuplicates():185:42"
adlb::add_debug_symbol 183 "__t:97:4" "AlignAndDedup:markDuplicates():185:53"
adlb::add_debug_symbol 184 "flagstats" "AlignAndDedup:alignDedupMain():277:74"
adlb::add_debug_symbol 185 "tmpsamtoolsflagstatLog" "AlignAndDedup:alignDedupMain():278:65"
adlb::add_debug_symbol 186 "stat" "AlignAndDedup:alignDedupMain():282:5"
adlb::add_debug_symbol 187 "__t:72:3" "AlignAndDedup:alignDedupMain():283:19"
adlb::add_debug_symbol 188 "__t:75:3" "AlignAndDedup:alignDedupMain():284:17"
adlb::add_debug_symbol 189 "__t:78:3" "AlignAndDedup:alignDedupMain():285:16"
adlb::add_debug_symbol 190 "perc_mapped" "AlignAndDedup:alignDedupMain():288:16"
adlb::add_debug_symbol 191 "__t:85:3" "AlignAndDedup:alignDedupMain():288:43"
adlb::add_debug_symbol 192 "cutoff_info" "AlignAndDedup:alignDedupMain():291:5"
adlb::add_debug_symbol 193 "__t:91:3" "AlignAndDedup:alignDedupMain():292:35"
adlb::add_debug_symbol 194 "__t:95:3" "AlignAndDedup:alignDedupMain():294:31"
adlb::add_debug_symbol 195 "__t:99:3" "AlignAndDedup:alignDedupMain():297:21"
adlb::add_debug_symbol 196 "__t:102:3" "AlignAndDedup:alignDedupMain():298:22"
adlb::add_debug_symbol 197 "__t:103:3" "AlignAndDedup:alignDedupMain():298:24"
adlb::add_debug_symbol 198 "m:2" "AlignAndDedup:alignDedupMain():310:6"
adlb::add_debug_symbol 199 "__t:112:3" "AlignAndDedup:alignDedupMain():313:6"
adlb::add_debug_symbol 200 "mssg" "AlignAndDedup:alignDedupMain():319:5"
adlb::add_debug_symbol 201 "__t:118:2" "AlignAndDedup:alignDedupMain():323:5"
adlb::add_debug_symbol 202 "message:3" "AlignAndDedup:alignDedupMain():329:4"
adlb::add_debug_symbol 203 "__t:124:2" "AlignAndDedup:alignDedupMain():332:4"
adlb::add_debug_symbol 204 "__t:127:2" "AlignAndDedup:alignDedupMain():341:4"
adlb::add_debug_symbol 205 "message_string" "AlignAndDedup:alignDedupMain():344:4"
adlb::add_debug_symbol 206 "__t:131:1" "AlignAndDedup:alignDedupMain():347:4"
adlb::add_debug_symbol 207 "threads" "AlignAndDedup:alignReads():85:1"
adlb::add_debug_symbol 208 "__t:2" "AlignAndDedup:alignReads():85:26"
adlb::add_debug_symbol 209 "__t:5" "AlignAndDedup:alignReads():85:55"
adlb::add_debug_symbol 210 "__t:7" "AlignAndDedup:alignReads():88:24"
adlb::add_debug_symbol 211 "__t:11" "AlignAndDedup:alignReads():89:19"
adlb::add_debug_symbol 212 "alignedLog" "AlignAndDedup:alignReads():89:46"
adlb::add_debug_symbol 213 "__t:13" "AlignAndDedup:alignReads():90:27"
adlb::add_debug_symbol 214 "tmpalignedLog" "AlignAndDedup:alignReads():91:53"
adlb::add_debug_symbol 215 "__t:19" "AlignAndDedup:alignReads():93:5"
adlb::add_debug_symbol 216 "__t:23" "AlignAndDedup:alignReads():95:6"
adlb::add_debug_symbol 217 "__t:26" "AlignAndDedup:alignReads():97:57"
adlb::add_debug_symbol 218 "__t:30" "AlignAndDedup:alignReads():97:93"
adlb::add_debug_symbol 219 "__t:32" "AlignAndDedup:alignReads():98:10"
adlb::add_debug_symbol 220 "__t:33" "AlignAndDedup:alignReads():98:10"
adlb::add_debug_symbol 221 "__t:35" "AlignAndDedup:alignReads():103:59"
adlb::add_debug_symbol 222 "__t:39" "AlignAndDedup:alignReads():104:11"
adlb::add_debug_symbol 223 "__t:45" "AlignAndDedup:alignReads():110:6"
adlb::add_debug_symbol 224 "__t:48" "AlignAndDedup:alignReads():112:57"
adlb::add_debug_symbol 225 "__t:51" "AlignAndDedup:alignReads():112:83"
adlb::add_debug_symbol 226 "__t:53" "AlignAndDedup:alignReads():113:10"
adlb::add_debug_symbol 227 "__t:54" "AlignAndDedup:alignReads():113:10"
adlb::add_debug_symbol 228 "__t:56" "AlignAndDedup:alignReads():118:59"
adlb::add_debug_symbol 229 "__t:59" "AlignAndDedup:alignReads():119:11"
adlb::add_debug_symbol 230 "__t:61" "AlignAndDedup:alignReads():119:36"
adlb::add_debug_symbol 231 "__t:62" "AlignAndDedup:alignReads():119:36"
adlb::add_debug_symbol 232 "newFile" "generalfunctions.general:append():14:16"
adlb::add_debug_symbol 233 "__t:11" "generalfunctions.general:exitIfFlagGiven():21:5"
adlb::add_debug_symbol 234 "tmplogs" "generalfunctions.general:logging():63:8"
adlb::add_debug_symbol 235 "__t:1" "generalfunctions.general:logging():63:30"
adlb::add_debug_symbol 236 "__t:3" "generalfunctions.general:logging():64:8"
adlb::add_debug_symbol 237 "__t:4" "generalfunctions.general:logging():64:24"
adlb::add_debug_symbol 238 "__t:5" "generalfunctions.general:logging():64:29"
adlb::add_debug_symbol 239 "__t:1" "generalfunctions.general:checkBam():79:32"
adlb::add_debug_symbol 240 "__t:1" "RealignRecalAndVC:recalibrateBam():151:27"
adlb::add_debug_symbol 241 "threads" "RealignRecalAndVC:recalibrateBam():158:1"
adlb::add_debug_symbol 242 "__t:18" "RealignRecalAndVC:recalibrateBam():158:26"
adlb::add_debug_symbol 243 "__t:21" "RealignRecalAndVC:recalibrateBam():158:54"
adlb::add_debug_symbol 244 "__t:23" "RealignRecalAndVC:recalibrateBam():161:17"
adlb::add_debug_symbol 245 "recalLog" "RealignRecalAndVC:recalibrateBam():161:35"
adlb::add_debug_symbol 246 "__t:25" "RealignRecalAndVC:recalibrateBam():162:17"
adlb::add_debug_symbol 247 "printLog" "RealignRecalAndVC:recalibrateBam():162:35"
adlb::add_debug_symbol 248 "__t:27" "RealignRecalAndVC:recalibrateBam():163:15"
adlb::add_debug_symbol 249 "report" "RealignRecalAndVC:recalibrateBam():163:30"
adlb::add_debug_symbol 250 "__t:29" "RealignRecalAndVC:recalibrateBam():165:27"
adlb::add_debug_symbol 251 "tmprecalLog" "RealignRecalAndVC:recalibrateBam():166:60"
adlb::add_debug_symbol 252 "tmpprintLog" "RealignRecalAndVC:recalibrateBam():167:60"
adlb::add_debug_symbol 253 "__t:38" "RealignRecalAndVC:recalibrateBam():171:58"
adlb::add_debug_symbol 254 "__t:40" "RealignRecalAndVC:recalibrateBam():171:74"
adlb::add_debug_symbol 255 "__t:42" "RealignRecalAndVC:recalibrateBam():172:11"
adlb::add_debug_symbol 256 "__t:43" "RealignRecalAndVC:recalibrateBam():172:18"
adlb::add_debug_symbol 257 "__t:46" "RealignRecalAndVC:recalibrateBam():172:44"
adlb::add_debug_symbol 258 "__t:48" "RealignRecalAndVC:recalibrateBam():174:11"
adlb::add_debug_symbol 259 "__t:52" "RealignRecalAndVC:recalibrateBam():174:44"
adlb::add_debug_symbol 260 "__t:64" "RealignRecalAndVC:recalibrateBam():180:1"
adlb::add_debug_symbol 261 "__t:1" "RealignRecalAndVC:recalibrationWrapper():191:27"
adlb::add_debug_symbol 262 "prefix" "RealignRecalAndVC:recalibrationWrapper():193:1"
adlb::add_debug_symbol 263 "__t:10" "RealignRecalAndVC:recalibrationWrapper():195:5"
adlb::add_debug_symbol 264 "__t:13" "RealignRecalAndVC:recalibrationWrapper():201:22"
adlb::add_debug_symbol 265 "realignedbam" "RealignRecalAndVC:recalibrationWrapper():201:37"
adlb::add_debug_symbol 266 "__t:15" "RealignRecalAndVC:recalibrationWrapper():204:2"
adlb::add_debug_symbol 267 "__t:16" "RealignRecalAndVC:recalibrationWrapper():204:17"
adlb::add_debug_symbol 268 "threads" "RealignRecalAndVC:realignBam():119:1"
adlb::add_debug_symbol 269 "__t:18:1" "RealignRecalAndVC:realignBam():119:26"
adlb::add_debug_symbol 270 "__t:21" "RealignRecalAndVC:realignBam():119:54"
adlb::add_debug_symbol 271 "__t:23" "RealignRecalAndVC:realignBam():122:18"
adlb::add_debug_symbol 272 "targetLog" "RealignRecalAndVC:realignBam():122:36"
adlb::add_debug_symbol 273 "__t:25" "RealignRecalAndVC:realignBam():123:19"
adlb::add_debug_symbol 274 "realignLog" "RealignRecalAndVC:realignBam():123:37"
adlb::add_debug_symbol 275 "__t:27" "RealignRecalAndVC:realignBam():125:27"
adlb::add_debug_symbol 276 "tmptargetLog" "RealignRecalAndVC:realignBam():126:61"
adlb::add_debug_symbol 277 "tmprealignLog" "RealignRecalAndVC:realignBam():127:62"
adlb::add_debug_symbol 278 "__t:36" "RealignRecalAndVC:realignBam():129:18"
adlb::add_debug_symbol 279 "intervals" "RealignRecalAndVC:realignBam():129:33"
adlb::add_debug_symbol 280 "__t:38" "RealignRecalAndVC:realignBam():132:69"
adlb::add_debug_symbol 281 "__t:40" "RealignRecalAndVC:realignBam():132:85"
adlb::add_debug_symbol 282 "__t:42" "RealignRecalAndVC:realignBam():133:8"
adlb::add_debug_symbol 283 "__t:43" "RealignRecalAndVC:realignBam():133:15"
adlb::add_debug_symbol 284 "__t:46" "RealignRecalAndVC:realignBam():133:41"
adlb::add_debug_symbol 285 "__t:58" "RealignRecalAndVC:realignBam():140:1"
adlb::add_debug_symbol 286 "__t:18" "RealignRecalAndVC:recalibrationWrapper():214:2"
adlb::add_debug_symbol 287 "__t:19" "RealignRecalAndVC:recalibrationWrapper():214:17"
adlb::add_debug_symbol 288 "__t:2" "JointGenotyping:jointGenotypingMain():38:5"
adlb::add_debug_symbol 289 "__t:6" "JointGenotyping:jointGenotypingMain():41:25"
adlb::add_debug_symbol 290 "__t:9" "JointGenotyping:jointGenotypingMain():41:49"
adlb::add_debug_symbol 291 "jointVCF" "JointGenotyping:jointGenotypingMain():41:73"
adlb::add_debug_symbol 292 "jointLog" "JointGenotyping:jointGenotypingMain():44:73"
adlb::add_debug_symbol 293 "__t:27" "JointGenotyping:jointGenotypingMain():47:28"
adlb::add_debug_symbol 294 "tmpjointLog" "JointGenotyping:jointGenotypingMain():48:39"
adlb::add_debug_symbol 295 "variantSampleArray" "JointGenotyping:jointGenotypingMain():51:2"
adlb::add_debug_symbol 296 "__t:36" "JointGenotyping:jointGenotypingMain():65:58"
adlb::add_debug_symbol 297 "__t:38" "JointGenotyping:jointGenotypingMain():65:75"
adlb::add_debug_symbol 298 "__t:40" "JointGenotyping:jointGenotypingMain():65:92"
adlb::add_debug_symbol 299 "__t:41" "JointGenotyping:jointGenotypingMain():65:99"
adlb::add_debug_symbol 300 "__t:44" "JointGenotyping:jointGenotypingMain():66:14"
adlb::add_debug_symbol 301 "__t:46" "JointGenotyping:jointGenotypingMain():66:54"
adlb::add_debug_symbol 302 "__t:48" "JointGenotyping:jointGenotypingMain():68:10"
adlb::add_debug_symbol 303 "variables" "VariantCalling:70:0"
turbine::start swift:main swift:constants
turbine::finalize
