
# Generated by stc version 0.7.2
# date                    : 2017/01/04 11:59:14
# Turbine version         : 0.9.1
# Input filename          : /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift
# Output filename         : /ui/ncsa/jacobrh/Swift-T-Variant-Calling/swift-t-JacobVCPipeline.G4P.tic
# STC home                : /usr/local/apps/bioapps/swift-t-1.1/stc
# Turbine home            : /usr/local/apps/bioapps/swift-t-1.1/turbine
# Compiler settings:
# stc.auto-declare              : true
# stc.c_preprocess              : true
# stc.checkpointing             : true
# stc.compiler-debug            : true
# stc.debugging                 : COMMENTS
# stc.ic.output-file            : 
# stc.input_filename            : /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift
# stc.log.file                  : 
# stc.log.trace                 : false
# stc.must_pass_wait_vars       : true
# stc.opt.algebra               : true
# stc.opt.array-build           : true
# stc.opt.batch-refcounts       : true
# stc.opt.cancel-refcounts      : true
# stc.opt.constant-fold         : true
# stc.opt.controlflow-fusion    : true
# stc.opt.dataflow-op-inline    : true
# stc.opt.dead-code-elim        : true
# stc.opt.demote-globals        : true
# stc.opt.disable-asserts       : false
# stc.opt.expand-loop-threshold-insts: 256
# stc.opt.expand-loop-threshold-iters: 16
# stc.opt.expand-loops          : false
# stc.opt.finalized-var         : true
# stc.opt.flatten-nested        : true
# stc.opt.full-function-inline  : false
# stc.opt.full-unroll           : false
# stc.opt.function-always-inline-threshold: 5
# stc.opt.function-inline       : true
# stc.opt.function-inline-threshold: 50
# stc.opt.function-signature    : true
# stc.opt.hoist                 : true
# stc.opt.hoist-refcounts       : true
# stc.opt.loop-simplify         : true
# stc.opt.max-iterations        : 10
# stc.opt.merge-refcounts       : true
# stc.opt.piggyback-refcounts   : true
# stc.opt.pipeline              : false
# stc.opt.propagate-aliases     : true
# stc.opt.reorder-insts         : false
# stc.opt.shared-constants      : true
# stc.opt.unroll-loop-threshold-insts: 192
# stc.opt.unroll-loop-threshold-iters: 8
# stc.opt.unroll-loops          : true
# stc.opt.value-number          : true
# stc.opt.wait-coalesce         : true
# stc.output_filename           : /ui/ncsa/jacobrh/Swift-T-Variant-Calling/swift-t-JacobVCPipeline.G4P.tic
# stc.preproc.force-cpp         : false
# stc.preproc.force-gcc         : false
# stc.preprocess_only           : false
# stc.profile                   : false
# stc.refcounting               : true
# stc.rpath                     : /ui/ncsa/jacobrh/Swift-T-Variant-Calling/pipelinefunctions
# stc.stc_home                  : /usr/local/apps/bioapps/swift-t-1.1/stc
# stc.turbine.version           : 0.9.1
# stc.turbine_home              : /usr/local/apps/bioapps/swift-t-1.1/turbine
# stc.version                   : 0.7.2

# Metadata:

# rpath entries
lappend auto_path "/ui/ncsa/jacobrh/Swift-T-Variant-Calling/pipelinefunctions"
package require turbine 0.9.1
namespace import turbine::*


proc swift:constants {  } {
    turbine::c::log "function:swift:constants"
    global c:s__GATKCombi-2
    turbine::allocate_custom c:s__GATKCombi-2 string 1 1 1 1
    turbine::store_string ${c:s__GATKCombi-2} "*.GATKCombineGVCF.raw.vcf"
    global c:s_sknownSite
    turbine::allocate_custom c:s_sknownSite string 1 1 2 1
    turbine::store_string ${c:s_sknownSite} "s/^/--knownSites /g"
    global c:s_sknown_g
    turbine::allocate_custom c:s_sknown_g string 1 1 3 1
    turbine::store_string ${c:s_sknown_g} "s/^/-known /g"
    global c:s_svariant_g
    turbine::allocate_custom c:s_svariant_g string 1 1 4 1
    turbine::store_string ${c:s_svariant_g} "s/^/--variant /g"
}

package require align 0.2


proc swift:main {  } {
    turbine::c::log "function: __entry"
    # Var: string t:7 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:64:33
    # Var: string t:10 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:69:25
    # Var: string t:13 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:69:49
    # Var: string t:651 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:483:16
    # Var: string t:659 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:484:27
    # Var: $string v:configFilename VALUE_OF [string:configFilename]
    # Var: int u:samples_processing_done /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:66:0
    # Var: file u:docSampleInfo /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:73:39
    # Var: file u:jointVCF /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:483:71
    # Var: file u:configFile /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:59:0
    # Var: file u:sampleInfoFile /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:64:0
    # Var: string[string] u:vars /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:62:0
    # Var: file u:docRunfile /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:69:99
    # Var: file u:variantFiles /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:484:43
    # Var: $string v:f RENAMED [$string:__v:f]
    # Var: string t:28 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():87:88
    # Var: string t:30 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():88:6
    # Var: string t:32 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():88:48
    # Var: string t:55 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():113:14
    # Var: string t:97 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():126:5
    # Var: string t:326 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():281:31
    # Var: string t:347 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():291:30
    # Var: string t:371 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():321:17
    # Var: $file v:configFile:1 VALUE_OF [file:configFile]
    # Var: $file v:configFile:2 VALUE_OF [file:configFile]
    # Var: $string$[int] v:configFileData VALUE_OF [string[int]:configFileData]
    # Var: boolean t:96 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():126:32
    # Var: float t:346 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():291:17
    # Var: string[int] u:indices /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():321:9
    lassign [ adlb::multicreate [ list string 1 1 5 ] [ list string 4 1 6 ] [ list string 4 1 7 ] [ list string 1 1 8 ] [ list string 2 1 9 ] [ list integer 1 1 10 ] [ list container string string 16 1 15 ] [ list string 1 1 18 ] [ list string 1 1 19 ] [ list string 1 1 20 ] [ list string 1 1 21 ] [ list string 2 1 22 ] [ list string 1 1 23 ] [ list string 2 1 24 ] [ list string 1 1 25 ] [ list integer 1 1 26 ] [ list float 1 1 27 ] [ list container integer string 1 1 28 ] ] t:7 t:10 t:13 t:651 t:659 u:samples_processing_done u:vars t:28 t:30 t:32 t:55 t:97 t:326 t:347 t:371 t:96 t:346 u:indices
    turbine::c::log "allocated t:7=<${t:7}> t:10=<${t:10}> t:13=<${t:13}> t:651=<${t:651}> t:659=<${t:659}>"
    turbine::c::log "allocated u:samples_processing_done=<${u:samples_processing_done}> u:vars=<${u:vars}> t:28=<${t:28}> t:30=<${t:30}> t:32=<${t:32}>"
    turbine::c::log "allocated t:55=<${t:55}> t:97=<${t:97}> t:326=<${t:326}> t:347=<${t:347}> t:371=<${t:371}>"
    turbine::c::log "allocated t:96=<${t:96}> t:346=<${t:346}> u:indices=<${u:indices}>"
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 0 1 11 ] [ list file 0 1 12 ] [ list file 1 1 13 ] [ list file 1 1 14 ] [ list file 0 1 16 ] [ list file 1 1 17 ] ] [ list 1 1 0 0 1 1 ] ] u:docSampleInfo u:jointVCF u:configFile u:sampleInfoFile u:docRunfile u:variantFiles
    turbine::argv_accept_impl [ list "runfile" ]
    set v:configFilename [ turbine::argv_get_impl "runfile" ]
    set tcltmp:init_rc 1
    set v:configFile:1 [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:configFile:1 ${v:configFilename}
    turbine::store_file ${u:configFile} v:configFile:1 1
    set v:configFile:2 [ turbine::retrieve_file ${u:configFile} ]
    set v:configFileData [ turbine::file_lines_impl ${v:configFile:2} ]
    turbine::container_reference ${u:vars} "SAMPLEINFORMATION" ${t:7} string
    turbine::container_reference ${u:vars} "OUTPUTDIR" ${t:10} string
    turbine::container_reference ${u:vars} "DELIVERYFOLDER" ${t:13} string
    turbine::container_reference ${u:vars} "TMPDIR" ${t:659} string
    set v:f [ file tail ${v:configFilename} ]
    turbine::container_reference ${u:vars} "SAMPLELB" ${t:28} string
    turbine::container_reference ${u:vars} "SAMPLEPL" ${t:30} string
    turbine::container_reference ${u:vars} "SAMPLECN" ${t:32} string
    turbine::container_reference ${u:vars} "MARKDUPLICATESTOOL" ${t:97} string
    turbine::container_reference ${u:vars} "SAMTOOLSDIR" ${t:326} string
    turbine::container_reference ${u:vars} "DUP_CUTOFF" ${t:347} string
    turbine::container_reference ${u:vars} "CHRNAMES" ${t:371} string
    dict for {tcltmp:ignore v:line} ${v:configFileData} {
        # Var: string[int] u:keyValuePair RENAMED [string[int]:keyValuePair] ./pipelinefunctions/miscellaneous.swift:getConfigVariables():8:16
        # Var: $string$[int] v:keyValuePair VALUE_OF [string[int]:keyValuePair]
        # Var: $string v:alias:name VALUE_OF [string:__alias:name]
        # Var: $string v:alias:value VALUE_OF [string:__alias:value]
        lassign [ adlb::multicreate [ list container integer string 1 2 29 ] ] u:keyValuePair
        turbine::c::log "allocated u:keyValuePair=<${u:keyValuePair}>"
        set v:keyValuePair [ turbine::split_impl ${v:line} "=" ]
        turbine::build_rec ${u:keyValuePair} ${v:keyValuePair} [ list container integer string ] 0 1
        set a:name [ adlb::subscript_container ${u:keyValuePair} 0 ]
        set v:alias:name [ turbine::retrieve_string ${a:name} ]
        set a:value [ adlb::subscript_container ${u:keyValuePair} 1 ]
        set v:alias:value [ turbine::retrieve_string ${a:value} CACHED 1 ]
        turbine::container_insert ${u:vars} ${v:alias:name} ${v:alias:value} string 0
        adlb::write_refcount_decr ${u:keyValuePair} 1
    }
    turbine::rule [ list ${u:samples_processing_done} ] "__entry-explicit-wait4 ${t:10} ${t:13} ${t:651} {${u:jointVCF}} ${u:samples_processing_done} {${u:variantFiles}} ${u:vars}"
    turbine::rule [ list ${t:659} ] "__entry-async_op-strcat-2 ${t:659} {${u:variantFiles}}"
    turbine::rule [ list ${t:97} ] "__entry-async_op-eq_string ${t:96} ${t:97}"
    turbine::rule [ list ${t:347} ] "__entry-async_op-parse_float ${t:346} ${t:347}"
    turbine::rule [ list ${t:371} ] "__entry-call_foreign-split ${t:371} ${u:indices}"
    turbine::rule [ list ${t:10} ${t:13} ] [ list __entry-optmerged ${t:10} ${t:13} ${t:55} ${t:651} ${v:f} ${u:configFile} ${u:docRunfile} ${u:jointVCF} ]
    turbine::rule [ list ${t:7} ] "__entry-optmerged-1 ${t:10} ${t:13} ${t:28} ${t:30} ${t:32} ${t:326} ${t:346} ${t:347} ${t:55} ${t:659} ${t:7} ${t:96} ${t:97} {${u:docSampleInfo}} ${u:indices} {${u:sampleInfoFile}} ${u:samples_processing_done} ${u:vars}"
    turbine::decr_local_file_refcount v:configFile:1
    adlb::write_refcount_decr ${u:vars} 1
}


proc __entry-explicit-wait4 { t:10 t:13 t:651 u:jointVCF u:samples_processing_done u:variantFiles u:vars } {
    # Var: string c:s__GATKCombi-2 OPT_TEMPORARY
    global c:s__GATKCombi-2
    # Var: string[int] u:varlist /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():490:1
    # Var: string t:670 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():489:27
    lassign [ adlb::multicreate [ list container integer string 1 1 30 ] [ list string 1 1 31 ] ] u:varlist t:670
    turbine::c::log "allocated u:varlist=<${u:varlist}> t:670=<${t:670}>"
    f:find_files ${u:variantFiles} ${t:670} ${c:s__GATKCombi-2} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${u:variantFiles} ] ] "__entry-chain24 ${t:651} {${u:jointVCF}} {${u:variantFiles}} ${u:varlist} ${u:vars}"
    turbine::rule [ list ${t:10} ${t:13} ] "__entry-async_op-strcat-1 ${t:10} ${t:13} ${t:670}"
    turbine::read_refcount_decr ${t:670} 1
    turbine::read_refcount_decr ${u:samples_processing_done} 1
}


proc __entry-chain24 { t:651 u:jointVCF u:variantFiles u:varlist u:vars } {
    # Var: string c:s_svariant_g OPT_TEMPORARY
    global c:s_svariant_g
    # Var: file t:680 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():490:48
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 32 ] ] [ list 0 ] ] t:680
    f:sed ${t:680} ${u:variantFiles} ${c:s_svariant_g} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${t:680} ] ] "__entry-call_foreign-read ${t:651} {${t:680}} {${u:jointVCF}} ${u:varlist} ${u:vars}"
    turbine::file_read_refcount_decr ${u:variantFiles} 1
}


proc __entry-call_foreign-read { t:651 t:680 u:jointVCF u:varlist u:vars } {
    # Var: $file v:t:680 VALUE_OF [file:__t:680]
    # Var: $string v:t:679 VALUE_OF [string:__t:679]
    # Var: $int v:n:4 RENAMED [$int:__v:n]
    # Var: $string v:t:678 VALUE_OF [string:__t:678]
    # Var: $string v:o:4 RENAMED [$string:__v:o]
    # Var: $string$[int] v:varlist VALUE_OF [string[int]:varlist]
    # Var: string t:686 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():491:26
    # Var: string t:688 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():491:43
    # Var: string t:691 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():492:12
    # Var: string t:694 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():492:39
    # Var: $string$[int] v:variants:1 RENAMED [$string$[int]:__v:variants] ./pipelinefunctions/joint_vcf.swift:GenotypeGVCFs():3:91
    lassign [ adlb::multicreate [ list string 1 1 33 ] [ list string 1 1 34 ] [ list string 1 1 35 ] [ list string 1 1 36 ] ] t:686 t:688 t:691 t:694
    turbine::c::log "allocated t:686=<${t:686}> t:688=<${t:688}> t:691=<${t:691}> t:694=<${t:694}>"
    set v:t:680 [ turbine::retrieve_file ${t:680} CACHED 1 ]
    set v:t:679 [ turbine::file_read_local ${v:t:680} ]
    set v:n:4 [ string length ${v:t:679} ]
    set v:t:678 [ turbine::replace_all_impl ${v:t:679} "\n" " " 0 ${v:n:4} ]
    set v:o:4 [ string trim ${v:t:678} ]
    set v:varlist [ turbine::split_impl ${v:o:4} " " ]
    turbine::build_rec ${u:varlist} ${v:varlist} [ list container integer string ] 0 1
    turbine::container_reference ${u:vars} "JAVADIR" ${t:686} string
    turbine::container_reference ${u:vars} "GATKDIR" ${t:688} string
    turbine::container_reference ${u:vars} "REFGENOMEDIR" ${t:691} string
    turbine::container_reference ${u:vars} "REFGENOME" ${t:694} string
    set v:variants:1 [ turbine::unpack_args ${u:varlist} 1 string ]
    turbine::rule [ list ${t:651} ${t:686} ${t:688} ${t:691} ${t:694} ] "__entry-async_op-strcat ${t:651} ${t:686} ${t:688} ${t:691} ${t:694} {${v:variants:1}} {${u:jointVCF}}"
    turbine::read_refcount_decr ${u:varlist} 1
}


proc __entry-async_op-strcat { t:651 t:686 t:688 t:691 t:694 v:variants:1 u:jointVCF } {
    # Var: $string v:t:691 VALUE_OF [string:__t:691]
    # Var: $string v:t:694 VALUE_OF [string:__t:694]
    # Var: $string v:t:690 VALUE_OF [string:__t:690]
    # Var: $string v:javadir:7 RENAMED [$string:__v:javadir] ./pipelinefunctions/joint_vcf.swift:GenotypeGVCFs():3:91
    # Var: $string v:gatkdir:6 RENAMED [$string:__v:gatkdir] ./pipelinefunctions/joint_vcf.swift:GenotypeGVCFs():3:91
    # Var: $string v:__filename:outputfile:7 RENAMED [$string:__v:__filename:outputfile] ./pipelinefunctions/joint_vcf.swift:GenotypeGVCFs():3:91
    # Var: $file v:outputfile:7 RENAMED [$file:__v:outputfile] ./pipelinefunctions/joint_vcf.swift:GenotypeGVCFs():3:91
    set v:t:691 [ turbine::retrieve_string ${t:691} CACHED 1 ]
    set v:t:694 [ turbine::retrieve_string ${t:694} CACHED 1 ]
    set v:t:690 "${v:t:691}/${v:t:694}"
    set v:javadir:7 [ turbine::retrieve_string ${t:686} CACHED 1 ]
    set v:gatkdir:6 [ turbine::retrieve_string ${t:688} CACHED 1 ]
    set v:__filename:outputfile:7 [ turbine::retrieve_string ${t:651} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:7 [ turbine::create_local_file_ref ${v:__filename:outputfile:7} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:7 "-Xmx8g" "-jar" ${v:gatkdir:6} "-T" "GenotypeGVCFs" "-R" ${v:t:690} {*}${v:variants:1} "-o" ${v:__filename:outputfile:7} [ dict create ] ]
    turbine::exec_external ${v:javadir:7} [ dict create ] "-Xmx8g" "-jar" ${v:gatkdir:6} "-T" "GenotypeGVCFs" "-R" ${v:t:690} {*}${v:variants:1} "-o" ${v:__filename:outputfile:7}
    turbine::store_file ${u:jointVCF} v:outputfile:7 0
    turbine::decr_local_file_refcount v:outputfile:7
}


proc __entry-async_op-strcat-1 { t:10 t:13 t:670 } {
    # Var: $string v:t:10:10 VALUE_OF [string:__t:10]
    # Var: $string v:t:13:7 VALUE_OF [string:__t:13]
    # Var: $string v:t:670 VALUE_OF [string:__t:670]
    set v:t:10:10 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:t:13:7 [ turbine::retrieve_string ${t:13} CACHED 1 ]
    set v:t:670 "${v:t:10:10}/${v:t:13:7}"
    turbine::store_string ${t:670} ${v:t:670}
}


proc __entry-async_op-strcat-2 { t:659 u:variantFiles } {
    # Var: $string v:t:659 VALUE_OF [string:__t:659]
    # Var: $string v:t:658 VALUE_OF [string:__t:658]
    set v:t:659 [ turbine::retrieve_string ${t:659} CACHED 1 ]
    set v:t:658 "${v:t:659}/variantFiles.txt"
    turbine::set_filename_val ${u:variantFiles} ${v:t:658}
}


proc __entry-async_op-eq_string { t:96 t:97 } {
    # Var: $string v:t:97 VALUE_OF [string:__t:97]
    # Var: $boolean v:t:96 VALUE_OF [boolean:__t:96]
    set v:t:97 [ turbine::retrieve_string ${t:97} CACHED 1 ]
    set v:t:96 [ string equal ${v:t:97} "SAMBLASTER" ]
    turbine::store_integer ${t:96} ${v:t:96}
}


proc __entry-async_op-parse_float { t:346 t:347 } {
    # Var: $string v:t:347 VALUE_OF [string:__t:347]
    # Var: $float v:t:346 VALUE_OF [float:__t:346]
    set v:t:347 [ turbine::retrieve_string ${t:347} CACHED 1 ]
    set v:t:346 [ turbine::string2float_impl ${v:t:347} ]
    turbine::store_float ${t:346} ${v:t:346}
}


proc __entry-call_foreign-split { t:371 u:indices } {
    # Var: $string v:t:371 VALUE_OF [string:__t:371]
    # Var: $string$[int] v:indices:1 VALUE_OF [string[int]:indices]
    set v:t:371 [ turbine::retrieve_string ${t:371} CACHED 1 ]
    set v:indices:1 [ turbine::split_impl ${v:t:371} ":" ]
    turbine::build_rec ${u:indices} ${v:indices:1} [ list container integer string ] 0 1
}


proc __entry-optmerged { t:10 t:13 t:55 t:651 v:f u:configFile u:docRunfile u:jointVCF } {
    # Var: $string v:t:10 VALUE_OF [string:__t:10]
    # Var: $string v:t:13 VALUE_OF [string:__t:13]
    # Var: $string v:t:651 VALUE_OF [string:__t:651]
    # Var: $string v:t:663 VALUE_OF [string:__t:663]
    # Var: $string v:t:9 VALUE_OF [string:__t:9]
    # Var: $string v:t:55 VALUE_OF [string:__t:55]
    set v:t:10 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:t:13 [ turbine::retrieve_string ${t:13} CACHED 1 ]
    set v:t:651 "${v:t:10}/${v:t:13}/jointVCFs/jointVCFcalled.vcf"
    turbine::store_string ${t:651} ${v:t:651}
    set v:t:663 "${v:t:10}/${v:t:13}/jointVCFs"
    set v:t:9 "${v:t:10}/${v:t:13}/docs/${v:f}"
    set v:t:55 "${v:t:10}/${v:t:13}/docs/QC_test_results.txt"
    turbine::store_string ${t:55} ${v:t:55}
    turbine::set_filename_val ${u:jointVCF} ${v:t:651}
    turbine::set_filename_val ${u:docRunfile} ${v:t:9}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list mkdir-app-leaf1 ${v:t:663} ]
    turbine::reset_priority
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry:wait:configFile ${v:t:9} ${u:configFile} ${u:docRunfile} ]
    turbine::reset_priority
}


proc mkdir-app-leaf1 { v:t:663 } {
    # Var: $void v:v:3 RENAMED [$void:__v:v] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:mkdir():65:15
    turbine::c::log [ list exec: "mkdir" "-p" ${v:t:663} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:t:663}
}


proc __entry:wait:configFile { v:t:9 u:configFile u:docRunfile } {
    # Var: $file v:configFile VALUE_OF [file:configFile]
    # Var: $file v:docRunfile VALUE_OF [file:docRunfile]
    set v:configFile [ turbine::retrieve_file ${u:configFile} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:docRunfile [ turbine::create_local_file_ref ${v:t:9} ${tcltmp:init_rc} 1 ]
    turbine::copy_local_file_contents ${v:docRunfile} ${v:configFile}
    turbine::store_file ${u:docRunfile} v:docRunfile 0
}


proc __entry-optmerged-1 { t:10 t:13 t:28 t:30 t:32 t:326 t:346 t:347 t:55 t:659 t:7 t:96 t:97 u:docSampleInfo u:indices u:sampleInfoFile u:samples_processing_done u:vars } {
    # Var: $string v:p:1 RENAMED [$string:__v:p]
    # Var: $string v:f:1 RENAMED [$string:__v:f]
    # Var: $file v:sampleInfoFile:1 VALUE_OF [file:sampleInfoFile]
    # Var: $file v:sampleInfoFile:2 VALUE_OF [file:sampleInfoFile]
    # Var: $string$[int] v:sampleLines:1 VALUE_OF [string[int]:sampleLines]
    set v:p:1 [ turbine::retrieve_string ${t:7} CACHED 1 ]
    set v:f:1 [ file tail ${v:p:1} ]
    set tcltmp:init_rc 1
    set v:sampleInfoFile:1 [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:sampleInfoFile:1 ${v:p:1}
    turbine::store_file ${u:sampleInfoFile} v:sampleInfoFile:1 1
    set v:sampleInfoFile:2 [ turbine::retrieve_file ${u:sampleInfoFile} ]
    set v:sampleLines:1 [ turbine::file_lines_impl ${v:sampleInfoFile:2} ]
    turbine::rule [ list ${t:10} ${t:13} ] [ list __entry-async_op-strcat-3 ${t:10} ${t:13} ${v:f:1} ${u:docSampleInfo} ${u:sampleInfoFile} ]
    turbine::rule [ list ] "__entry-foreach-wait1 ${t:10} ${t:13} ${t:28} ${t:30} ${t:32} ${t:326} ${t:346} ${t:347} ${t:55} ${t:659} ${t:96} ${t:97} {${v:sampleLines:1}} ${u:indices} ${u:samples_processing_done} ${u:vars}"
    turbine::decr_local_file_refcount v:sampleInfoFile:1
}


proc __entry-async_op-strcat-3 { t:10 t:13 v:f:1 u:docSampleInfo u:sampleInfoFile } {
    # Var: $string v:t:10:11 VALUE_OF [string:__t:10]
    # Var: $string v:t:13:8 VALUE_OF [string:__t:13]
    # Var: $string v:t:17 VALUE_OF [string:__t:17]
    set v:t:10:11 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:t:13:8 [ turbine::retrieve_string ${t:13} CACHED 1 ]
    set v:t:17 "${v:t:10:11}/${v:t:13:8}/docs/${v:f:1}"
    turbine::set_filename_val ${u:docSampleInfo} ${v:t:17}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry:wait:sampleInfoFile ${v:t:17} ${u:docSampleInfo} ${u:sampleInfoFile} ]
    turbine::reset_priority
}


proc __entry:wait:sampleInfoFile { v:t:17 u:docSampleInfo u:sampleInfoFile } {
    # Var: $file v:sampleInfoFile VALUE_OF [file:sampleInfoFile]
    # Var: $file v:docSampleInfo VALUE_OF [file:docSampleInfo]
    set v:sampleInfoFile [ turbine::retrieve_file ${u:sampleInfoFile} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:docSampleInfo [ turbine::create_local_file_ref ${v:t:17} ${tcltmp:init_rc} 1 ]
    turbine::copy_local_file_contents ${v:docSampleInfo} ${v:sampleInfoFile}
    turbine::store_file ${u:docSampleInfo} v:docSampleInfo 0
}


proc __entry-foreach-wait1 { t:10 t:13 t:28 t:30 t:32 t:326 t:346 t:347 t:55 t:659 t:96 t:97 v:sampleLines:1 u:indices u:samples_processing_done u:vars } {
    set tcltmp:iters [ dict size ${v:sampleLines:1} ]
    turbine::read_refcount_incr ${t:28} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:13} [ expr { 2 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:346} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:97} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:10} [ expr { 2 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:32} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:55} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:30} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:96} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${u:indices} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:347} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${u:vars} [ expr { 22 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:326} [ expr { 6 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:659} [ expr { 5 * ${tcltmp:iters} } ]
    dict for {tcltmp:ignore v:sample} ${v:sampleLines:1} {
        # Var: string c:s_svariant_g OPT_TEMPORARY
        global c:s_svariant_g
        # Var: string[int] u:sampleInfo /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():82:1
        # Var: string u:read1 /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():84:1
        # Var: string u:read2 /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():85:1
        # Var: string u:rgheader /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():87:1
        # Var: string u:AlignDir /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():97:1
        # Var: string u:VarcallDir /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():100:1
        # Var: string u:RealignDir /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():103:1
        # Var: string t:49 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():109:23
        # Var: file u:dedupsortedbam /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():109:52
        # Var: string t:51 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():110:15
        # Var: file u:outbam /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():110:46
        # Var: string t:53 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():111:19
        # Var: file u:rawvariant /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():111:50
        # Var: file u:qcfile /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():113:69
        # Var: string t:62 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():114:18
        # Var: file u:mergedbam /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():114:90
        # Var: file u:mergedvariant /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():116:8
        # Var: file u:flagstats /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():119:68
        # Var: string t:81 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():122:19
        # Var: file u:alignedsam /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():122:65
        # Var: file u:chr_bamListfile /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():123:64
        # Var: file u:chr_vcfListfile /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():124:63
        # Var: string[int] u:stat /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():283:1
        # Var: string[int] t:328 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():284:14
        # Var: string[int] t:331 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():285:13
        # Var: string[int] t:334 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():286:12
        # Var: float u:perc_mapped /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():289:12
        # Var: float t:341 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():289:39
        # Var: int u:chromosomes_processing_done /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():322:1
        # Var: string[int] u:chr_bamList /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():450:1
        # Var: string t:612 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():462:2
        # Var: string[int] u:chr_vcfList /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():465:1
        # Var: file t:618 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():465:52
        # Var: $string$[int] v:sampleInfo VALUE_OF [string[int]:sampleInfo]
        # Var: $string v:alias:sampleName VALUE_OF [string:__alias:sampleName]
        # Var: $string v:alias:read1 VALUE_OF [string:__alias:read1]
        # Var: $string v:alias:read2 VALUE_OF [string:__alias:read2]
        lassign [ adlb::multicreate [ list container integer string 1 2 37 ] [ list string 1 1 38 ] [ list string 1 1 39 ] [ list string 1 1 40 ] [ list string 2 1 41 ] [ list string 1 1 42 ] [ list string 1 1 43 ] [ list string 2 1 44 ] [ list string 1 1 46 ] [ list string 1 1 48 ] [ list string 1 1 51 ] [ list string 2 1 55 ] [ list container integer string 3 1 59 ] [ list container integer string 1 1 60 ] [ list container integer string 1 1 61 ] [ list container integer string 1 1 62 ] [ list float 1 1 63 ] [ list float 1 1 64 ] [ list integer 1 1 65 ] [ list container integer string 1 1 66 ] [ list string 1 1 67 ] [ list container integer string 1 1 68 ] ] u:sampleInfo u:read1 u:read2 u:rgheader u:AlignDir u:VarcallDir u:RealignDir t:49 t:51 t:53 t:62 t:81 u:stat t:328 t:331 t:334 u:perc_mapped t:341 u:chromosomes_processing_done u:chr_bamList t:612 u:chr_vcfList
        turbine::c::log "allocated u:sampleInfo=<${u:sampleInfo}> u:read1=<${u:read1}> u:read2=<${u:read2}> u:rgheader=<${u:rgheader}> u:AlignDir=<${u:AlignDir}>"
        turbine::c::log "allocated u:VarcallDir=<${u:VarcallDir}> u:RealignDir=<${u:RealignDir}> t:49=<${t:49}> t:51=<${t:51}> t:53=<${t:53}>"
        turbine::c::log "allocated t:62=<${t:62}> t:81=<${t:81}> u:stat=<${u:stat}> t:328=<${t:328}> t:331=<${t:331}>"
        turbine::c::log "allocated t:334=<${t:334}> u:perc_mapped=<${u:perc_mapped}> t:341=<${t:341}> u:chromosomes_processing_done=<${u:chromosomes_processing_done}> u:chr_bamList=<${u:chr_bamList}>"
        turbine::c::log "allocated t:612=<${t:612}> u:chr_vcfList=<${u:chr_vcfList}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 4 1 45 ] [ list file 1 1 47 ] [ list file 1 1 49 ] [ list file 6 1 50 ] [ list file 1 1 52 ] [ list file 1 1 53 ] [ list file 1 1 54 ] [ list file 2 1 56 ] [ list file 1 1 57 ] [ list file 1 1 58 ] [ list file 1 1 69 ] ] [ list 1 1 1 1 1 1 1 1 1 1 0 ] ] u:dedupsortedbam u:outbam u:rawvariant u:qcfile u:mergedbam u:mergedvariant u:flagstats u:alignedsam u:chr_bamListfile u:chr_vcfListfile t:618
        set v:sampleInfo [ turbine::split_impl ${v:sample} " " ]
        turbine::build_rec ${u:sampleInfo} ${v:sampleInfo} [ list container integer string ] 0 1
        set a:sampleName [ adlb::subscript_container ${u:sampleInfo} 0 ]
        set v:alias:sampleName [ turbine::retrieve_string ${a:sampleName} ]
        set a:read1 [ adlb::subscript_container ${u:sampleInfo} 1 ]
        set v:alias:read1 [ turbine::retrieve_string ${a:read1} ]
        turbine::store_string ${u:read1} ${v:alias:read1}
        set a:read2 [ adlb::subscript_container ${u:sampleInfo} 2 ]
        set v:alias:read2 [ turbine::retrieve_string ${a:read2} CACHED 1 ]
        turbine::store_string ${u:read2} ${v:alias:read2}
        set a:t:329 [ adlb::subscript_container ${u:stat} 4 ]
        set a:tot_mapped [ adlb::subscript_container ${t:328} 0 ]
        set a:t:332 [ adlb::subscript_container ${u:stat} 0 ]
        set a:tot_reads [ adlb::subscript_container ${t:331} 0 ]
        set a:t:335 [ adlb::subscript_container ${u:stat} 3 ]
        set a:tot_dups [ adlb::subscript_container ${t:334} 0 ]
        f:sed ${t:618} ${u:chr_vcfListfile} ${c:s_svariant_g} -100 "HARD" "RANK"
        turbine::rule [ list ${t:96} ] [ list __entry-if1 ${u:AlignDir} ${t:326} ${t:49} ${t:659} ${t:81} ${t:96} ${t:97} ${v:alias:read1} ${v:alias:read2} ${v:alias:sampleName} ${u:alignedsam} ${u:dedupsortedbam} ${u:qcfile} ${u:read1} ${u:read2} ${u:rgheader} ${u:vars} ]
        turbine::rule [ list ${u:chromosomes_processing_done} ] [ list __entry-explicit-wait3 ${u:RealignDir} ${u:VarcallDir} ${t:326} ${t:51} ${t:612} ${t:62} ${t:659} ${v:alias:sampleName} ${u:chr_bamList} ${u:chr_bamListfile} ${u:chr_vcfListfile} ${u:chromosomes_processing_done} ${u:mergedbam} ${u:outbam} ${u:qcfile} ${u:vars} ]
        turbine::rule [ list ${t:28} ${t:30} ${t:32} ] [ list __entry-async_op-sprintf ${t:28} ${t:30} ${t:32} ${v:alias:sampleName} ${u:rgheader} ]
        turbine::rule [ list ${t:55} ] "__entry-copy_in_filename ${t:55} {${u:qcfile}}"
        turbine::rule [ list ${a:t:329} ] "__entry-call_foreign-split-1 {${a:t:329}} ${t:328}"
        turbine::rule [ list ${a:t:332} ] "__entry-call_foreign-split-2 {${a:t:332}} ${t:331}"
        turbine::rule [ list ${a:t:335} ] "__entry-call_foreign-split-3 {${a:t:335}} ${t:334}"
        turbine::rule [ list ${a:tot_reads} ] [ list __entry-async_op-parse_float-1 ${a:tot_dups} ${a:tot_reads} ${t:341} ${t:346} ${t:347} ${v:alias:sampleName} ${u:perc_mapped} ${u:qcfile} ${u:vars} ]
        turbine::rule [ list ${a:tot_mapped} ] "__entry-async_op-parse_float-4 {${a:tot_mapped}} ${t:341}"
        turbine::rule [ list [ turbine::get_file_td ${t:618} ] ] "__entry-call_foreign-read-2 ${t:10} ${t:13} ${t:53} {${t:618}} {${v:sampleLines:1}} ${u:chr_vcfList} {${u:mergedvariant}} {${u:rawvariant}} ${u:samples_processing_done} ${u:vars}"
        turbine::rule [ list ${t:10} ] [ list __entry-optmerged-7 ${u:AlignDir} ${u:RealignDir} ${u:VarcallDir} ${t:10} ${t:13} ${t:326} ${t:49} ${t:51} ${t:53} ${t:612} ${t:62} ${t:659} ${v:alias:sampleName} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:flagstats} ${u:indices} ${u:mergedbam} ${u:mergedvariant} ${u:outbam} ${u:qcfile} ${u:rawvariant} ${u:stat} ${u:vars} ]
        turbine::rule [ list ${t:659} ] [ list __entry-optmerged-14 ${t:659} ${t:81} ${v:alias:sampleName} ${u:alignedsam} ${u:chr_bamListfile} ${u:chr_vcfListfile} ]
        adlb::write_refcount_decr ${u:sampleInfo} 1
    }
    turbine::read_refcount_decr ${t:346} 1
    turbine::read_refcount_decr ${t:347} 1
    turbine::read_refcount_decr ${t:28} 1
    turbine::read_refcount_decr ${t:10} 1
    turbine::read_refcount_decr ${t:32} 1
    turbine::read_refcount_decr ${t:55} 1
    turbine::read_refcount_decr ${t:13} 1
    turbine::read_refcount_decr ${t:30} 1
    turbine::read_refcount_decr ${t:96} 1
    turbine::read_refcount_decr ${t:97} 1
    turbine::read_refcount_decr ${u:indices} 1
    turbine::read_refcount_decr ${t:659} 1
    turbine::read_refcount_decr ${t:326} 1
    turbine::read_refcount_decr ${u:vars} 1
}


proc __entry-if1 { u:AlignDir t:326 t:49 t:659 t:81 t:96 t:97 v:alias:read1 v:alias:read2 v:alias:sampleName u:alignedsam u:dedupsortedbam u:qcfile u:read1 u:read2 u:rgheader u:vars } {
    # Var: $boolean v:__t:96 VALUE_OF [boolean:__t:96] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():126:35
    set v:__t:96 [ turbine::retrieve_integer ${t:96} CACHED 1 ]
    if { ${v:__t:96} } {
        # Var: string t:100 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():127:18
        # Var: file u:dedupsam /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():127:64
        # Var: string t:105 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():128:18
        # Var: file u:dedupbam /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():128:47
        # Var: string t:107 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():133:23
        # Var: string t:109 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():133:53
        # Var: string[int] t:111 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():133:72
        # Var: string t:112 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():133:72
        # Var: int t:114 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():134:9
        # Var: string t:115 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():134:20
        # Var: string t:139 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():149:3
        # Var: string t:143 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():152:28
        # Var: string[int] t:150 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():153:38
        lassign [ adlb::multicreate [ list string 1 1 70 ] [ list string 1 1 72 ] [ list string 1 1 74 ] [ list string 1 1 75 ] [ list container integer string 1 1 76 ] [ list string 1 1 77 ] [ list integer 1 1 78 ] [ list string 1 1 79 ] [ list string 1 1 80 ] [ list string 1 1 81 ] [ list container integer string 1 1 82 ] ] t:100 t:105 t:107 t:109 t:111 t:112 t:114 t:115 t:139 t:143 t:150
        turbine::c::log "allocated t:100=<${t:100}> t:105=<${t:105}> t:107=<${t:107}> t:109=<${t:109}> t:111=<${t:111}>"
        turbine::c::log "allocated t:112=<${t:112}> t:114=<${t:114}> t:115=<${t:115}> t:139=<${t:139}> t:143=<${t:143}>"
        turbine::c::log "allocated t:150=<${t:150}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 71 ] [ list file 1 1 73 ] ] [ list 1 1 ] ] u:dedupsam u:dedupbam
        turbine::array_kv_build ${t:150} [ ::adlb::dict_create 0 "--compression" 1 "1" ] 1 integer string
        turbine::container_reference ${u:vars} "BWADIR" ${t:107} string
        turbine::container_reference ${u:vars} "BWAINDEX" ${t:109} string
        turbine::container_reference ${u:vars} "BWAMEMPARAMS" ${t:112} string
        turbine::container_reference ${u:vars} "PBSCORES" ${t:115} string
        f:bwa_mem ${u:alignedsam} ${t:107} ${u:read1} ${u:read2} ${t:109} ${t:111} ${t:114} ${u:rgheader} -100 "HARD" "RANK"
        turbine::container_reference ${u:vars} "NOVOSORTDIR" ${t:143} string
        f:novosort ${u:dedupsortedbam} ${t:143} ${u:dedupbam} ${t:659} ${t:114} ${t:150} -100 "HARD" "RANK"
        turbine::rule [ list [ turbine::get_file_td ${u:alignedsam} ] ] [ list __entry-chain1 ${t:100} ${t:105} ${t:114} ${t:139} ${t:326} ${t:81} ${v:alias:sampleName} ${u:alignedsam} ${u:dedupbam} ${u:dedupsam} ${u:qcfile} ${u:vars} ]
        turbine::rule [ list ${t:659} ] [ list __entry-async_op-strcat-4 ${t:100} ${t:659} ${v:alias:sampleName} ${u:dedupsam} ]
        turbine::rule [ list ${u:AlignDir} ] [ list __entry-async_op-strcat-5 ${u:AlignDir} ${t:105} ${t:139} ${v:alias:sampleName} ${u:dedupbam} ]
        turbine::rule [ list ${t:112} ] "__entry-arr_copy_in_imm ${t:111} ${t:112}"
        turbine::rule [ list ${t:115} ] "__entry-async_op-parse_int ${t:114} ${t:115}"
        turbine::rule [ list ${t:326} ${t:49} [ turbine::get_file_td ${u:dedupsortedbam} ] ] [ list __entry-optmerged-2 ${t:326} ${t:49} ${v:alias:sampleName} ${u:dedupsortedbam} ${u:qcfile} ]
        turbine::read_refcount_decr ${t:111} 1
        turbine::read_refcount_decr ${t:143} 1
        turbine::read_refcount_decr ${t:150} 1
        turbine::read_refcount_decr ${t:109} 1
        turbine::read_refcount_decr ${t:107} 1
    } else {
        # Var: string t:170 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():172:19
        # Var: file u:alignedbam /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():172:48
        lassign [ adlb::multicreate [ list string 2 1 87 ] ] t:170
        turbine::c::log "allocated t:170=<${t:170}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 2 1 88 ] ] [ list 1 ] ] u:alignedbam
        turbine::read_refcount_incr ${u:AlignDir} 1
        turbine::read_refcount_incr ${u:rgheader} 1
        turbine::read_refcount_incr ${u:vars} 2
        turbine::file_read_refcount_incr ${u:qcfile} 1
        turbine::read_refcount_incr ${t:326} 1
        turbine::file_read_refcount_incr ${u:alignedsam} 1
        turbine::read_refcount_incr ${t:659} 1
        turbine::read_refcount_incr ${u:read1} 1
        turbine::read_refcount_incr ${t:97} 1
        turbine::read_refcount_incr ${u:read2} 1
        turbine::read_refcount_incr ${t:49} 1
        turbine::rule [ list ${u:AlignDir} ] [ list __entry-async_op-strcat-6 ${u:AlignDir} ${t:170} ${v:alias:sampleName} ${u:alignedbam} ]
        turbine::rule [ list ${t:97} ] [ list __entry-async_op-eq_string-1 ${u:AlignDir} ${t:170} ${t:326} ${t:49} ${t:659} ${t:81} ${t:97} ${v:alias:read1} ${v:alias:read2} ${v:alias:sampleName} ${u:alignedbam} ${u:alignedsam} ${u:dedupsortedbam} ${u:qcfile} ${u:read1} ${u:read2} ${u:rgheader} ${u:vars} ]
    }
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
    turbine::read_refcount_decr ${t:49} 1
    turbine::read_refcount_decr ${u:read2} 1
    turbine::read_refcount_decr ${t:97} 1
    turbine::read_refcount_decr ${u:read1} 1
    turbine::read_refcount_decr ${t:81} 1
    turbine::read_refcount_decr ${t:659} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::read_refcount_decr ${t:326} 1
    turbine::file_read_refcount_decr ${u:qcfile} 1
    turbine::read_refcount_decr ${u:vars} 1
    turbine::read_refcount_decr ${u:rgheader} 1
    turbine::read_refcount_decr ${u:AlignDir} 1
}


proc __entry-chain1 { t:100 t:105 t:114 t:139 t:326 t:81 v:alias:sampleName u:alignedsam u:dedupbam u:dedupsam u:qcfile u:vars } {
    # Var: string t:117 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():136:24
    lassign [ adlb::multicreate [ list string 1 1 83 ] ] t:117
    turbine::c::log "allocated t:117=<${t:117}>"
    turbine::container_reference ${u:vars} "SAMBLASTERDIR" ${t:117} string
    turbine::rule [ list ${t:100} ${t:117} ${t:81} ] [ list samblaster-app-leaf1 ${t:100} ${t:105} ${t:114} ${t:117} ${t:139} ${t:326} ${t:81} ${v:alias:sampleName} ${u:alignedsam} ${u:dedupbam} ${u:dedupsam} ${u:qcfile} ]
}


proc samblaster-app-leaf1 { t:100 t:105 t:114 t:117 t:139 t:326 t:81 v:alias:sampleName u:alignedsam u:dedupbam u:dedupsam u:qcfile } {
    # Var: $string v:samblasterdir RENAMED [$string:__v:samblasterdir] ./pipelinefunctions/align_dedup.swift:samblaster():27:43
    # Var: $string v:__filename:inputFile RENAMED [$string:__v:__filename:inputFile] ./pipelinefunctions/align_dedup.swift:samblaster():27:43
    # Var: $string v:__filename:output RENAMED [$string:__v:__filename:output] ./pipelinefunctions/align_dedup.swift:samblaster():27:43
    # Var: $file v:inputFile:1 RENAMED [$file:__v:inputFile] ./pipelinefunctions/align_dedup.swift:samblaster():27:43
    # Var: $file v:output RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:samblaster():27:43
    set v:samblasterdir [ turbine::retrieve_string ${t:117} CACHED 1 ]
    set v:__filename:inputFile [ turbine::retrieve_string ${t:81} CACHED 1 ]
    set v:__filename:output [ turbine::retrieve_string ${t:100} CACHED 1 ]
    set v:inputFile:1 [ turbine::retrieve_file ${u:alignedsam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:samblasterdir "-M" "-i" ${v:__filename:inputFile} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external ${v:samblasterdir} [ dict create "stdout" ${v:__filename:output} ] "-M" "-i" ${v:__filename:inputFile}
    turbine::store_file ${u:dedupsam} v:output 0
    turbine::rule [ list ] [ list __entry-chain2 ${t:105} ${t:114} ${t:139} ${t:326} ${v:alias:sampleName} ${u:dedupbam} ${u:dedupsam} ${u:qcfile} ]
    turbine::decr_local_file_refcount v:output
}


proc __entry-chain2 { t:105 t:114 t:139 t:326 v:alias:sampleName u:dedupbam u:dedupsam u:qcfile } {
    # Var: string[int] t:124 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():137:89
    lassign [ adlb::multicreate [ list container integer string 1 1 84 ] ] t:124
    turbine::c::log "allocated t:124=<${t:124}>"
    turbine::array_kv_build ${t:124} [ ::adlb::dict_create 0 "-u" ] 1 integer string
    f:samtools_view ${u:dedupbam} ${t:326} ${u:dedupsam} ${t:114} ${t:124} -100 "HARD" "RANK"
    turbine::rule [ list ${t:105} ${t:326} [ turbine::get_file_td ${u:dedupbam} ] ] [ list __entry-chain3 ${t:105} ${t:139} ${t:326} ${v:alias:sampleName} ${u:dedupbam} ${u:qcfile} ]
    turbine::file_read_refcount_decr ${u:dedupsam} 1
    turbine::read_refcount_decr ${t:124} 1
    turbine::read_refcount_decr ${t:114} 1
}


proc __entry-chain3 { t:105 t:139 t:326 v:alias:sampleName u:dedupbam u:qcfile } {
    # Var: $string v:samtoolsdir RENAMED [$string:__v:samtoolsdir]
    # Var: $string v:inputFile RENAMED [$string:__v:inputFile]
    # Var: $int v:numAlignments RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:129 VALUE_OF [boolean:__t:129]
    # Var: $boolean v:t:137 VALUE_OF [boolean:__t:137]
    set v:samtoolsdir [ turbine::retrieve_string ${t:326} CACHED 1 ]
    set v:inputFile [ turbine::retrieve_string ${t:105} CACHED 1 ]
    set v:numAlignments [ alignment::samtools_view ${v:samtoolsdir} ${v:inputFile} ]
    set v:t:129 [ expr { ${v:numAlignments} == 0 } ]
    set v:t:137 [ expr { ${v:numAlignments} > 0 } ]
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if2 ${v:alias:sampleName} ${v:inputFile} ${v:t:129} ${u:qcfile} ]
    turbine::reset_priority
    turbine::rule [ list ${t:139} ] "__entry-async_op-assert ${t:139} ${v:t:137}"
    turbine::file_read_refcount_decr ${u:dedupbam} 1
}


proc __entry-if2 { v:alias:sampleName v:inputFile v:t:129 u:qcfile } {
    if { ${v:t:129} } {
        # Var: string t:131 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():141:17
        # Var: $string v:t:131 VALUE_OF [string:__t:131]
        lassign [ adlb::multicreate [ list string 1 1 85 ] ] t:131
        turbine::c::log "allocated t:131=<${t:131}>"
        set v:t:131 "${v:alias:sampleName}\tALIGNMENT\tFAIL\tbwa mem command did not produce alignments for ${v:inputFile}\n"
        turbine::store_string ${t:131} ${v:t:131}
        f:echo ${u:qcfile} ${t:131} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:131} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-async_op-assert { t:139 v:t:137 } {
    # Var: $string v:t:139:1 VALUE_OF [string:__t:139]
    # Var: $void v:t:136 VALUE_OF [void:__t:136]
    set v:t:139:1 [ turbine::retrieve_string ${t:139} CACHED 1 ]
    turbine::assert_impl ${v:t:137} ${v:t:139:1}
}


proc __entry-async_op-strcat-4 { t:100 t:659 v:alias:sampleName u:dedupsam } {
    # Var: $string v:t:659:4 VALUE_OF [string:__t:659]
    # Var: $string v:t:100 VALUE_OF [string:__t:100]
    set v:t:659:4 [ turbine::retrieve_string ${t:659} CACHED 1 ]
    set v:t:100 "${v:t:659:4}/align/${v:alias:sampleName}.wdups.sam"
    turbine::store_string ${t:100} ${v:t:100}
    turbine::set_filename_val ${u:dedupsam} ${v:t:100}
}


proc __entry-async_op-strcat-5 { u:AlignDir t:105 t:139 v:alias:sampleName u:dedupbam } {
    # Var: $string v:AlignDir:3 VALUE_OF [string:AlignDir]
    # Var: $string v:t:105 VALUE_OF [string:__t:105]
    # Var: $string v:t:139 VALUE_OF [string:__t:139]
    set v:AlignDir:3 [ turbine::retrieve_string ${u:AlignDir} CACHED 1 ]
    set v:t:105 "${v:AlignDir:3}${v:alias:sampleName}.wdups.bam"
    turbine::store_string ${t:105} ${v:t:105}
    turbine::set_filename_val ${u:dedupbam} ${v:t:105}
    set v:t:139 "bwa mem command did not produce alignments for ${v:t:105} alignment failed"
    turbine::store_string ${t:139} ${v:t:139}
}


proc __entry-arr_copy_in_imm { t:111 t:112 } {
    # Var: $string v:t:112 VALUE_OF [string:__t:112]
    set v:t:112 [ turbine::retrieve_string ${t:112} CACHED 1 ]
    turbine::array_kv_build ${t:111} [ ::adlb::dict_create 0 ${v:t:112} ] 1 integer string
}


proc __entry-async_op-parse_int { t:114 t:115 } {
    # Var: $string v:t:115 VALUE_OF [string:__t:115]
    # Var: $int v:t:114 VALUE_OF [int:__t:114]
    set v:t:115 [ turbine::retrieve_string ${t:115} CACHED 1 ]
    set v:t:114 [ turbine::parse_int_impl ${v:t:115} 10 ]
    turbine::store_integer ${t:114} ${v:t:114}
}


proc __entry-optmerged-2 { t:326 t:49 v:alias:sampleName u:dedupsortedbam u:qcfile } {
    # Var: $string v:t:49:2 VALUE_OF [string:__t:49]
    # Var: $string v:t:166 VALUE_OF [string:__t:166]
    # Var: $string v:samtoolsdir:1 RENAMED [$string:__v:samtoolsdir]
    # Var: $int v:numAlignments:1 RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:156 VALUE_OF [boolean:__t:156]
    # Var: $boolean v:t:164 VALUE_OF [boolean:__t:164]
    # Var: $void v:t:163 VALUE_OF [void:__t:163]
    set v:t:49:2 [ turbine::retrieve_string ${t:49} CACHED 1 ]
    set v:t:166 "novosort command did not produce alignments for ${v:t:49:2} Sorting bam failed"
    set v:samtoolsdir:1 [ turbine::retrieve_string ${t:326} CACHED 1 ]
    set v:numAlignments:1 [ alignment::samtools_view ${v:samtoolsdir:1} ${v:t:49:2} ]
    set v:t:156 [ expr { ${v:numAlignments:1} == 0 } ]
    set v:t:164 [ expr { ${v:numAlignments:1} > 0 } ]
    turbine::assert_impl ${v:t:164} ${v:t:166}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if3 ${v:alias:sampleName} ${v:t:156} ${v:t:49:2} ${u:qcfile} ]
    turbine::reset_priority
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
}


proc __entry-if3 { v:alias:sampleName v:t:156 v:t:49:2 u:qcfile } {
    if { ${v:t:156} } {
        # Var: string t:158 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():158:17
        # Var: $string v:t:158 VALUE_OF [string:__t:158]
        lassign [ adlb::multicreate [ list string 1 1 86 ] ] t:158
        turbine::c::log "allocated t:158=<${t:158}>"
        set v:t:158 "${v:alias:sampleName}\tALIGNMENT\tFAIL\tnovosort command did not produce alignments for ${v:t:49:2}\n"
        turbine::store_string ${t:158} ${v:t:158}
        f:echo ${u:qcfile} ${t:158} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:158} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-async_op-strcat-6 { u:AlignDir t:170 v:alias:sampleName u:alignedbam } {
    # Var: $string v:AlignDir:4 VALUE_OF [string:AlignDir]
    # Var: $string v:t:170 VALUE_OF [string:__t:170]
    set v:AlignDir:4 [ turbine::retrieve_string ${u:AlignDir} CACHED 1 ]
    set v:t:170 "${v:AlignDir:4}${v:alias:sampleName}.nodups.bam"
    turbine::store_string ${t:170} ${v:t:170}
    turbine::set_filename_val ${u:alignedbam} ${v:t:170}
}


proc __entry-async_op-eq_string-1 { u:AlignDir t:170 t:326 t:49 t:659 t:81 t:97 v:alias:read1 v:alias:read2 v:alias:sampleName u:alignedbam u:alignedsam u:dedupsortedbam u:qcfile u:read1 u:read2 u:rgheader u:vars } {
    # Var: $string v:t:97:1 VALUE_OF [string:__t:97]
    # Var: $boolean v:t:172 VALUE_OF [boolean:__t:172]
    set v:t:97:1 [ turbine::retrieve_string ${t:97} CACHED 1 ]
    set v:t:172 [ string equal ${v:t:97:1} "PICARD" ]
    if { ${v:t:172} } {
        # Var: file u:alignedsortedbam /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():176:55
        # Var: file u:metricsfile /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():177:50
        # Var: string t:180 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():179:24
        # Var: string t:182 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():179:54
        # Var: string[int] t:184 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():179:73
        # Var: string t:185 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():179:73
        # Var: int t:187 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():180:10
        # Var: string t:188 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():180:21
        # Var: string t:210 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():194:4
        # Var: string t:214 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():199:31
        # Var: string[int] t:221 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():200:26
        # Var: string t:241 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():217:4
        lassign [ adlb::multicreate [ list string 1 1 91 ] [ list string 1 1 92 ] [ list container integer string 1 1 93 ] [ list string 1 1 94 ] [ list integer 1 1 95 ] [ list string 1 1 96 ] [ list string 1 1 97 ] [ list string 1 1 98 ] [ list container integer string 1 1 99 ] [ list string 1 1 100 ] ] t:180 t:182 t:184 t:185 t:187 t:188 t:210 t:214 t:221 t:241
        turbine::c::log "allocated t:180=<${t:180}> t:182=<${t:182}> t:184=<${t:184}> t:185=<${t:185}> t:187=<${t:187}>"
        turbine::c::log "allocated t:188=<${t:188}> t:210=<${t:210}> t:214=<${t:214}> t:221=<${t:221}> t:241=<${t:241}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 89 ] [ list file 0 1 90 ] ] [ list 1 1 ] ] u:alignedsortedbam u:metricsfile
        turbine::read_refcount_incr ${u:AlignDir} 1
        turbine::read_refcount_incr ${t:170} 1
        turbine::read_refcount_incr ${t:49} 1
        turbine::array_kv_build ${t:221} [ ::adlb::dict_create ] 1 integer string
        turbine::container_reference ${u:vars} "BWADIR" ${t:180} string
        turbine::container_reference ${u:vars} "BWAINDEX" ${t:182} string
        turbine::container_reference ${u:vars} "BWAMEMPARAMS" ${t:185} string
        turbine::container_reference ${u:vars} "PBSCORES" ${t:188} string
        f:bwa_mem ${u:alignedsam} ${t:180} ${u:read1} ${u:read2} ${t:182} ${t:184} ${t:187} ${u:rgheader} -100 "HARD" "RANK"
        turbine::container_reference ${u:vars} "NOVOSORTDIR" ${t:214} string
        f:novosort ${u:alignedsortedbam} ${t:214} ${u:alignedbam} ${t:659} ${t:187} ${t:221} -100 "HARD" "RANK"
        turbine::rule [ list [ turbine::get_file_td ${u:alignedsam} ] ] [ list __entry-chain5 ${t:170} ${t:187} ${t:210} ${t:326} ${v:alias:sampleName} ${u:alignedbam} ${u:alignedsam} ${u:qcfile} ]
        turbine::rule [ list ${t:185} ] "__entry-arr_copy_in_imm-1 ${t:184} ${t:185}"
        turbine::rule [ list ${t:188} ] "__entry-async_op-parse_int-1 ${t:187} ${t:188}"
        turbine::rule [ list ${t:170} ] "__entry-async_op-strcat-7 ${t:170} ${t:210}"
        turbine::rule [ list ${t:49} ] "__entry-async_op-strcat-8 ${t:241} ${t:49}"
        turbine::rule [ list ${u:AlignDir} ] [ list __entry-optmerged-3 ${u:AlignDir} ${t:241} ${t:326} ${t:49} ${t:659} ${v:alias:sampleName} ${u:alignedsortedbam} ${u:dedupsortedbam} ${u:metricsfile} ${u:qcfile} ${u:vars} ]
        turbine::read_refcount_decr ${t:221} 1
        turbine::read_refcount_decr ${t:214} 1
        turbine::read_refcount_decr ${t:180} 1
        turbine::read_refcount_decr ${t:184} 1
        turbine::read_refcount_decr ${t:182} 1
    } else {
        # Var: string t:246 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():223:7
        lassign [ adlb::multicreate [ list string 1 1 106 ] ] t:246
        turbine::c::log "allocated t:246=<${t:246}>"
        turbine::read_refcount_incr ${u:rgheader} 1
        turbine::read_refcount_incr ${t:326} 2
        turbine::file_read_refcount_incr ${u:alignedsam} 1
        turbine::read_refcount_incr ${t:81} 1
        turbine::read_refcount_incr ${u:read1} 1
        turbine::read_refcount_incr ${u:read2} 1
        turbine::file_read_refcount_incr ${u:alignedbam} 2
        turbine::file_read_refcount_incr ${u:dedupsortedbam} 1
        turbine::container_reference ${u:vars} "ALIGNERTOOL" ${t:246} string
        turbine::rule [ list [ turbine::get_file_td ${u:alignedbam} ] ] [ list __entry-explicit-wait1 ${t:326} ${t:49} ${t:659} ${v:alias:sampleName} ${u:alignedbam} ${u:dedupsortedbam} ${u:qcfile} ${u:vars} ]
        turbine::rule [ list ${t:246} ] [ list __entry-async_op-eq_string-2 ${t:246} ${t:326} ${t:81} ${v:alias:read1} ${v:alias:read2} ${u:alignedbam} ${u:alignedsam} ${u:read1} ${u:read2} ${u:rgheader} ${u:vars} ]
        turbine::rule [ list ${t:170} ${t:326} ] [ list __entry-optmerged-5 ${t:170} ${t:326} ${v:alias:sampleName} ${u:qcfile} ]
    }
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
    turbine::read_refcount_decr ${t:49} 1
    turbine::read_refcount_decr ${t:170} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${u:read2} 1
    turbine::read_refcount_decr ${u:read1} 1
    turbine::read_refcount_decr ${t:81} 1
    turbine::read_refcount_decr ${t:659} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::read_refcount_decr ${t:326} 1
    turbine::file_read_refcount_decr ${u:qcfile} 1
    turbine::read_refcount_decr ${u:vars} 1
    turbine::read_refcount_decr ${u:rgheader} 1
    turbine::read_refcount_decr ${u:AlignDir} 1
}


proc __entry-chain5 { t:170 t:187 t:210 t:326 v:alias:sampleName u:alignedbam u:alignedsam u:qcfile } {
    # Var: string[int] t:195 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():182:94
    lassign [ adlb::multicreate [ list container integer string 1 1 101 ] ] t:195
    turbine::c::log "allocated t:195=<${t:195}>"
    turbine::array_kv_build ${t:195} [ ::adlb::dict_create 0 "-u" ] 1 integer string
    f:samtools_view ${u:alignedbam} ${t:326} ${u:alignedsam} ${t:187} ${t:195} -100 "HARD" "RANK"
    turbine::rule [ list ${t:170} ${t:326} [ turbine::get_file_td ${u:alignedbam} ] ] [ list __entry-chain6 ${t:170} ${t:210} ${t:326} ${v:alias:sampleName} ${u:alignedbam} ${u:qcfile} ]
    turbine::read_refcount_decr ${t:187} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::read_refcount_decr ${t:195} 1
}


proc __entry-chain6 { t:170 t:210 t:326 v:alias:sampleName u:alignedbam u:qcfile } {
    # Var: $string v:samtoolsdir:2 RENAMED [$string:__v:samtoolsdir]
    # Var: $string v:inputFile:3 RENAMED [$string:__v:inputFile]
    # Var: $int v:numAlignments:2 RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:200 VALUE_OF [boolean:__t:200]
    # Var: $boolean v:t:208 VALUE_OF [boolean:__t:208]
    set v:samtoolsdir:2 [ turbine::retrieve_string ${t:326} CACHED 1 ]
    set v:inputFile:3 [ turbine::retrieve_string ${t:170} CACHED 1 ]
    set v:numAlignments:2 [ alignment::samtools_view ${v:samtoolsdir:2} ${v:inputFile:3} ]
    set v:t:200 [ expr { ${v:numAlignments:2} == 0 } ]
    set v:t:208 [ expr { ${v:numAlignments:2} > 0 } ]
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if5 ${v:alias:sampleName} ${v:inputFile:3} ${v:t:200} ${u:qcfile} ]
    turbine::reset_priority
    turbine::rule [ list ${t:210} ] "__entry-async_op-assert-1 ${t:210} ${v:t:208}"
    turbine::file_read_refcount_decr ${u:alignedbam} 1
}


proc __entry-if5 { v:alias:sampleName v:inputFile:3 v:t:200 u:qcfile } {
    if { ${v:t:200} } {
        # Var: string t:202 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():186:18
        # Var: $string v:t:202 VALUE_OF [string:__t:202]
        lassign [ adlb::multicreate [ list string 1 1 102 ] ] t:202
        turbine::c::log "allocated t:202=<${t:202}>"
        set v:t:202 "${v:alias:sampleName}\tALIGNMENT\tFAIL\tbwa mem command did not produce alignments for ${v:inputFile:3}\n"
        turbine::store_string ${t:202} ${v:t:202}
        f:echo ${u:qcfile} ${t:202} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:202} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-async_op-assert-1 { t:210 v:t:208 } {
    # Var: $string v:t:210:1 VALUE_OF [string:__t:210]
    # Var: $void v:t:207 VALUE_OF [void:__t:207]
    set v:t:210:1 [ turbine::retrieve_string ${t:210} CACHED 1 ]
    turbine::assert_impl ${v:t:208} ${v:t:210:1}
}


proc __entry-arr_copy_in_imm-1 { t:184 t:185 } {
    # Var: $string v:t:185 VALUE_OF [string:__t:185]
    set v:t:185 [ turbine::retrieve_string ${t:185} CACHED 1 ]
    turbine::array_kv_build ${t:184} [ ::adlb::dict_create 0 ${v:t:185} ] 1 integer string
}


proc __entry-async_op-parse_int-1 { t:187 t:188 } {
    # Var: $string v:t:188 VALUE_OF [string:__t:188]
    # Var: $int v:t:187 VALUE_OF [int:__t:187]
    set v:t:188 [ turbine::retrieve_string ${t:188} CACHED 1 ]
    set v:t:187 [ turbine::parse_int_impl ${v:t:188} 10 ]
    turbine::store_integer ${t:187} ${v:t:187}
}


proc __entry-async_op-strcat-7 { t:170 t:210 } {
    # Var: $string v:t:170:2 VALUE_OF [string:__t:170]
    # Var: $string v:t:210 VALUE_OF [string:__t:210]
    set v:t:170:2 [ turbine::retrieve_string ${t:170} CACHED 1 ]
    set v:t:210 "bwa mem command did not produce alignments for ${v:t:170:2} alignment failed"
    turbine::store_string ${t:210} ${v:t:210}
}


proc __entry-async_op-strcat-8 { t:241 t:49 } {
    # Var: $string v:t:49:3 VALUE_OF [string:__t:49]
    # Var: $string v:t:241 VALUE_OF [string:__t:241]
    set v:t:49:3 [ turbine::retrieve_string ${t:49} CACHED 1 ]
    set v:t:241 "picard command did not produce alignments for ${v:t:49:3} deduplication failed"
    turbine::store_string ${t:241} ${v:t:241}
}


proc __entry-optmerged-3 { u:AlignDir t:241 t:326 t:49 t:659 v:alias:sampleName u:alignedsortedbam u:dedupsortedbam u:metricsfile u:qcfile u:vars } {
    # Var: $string v:AlignDir:5 VALUE_OF [string:AlignDir]
    # Var: $string v:t:176 VALUE_OF [string:__t:176]
    # Var: $string v:t:178 VALUE_OF [string:__t:178]
    set v:AlignDir:5 [ turbine::retrieve_string ${u:AlignDir} CACHED 1 ]
    set v:t:176 "${v:AlignDir:5}${v:alias:sampleName}.nodups.sorted.bam"
    set v:t:178 "${v:AlignDir:5}${v:alias:sampleName}.picard.metrics"
    turbine::set_filename_val ${u:alignedsortedbam} ${v:t:176}
    turbine::set_filename_val ${u:metricsfile} ${v:t:178}
    turbine::rule [ list [ turbine::get_file_td ${u:alignedsortedbam} ] ] [ list __entry-chain7 ${t:241} ${t:326} ${t:49} ${t:659} ${v:alias:sampleName} ${v:t:176} ${v:t:178} ${u:alignedsortedbam} ${u:dedupsortedbam} ${u:metricsfile} ${u:qcfile} ${u:vars} ]
}


proc __entry-chain7 { t:241 t:326 t:49 t:659 v:alias:sampleName v:t:176 v:t:178 u:alignedsortedbam u:dedupsortedbam u:metricsfile u:qcfile u:vars } {
    # Var: string t:222 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():202:40
    # Var: string t:224 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():202:57
    lassign [ adlb::multicreate [ list string 1 1 103 ] [ list string 1 1 104 ] ] t:222 t:224
    turbine::c::log "allocated t:222=<${t:222}> t:224=<${t:224}>"
    turbine::container_reference ${u:vars} "JAVADIR" ${t:222} string
    turbine::container_reference ${u:vars} "PICARDDIR" ${t:224} string
    turbine::rule [ list ${t:222} ${t:224} ${t:49} ${t:659} ] [ list picard-app-leaf1 ${t:222} ${t:224} ${t:241} ${t:326} ${t:49} ${t:659} ${v:alias:sampleName} ${v:t:176} ${v:t:178} ${u:alignedsortedbam} ${u:dedupsortedbam} ${u:metricsfile} ${u:qcfile} ]
}


proc picard-app-leaf1 { t:222 t:224 t:241 t:326 t:49 t:659 v:alias:sampleName v:t:176 v:t:178 u:alignedsortedbam u:dedupsortedbam u:metricsfile u:qcfile } {
    # Var: $string v:javadir RENAMED [$string:__v:javadir] ./pipelinefunctions/align_dedup.swift:picard():45:212
    # Var: $string v:picarddir RENAMED [$string:__v:picarddir] ./pipelinefunctions/align_dedup.swift:picard():45:212
    # Var: $string v:__filename:outputfile RENAMED [$string:__v:__filename:outputfile] ./pipelinefunctions/align_dedup.swift:picard():45:212
    # Var: $string v:tmpdir RENAMED [$string:__v:tmpdir] ./pipelinefunctions/align_dedup.swift:picard():45:212
    # Var: $file v:inputFile:5 RENAMED [$file:__v:inputFile] ./pipelinefunctions/align_dedup.swift:picard():45:212
    # Var: $file v:outputfile RENAMED [$file:__v:outputfile] ./pipelinefunctions/align_dedup.swift:picard():45:212
    # Var: $file v:metricsfile RENAMED [$file:__v:metricsfile] ./pipelinefunctions/align_dedup.swift:picard():45:212
    set v:javadir [ turbine::retrieve_string ${t:222} CACHED 1 ]
    set v:picarddir [ turbine::retrieve_string ${t:224} CACHED 1 ]
    set v:__filename:outputfile [ turbine::retrieve_string ${t:49} CACHED 1 ]
    set v:tmpdir [ turbine::retrieve_string ${t:659} CACHED 1 ]
    set v:inputFile:5 [ turbine::retrieve_file ${u:alignedsortedbam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile [ turbine::create_local_file_ref ${v:__filename:outputfile} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:metricsfile [ turbine::create_local_file_ref ${v:t:178} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir "-Xmx8g" "-jar" ${v:picarddir} "MarkDuplicates" "INPUT=" ${v:t:176} "OUTPUT=" ${v:__filename:outputfile} "METRICS_FILE=" ${v:t:178} "TMP_DIR=" ${v:tmpdir} "ASSUME_SORTED=true" "MAX_RECORDS_IN_RAM=null" "CREATE_INDEX=true" "VALIDATION_STRINGENCY=SILENT" [ dict create ] ]
    turbine::exec_external ${v:javadir} [ dict create ] "-Xmx8g" "-jar" ${v:picarddir} "MarkDuplicates" "INPUT=" ${v:t:176} "OUTPUT=" ${v:__filename:outputfile} "METRICS_FILE=" ${v:t:178} "TMP_DIR=" ${v:tmpdir} "ASSUME_SORTED=true" "MAX_RECORDS_IN_RAM=null" "CREATE_INDEX=true" "VALIDATION_STRINGENCY=SILENT"
    turbine::store_file ${u:dedupsortedbam} v:outputfile 0
    turbine::store_file ${u:metricsfile} v:metricsfile 0
    turbine::rule [ list ${t:326} ] [ list __entry-chain8 ${t:241} ${t:326} ${v:__filename:outputfile} ${v:alias:sampleName} ${u:qcfile} ]
    turbine::decr_local_file_refcount v:outputfile
    turbine::decr_local_file_refcount v:metricsfile
}


proc __entry-chain8 { t:241 t:326 v:__filename:outputfile v:alias:sampleName u:qcfile } {
    # Var: $string v:samtoolsdir:3 RENAMED [$string:__v:samtoolsdir]
    # Var: $int v:numAlignments:3 RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:231 VALUE_OF [boolean:__t:231]
    # Var: $boolean v:t:239 VALUE_OF [boolean:__t:239]
    set v:samtoolsdir:3 [ turbine::retrieve_string ${t:326} CACHED 1 ]
    set v:numAlignments:3 [ alignment::samtools_view ${v:samtoolsdir:3} ${v:__filename:outputfile} ]
    set v:t:231 [ expr { ${v:numAlignments:3} == 0 } ]
    set v:t:239 [ expr { ${v:numAlignments:3} > 0 } ]
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if6 ${v:__filename:outputfile} ${v:alias:sampleName} ${v:t:231} ${u:qcfile} ]
    turbine::reset_priority
    turbine::rule [ list ${t:241} ] "__entry-async_op-assert-2 ${t:241} ${v:t:239}"
}


proc __entry-if6 { v:__filename:outputfile v:alias:sampleName v:t:231 u:qcfile } {
    if { ${v:t:231} } {
        # Var: string t:233 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():208:18
        # Var: $string v:t:233 VALUE_OF [string:__t:233]
        lassign [ adlb::multicreate [ list string 1 1 105 ] ] t:233
        turbine::c::log "allocated t:233=<${t:233}>"
        set v:t:233 "${v:alias:sampleName}\tALIGNMENT\tFAIL\tpicard command did not produce alignments for ${v:__filename:outputfile}\n"
        turbine::store_string ${t:233} ${v:t:233}
        f:echo ${u:qcfile} ${t:233} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:233} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-async_op-assert-2 { t:241 v:t:239 } {
    # Var: $string v:t:241:1 VALUE_OF [string:__t:241]
    # Var: $void v:t:238 VALUE_OF [void:__t:238]
    set v:t:241:1 [ turbine::retrieve_string ${t:241} CACHED 1 ]
    turbine::assert_impl ${v:t:239} ${v:t:241:1}
}


proc __entry-explicit-wait1 { t:326 t:49 t:659 v:alias:sampleName u:alignedbam u:dedupsortedbam u:qcfile u:vars } {
    # Var: string t:300 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():255:30
    # Var: int t:304 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():256:9
    # Var: string t:305 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():256:20
    # Var: string[int] t:307 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():256:40
    lassign [ adlb::multicreate [ list string 1 1 107 ] [ list integer 1 1 108 ] [ list string 1 1 109 ] [ list container integer string 1 1 110 ] ] t:300 t:304 t:305 t:307
    turbine::c::log "allocated t:300=<${t:300}> t:304=<${t:304}> t:305=<${t:305}> t:307=<${t:307}>"
    turbine::array_kv_build ${t:307} [ ::adlb::dict_create 0 "--markDuplicates" ] 1 integer string
    turbine::container_reference ${u:vars} "NOVOSORTDIR" ${t:300} string
    turbine::container_reference ${u:vars} "PBSCORES" ${t:305} string
    f:novosort ${u:dedupsortedbam} ${t:300} ${u:alignedbam} ${t:659} ${t:304} ${t:307} -100 "HARD" "RANK"
    turbine::rule [ list ${t:305} ] "__entry-async_op-parse_int-2 ${t:304} ${t:305}"
    turbine::rule [ list ${t:326} ${t:49} [ turbine::get_file_td ${u:dedupsortedbam} ] ] [ list __entry-optmerged-4 ${t:326} ${t:49} ${v:alias:sampleName} ${u:dedupsortedbam} ${u:qcfile} ]
    turbine::read_refcount_decr ${t:300} 1
    turbine::read_refcount_decr ${t:659} 1
    turbine::read_refcount_decr ${t:307} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${t:304} 1
}


proc __entry-async_op-parse_int-2 { t:304 t:305 } {
    # Var: $string v:t:305 VALUE_OF [string:__t:305]
    # Var: $int v:t:304 VALUE_OF [int:__t:304]
    set v:t:305 [ turbine::retrieve_string ${t:305} CACHED 1 ]
    set v:t:304 [ turbine::parse_int_impl ${v:t:305} 10 ]
    turbine::store_integer ${t:304} ${v:t:304}
}


proc __entry-optmerged-4 { t:326 t:49 v:alias:sampleName u:dedupsortedbam u:qcfile } {
    # Var: $string v:t:49:4 VALUE_OF [string:__t:49]
    # Var: $string v:t:322 VALUE_OF [string:__t:322]
    # Var: $string v:samtoolsdir:4 RENAMED [$string:__v:samtoolsdir]
    # Var: $int v:numAlignments:4 RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:312 VALUE_OF [boolean:__t:312]
    # Var: $boolean v:t:320 VALUE_OF [boolean:__t:320]
    # Var: $void v:t:319 VALUE_OF [void:__t:319]
    set v:t:49:4 [ turbine::retrieve_string ${t:49} CACHED 1 ]
    set v:t:322 "novosort command did not produce alignments for ${v:t:49:4}sorting and deduplication failed"
    set v:samtoolsdir:4 [ turbine::retrieve_string ${t:326} CACHED 1 ]
    set v:numAlignments:4 [ alignment::samtools_view ${v:samtoolsdir:4} ${v:t:49:4} ]
    set v:t:312 [ expr { ${v:numAlignments:4} == 0 } ]
    set v:t:320 [ expr { ${v:numAlignments:4} > 0 } ]
    turbine::assert_impl ${v:t:320} ${v:t:322}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if9 ${v:alias:sampleName} ${v:t:312} ${v:t:49:4} ${u:qcfile} ]
    turbine::reset_priority
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
}


proc __entry-if9 { v:alias:sampleName v:t:312 v:t:49:4 u:qcfile } {
    if { ${v:t:312} } {
        # Var: string t:314 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():263:19
        # Var: $string v:t:314 VALUE_OF [string:__t:314]
        lassign [ adlb::multicreate [ list string 1 1 111 ] ] t:314
        turbine::c::log "allocated t:314=<${t:314}>"
        set v:t:314 "${v:alias:sampleName}\tALIGNMENT\tFAIL\tnovosort command did not produce alignments for ${v:t:49:4}\n"
        turbine::store_string ${t:314} ${v:t:314}
        f:echo ${u:qcfile} ${t:314} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:314} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-async_op-eq_string-2 { t:246 t:326 t:81 v:alias:read1 v:alias:read2 u:alignedbam u:alignedsam u:read1 u:read2 u:rgheader u:vars } {
    # Var: $string v:t:246 VALUE_OF [string:__t:246]
    # Var: $boolean v:t:245 VALUE_OF [boolean:__t:245]
    set v:t:246 [ turbine::retrieve_string ${t:246} CACHED 1 ]
    set v:t:245 [ string equal ${v:t:246} "BWAMEM" ]
    if { ${v:t:245} } {
        # Var: string t:249 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():224:25
        # Var: string t:251 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():224:55
        # Var: string[int] t:253 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():224:74
        # Var: string t:254 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():224:74
        # Var: int t:256 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():225:11
        # Var: string t:257 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():225:22
        lassign [ adlb::multicreate [ list string 1 1 112 ] [ list string 1 1 113 ] [ list container integer string 1 1 114 ] [ list string 1 1 115 ] [ list integer 1 1 116 ] [ list string 1 1 117 ] ] t:249 t:251 t:253 t:254 t:256 t:257
        turbine::c::log "allocated t:249=<${t:249}> t:251=<${t:251}> t:253=<${t:253}> t:254=<${t:254}> t:256=<${t:256}>"
        turbine::c::log "allocated t:257=<${t:257}>"
        turbine::read_refcount_incr ${u:vars} 1
        turbine::container_reference ${u:vars} "BWADIR" ${t:249} string
        turbine::container_reference ${u:vars} "BWAINDEX" ${t:251} string
        turbine::container_reference ${u:vars} "BWAMEMPARAMS" ${t:254} string
        turbine::container_reference ${u:vars} "PBSCORES" ${t:257} string
        f:bwa_mem ${u:alignedsam} ${t:249} ${u:read1} ${u:read2} ${t:251} ${t:253} ${t:256} ${u:rgheader} -100 "HARD" "RANK"
        turbine::rule [ list [ turbine::get_file_td ${u:alignedsam} ] ] "__entry-chain9 ${t:256} ${t:326} {${u:alignedbam}} {${u:alignedsam}}"
        turbine::rule [ list ${t:254} ] "__entry-arr_copy_in_imm-2 ${t:253} ${t:254}"
        turbine::rule [ list ${t:257} ] "__entry-async_op-parse_int-3 ${t:256} ${t:257}"
        turbine::read_refcount_decr ${t:253} 1
        turbine::read_refcount_decr ${t:249} 1
        turbine::read_refcount_decr ${t:251} 1
    } else {
        # Var: string t:266 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():231:27
        # Var: string t:268 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():231:63
        # Var: int t:273 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():232:40
        # Var: string t:274 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():232:51
        lassign [ adlb::multicreate [ list string 1 1 119 ] [ list string 1 1 120 ] [ list integer 1 1 121 ] [ list string 1 1 122 ] ] t:266 t:268 t:273 t:274
        turbine::c::log "allocated t:266=<${t:266}> t:268=<${t:268}> t:273=<${t:273}> t:274=<${t:274}>"
        turbine::read_refcount_incr ${u:rgheader} 1
        turbine::read_refcount_incr ${t:81} 1
        turbine::container_reference ${u:vars} "NOVOALIGNDIR" ${t:266} string
        turbine::container_reference ${u:vars} "NOVOALIGNINDEX" ${t:268} string
        turbine::container_reference ${u:vars} "PBSCORES" ${t:274} string
        turbine::rule [ list ${t:274} ] [ list __entry-async_op-parse_int-4 ${t:266} ${t:268} ${t:273} ${t:274} ${t:326} ${t:81} ${v:alias:read1} ${v:alias:read2} ${u:alignedbam} ${u:alignedsam} ${u:rgheader} ]
    }
    turbine::read_refcount_decr ${t:81} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::read_refcount_decr ${t:326} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${u:vars} 1
    turbine::read_refcount_decr ${u:rgheader} 1
    turbine::read_refcount_decr ${u:read2} 1
    turbine::read_refcount_decr ${u:read1} 1
}


proc __entry-chain9 { t:256 t:326 u:alignedbam u:alignedsam } {
    # Var: string[int] t:264 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():228:41
    lassign [ adlb::multicreate [ list container integer string 1 1 118 ] ] t:264
    turbine::c::log "allocated t:264=<${t:264}>"
    turbine::array_kv_build ${t:264} [ ::adlb::dict_create 0 "-u" ] 1 integer string
    f:samtools_view ${u:alignedbam} ${t:326} ${u:alignedsam} ${t:256} ${t:264} -100 "HARD" "RANK"
    turbine::read_refcount_decr ${t:264} 1
    turbine::read_refcount_decr ${t:256} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::read_refcount_decr ${t:326} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
}


proc __entry-arr_copy_in_imm-2 { t:253 t:254 } {
    # Var: $string v:t:254 VALUE_OF [string:__t:254]
    set v:t:254 [ turbine::retrieve_string ${t:254} CACHED 1 ]
    turbine::array_kv_build ${t:253} [ ::adlb::dict_create 0 ${v:t:254} ] 1 integer string
}


proc __entry-async_op-parse_int-3 { t:256 t:257 } {
    # Var: $string v:t:257 VALUE_OF [string:__t:257]
    # Var: $int v:t:256 VALUE_OF [int:__t:256]
    set v:t:257 [ turbine::retrieve_string ${t:257} CACHED 1 ]
    set v:t:256 [ turbine::parse_int_impl ${v:t:257} 10 ]
    turbine::store_integer ${t:256} ${v:t:256}
}


proc __entry-async_op-parse_int-4 { t:266 t:268 t:273 t:274 t:326 t:81 v:alias:read1 v:alias:read2 u:alignedbam u:alignedsam u:rgheader } {
    # Var: $string v:t:274 VALUE_OF [string:__t:274]
    # Var: $int v:t:273 VALUE_OF [int:__t:273]
    set v:t:274 [ turbine::retrieve_string ${t:274} CACHED 1 ]
    set v:t:273 [ turbine::parse_int_impl ${v:t:274} 10 ]
    turbine::store_integer ${t:273} ${v:t:273}
    turbine::rule [ list ${t:266} ${t:268} ${t:273} ${t:81} ${u:rgheader} ] [ list novoalign-app-leaf1 ${t:266} ${t:268} ${t:273} ${t:326} ${t:81} ${v:alias:read1} ${v:alias:read2} ${u:alignedbam} ${u:alignedsam} ${u:rgheader} ]
}


proc novoalign-app-leaf1 { t:266 t:268 t:273 t:326 t:81 v:alias:read1 v:alias:read2 u:alignedbam u:alignedsam u:rgheader } {
    # Var: $string v:novoaligndir RENAMED [$string:__v:novoaligndir] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $int v:PBSCORES RENAMED [$int:__v:PBSCORES] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $string v:INDEX RENAMED [$string:__v:INDEX] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $string v:rgheader RENAMED [$string:__v:rgheader] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $string v:__filename:output:1 RENAMED [$string:__v:__filename:output] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $file v:output:1 RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    set v:novoaligndir [ turbine::retrieve_string ${t:266} CACHED 1 ]
    set v:PBSCORES [ turbine::retrieve_integer ${t:273} ]
    set v:INDEX [ turbine::retrieve_string ${t:268} CACHED 1 ]
    set v:rgheader [ turbine::retrieve_string ${u:rgheader} CACHED 1 ]
    set v:__filename:output:1 [ turbine::retrieve_string ${t:81} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output:1 [ turbine::create_local_file_ref ${v:__filename:output:1} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:novoaligndir "-c" ${v:PBSCORES} "-d" ${v:INDEX} "-f" ${v:alias:read1} ${v:alias:read2} "-o" "SAM" ${v:rgheader} [ dict create "stdout" ${v:__filename:output:1} ] ]
    turbine::exec_external ${v:novoaligndir} [ dict create "stdout" ${v:__filename:output:1} ] "-c" ${v:PBSCORES} "-d" ${v:INDEX} "-f" ${v:alias:read1} ${v:alias:read2} "-o" "SAM" ${v:rgheader}
    turbine::store_file ${u:alignedsam} v:output:1 0
    turbine::rule [ list ] "__entry-chain10 ${t:273} ${t:326} {${u:alignedbam}} {${u:alignedsam}}"
    turbine::decr_local_file_refcount v:output:1
}


proc __entry-chain10 { t:273 t:326 u:alignedbam u:alignedsam } {
    # Var: string[int] t:281 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():235:41
    lassign [ adlb::multicreate [ list container integer string 1 1 123 ] ] t:281
    turbine::c::log "allocated t:281=<${t:281}>"
    turbine::array_kv_build ${t:281} [ ::adlb::dict_create 0 "-u" ] 1 integer string
    f:samtools_view ${u:alignedbam} ${t:326} ${u:alignedsam} ${t:273} ${t:281} -100 "HARD" "RANK"
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::read_refcount_decr ${t:326} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${t:273} 1
    turbine::read_refcount_decr ${t:281} 1
}


proc __entry-optmerged-5 { t:170 t:326 v:alias:sampleName u:qcfile } {
    # Var: $string v:t:170:3 VALUE_OF [string:__t:170]
    # Var: $string v:t:296 VALUE_OF [string:__t:296]
    # Var: $string v:samtoolsdir:5 RENAMED [$string:__v:samtoolsdir]
    # Var: $int v:numAlignments:5 RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:286 VALUE_OF [boolean:__t:286]
    # Var: $boolean v:t:294 VALUE_OF [boolean:__t:294]
    # Var: $void v:t:293 VALUE_OF [void:__t:293]
    set v:t:170:3 [ turbine::retrieve_string ${t:170} CACHED 1 ]
    set v:t:296 "bwa mem command did not produce alignments for ${v:t:170:3} alignment failed"
    set v:samtoolsdir:5 [ turbine::retrieve_string ${t:326} CACHED 1 ]
    set v:numAlignments:5 [ alignment::samtools_view ${v:samtoolsdir:5} ${v:t:170:3} ]
    set v:t:286 [ expr { ${v:numAlignments:5} == 0 } ]
    set v:t:294 [ expr { ${v:numAlignments:5} > 0 } ]
    turbine::assert_impl ${v:t:294} ${v:t:296}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if8 ${v:alias:sampleName} ${v:t:170:3} ${v:t:286} ${u:qcfile} ]
    turbine::reset_priority
}


proc __entry-if8 { v:alias:sampleName v:t:170:3 v:t:286 u:qcfile } {
    if { ${v:t:286} } {
        # Var: string t:288 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():241:18
        # Var: $string v:t:288 VALUE_OF [string:__t:288]
        lassign [ adlb::multicreate [ list string 1 1 124 ] ] t:288
        turbine::c::log "allocated t:288=<${t:288}>"
        set v:t:288 "${v:alias:sampleName}\tALIGNMENT\tFAIL\tbwa mem or novoalign command did not produce alignments for ${v:t:170:3}\n"
        turbine::store_string ${t:288} ${v:t:288}
        f:echo ${u:qcfile} ${t:288} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:288} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-explicit-wait3 { u:RealignDir u:VarcallDir t:326 t:51 t:612 t:62 t:659 v:alias:sampleName u:chr_bamList u:chr_bamListfile u:chr_vcfListfile u:chromosomes_processing_done u:mergedbam u:outbam u:qcfile u:vars } {
    # Var: string t:581 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():445:44
    # Var: string t:583 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():446:44
    # Var: $string v:t:581 VALUE_OF [string:__t:581]
    # Var: $string v:t:583 VALUE_OF [string:__t:583]
    lassign [ adlb::multicreate [ list string 1 1 125 ] [ list string 1 1 126 ] ] t:581 t:583
    turbine::c::log "allocated t:581=<${t:581}> t:583=<${t:583}>"
    set v:t:581 "${v:alias:sampleName}.*.recalibrated.bam"
    turbine::store_string ${t:581} ${v:t:581}
    f:find_files ${u:chr_bamListfile} ${u:RealignDir} ${t:581} -100 "HARD" "RANK"
    set v:t:583 "${v:alias:sampleName}.*.raw.g.vcf"
    turbine::store_string ${t:583} ${v:t:583}
    f:find_files ${u:chr_vcfListfile} ${u:VarcallDir} ${t:583} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${u:chr_bamListfile} ] ] [ list __entry-call_foreign-read-1 ${t:326} ${t:51} ${t:612} ${t:62} ${t:659} ${v:alias:sampleName} ${u:chr_bamList} ${u:chr_bamListfile} ${u:mergedbam} ${u:outbam} ${u:qcfile} ${u:vars} ]
    turbine::read_refcount_decr ${u:chromosomes_processing_done} 1
    turbine::read_refcount_decr ${t:583} 1
    turbine::file_read_refcount_decr ${u:chr_vcfListfile} 1
    turbine::read_refcount_decr ${t:581} 1
    turbine::read_refcount_decr ${u:VarcallDir} 1
    turbine::read_refcount_decr ${u:RealignDir} 1
}


proc __entry-call_foreign-read-1 { t:326 t:51 t:612 t:62 t:659 v:alias:sampleName u:chr_bamList u:chr_bamListfile u:mergedbam u:outbam u:qcfile u:vars } {
    # Var: $file v:chr_bamListfile VALUE_OF [file:chr_bamListfile]
    # Var: $string v:t:587 VALUE_OF [string:__t:587]
    # Var: $int v:n:2 RENAMED [$int:__v:n]
    # Var: $string v:t:586 VALUE_OF [string:__t:586]
    # Var: $string v:o:2 RENAMED [$string:__v:o]
    # Var: $string$[int] v:chr_bamList VALUE_OF [string[int]:chr_bamList]
    # Var: string t:592 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():451:20
    # Var: string t:597 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():451:81
    lassign [ adlb::multicreate [ list string 1 1 127 ] [ list string 1 1 128 ] ] t:592 t:597
    turbine::c::log "allocated t:592=<${t:592}> t:597=<${t:597}>"
    set v:chr_bamListfile [ turbine::retrieve_file ${u:chr_bamListfile} CACHED 1 ]
    set v:t:587 [ turbine::file_read_local ${v:chr_bamListfile} ]
    set v:n:2 [ string length ${v:t:587} ]
    set v:t:586 [ turbine::replace_all_impl ${v:t:587} "\n" " " 0 ${v:n:2} ]
    set v:o:2 [ string trim ${v:t:586} ]
    set v:chr_bamList [ turbine::split_impl ${v:o:2} " " ]
    turbine::build_rec ${u:chr_bamList} ${v:chr_bamList} [ list container integer string ] 0 1
    turbine::container_reference ${u:vars} "NOVOSORTDIR" ${t:592} string
    turbine::container_reference ${u:vars} "PBSCORES" ${t:597} string
    turbine::rule [ list ${t:51} ${t:592} ${t:597} ${t:659} ] [ list __entry-async_op-parse_int-5 ${t:326} ${t:51} ${t:592} ${t:597} ${t:612} ${t:62} ${t:659} ${v:alias:sampleName} ${u:chr_bamList} ${u:mergedbam} ${u:outbam} ${u:qcfile} ]
}


proc __entry-async_op-parse_int-5 { t:326 t:51 t:592 t:597 t:612 t:62 t:659 v:alias:sampleName u:chr_bamList u:mergedbam u:outbam u:qcfile } {
    # Var: $string v:t:597 VALUE_OF [string:__t:597]
    # Var: $int v:t:596 VALUE_OF [int:__t:596]
    # Var: $string v:novosortdir RENAMED [$string:__v:novosortdir] ./pipelinefunctions/align_dedup.swift:novosort():40:72
    # Var: $string v:tmpdir:1 RENAMED [$string:__v:tmpdir] ./pipelinefunctions/align_dedup.swift:novosort():40:72
    # Var: $string$[int] v:inputFile:17 RENAMED [$string$[int]:__v:inputFile] ./pipelinefunctions/align_dedup.swift:novosort():40:72
    # Var: $string v:__filename:output:2 RENAMED [$string:__v:__filename:output] ./pipelinefunctions/align_dedup.swift:novosort():40:72
    # Var: $file v:output:2 RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:novosort():40:72
    set v:t:597 [ turbine::retrieve_string ${t:597} CACHED 1 ]
    set v:t:596 [ turbine::parse_int_impl ${v:t:597} 10 ]
    set v:novosortdir [ turbine::retrieve_string ${t:592} CACHED 1 ]
    set v:tmpdir:1 [ turbine::retrieve_string ${t:659} CACHED 1 ]
    set v:inputFile:17 [ turbine::unpack_args ${u:chr_bamList} 1 string ]
    set v:__filename:output:2 [ turbine::retrieve_string ${t:51} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output:2 [ turbine::create_local_file_ref ${v:__filename:output:2} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:novosortdir "--index" "--tmpdir" ${v:tmpdir:1} "--threads" ${v:t:596} {*}${v:inputFile:17} "-o" ${v:__filename:output:2} [ dict create ] ]
    turbine::exec_external ${v:novosortdir} [ dict create ] "--index" "--tmpdir" ${v:tmpdir:1} "--threads" ${v:t:596} {*}${v:inputFile:17} "-o" ${v:__filename:output:2}
    turbine::store_file ${u:outbam} v:output:2 0
    turbine::rule [ list ] [ list __entry-chain19 ${t:326} ${t:612} ${t:62} ${v:alias:sampleName} ${u:mergedbam} ${u:outbam} ${u:qcfile} ]
    turbine::decr_local_file_refcount v:output:2
    turbine::read_refcount_decr ${u:chr_bamList} 1
}


proc __entry-chain19 { t:326 t:612 t:62 v:alias:sampleName u:mergedbam u:outbam u:qcfile } {
    f:cp ${u:mergedbam} ${u:outbam} -100 "HARD" "RANK"
    turbine::rule [ list ${t:326} ${t:62} [ turbine::get_file_td ${u:mergedbam} ] ] [ list __entry-chain20 ${t:326} ${t:612} ${t:62} ${v:alias:sampleName} ${u:mergedbam} ${u:qcfile} ]
    turbine::file_read_refcount_decr ${u:outbam} 1
}


proc __entry-chain20 { t:326 t:612 t:62 v:alias:sampleName u:mergedbam u:qcfile } {
    # Var: $string v:samtoolsdir:10 RENAMED [$string:__v:samtoolsdir]
    # Var: $string v:inputFile:16 RENAMED [$string:__v:inputFile]
    # Var: $int v:numAlignments:9 RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:603 VALUE_OF [boolean:__t:603]
    # Var: $boolean v:t:610 VALUE_OF [boolean:__t:610]
    set v:samtoolsdir:10 [ turbine::retrieve_string ${t:326} CACHED 1 ]
    set v:inputFile:16 [ turbine::retrieve_string ${t:62} CACHED 1 ]
    set v:numAlignments:9 [ alignment::samtools_view ${v:samtoolsdir:10} ${v:inputFile:16} ]
    set v:t:603 [ expr { ${v:numAlignments:9} == 0 } ]
    set v:t:610 [ expr { ${v:numAlignments:9} > 0 } ]
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if17 ${v:alias:sampleName} ${v:inputFile:16} ${v:t:603} ${u:qcfile} ]
    turbine::reset_priority
    turbine::rule [ list ${t:612} ] "__entry-async_op-assert-3 ${t:612} ${v:t:610}"
    turbine::file_read_refcount_decr ${u:mergedbam} 1
}


proc __entry-if17 { v:alias:sampleName v:inputFile:16 v:t:603 u:qcfile } {
    if { ${v:t:603} } {
        # Var: string t:605 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():455:16
        # Var: $string v:t:605 VALUE_OF [string:__t:605]
        lassign [ adlb::multicreate [ list string 1 1 129 ] ] t:605
        turbine::c::log "allocated t:605=<${t:605}>"
        set v:t:605 "${v:alias:sampleName}\tMERGE\tFAIL\tnovosort command did not produce alignments for ${v:inputFile:16}\n"
        turbine::store_string ${t:605} ${v:t:605}
        f:echo ${u:qcfile} ${t:605} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:605} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-async_op-assert-3 { t:612 v:t:610 } {
    # Var: $string v:t:612:1 VALUE_OF [string:__t:612]
    # Var: $void v:t:609 VALUE_OF [void:__t:609]
    set v:t:612:1 [ turbine::retrieve_string ${t:612} CACHED 1 ]
    turbine::assert_impl ${v:t:610} ${v:t:612:1}
}


proc __entry-async_op-sprintf { t:28 t:30 t:32 v:alias:sampleName u:rgheader } {
    # Var: $string v:t:28 VALUE_OF [string:__t:28]
    # Var: $string v:t:30 VALUE_OF [string:__t:30]
    # Var: $string v:t:32 VALUE_OF [string:__t:32]
    # Var: $string v:rgheader:1 VALUE_OF [string:rgheader]
    set v:t:28 [ turbine::retrieve_string ${t:28} CACHED 1 ]
    set v:t:30 [ turbine::retrieve_string ${t:30} CACHED 1 ]
    set v:t:32 [ turbine::retrieve_string ${t:32} CACHED 1 ]
    set v:rgheader:1 [ eval format [ list "@RG\tID:%s\tLB:%s\tPL:%s\tPU:%s\tSM:%s\tCN:%s" ${v:alias:sampleName} ${v:t:28} ${v:t:30} ${v:alias:sampleName} ${v:alias:sampleName} ${v:t:32} ] ]
    turbine::store_string ${u:rgheader} ${v:rgheader:1}
}


proc __entry-copy_in_filename { t:55 u:qcfile } {
    # Var: $string v:t:55:1 VALUE_OF [string:__t:55]
    set v:t:55:1 [ turbine::retrieve_string ${t:55} CACHED 1 ]
    turbine::set_filename_val ${u:qcfile} ${v:t:55:1}
}


proc __entry-call_foreign-split-1 { a:t:329 t:328 } {
    # Var: $string v:alias:t:329 VALUE_OF [string:__alias:t:329]
    # Var: $string$[int] v:t:328 VALUE_OF [string[int]:__t:328]
    set v:alias:t:329 [ turbine::retrieve_string ${a:t:329} CACHED 1 ]
    set v:t:328 [ turbine::split_impl ${v:alias:t:329} " " ]
    turbine::build_rec ${t:328} ${v:t:328} [ list container integer string ] 0 1
}


proc __entry-call_foreign-split-2 { a:t:332 t:331 } {
    # Var: $string v:alias:t:332 VALUE_OF [string:__alias:t:332]
    # Var: $string$[int] v:t:331 VALUE_OF [string[int]:__t:331]
    set v:alias:t:332 [ turbine::retrieve_string ${a:t:332} CACHED 1 ]
    set v:t:331 [ turbine::split_impl ${v:alias:t:332} " " ]
    turbine::build_rec ${t:331} ${v:t:331} [ list container integer string ] 0 1
}


proc __entry-call_foreign-split-3 { a:t:335 t:334 } {
    # Var: $string v:alias:t:335 VALUE_OF [string:__alias:t:335]
    # Var: $string$[int] v:t:334 VALUE_OF [string[int]:__t:334]
    set v:alias:t:335 [ turbine::retrieve_string ${a:t:335} CACHED 1 ]
    set v:t:334 [ turbine::split_impl ${v:alias:t:335} " " ]
    turbine::build_rec ${t:334} ${v:t:334} [ list container integer string ] 0 1
}


proc __entry-async_op-parse_float-1 { a:tot_dups a:tot_reads t:341 t:346 t:347 v:alias:sampleName u:perc_mapped u:qcfile u:vars } {
    # Var: $string v:alias:tot_reads VALUE_OF [string:__alias:tot_reads]
    # Var: $float v:t:340 VALUE_OF [float:__t:340]
    set v:alias:tot_reads [ turbine::retrieve_string ${a:tot_reads} CACHED 1 ]
    set v:t:340 [ turbine::string2float_impl ${v:alias:tot_reads} ]
    turbine::rule [ list ${t:341} ] "__entry-async_op-div_float ${t:341} ${v:t:340} ${u:perc_mapped}"
    turbine::rule [ list ${a:tot_dups} ${t:346} ] [ list __entry-async_op-parse_float-2 ${a:tot_dups} ${t:346} ${t:347} ${v:alias:sampleName} ${v:t:340} ${u:perc_mapped} ${u:qcfile} ${u:vars} ]
}


proc __entry-async_op-div_float { t:341 v:t:340 u:perc_mapped } {
    # Var: $float v:t:341:1 VALUE_OF [float:__t:341]
    # Var: $float v:perc_mapped VALUE_OF [float:perc_mapped]
    set v:t:341:1 [ turbine::retrieve_float ${t:341} CACHED 1 ]
    set v:perc_mapped [ expr { ${v:t:341:1} / ${v:t:340} } ]
    turbine::store_float ${u:perc_mapped} ${v:perc_mapped}
}


proc __entry-async_op-parse_float-2 { a:tot_dups t:346 t:347 v:alias:sampleName v:t:340 u:perc_mapped u:qcfile u:vars } {
    # Var: $string v:alias:tot_dups VALUE_OF [string:__alias:tot_dups]
    # Var: $float v:t:338 VALUE_OF [float:__t:338]
    # Var: $float v:t:337 VALUE_OF [float:__t:337]
    # Var: $float v:perc_dup VALUE_OF [float:perc_dup]
    # Var: $float v:t:346:1 VALUE_OF [float:__t:346]
    # Var: $boolean v:t:345 VALUE_OF [boolean:__t:345]
    set v:alias:tot_dups [ turbine::retrieve_string ${a:tot_dups} CACHED 1 ]
    set v:t:338 [ turbine::string2float_impl ${v:alias:tot_dups} ]
    set v:t:337 [ expr { ${v:t:338} * 100.0 } ]
    set v:perc_dup [ expr { ${v:t:337} / ${v:t:340} } ]
    set v:t:346:1 [ turbine::retrieve_float ${t:346} CACHED 1 ]
    set v:t:345 [ expr { ${v:perc_dup} < ${v:t:346:1} } ]
    if { ${v:t:345} } {
        # Var: string t:351 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():292:34
        lassign [ adlb::multicreate [ list string 1 1 130 ] ] t:351
        turbine::c::log "allocated t:351=<${t:351}>"
        turbine::read_refcount_incr ${u:vars} 1
        turbine::file_read_refcount_incr ${u:qcfile} 1
        turbine::read_refcount_incr ${u:perc_mapped} 1
        turbine::read_refcount_incr ${t:347} 2
        turbine::container_reference ${u:vars} "MAP_CUTOFF" ${t:351} string
        turbine::rule [ list ${t:351} ${u:perc_mapped} ] [ list __entry-async_op-parse_float-3 ${t:347} ${t:351} ${v:alias:sampleName} ${v:perc_dup} ${u:perc_mapped} ${u:qcfile} ]
    }
    turbine::read_refcount_decr ${t:347} 1
    turbine::read_refcount_decr ${u:perc_mapped} 1
    turbine::file_read_refcount_decr ${u:qcfile} 1
    turbine::read_refcount_decr ${u:vars} 1
}


proc __entry-async_op-parse_float-3 { t:347 t:351 v:alias:sampleName v:perc_dup u:perc_mapped u:qcfile } {
    # Var: $string v:t:351 VALUE_OF [string:__t:351]
    # Var: $float v:t:350 VALUE_OF [float:__t:350]
    # Var: $float v:perc_mapped:1 VALUE_OF [float:perc_mapped]
    # Var: $boolean v:t:349 VALUE_OF [boolean:__t:349]
    set v:t:351 [ turbine::retrieve_string ${t:351} CACHED 1 ]
    set v:t:350 [ turbine::string2float_impl ${v:t:351} ]
    set v:perc_mapped:1 [ turbine::retrieve_float ${u:perc_mapped} CACHED 1 ]
    set v:t:349 [ expr { ${v:perc_mapped:1} > ${v:t:350} } ]
    if { ${v:t:349} } {
        # Var: string t:353 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():293:17
        lassign [ adlb::multicreate [ list string 1 1 131 ] ] t:353
        turbine::c::log "allocated t:353=<${t:353}>"
        f:echo ${u:qcfile} ${t:353} -100 "HARD" "RANK"
        turbine::rule [ list ${t:347} ] [ list __entry-async_op-strcat-9 ${t:347} ${t:353} ${v:alias:sampleName} ${v:perc_dup} ${v:perc_mapped:1} ${v:t:351} ]
        turbine::read_refcount_decr ${t:353} 1
    } else {
        # Var: string t:362 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():301:17
        lassign [ adlb::multicreate [ list string 1 1 132 ] ] t:362
        turbine::c::log "allocated t:362=<${t:362}>"
        f:echo ${u:qcfile} ${t:362} -100 "HARD" "RANK"
        turbine::rule [ list ${t:347} ] [ list __entry-async_op-strcat-10 ${t:347} ${t:362} ${v:alias:sampleName} ${v:perc_dup} ${v:perc_mapped:1} ${v:t:351} ]
        turbine::read_refcount_decr ${t:362} 1
    }
    turbine::read_refcount_decr ${t:347} 1
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-async_op-strcat-9 { t:347 t:353 v:alias:sampleName v:perc_dup v:perc_mapped:1 v:t:351 } {
    # Var: $string v:t:347:1 VALUE_OF [string:__t:347]
    # Var: $string v:t:353 VALUE_OF [string:__t:353]
    set v:t:347:1 [ turbine::retrieve_string ${t:347} CACHED 1 ]
    set v:t:353 "${v:alias:sampleName}\tQCTEST\tPASS\n\trule1 ok: percent_duplication=${v:perc_dup}<? duplication_cutoff=${v:t:347:1}\n\trule2 ok: percent_mapped=${v:perc_mapped:1}>? mapping_cutoff=${v:t:351}"
    turbine::store_string ${t:353} ${v:t:353}
}


proc __entry-async_op-strcat-10 { t:347 t:362 v:alias:sampleName v:perc_dup v:perc_mapped:1 v:t:351 } {
    # Var: $string v:t:347:2 VALUE_OF [string:__t:347]
    # Var: $string v:t:362 VALUE_OF [string:__t:362]
    set v:t:347:2 [ turbine::retrieve_string ${t:347} CACHED 1 ]
    set v:t:362 "${v:alias:sampleName}\tQCTEST\tFAIL\n\trule1 ok: percent_duplication=${v:perc_dup}<? duplication_cutoff=${v:t:347:2}\n\trule2 not ok: percent_mapped=${v:perc_mapped:1}>? mapping_cutoff=${v:t:351}"
    turbine::store_string ${t:362} ${v:t:362}
}


proc __entry-async_op-parse_float-4 { a:tot_mapped t:341 } {
    # Var: $string v:alias:tot_mapped VALUE_OF [string:__alias:tot_mapped]
    # Var: $float v:t:342 VALUE_OF [float:__t:342]
    # Var: $float v:t:341 VALUE_OF [float:__t:341]
    set v:alias:tot_mapped [ turbine::retrieve_string ${a:tot_mapped} CACHED 1 ]
    set v:t:342 [ turbine::string2float_impl ${v:alias:tot_mapped} ]
    set v:t:341 [ expr { ${v:t:342} * 100.0 } ]
    turbine::store_float ${t:341} ${v:t:341}
}


proc __entry-call_foreign-read-2 { t:10 t:13 t:53 t:618 v:sampleLines:1 u:chr_vcfList u:mergedvariant u:rawvariant u:samples_processing_done u:vars } {
    # Var: $file v:t:618 VALUE_OF [file:__t:618]
    # Var: $string v:t:617 VALUE_OF [string:__t:617]
    # Var: $int v:n:3 RENAMED [$int:__v:n]
    # Var: $string v:t:616 VALUE_OF [string:__t:616]
    # Var: $string v:o:3 RENAMED [$string:__v:o]
    # Var: $string$[int] v:chr_vcfList VALUE_OF [string[int]:chr_vcfList]
    # Var: string t:624 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():468:27
    # Var: string t:626 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():468:44
    # Var: string t:629 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():468:68
    # Var: string t:632 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():468:95
    # Var: string t:638 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():469:40
    # Var: $string$[int] v:variants RENAMED [$string$[int]:__v:variants] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    lassign [ adlb::multicreate [ list string 1 1 133 ] [ list string 1 1 134 ] [ list string 1 1 135 ] [ list string 1 1 136 ] [ list string 1 1 137 ] ] t:624 t:626 t:629 t:632 t:638
    turbine::c::log "allocated t:624=<${t:624}> t:626=<${t:626}> t:629=<${t:629}> t:632=<${t:632}> t:638=<${t:638}>"
    set v:t:618 [ turbine::retrieve_file ${t:618} CACHED 1 ]
    set v:t:617 [ turbine::file_read_local ${v:t:618} ]
    set v:n:3 [ string length ${v:t:617} ]
    set v:t:616 [ turbine::replace_all_impl ${v:t:617} "\n" " " 0 ${v:n:3} ]
    set v:o:3 [ string trim ${v:t:616} ]
    set v:chr_vcfList [ turbine::split_impl ${v:o:3} " " ]
    turbine::build_rec ${u:chr_vcfList} ${v:chr_vcfList} [ list container integer string ] 0 1
    turbine::container_reference ${u:vars} "JAVADIR" ${t:624} string
    turbine::container_reference ${u:vars} "GATKDIR" ${t:626} string
    turbine::container_reference ${u:vars} "REFGENOMEDIR" ${t:629} string
    turbine::container_reference ${u:vars} "REFGENOME" ${t:632} string
    turbine::container_reference ${u:vars} "DBSNP" ${t:638} string
    set v:variants [ turbine::unpack_args ${u:chr_vcfList} 1 string ]
    turbine::rule [ list ${t:53} ${t:624} ${t:626} ${t:629} ${t:632} ${t:638} ] "__entry-optmerged-6 ${t:10} ${t:13} ${t:53} ${t:624} ${t:626} ${t:629} ${t:632} ${t:638} {${v:sampleLines:1}} {${v:variants}} {${u:mergedvariant}} {${u:rawvariant}} ${u:samples_processing_done}"
    turbine::read_refcount_decr ${u:chr_vcfList} 1
}


proc __entry-optmerged-6 { t:10 t:13 t:53 t:624 t:626 t:629 t:632 t:638 v:sampleLines:1 v:variants u:mergedvariant u:rawvariant u:samples_processing_done } {
    # Var: $string v:t:629 VALUE_OF [string:__t:629]
    # Var: $string v:t:638 VALUE_OF [string:__t:638]
    # Var: $string v:t:634 VALUE_OF [string:__t:634]
    # Var: $string v:t:632 VALUE_OF [string:__t:632]
    # Var: $string v:t:628 VALUE_OF [string:__t:628]
    # Var: $string v:javadir:6 RENAMED [$string:__v:javadir] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    # Var: $string v:gatkdir:5 RENAMED [$string:__v:gatkdir] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    # Var: $string v:__filename:outputfile:6 RENAMED [$string:__v:__filename:outputfile] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    # Var: $file v:outputfile:6 RENAMED [$file:__v:outputfile] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    set v:t:629 [ turbine::retrieve_string ${t:629} CACHED 1 ]
    set v:t:638 [ turbine::retrieve_string ${t:638} CACHED 1 ]
    set v:t:634 "${v:t:629}/${v:t:638}"
    set v:t:632 [ turbine::retrieve_string ${t:632} CACHED 1 ]
    set v:t:628 "${v:t:629}/${v:t:632}"
    set v:javadir:6 [ turbine::retrieve_string ${t:624} CACHED 1 ]
    set v:gatkdir:5 [ turbine::retrieve_string ${t:626} CACHED 1 ]
    set v:__filename:outputfile:6 [ turbine::retrieve_string ${t:53} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:6 [ turbine::create_local_file_ref ${v:__filename:outputfile:6} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:6 "-Xmx8g" "-jar" ${v:gatkdir:5} "-T" "CombineGVCFs" "-R" ${v:t:628} "--dbsnp" ${v:t:634} {*}${v:variants} "-o" ${v:__filename:outputfile:6} [ dict create ] ]
    turbine::exec_external ${v:javadir:6} [ dict create ] "-Xmx8g" "-jar" ${v:gatkdir:5} "-T" "CombineGVCFs" "-R" ${v:t:628} "--dbsnp" ${v:t:634} {*}${v:variants} "-o" ${v:__filename:outputfile:6}
    turbine::store_file ${u:rawvariant} v:outputfile:6 0
    turbine::rule [ list ] "__entry-chain22 ${t:10} ${t:13} {${v:sampleLines:1}} {${u:mergedvariant}} {${u:rawvariant}} ${u:samples_processing_done}"
    turbine::decr_local_file_refcount v:outputfile:6
}


proc __entry-chain22 { t:10 t:13 v:sampleLines:1 u:mergedvariant u:rawvariant u:samples_processing_done } {
    f:cp ${u:mergedvariant} ${u:rawvariant} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${u:mergedvariant} ] ] "__entry-chain23 ${t:10} ${t:13} {${v:sampleLines:1}} {${u:mergedvariant}} ${u:samples_processing_done}"
    turbine::file_read_refcount_decr ${u:rawvariant} 1
}


proc __entry-chain23 { t:10 t:13 v:sampleLines:1 u:mergedvariant u:samples_processing_done } {
    # Var: *rw(file)[int] t:643 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():473:32
    # Var: string t:644 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():473:37
    # Var: $int v:t:641 VALUE_OF [int:__t:641]
    lassign [ adlb::multicreate [ list container integer file_ref 1 1 138 ] [ list string 1 1 139 ] ] t:643 t:644
    turbine::c::log "allocated t:643=<${t:643}> t:644=<${t:644}>"
    set v:t:641 [ dict size ${v:sampleLines:1} ]
    turbine::glob [ list ${t:643} ] [ list ${t:644} ]
    turbine::rule [ list ${t:10} ${t:13} ] "__entry-async_op-strcat-11 ${t:10} ${t:13} ${t:644}"
    turbine::rule [ list ${t:643} ] "__entry-call_foreign-size ${t:643} ${v:t:641} ${u:samples_processing_done}"
    turbine::file_read_refcount_decr ${u:mergedvariant} 1
}


proc __entry-async_op-strcat-11 { t:10 t:13 t:644 } {
    # Var: $string v:t:10:9 VALUE_OF [string:__t:10]
    # Var: $string v:t:13:6 VALUE_OF [string:__t:13]
    # Var: $string v:t:644 VALUE_OF [string:__t:644]
    set v:t:10:9 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:t:13:6 [ turbine::retrieve_string ${t:13} CACHED 1 ]
    set v:t:644 "${v:t:10:9}/${v:t:13:6}/*.GATKCombineGVCF.raw.vcf"
    turbine::store_string ${t:644} ${v:t:644}
}


proc __entry-call_foreign-size { t:643 v:t:641 u:samples_processing_done } {
    # Var: file$[int] v:t:643 VALUE_OF [*rw(file)[int]:__t:643]
    # Var: $int v:t:642 VALUE_OF [int:__t:642]
    # Var: $boolean v:t:640 VALUE_OF [boolean:__t:640]
    set v:t:643 [ adlb::enumerate ${t:643} dict all 0 0 ]
    set v:t:642 [ dict size ${v:t:643} ]
    set v:t:640 [ expr { ${v:t:641} == ${v:t:642} } ]
    if { ${v:t:640} } {
        turbine::store_integer ${u:samples_processing_done} 1
    }
    turbine::read_refcount_decr ${t:643} 1
}


proc __entry-optmerged-7 { u:AlignDir u:RealignDir u:VarcallDir t:10 t:13 t:326 t:49 t:51 t:53 t:612 t:62 t:659 v:alias:sampleName u:chromosomes_processing_done u:dedupsortedbam u:flagstats u:indices u:mergedbam u:mergedvariant u:outbam u:qcfile u:rawvariant u:stat u:vars } {
    # Var: $string v:t:10:4 VALUE_OF [string:__t:10]
    # Var: $string v:AlignDir VALUE_OF [string:AlignDir]
    # Var: $string v:VarcallDir VALUE_OF [string:VarcallDir]
    # Var: $string v:RealignDir VALUE_OF [string:RealignDir]
    # Var: $string v:t:49 VALUE_OF [string:__t:49]
    # Var: $string v:t:78 VALUE_OF [string:__t:78]
    # Var: $string v:t:53 VALUE_OF [string:__t:53]
    # Var: $string v:t:51 VALUE_OF [string:__t:51]
    set v:t:10:4 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:AlignDir "${v:t:10:4}/${v:alias:sampleName}/align/"
    turbine::store_string ${u:AlignDir} ${v:AlignDir}
    set v:VarcallDir "${v:t:10:4}/${v:alias:sampleName}/variant/"
    turbine::store_string ${u:VarcallDir} ${v:VarcallDir}
    set v:RealignDir "${v:t:10:4}/${v:alias:sampleName}/realign/"
    turbine::store_string ${u:RealignDir} ${v:RealignDir}
    set v:t:49 "${v:AlignDir}${v:alias:sampleName}.wdups.sorted.bam"
    turbine::store_string ${t:49} ${v:t:49}
    turbine::set_filename_val ${u:dedupsortedbam} ${v:t:49}
    set v:t:78 "${v:AlignDir}${v:alias:sampleName}.wdups.sorted.bam.flagstats"
    turbine::set_filename_val ${u:flagstats} ${v:t:78}
    set v:t:53 "${v:VarcallDir}${v:alias:sampleName}.GATKCombineGVCF.raw.vcf"
    turbine::store_string ${t:53} ${v:t:53}
    turbine::set_filename_val ${u:rawvariant} ${v:t:53}
    set v:t:51 "${v:RealignDir}${v:alias:sampleName}.recalibrated.bam"
    turbine::store_string ${t:51} ${v:t:51}
    turbine::set_filename_val ${u:outbam} ${v:t:51}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list mkdir-app-leaf1-1 ${v:AlignDir} ]
    turbine::reset_priority
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list mkdir-app-leaf1-2 ${v:VarcallDir} ]
    turbine::reset_priority
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list mkdir-app-leaf1-3 ${v:RealignDir} ]
    turbine::reset_priority
    turbine::rule [ list ${t:13} ] [ list __entry-optmerged-8 ${t:13} ${t:612} ${t:62} ${v:alias:sampleName} ${v:t:10:4} ${u:mergedbam} ${u:mergedvariant} ]
    turbine::rule [ list [ turbine::get_file_td ${u:dedupsortedbam} ] ] [ list __entry-optmerged-9 ${t:326} ${t:659} ${v:RealignDir} ${v:VarcallDir} ${v:alias:sampleName} ${v:t:49} ${v:t:78} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:flagstats} ${u:indices} ${u:qcfile} ${u:stat} ${u:vars} ]
}


proc mkdir-app-leaf1-1 { v:AlignDir } {
    # Var: $void v:v RENAMED [$void:__v:v] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:mkdir():65:15
    turbine::c::log [ list exec: "mkdir" "-p" ${v:AlignDir} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:AlignDir}
}


proc mkdir-app-leaf1-2 { v:VarcallDir } {
    # Var: $void v:v:1 RENAMED [$void:__v:v] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:mkdir():65:15
    turbine::c::log [ list exec: "mkdir" "-p" ${v:VarcallDir} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:VarcallDir}
}


proc mkdir-app-leaf1-3 { v:RealignDir } {
    # Var: $void v:v:2 RENAMED [$void:__v:v] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:mkdir():65:15
    turbine::c::log [ list exec: "mkdir" "-p" ${v:RealignDir} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:RealignDir}
}


proc __entry-optmerged-8 { t:13 t:612 t:62 v:alias:sampleName v:t:10:4 u:mergedbam u:mergedvariant } {
    # Var: $string v:t:13:4 VALUE_OF [string:__t:13]
    # Var: $string v:t:62 VALUE_OF [string:__t:62]
    # Var: $string v:t:70 VALUE_OF [string:__t:70]
    # Var: $string v:t:612 VALUE_OF [string:__t:612]
    set v:t:13:4 [ turbine::retrieve_string ${t:13} CACHED 1 ]
    set v:t:62 "${v:t:10:4}/${v:t:13:4}/${v:alias:sampleName}.recalibrated.bam"
    turbine::store_string ${t:62} ${v:t:62}
    set v:t:70 "${v:t:10:4}/${v:t:13:4}/${v:alias:sampleName}.GATKCombineGVCF.raw.vcf"
    turbine::set_filename_val ${u:mergedbam} ${v:t:62}
    set v:t:612 "novosort command did not produce alignments for ${v:t:62}"
    turbine::store_string ${t:612} ${v:t:612}
    turbine::set_filename_val ${u:mergedvariant} ${v:t:70}
}


proc __entry-optmerged-9 { t:326 t:659 v:RealignDir v:VarcallDir v:alias:sampleName v:t:49 v:t:78 u:chromosomes_processing_done u:dedupsortedbam u:flagstats u:indices u:qcfile u:stat u:vars } {
    # Var: string t:409 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():347:20
    # Var: string t:430 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():365:34
    # Var: string t:433 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():365:61
    # Var: string t:482 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():386:33
    # Var: string t:484 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():386:50
    # Var: string t:490 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():387:46
    # Var: string t:525 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():407:47
    lassign [ adlb::multicreate [ list string 1 1 140 ] [ list string 1 1 141 ] [ list string 1 1 142 ] [ list string 1 1 143 ] [ list string 1 1 144 ] [ list string 1 1 145 ] [ list string 1 1 146 ] ] t:409 t:430 t:433 t:482 t:484 t:490 t:525
    turbine::c::log "allocated t:409=<${t:409}> t:430=<${t:430}> t:433=<${t:433}> t:482=<${t:482}> t:484=<${t:484}>"
    turbine::c::log "allocated t:490=<${t:490}> t:525=<${t:525}>"
    turbine::container_reference ${u:vars} "PBSCORES" ${t:409} string
    turbine::container_reference ${u:vars} "REFGENOMEDIR" ${t:430} string
    turbine::container_reference ${u:vars} "INDELDIR" ${t:433} string
    turbine::container_reference ${u:vars} "JAVADIR" ${t:482} string
    turbine::container_reference ${u:vars} "GATKDIR" ${t:484} string
    turbine::container_reference ${u:vars} "REFGENOME" ${t:490} string
    turbine::container_reference ${u:vars} "DBSNP" ${t:525} string
    turbine::rule [ list ${u:indices} ] [ list __entry-explicit-wait2 ${t:326} ${t:409} ${t:430} ${t:433} ${t:482} ${t:484} ${t:490} ${t:525} ${t:659} ${v:RealignDir} ${v:VarcallDir} ${v:alias:sampleName} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:indices} ${u:qcfile} ]
    turbine::rule [ list ${t:326} ] [ list samtools_flagstat-app-leaf1 ${t:326} ${v:t:49} ${v:t:78} ${u:dedupsortedbam} ${u:flagstats} ${u:stat} ]
}


proc __entry-explicit-wait2 { t:326 t:409 t:430 t:433 t:482 t:484 t:490 t:525 t:659 v:RealignDir v:VarcallDir v:alias:sampleName u:chromosomes_processing_done u:dedupsortedbam u:indices u:qcfile } {
    # Var: int t:408 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():347:9
    # Var: string t:429 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():365:27
    # Var: string t:486 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():387:12
    # Var: string t:521 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():407:13
    # Var: string t:448 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():374:27
    lassign [ adlb::multicreate [ list integer 1 1 147 ] [ list string 1 1 148 ] [ list string 1 1 149 ] [ list string 1 1 150 ] [ list string 1 1 151 ] ] t:408 t:429 t:486 t:521 t:448
    turbine::c::log "allocated t:408=<${t:408}> t:429=<${t:429}> t:486=<${t:486}> t:521=<${t:521}> t:448=<${t:448}>"
    set tcltmp:container_sz [ adlb::enumerate ${u:indices} count all 0 ]
    set tcltmp:iters ${tcltmp:container_sz}
    turbine::read_refcount_incr ${t:484} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:482} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${u:indices} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:521} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::file_read_refcount_incr ${u:dedupsortedbam} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:486} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:448} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::file_read_refcount_incr ${u:qcfile} [ expr { 3 * ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:326} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:408} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:659} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:429} [ expr { ${tcltmp:iters} - 1 } ]
    __entry-foreach2:outer ${t:326} ${t:408} ${t:429} ${t:448} ${t:482} ${t:484} ${t:486} ${t:521} ${t:659} ${v:RealignDir} ${v:VarcallDir} ${v:alias:sampleName} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:indices} ${u:qcfile} 0 [ expr { ${tcltmp:container_sz} - 1 } ] 1
    turbine::rule [ list ${t:409} ] "__entry-async_op-parse_int-6 ${t:408} ${t:409}"
    turbine::rule [ list ${t:430} ] "__entry-optmerged-12 ${t:429} ${t:430} ${t:433} ${t:448} ${t:486} ${t:490} ${t:521} ${t:525}"
}


proc __entry-foreach2:outer { t:326 t:408 t:429 t:448 t:482 t:484 t:486 t:521 t:659 v:RealignDir v:VarcallDir v:alias:sampleName u:chromosomes_processing_done u:dedupsortedbam u:indices u:qcfile tcltmp:lo tcltmp:hi tcltmp:inc } {
    if { [ expr { ${tcltmp:lo} > ${tcltmp:hi} } ] } {
        return
    }
    while {1} {
        set tcltmp:itersleft [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
        if { [ expr { ${tcltmp:itersleft} <= 64 } ] } {
            __entry-foreach2:inner ${t:326} ${t:408} ${t:429} ${t:448} ${t:482} ${t:484} ${t:486} ${t:521} ${t:659} ${v:RealignDir} ${v:VarcallDir} ${v:alias:sampleName} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:indices} ${u:qcfile} ${tcltmp:lo} ${tcltmp:hi} ${tcltmp:inc}
            return
        } else {
            set tcltmp:skip [ expr { ${tcltmp:inc} * max(64,((${tcltmp:itersleft} - 1) / 16) + 1) } ]
            for { set tcltmp:splitstart [ expr { ${tcltmp:lo} + ${tcltmp:skip} } ] } { ${tcltmp:splitstart} <= ${tcltmp:hi} } { incr tcltmp:splitstart ${tcltmp:skip} } {
                set tcltmp:splitend [ expr { min(${tcltmp:hi},${tcltmp:splitstart} + ${tcltmp:skip} - 1) } ]
                set tcltmp:prio [ turbine::get_priority ]
                turbine::set_priority ${tcltmp:prio}
                adlb::spawn 0 [ list __entry-foreach2:outer ${t:326} ${t:408} ${t:429} ${t:448} ${t:482} ${t:484} ${t:486} ${t:521} ${t:659} ${v:RealignDir} ${v:VarcallDir} ${v:alias:sampleName} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:indices} ${u:qcfile} ${tcltmp:splitstart} ${tcltmp:splitend} ${tcltmp:inc} ]
                turbine::reset_priority
            }
            set tcltmp:hi [ expr { ${tcltmp:lo} + ${tcltmp:skip} - 1 } ]
        }
    }
}


proc __entry-foreach2:inner { t:326 t:408 t:429 t:448 t:482 t:484 t:486 t:521 t:659 v:RealignDir v:VarcallDir v:alias:sampleName u:chromosomes_processing_done u:dedupsortedbam u:indices u:qcfile tcltmp:lo tcltmp:hi tcltmp:inc } {
    set tcltmp:splitlen [ expr { ${tcltmp:hi} - ${tcltmp:lo} + 1 } ]
    set tcltmp:contents [ adlb::enumerate ${u:indices} members ${tcltmp:splitlen} ${tcltmp:lo} ]
    foreach v:chr ${tcltmp:contents} {
        # Var: string c:s_sknownSite OPT_TEMPORARY
        global c:s_sknownSite
        # Var: string c:s_sknown_g OPT_TEMPORARY
        global c:s_sknown_g
        # Var: file u:chrdedupsortedbam /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():327:68
        # Var: file u:realignedbam /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():329:63
        # Var: file u:recalibratedbam /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():330:66
        # Var: file u:intervals /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():331:61
        # Var: file u:recalreport /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():332:63
        # Var: file u:gvcfvariant /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():333:62
        # Var: file u:recalfiles /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():336:71
        # Var: file u:realfiles /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():337:70
        # Var: int u:ploidy /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():339:3
        # Var: string[int] t:411 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():347:40
        # Var: string t:436 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():366:6
        # Var: string[int] u:recalparmsindels /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():369:3
        # Var: file t:442 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():369:59
        # Var: string[int] u:realparms /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():375:3
        # Var: file t:461 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():375:52
        # Var: $boolean v:t:404 VALUE_OF [boolean:__t:404]
        # Var: $string v:t:412 VALUE_OF [string:__t:412]
        # Var: $string v:t:436 VALUE_OF [string:__t:436]
        # Var: $string v:t:389 VALUE_OF [string:__t:389]
        # Var: $string v:t:374 VALUE_OF [string:__t:374]
        # Var: $string v:t:377 VALUE_OF [string:__t:377]
        # Var: $string v:t:380 VALUE_OF [string:__t:380]
        # Var: $string v:t:383 VALUE_OF [string:__t:383]
        # Var: $string v:t:386 VALUE_OF [string:__t:386]
        # Var: $string v:t:425 VALUE_OF [string:__t:425]
        # Var: $string v:t:505 VALUE_OF [string:__t:505]
        # Var: $string v:t:553 VALUE_OF [string:__t:553]
        lassign [ adlb::multicreate [ list integer 1 1 160 ] [ list container integer string 1 1 161 ] [ list string 1 1 162 ] [ list container integer string 1 1 163 ] [ list container integer string 1 1 165 ] ] u:ploidy t:411 t:436 u:recalparmsindels u:realparms
        turbine::c::log "allocated u:ploidy=<${u:ploidy}> t:411=<${t:411}> t:436=<${t:436}> u:recalparmsindels=<${u:recalparmsindels}> u:realparms=<${u:realparms}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 152 ] [ list file 1 1 153 ] [ list file 1 1 154 ] [ list file 1 1 155 ] [ list file 1 1 156 ] [ list file 0 1 157 ] [ list file 1 1 158 ] [ list file 1 1 159 ] [ list file 1 1 164 ] [ list file 1 1 166 ] ] [ list 1 1 1 1 1 1 1 1 0 0 ] ] u:chrdedupsortedbam u:realignedbam u:recalibratedbam u:intervals u:recalreport u:gvcfvariant u:recalfiles u:realfiles t:442 t:461
        set v:t:404 [ string equal ${v:chr} "M" ]
        set v:t:412 "${v:chr}"
        turbine::array_kv_build ${t:411} [ ::adlb::dict_create 0 ${v:t:412} ] 1 integer string
        f:samtools_view ${u:chrdedupsortedbam} ${t:326} ${u:dedupsortedbam} ${t:408} ${t:411} -100 "HARD" "RANK"
        set v:t:436 "*${v:chr}.vcf"
        turbine::store_string ${t:436} ${v:t:436}
        f:find_files ${u:recalfiles} ${t:429} ${t:436} -100 "HARD" "RANK"
        f:sed ${t:442} ${u:recalfiles} ${c:s_sknownSite} -100 "HARD" "RANK"
        f:find_files ${u:realfiles} ${t:448} ${t:436} -100 "HARD" "RANK"
        f:sed ${t:461} ${u:recalfiles} ${c:s_sknown_g} -100 "HARD" "RANK"
        if { ${v:t:404} } {
            turbine::store_integer ${u:ploidy} 1
        } else {
            turbine::store_integer ${u:ploidy} 2
        }
        set v:t:389 "${v:VarcallDir}${v:alias:sampleName}.${v:chr}.raw.g.vcf"
        turbine::set_filename_val ${u:gvcfvariant} ${v:t:389}
        set v:t:374 "${v:RealignDir}${v:alias:sampleName}.${v:chr}.wdups.sorted.bam"
        set v:t:377 "${v:RealignDir}${v:alias:sampleName}.${v:chr}.realigned.bam"
        set v:t:380 "${v:RealignDir}${v:alias:sampleName}.${v:chr}.recalibrated.bam"
        set v:t:383 "${v:RealignDir}${v:alias:sampleName}.${v:chr}.realignTargetCreator.intervals"
        set v:t:386 "${v:RealignDir}${v:alias:sampleName}.${v:chr}.recal_report.grp"
        set v:t:425 "samtools command did not produce alignments for ${v:t:374}splitting by chromosome failed"
        turbine::set_filename_val ${u:chrdedupsortedbam} ${v:t:374}
        turbine::set_filename_val ${u:realignedbam} ${v:t:377}
        set v:t:505 "GATK IndelRealigner command did not produce alignments for ${v:t:377}"
        set v:t:553 "GATK BQSR Recalibrator command did not produce alignments for ${v:t:380}"
        turbine::set_filename_val ${u:recalibratedbam} ${v:t:380}
        turbine::set_filename_val ${u:intervals} ${v:t:383}
        turbine::set_filename_val ${u:recalreport} ${v:t:386}
        turbine::rule [ list [ turbine::get_file_td ${t:442} ] ] "__entry-call_foreign-read-3 {${t:442}} ${u:recalparmsindels}"
        turbine::rule [ list [ turbine::get_file_td ${t:461} ] ] "__entry-call_foreign-read-4 {${t:461}} ${u:realparms}"
        turbine::rule [ list ${t:659} ] [ list __entry-optmerged-10 ${t:659} ${v:alias:sampleName} ${v:chr} ${u:realfiles} ${u:recalfiles} ]
        turbine::rule [ list ${t:326} [ turbine::get_file_td ${u:chrdedupsortedbam} ] ] [ list __entry-optmerged-11 ${t:326} ${t:408} ${t:482} ${t:484} ${t:486} ${t:521} ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:t:374} ${v:t:377} ${v:t:380} ${v:t:383} ${v:t:386} ${v:t:389} ${v:t:425} ${v:t:505} ${v:t:553} ${u:chrdedupsortedbam} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:intervals} ${u:ploidy} ${u:qcfile} ${u:realignedbam} ${u:realparms} ${u:recalibratedbam} ${u:recalparmsindels} ${u:recalreport} ]
        turbine::read_refcount_decr ${t:411} 1
        turbine::read_refcount_decr ${t:436} 1
        turbine::file_read_refcount_decr ${u:realfiles} 1
        turbine::file_read_refcount_decr ${u:recalfiles} 1
    }
    set tcltmp:iters [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
    turbine::file_read_refcount_decr ${u:dedupsortedbam} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_decr ${t:448} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_decr ${t:429} [ expr { ${tcltmp:iters} } ]
}


proc __entry-call_foreign-read-3 { t:442 u:recalparmsindels } {
    # Var: $file v:t:442 VALUE_OF [file:__t:442]
    # Var: $string v:t:441 VALUE_OF [string:__t:441]
    # Var: $int v:n RENAMED [$int:__v:n]
    # Var: $string v:t:440 VALUE_OF [string:__t:440]
    # Var: $string v:o RENAMED [$string:__v:o]
    # Var: $string$[int] v:recalparmsindels VALUE_OF [string[int]:recalparmsindels]
    set v:t:442 [ turbine::retrieve_file ${t:442} CACHED 1 ]
    set v:t:441 [ turbine::file_read_local ${v:t:442} ]
    set v:n [ string length ${v:t:441} ]
    set v:t:440 [ turbine::replace_all_impl ${v:t:441} "\n" " " 0 ${v:n} ]
    set v:o [ string trim ${v:t:440} ]
    set v:recalparmsindels [ turbine::split_impl ${v:o} " " ]
    turbine::build_rec ${u:recalparmsindels} ${v:recalparmsindels} [ list container integer string ] 0 1
}


proc __entry-call_foreign-read-4 { t:461 u:realparms } {
    # Var: $file v:t:461 VALUE_OF [file:__t:461]
    # Var: $string v:t:460 VALUE_OF [string:__t:460]
    # Var: $int v:n:1 RENAMED [$int:__v:n]
    # Var: $string v:t:459 VALUE_OF [string:__t:459]
    # Var: $string v:o:1 RENAMED [$string:__v:o]
    # Var: $string$[int] v:realparms VALUE_OF [string[int]:realparms]
    set v:t:461 [ turbine::retrieve_file ${t:461} CACHED 1 ]
    set v:t:460 [ turbine::file_read_local ${v:t:461} ]
    set v:n:1 [ string length ${v:t:460} ]
    set v:t:459 [ turbine::replace_all_impl ${v:t:460} "\n" " " 0 ${v:n:1} ]
    set v:o:1 [ string trim ${v:t:459} ]
    set v:realparms [ turbine::split_impl ${v:o:1} " " ]
    turbine::build_rec ${u:realparms} ${v:realparms} [ list container integer string ] 0 1
}


proc __entry-optmerged-10 { t:659 v:alias:sampleName v:chr u:realfiles u:recalfiles } {
    # Var: $string v:t:659:5 VALUE_OF [string:__t:659]
    # Var: $string v:t:392 VALUE_OF [string:__t:392]
    # Var: $string v:t:398 VALUE_OF [string:__t:398]
    set v:t:659:5 [ turbine::retrieve_string ${t:659} CACHED 1 ]
    set v:t:392 "${v:t:659:5}/${v:alias:sampleName}.${v:chr}.recal_foundfiles.txt"
    set v:t:398 "${v:t:659:5}/${v:alias:sampleName}.${v:chr}.real_foundfiles.txt"
    turbine::set_filename_val ${u:recalfiles} ${v:t:392}
    turbine::set_filename_val ${u:realfiles} ${v:t:398}
}


proc __entry-optmerged-11 { t:326 t:408 t:482 t:484 t:486 t:521 v:VarcallDir v:alias:sampleName v:chr v:t:374 v:t:377 v:t:380 v:t:383 v:t:386 v:t:389 v:t:425 v:t:505 v:t:553 u:chrdedupsortedbam u:chromosomes_processing_done u:gvcfvariant u:indices u:intervals u:ploidy u:qcfile u:realignedbam u:realparms u:recalibratedbam u:recalparmsindels u:recalreport } {
    # Var: $string v:samtoolsdir:6 RENAMED [$string:__v:samtoolsdir]
    set v:samtoolsdir:6 [ turbine::retrieve_string ${t:326} CACHED 1 ]
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-chain12 ${v:alias:sampleName} ${v:samtoolsdir:6} ${v:t:374} ${v:t:425} ${u:qcfile} ]
    turbine::reset_priority
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list samtools_index-app-leaf1 ${t:408} ${t:482} ${t:484} ${t:486} ${t:521} ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:samtoolsdir:6} ${v:t:374} ${v:t:377} ${v:t:380} ${v:t:383} ${v:t:386} ${v:t:389} ${v:t:505} ${v:t:553} ${u:chrdedupsortedbam} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:intervals} ${u:ploidy} ${u:qcfile} ${u:realignedbam} ${u:realparms} ${u:recalibratedbam} ${u:recalparmsindels} ${u:recalreport} ]
    turbine::reset_priority
}


proc __entry-chain12 { v:alias:sampleName v:samtoolsdir:6 v:t:374 v:t:425 u:qcfile } {
    # Var: $int v:numAlignments:6 RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:416 VALUE_OF [boolean:__t:416]
    # Var: $boolean v:t:423 VALUE_OF [boolean:__t:423]
    # Var: $void v:t:422 VALUE_OF [void:__t:422]
    set v:numAlignments:6 [ alignment::samtools_view ${v:samtoolsdir:6} ${v:t:374} ]
    set v:t:416 [ expr { ${v:numAlignments:6} == 0 } ]
    set v:t:423 [ expr { ${v:numAlignments:6} > 0 } ]
    turbine::assert_impl ${v:t:423} ${v:t:425}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if13 ${v:alias:sampleName} ${v:t:374} ${v:t:416} ${u:qcfile} ]
    turbine::reset_priority
}


proc __entry-if13 { v:alias:sampleName v:t:374 v:t:416 u:qcfile } {
    if { ${v:t:416} } {
        # Var: string t:418 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():352:18
        # Var: $string v:t:418 VALUE_OF [string:__t:418]
        lassign [ adlb::multicreate [ list string 1 1 167 ] ] t:418
        turbine::c::log "allocated t:418=<${t:418}>"
        set v:t:418 "${v:alias:sampleName}\tREALIGNMENT\tFAIL\tsamtools command did not produce alignments for ${v:t:374}\n"
        turbine::store_string ${t:418} ${v:t:418}
        f:echo ${u:qcfile} ${t:418} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:418} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc samtools_index-app-leaf1 { t:408 t:482 t:484 t:486 t:521 v:VarcallDir v:alias:sampleName v:chr v:samtoolsdir:6 v:t:374 v:t:377 v:t:380 v:t:383 v:t:386 v:t:389 v:t:505 v:t:553 u:chrdedupsortedbam u:chromosomes_processing_done u:gvcfvariant u:indices u:intervals u:ploidy u:qcfile u:realignedbam u:realparms u:recalibratedbam u:recalparmsindels u:recalreport } {
    # Var: $file v:inputFilename RENAMED [$file:__v:inputFilename] ./pipelinefunctions/realign_varcall_by_chr.swift:samtools_index():4:21
    # Var: $void v:signal RENAMED [$void:__v:signal] ./pipelinefunctions/realign_varcall_by_chr.swift:samtools_index():4:21
    set v:inputFilename [ turbine::retrieve_file ${u:chrdedupsortedbam} ]
    turbine::c::log [ list exec: __v:samtoolsdir:6 "index" ${v:t:374} [ dict create ] ]
    turbine::exec_external ${v:samtoolsdir:6} [ dict create ] "index" ${v:t:374}
    turbine::rule [ list ${t:408} ${t:482} ${t:484} ${t:486} ${u:realparms} ] [ list __entry-chain13 ${t:408} ${t:482} ${t:484} ${t:486} ${t:521} ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:samtoolsdir:6} ${v:t:374} ${v:t:377} ${v:t:380} ${v:t:383} ${v:t:386} ${v:t:389} ${v:t:505} ${v:t:553} ${u:chrdedupsortedbam} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:intervals} ${u:ploidy} ${u:qcfile} ${u:realignedbam} ${u:realparms} ${u:recalibratedbam} ${u:recalparmsindels} ${u:recalreport} ]
}


proc __entry-chain13 { t:408 t:482 t:484 t:486 t:521 v:VarcallDir v:alias:sampleName v:chr v:samtoolsdir:6 v:t:374 v:t:377 v:t:380 v:t:383 v:t:386 v:t:389 v:t:505 v:t:553 u:chrdedupsortedbam u:chromosomes_processing_done u:gvcfvariant u:indices u:intervals u:ploidy u:qcfile u:realignedbam u:realparms u:recalibratedbam u:recalparmsindels u:recalreport } {
    # Var: $string v:javadir:1 RENAMED [$string:__v:javadir] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():9:121
    # Var: $string v:gatkdir RENAMED [$string:__v:gatkdir] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():9:121
    # Var: $string v:reference RENAMED [$string:__v:reference] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():9:121
    # Var: $string$[int] v:known RENAMED [$string$[int]:__v:known] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():9:121
    # Var: $int v:thr RENAMED [$int:__v:thr] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():9:121
    # Var: $file v:inputFile:9 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():9:121
    # Var: $file v:outputfile:1 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():9:121
    set v:javadir:1 [ turbine::retrieve_string ${t:482} CACHED 1 ]
    set v:gatkdir [ turbine::retrieve_string ${t:484} CACHED 1 ]
    set v:reference [ turbine::retrieve_string ${t:486} CACHED 1 ]
    set v:known [ turbine::unpack_args ${u:realparms} 1 string ]
    set v:thr [ turbine::retrieve_integer ${t:408} CACHED 1 ]
    set v:inputFile:9 [ turbine::retrieve_file ${u:chrdedupsortedbam} ]
    set tcltmp:init_rc 2
    set v:outputfile:1 [ turbine::create_local_file_ref ${v:t:383} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx8g" "-jar" ${v:gatkdir} "-T" "RealignerTargetCreator" "-R" ${v:reference} "-I" ${v:t:374} {*}${v:known} "-nt" ${v:thr} "-o" ${v:t:383} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx8g" "-jar" ${v:gatkdir} "-T" "RealignerTargetCreator" "-R" ${v:reference} "-I" ${v:t:374} {*}${v:known} "-nt" ${v:thr} "-o" ${v:t:383}
    turbine::store_file ${u:intervals} v:outputfile:1 0
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list IndelRealigner-app-leaf1 ${t:521} ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:gatkdir} ${v:javadir:1} ${v:known} ${v:reference} ${v:samtoolsdir:6} ${v:t:374} ${v:t:377} ${v:t:380} ${v:t:383} ${v:t:386} ${v:t:389} ${v:t:505} ${v:t:553} ${v:thr} ${u:chrdedupsortedbam} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:intervals} ${u:ploidy} ${u:qcfile} ${u:realignedbam} ${u:recalibratedbam} ${u:recalparmsindels} ${u:recalreport} ]
    turbine::reset_priority
    turbine::decr_local_file_refcount v:outputfile:1
    turbine::read_refcount_decr ${u:realparms} 1
}


proc IndelRealigner-app-leaf1 { t:521 v:VarcallDir v:alias:sampleName v:chr v:gatkdir v:javadir:1 v:known v:reference v:samtoolsdir:6 v:t:374 v:t:377 v:t:380 v:t:383 v:t:386 v:t:389 v:t:505 v:t:553 v:thr u:chrdedupsortedbam u:chromosomes_processing_done u:gvcfvariant u:indices u:intervals u:ploidy u:qcfile u:realignedbam u:recalibratedbam u:recalparmsindels u:recalreport } {
    # Var: $file v:inputFile:13 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:IndelRealigner():14:133
    # Var: $file v:intervals RENAMED [$file:__v:intervals] ./pipelinefunctions/realign_varcall_by_chr.swift:IndelRealigner():14:133
    # Var: $file v:outputfile:3 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:IndelRealigner():14:133
    set v:inputFile:13 [ turbine::retrieve_file ${u:chrdedupsortedbam} CACHED 1 ]
    set v:intervals [ turbine::retrieve_file ${u:intervals} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:3 [ turbine::create_local_file_ref ${v:t:377} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx8g" "-jar" ${v:gatkdir} "-T" "IndelRealigner" "-R" ${v:reference} "-I" ${v:t:374} {*}${v:known} "--targetIntervals" ${v:t:383} "-o" ${v:t:377} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx8g" "-jar" ${v:gatkdir} "-T" "IndelRealigner" "-R" ${v:reference} "-I" ${v:t:374} {*}${v:known} "--targetIntervals" ${v:t:383} "-o" ${v:t:377}
    turbine::store_file ${u:realignedbam} v:outputfile:3 0
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-chain14 ${v:alias:sampleName} ${v:samtoolsdir:6} ${v:t:377} ${v:t:505} ${u:qcfile} ]
    turbine::reset_priority
    turbine::rule [ list ${t:521} ${u:recalparmsindels} ] [ list BaseRecalibrator-app-leaf1 ${t:521} ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:gatkdir} ${v:javadir:1} ${v:reference} ${v:samtoolsdir:6} ${v:t:377} ${v:t:380} ${v:t:386} ${v:t:389} ${v:t:553} ${v:thr} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:ploidy} ${u:qcfile} ${u:realignedbam} ${u:recalibratedbam} ${u:recalparmsindels} ${u:recalreport} ]
    turbine::decr_local_file_refcount v:outputfile:3
}


proc __entry-chain14 { v:alias:sampleName v:samtoolsdir:6 v:t:377 v:t:505 u:qcfile } {
    # Var: $int v:numAlignments:7 RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:495 VALUE_OF [boolean:__t:495]
    # Var: $boolean v:t:503 VALUE_OF [boolean:__t:503]
    # Var: $void v:t:502 VALUE_OF [void:__t:502]
    set v:numAlignments:7 [ alignment::samtools_view ${v:samtoolsdir:6} ${v:t:377} ]
    set v:t:495 [ expr { ${v:numAlignments:7} == 0 } ]
    set v:t:503 [ expr { ${v:numAlignments:7} > 0 } ]
    turbine::assert_impl ${v:t:503} ${v:t:505}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if14 ${v:alias:sampleName} ${v:t:377} ${v:t:495} ${u:qcfile} ]
    turbine::reset_priority
}


proc __entry-if14 { v:alias:sampleName v:t:377 v:t:495 u:qcfile } {
    if { ${v:t:495} } {
        # Var: string t:497 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():393:18
        # Var: $string v:t:497 VALUE_OF [string:__t:497]
        lassign [ adlb::multicreate [ list string 1 1 168 ] ] t:497
        turbine::c::log "allocated t:497=<${t:497}>"
        set v:t:497 "${v:alias:sampleName}\tREALIGNMENT\tFAIL\tGATK: IndelRealigner command did not produce alignments for ${v:t:377}\n"
        turbine::store_string ${t:497} ${v:t:497}
        f:echo ${u:qcfile} ${t:497} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:497} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc BaseRecalibrator-app-leaf1 { t:521 v:VarcallDir v:alias:sampleName v:chr v:gatkdir v:javadir:1 v:reference v:samtoolsdir:6 v:t:377 v:t:380 v:t:386 v:t:389 v:t:553 v:thr u:chromosomes_processing_done u:gvcfvariant u:indices u:ploidy u:qcfile u:realignedbam u:recalibratedbam u:recalparmsindels u:recalreport } {
    # Var: $string v:dbsnp RENAMED [$string:__v:dbsnp] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():19:143
    # Var: $string$[int] v:knownindels RENAMED [$string$[int]:__v:knownindels] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():19:143
    # Var: $file v:inputFile:14 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():19:143
    # Var: $file v:outputfile:4 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():19:143
    set v:dbsnp [ turbine::retrieve_string ${t:521} CACHED 1 ]
    set v:knownindels [ turbine::unpack_args ${u:recalparmsindels} 1 string ]
    set v:inputFile:14 [ turbine::retrieve_file ${u:realignedbam} ]
    set tcltmp:init_rc 2
    set v:outputfile:4 [ turbine::create_local_file_ref ${v:t:386} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx16g" "-jar" ${v:gatkdir} "-T" "BaseRecalibrator" "-R" ${v:reference} "-I" ${v:t:377} "-knownSites" ${v:dbsnp} {*}${v:knownindels} "-nct" ${v:thr} "-o" ${v:t:386} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx16g" "-jar" ${v:gatkdir} "-T" "BaseRecalibrator" "-R" ${v:reference} "-I" ${v:t:377} "-knownSites" ${v:dbsnp} {*}${v:knownindels} "-nct" ${v:thr} "-o" ${v:t:386}
    turbine::store_file ${u:recalreport} v:outputfile:4 0
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-chain15 ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:dbsnp} ${v:gatkdir} ${v:javadir:1} ${v:reference} ${v:samtoolsdir:6} ${v:t:377} ${v:t:380} ${v:t:386} ${v:t:389} ${v:t:553} ${v:thr} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:ploidy} ${u:qcfile} ${u:realignedbam} ${u:recalibratedbam} ${u:recalreport} ]
    turbine::reset_priority
    turbine::decr_local_file_refcount v:outputfile:4
    turbine::read_refcount_decr ${u:recalparmsindels} 1
}


proc __entry-chain15 { v:VarcallDir v:alias:sampleName v:chr v:dbsnp v:gatkdir v:javadir:1 v:reference v:samtoolsdir:6 v:t:377 v:t:380 v:t:386 v:t:389 v:t:553 v:thr u:chromosomes_processing_done u:gvcfvariant u:indices u:ploidy u:qcfile u:realignedbam u:recalibratedbam u:recalreport } {
    # Var: $file v:inputFile:12 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:PrintReads():24:129
    # Var: $file v:recalreport RENAMED [$file:__v:recalreport] ./pipelinefunctions/realign_varcall_by_chr.swift:PrintReads():24:129
    # Var: $file v:outputfile:2 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:PrintReads():24:129
    # Var: $int v:ploidy RENAMED [$int:__v:ploidy] ./pipelinefunctions/realign_varcall_by_chr.swift:HaplotypeCaller():29:455
    set v:inputFile:12 [ turbine::retrieve_file ${u:realignedbam} CACHED 1 ]
    set v:recalreport [ turbine::retrieve_file ${u:recalreport} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:2 [ turbine::create_local_file_ref ${v:t:380} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx16g" "-jar" ${v:gatkdir} "-T" "PrintReads" "-R" ${v:reference} "-I" ${v:t:377} "-BQSR" ${v:t:386} "-nct" ${v:thr} "--out" ${v:t:380} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx16g" "-jar" ${v:gatkdir} "-T" "PrintReads" "-R" ${v:reference} "-I" ${v:t:377} "-BQSR" ${v:t:386} "-nct" ${v:thr} "--out" ${v:t:380}
    turbine::store_file ${u:recalibratedbam} v:outputfile:2 0
    set v:ploidy [ turbine::retrieve_integer ${u:ploidy} CACHED 1 ]
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-chain16 ${v:alias:sampleName} ${v:samtoolsdir:6} ${v:t:380} ${v:t:553} ${u:qcfile} ]
    turbine::reset_priority
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list HaplotypeCaller-app-leaf1 ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:dbsnp} ${v:gatkdir} ${v:javadir:1} ${v:ploidy} ${v:reference} ${v:t:380} ${v:t:389} ${v:thr} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:recalibratedbam} ]
    turbine::reset_priority
    turbine::decr_local_file_refcount v:outputfile:2
}


proc __entry-chain16 { v:alias:sampleName v:samtoolsdir:6 v:t:380 v:t:553 u:qcfile } {
    # Var: $int v:numAlignments:8 RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:543 VALUE_OF [boolean:__t:543]
    # Var: $boolean v:t:551 VALUE_OF [boolean:__t:551]
    # Var: $void v:t:550 VALUE_OF [void:__t:550]
    set v:numAlignments:8 [ alignment::samtools_view ${v:samtoolsdir:6} ${v:t:380} ]
    set v:t:543 [ expr { ${v:numAlignments:8} == 0 } ]
    set v:t:551 [ expr { ${v:numAlignments:8} > 0 } ]
    turbine::assert_impl ${v:t:551} ${v:t:553}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if15 ${v:alias:sampleName} ${v:t:380} ${v:t:543} ${u:qcfile} ]
    turbine::reset_priority
}


proc __entry-if15 { v:alias:sampleName v:t:380 v:t:543 u:qcfile } {
    if { ${v:t:543} } {
        # Var: string t:545 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():417:18
        # Var: $string v:t:545 VALUE_OF [string:__t:545]
        lassign [ adlb::multicreate [ list string 1 1 169 ] ] t:545
        turbine::c::log "allocated t:545=<${t:545}>"
        set v:t:545 "${v:alias:sampleName}\tRECALIBRATION\tFAIL\tGATK: BQSR Recalibration command did not produce alignments for ${v:t:380}\n"
        turbine::store_string ${t:545} ${v:t:545}
        f:echo ${u:qcfile} ${t:545} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:545} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc HaplotypeCaller-app-leaf1 { v:VarcallDir v:alias:sampleName v:chr v:dbsnp v:gatkdir v:javadir:1 v:ploidy v:reference v:t:380 v:t:389 v:thr u:chromosomes_processing_done u:gvcfvariant u:indices u:recalibratedbam } {
    # Var: $file v:inputFile:15 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:HaplotypeCaller():29:455
    # Var: $file v:outputfile:5 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:HaplotypeCaller():29:455
    # Var: *rw(file)[int] t:578 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():436:30
    # Var: string t:579 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():436:35
    # Var: $string$[int] v:indices VALUE_OF [string[int]:indices]
    # Var: $int v:t:576 VALUE_OF [int:__t:576]
    # Var: $string v:t:579 VALUE_OF [string:__t:579]
    lassign [ adlb::multicreate [ list container integer file_ref 1 1 170 ] [ list string 1 1 171 ] ] t:578 t:579
    turbine::c::log "allocated t:578=<${t:578}> t:579=<${t:579}>"
    set v:inputFile:15 [ turbine::retrieve_file ${u:recalibratedbam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:5 [ turbine::create_local_file_ref ${v:t:389} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx8g" "-jar" ${v:gatkdir} "-T" "HaplotypeCaller" "-R" ${v:reference} "-I" ${v:t:380} "--dbsnp" ${v:dbsnp} "-o" ${v:t:389} "--emitRefConfidence" "GVCF" "-gt_mode" "DISCOVERY" "-A" "Coverage" "-A" "FisherStrand" "-A" "StrandOddsRatio" "-A" "HaplotypeScore" "-A" "MappingQualityRankSumTest" "-A" "QualByDepth" "-A" "RMSMappingQuality" "-A" "ReadPosRankSumTest" "-stand_call_conf" 30 "-stand_emit_conf" 30 "--sample_ploidy" ${v:ploidy} "-nt" 1 "-nct" ${v:thr} "-L" ${v:chr} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx8g" "-jar" ${v:gatkdir} "-T" "HaplotypeCaller" "-R" ${v:reference} "-I" ${v:t:380} "--dbsnp" ${v:dbsnp} "-o" ${v:t:389} "--emitRefConfidence" "GVCF" "-gt_mode" "DISCOVERY" "-A" "Coverage" "-A" "FisherStrand" "-A" "StrandOddsRatio" "-A" "HaplotypeScore" "-A" "MappingQualityRankSumTest" "-A" "QualByDepth" "-A" "RMSMappingQuality" "-A" "ReadPosRankSumTest" "-stand_call_conf" 30 "-stand_emit_conf" 30 "--sample_ploidy" ${v:ploidy} "-nt" 1 "-nct" ${v:thr} "-L" ${v:chr}
    turbine::store_file ${u:gvcfvariant} v:outputfile:5 0
    set v:indices [ adlb::enumerate ${u:indices} dict all 0 1 ]
    set v:t:576 [ dict size ${v:indices} ]
    turbine::glob [ list ${t:578} ] [ list ${t:579} ]
    set v:t:579 "${v:VarcallDir}${v:alias:sampleName}.*.raw.g.vcf"
    turbine::store_string ${t:579} ${v:t:579}
    turbine::rule [ list ${t:578} ] "__entry-call_foreign-size-1 ${t:578} ${v:t:576} ${u:chromosomes_processing_done}"
    turbine::decr_local_file_refcount v:outputfile:5
}


proc __entry-call_foreign-size-1 { t:578 v:t:576 u:chromosomes_processing_done } {
    # Var: file$[int] v:t:578 VALUE_OF [*rw(file)[int]:__t:578]
    # Var: $int v:t:577 VALUE_OF [int:__t:577]
    # Var: $boolean v:t:575 VALUE_OF [boolean:__t:575]
    set v:t:578 [ adlb::enumerate ${t:578} dict all 0 0 ]
    set v:t:577 [ dict size ${v:t:578} ]
    set v:t:575 [ expr { ${v:t:576} == ${v:t:577} } ]
    if { ${v:t:575} } {
        turbine::store_integer ${u:chromosomes_processing_done} 1
    }
    turbine::read_refcount_decr ${t:578} 1
}


proc __entry-async_op-parse_int-6 { t:408 t:409 } {
    # Var: $string v:t:409 VALUE_OF [string:__t:409]
    # Var: $int v:t:408 VALUE_OF [int:__t:408]
    set v:t:409 [ turbine::retrieve_string ${t:409} CACHED 1 ]
    set v:t:408 [ turbine::parse_int_impl ${v:t:409} 10 ]
    turbine::store_integer ${t:408} ${v:t:408}
}


proc __entry-optmerged-12 { t:429 t:430 t:433 t:448 t:486 t:490 t:521 t:525 } {
    # Var: $string v:t:430:2 VALUE_OF [string:__t:430]
    set v:t:430:2 [ turbine::retrieve_string ${t:430} CACHED 1 ]
    turbine::rule [ list ${t:490} ] [ list __entry-async_op-strcat-12 ${t:486} ${t:490} ${v:t:430:2} ]
    turbine::rule [ list ${t:525} ] [ list __entry-async_op-strcat-13 ${t:521} ${t:525} ${v:t:430:2} ]
    turbine::rule [ list ${t:433} ] [ list __entry-optmerged-13 ${t:429} ${t:433} ${t:448} ${v:t:430:2} ]
}


proc __entry-async_op-strcat-12 { t:486 t:490 v:t:430:2 } {
    # Var: $string v:t:490 VALUE_OF [string:__t:490]
    # Var: $string v:t:486 VALUE_OF [string:__t:486]
    set v:t:490 [ turbine::retrieve_string ${t:490} CACHED 1 ]
    set v:t:486 "${v:t:430:2}/${v:t:490}"
    turbine::store_string ${t:486} ${v:t:486}
}


proc __entry-async_op-strcat-13 { t:521 t:525 v:t:430:2 } {
    # Var: $string v:t:525 VALUE_OF [string:__t:525]
    # Var: $string v:t:521 VALUE_OF [string:__t:521]
    set v:t:525 [ turbine::retrieve_string ${t:525} CACHED 1 ]
    set v:t:521 "${v:t:430:2}/${v:t:525}"
    turbine::store_string ${t:521} ${v:t:521}
}


proc __entry-optmerged-13 { t:429 t:433 t:448 v:t:430:2 } {
    # Var: $string v:t:433 VALUE_OF [string:__t:433]
    # Var: $string v:t:429 VALUE_OF [string:__t:429]
    # Var: $string v:t:449 VALUE_OF [string:__t:449]
    # Var: $string v:t:448 VALUE_OF [string:__t:448]
    set v:t:433 [ turbine::retrieve_string ${t:433} CACHED 1 ]
    set v:t:429 "${v:t:430:2}/${v:t:433}/"
    turbine::store_string ${t:429} ${v:t:429}
    set v:t:449 "${v:t:430:2}/${v:t:433}"
    set v:t:448 "${v:t:449}/"
    turbine::store_string ${t:448} ${v:t:448}
}


proc samtools_flagstat-app-leaf1 { t:326 v:t:49 v:t:78 u:dedupsortedbam u:flagstats u:stat } {
    # Var: $string v:samtoolsdir:11 RENAMED [$string:__v:samtoolsdir] ./pipelinefunctions/align_dedup.swift:samtools_flagstat():51:42
    # Var: $file v:inputFile:18 RENAMED [$file:__v:inputFile] ./pipelinefunctions/align_dedup.swift:samtools_flagstat():51:42
    # Var: $file v:output:3 RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:samtools_flagstat():51:42
    # Var: $file v:flagstats VALUE_OF [file:flagstats]
    # Var: $string$[int] v:stat VALUE_OF [string[int]:stat]
    set v:samtoolsdir:11 [ turbine::retrieve_string ${t:326} CACHED 1 ]
    set v:inputFile:18 [ turbine::retrieve_file ${u:dedupsortedbam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output:3 [ turbine::create_local_file_ref ${v:t:78} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:samtoolsdir:11 "flagstat" ${v:t:49} [ dict create "stdout" ${v:t:78} ] ]
    turbine::exec_external ${v:samtoolsdir:11} [ dict create "stdout" ${v:t:78} ] "flagstat" ${v:t:49}
    turbine::store_file ${u:flagstats} v:output:3 0
    set v:flagstats [ turbine::retrieve_file ${u:flagstats} CACHED 1 ]
    set v:stat [ turbine::file_lines_impl ${v:flagstats} ]
    turbine::build_rec ${u:stat} ${v:stat} [ list container integer string ] 0 1
    turbine::decr_local_file_refcount v:output:3
}


proc __entry-optmerged-14 { t:659 t:81 v:alias:sampleName u:alignedsam u:chr_bamListfile u:chr_vcfListfile } {
    # Var: $string v:t:659:1 VALUE_OF [string:__t:659]
    # Var: $string v:t:81 VALUE_OF [string:__t:81]
    # Var: $string v:t:86 VALUE_OF [string:__t:86]
    # Var: $string v:t:91 VALUE_OF [string:__t:91]
    set v:t:659:1 [ turbine::retrieve_string ${t:659} CACHED 1 ]
    set v:t:81 "${v:t:659:1}/align/${v:alias:sampleName}.nodups.sam"
    turbine::store_string ${t:81} ${v:t:81}
    set v:t:86 "${v:t:659:1}/${v:alias:sampleName}.chr_bamList.txt"
    set v:t:91 "${v:t:659:1}/${v:alias:sampleName}.chr_vcfList.txt"
    turbine::set_filename_val ${u:alignedsam} ${v:t:81}
    turbine::set_filename_val ${u:chr_bamListfile} ${v:t:86}
    turbine::set_filename_val ${u:chr_vcfListfile} ${v:t:91}
}


proc f:cp { u:o u:i v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: cp"
    # Var: $boolean v:mapped_o OPT_TEMPORARY
    turbine::file_read_refcount_incr ${u:o} 1
    turbine::file_read_refcount_incr ${u:i} 2
    set filename:i [ turbine::get_file_path ${u:i} ]
    set v:mapped_o [ turbine::is_file_mapped ${u:o} ]
    set filename:o [ turbine::get_file_path ${u:o} ]
    if { ${v:mapped_o} } {
    } else {
        # Var: $string optf:o FILENAME_OF [file:o]
        set optf:o [ turbine::mktemp ]
        turbine::set_filename_val ${u:o} ${optf:o}
    }
    turbine::rule [ list ${filename:i} ${filename:o} [ turbine::get_file_td ${u:i} ] ] "cp-app-leaf1 {${filename:i}} {${filename:o}} ${v:mapped_o} {${u:i}} {${u:o}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc cp-app-leaf1 { filename:i filename:o v:mapped_o u:i u:o } {
    # Var: $string v:__filename:i VALUE_OF [string:__filename:i] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:cp():24:9
    # Var: $string v:__filename:o VALUE_OF [string:__filename:o] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:cp():24:9
    # Var: $file v:i VALUE_OF [file:i] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:cp():24:9
    # Var: $file v:o VALUE_OF [file:o] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:cp():24:9
    # Var: $boolean v:3 EXPR_TEMPORARY /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:cp():24:9
    set v:__filename:i [ turbine::retrieve_string ${filename:i} ]
    set v:__filename:o [ turbine::retrieve_string ${filename:o} CACHED 1 ]
    set v:i [ turbine::retrieve_file ${u:i} CACHED 2 ]
    if { ${v:mapped_o} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:o [ turbine::create_local_file_ref ${v:__filename:o} ${tcltmp:init_rc} ${v:mapped_o} ]
    turbine::c::log [ list exec: "cp" ${v:__filename:i} ${v:__filename:o} [ dict create ] ]
    turbine::exec_external "cp" [ dict create ] ${v:__filename:i} ${v:__filename:o}
    set v:3 [ expr { ! ${v:mapped_o} } ]
    turbine::store_file ${u:o} v:o ${v:3}
    turbine::decr_local_file_refcount v:o
}


proc f:sed { u:o u:i u:command v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: sed"
    # Var: $boolean v:mapped_o OPT_TEMPORARY
    turbine::read_refcount_incr ${u:command} 1
    turbine::file_read_refcount_incr ${u:o} 1
    turbine::file_read_refcount_incr ${u:i} 2
    set filename:i [ turbine::get_file_path ${u:i} ]
    set v:mapped_o [ turbine::is_file_mapped ${u:o} ]
    set filename:o [ turbine::get_file_path ${u:o} ]
    if { ${v:mapped_o} } {
    } else {
        # Var: $string optf:o FILENAME_OF [file:o]
        set optf:o [ turbine::mktemp ]
        turbine::set_filename_val ${u:o} ${optf:o}
    }
    turbine::rule [ list ${filename:i} ${filename:o} ${u:command} [ turbine::get_file_td ${u:i} ] ] "sed-app-leaf1 {${filename:i}} {${filename:o}} ${v:mapped_o} {${u:command}} {${u:i}} {${u:o}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc sed-app-leaf1 { filename:i filename:o v:mapped_o u:command u:i u:o } {
    # Var: $string v:command VALUE_OF [string:command] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    # Var: $string v:__filename:i VALUE_OF [string:__filename:i] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    # Var: $string v:__filename:o VALUE_OF [string:__filename:o] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    # Var: $file v:i VALUE_OF [file:i] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    # Var: $file v:o VALUE_OF [file:o] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    # Var: $boolean v:3 EXPR_TEMPORARY /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    set v:command [ turbine::retrieve_string ${u:command} CACHED 1 ]
    set v:__filename:i [ turbine::retrieve_string ${filename:i} ]
    set v:__filename:o [ turbine::retrieve_string ${filename:o} CACHED 1 ]
    set v:i [ turbine::retrieve_file ${u:i} CACHED 2 ]
    if { ${v:mapped_o} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:o [ turbine::create_local_file_ref ${v:__filename:o} ${tcltmp:init_rc} ${v:mapped_o} ]
    turbine::c::log [ list exec: "sed" ${v:command} ${v:__filename:i} [ dict create "stdout" ${v:__filename:o} ] ]
    turbine::exec_external "sed" [ dict create "stdout" ${v:__filename:o} ] ${v:command} ${v:__filename:i}
    set v:3 [ expr { ! ${v:mapped_o} } ]
    turbine::store_file ${u:o} v:o ${v:3}
    turbine::decr_local_file_refcount v:o
}


proc f:echo { u:o u:s v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: echo"
    # Var: $boolean v:mapped_o OPT_TEMPORARY
    turbine::file_read_refcount_incr ${u:o} 1
    turbine::read_refcount_incr ${u:s} 1
    set v:mapped_o [ turbine::is_file_mapped ${u:o} ]
    set filename:o [ turbine::get_file_path ${u:o} ]
    if { ${v:mapped_o} } {
    } else {
        # Var: $string optf:o FILENAME_OF [file:o]
        set optf:o [ turbine::mktemp ]
        turbine::set_filename_val ${u:o} ${optf:o}
    }
    turbine::rule [ list ${filename:o} ${u:s} ] "echo-app-leaf1 {${filename:o}} ${v:mapped_o} {${u:o}} {${u:s}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc echo-app-leaf1 { filename:o v:mapped_o u:o u:s } {
    # Var: $string v:s VALUE_OF [string:s] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:echo():55:19
    # Var: $string v:__filename:o VALUE_OF [string:__filename:o] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:echo():55:19
    # Var: $file v:o VALUE_OF [file:o] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:echo():55:19
    # Var: $boolean v:3 EXPR_TEMPORARY /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:echo():55:19
    set v:s [ turbine::retrieve_string ${u:s} CACHED 1 ]
    set v:__filename:o [ turbine::retrieve_string ${filename:o} CACHED 1 ]
    if { ${v:mapped_o} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:o [ turbine::create_local_file_ref ${v:__filename:o} ${tcltmp:init_rc} ${v:mapped_o} ]
    turbine::c::log [ list exec: "echo" ${v:s} [ dict create "stdout" ${v:__filename:o} ] ]
    turbine::exec_external "echo" [ dict create "stdout" ${v:__filename:o} ] ${v:s}
    set v:3 [ expr { ! ${v:mapped_o} } ]
    turbine::store_file ${u:o} v:o ${v:3}
    turbine::decr_local_file_refcount v:o
}


proc f:bwa_mem { u:output u:bwadir u:read1 u:read2 u:INDEX u:bwamemparams u:PBSCORES u:rgheader v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: bwa_mem"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::read_refcount_incr ${u:read1} 1
    turbine::read_refcount_incr ${u:read2} 1
    turbine::read_refcount_incr ${u:bwamemparams} 1
    turbine::read_refcount_incr ${u:rgheader} 1
    turbine::read_refcount_incr ${u:INDEX} 1
    turbine::read_refcount_incr ${u:bwadir} 1
    turbine::read_refcount_incr ${u:PBSCORES} 1
    turbine::file_read_refcount_incr ${u:output} 1
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${u:INDEX} ${u:PBSCORES} ${filename:output} ${u:bwadir} ${u:bwamemparams} ${u:read1} ${u:read2} ${u:rgheader} ] "bwa_mem-app-leaf1 {${u:INDEX}} {${u:PBSCORES}} {${filename:output}} ${v:mapped_output} {${u:bwadir}} {${u:bwamemparams}} {${u:output}} {${u:read1}} {${u:read2}} {${u:rgheader}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc bwa_mem-app-leaf1 { u:INDEX u:PBSCORES filename:output v:mapped_output u:bwadir u:bwamemparams u:output u:read1 u:read2 u:rgheader } {
    # Var: $string v:bwadir VALUE_OF [string:bwadir] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string$[int] v:bwamemparams VALUE_OF [string[int]:bwamemparams] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $int v:PBSCORES VALUE_OF [int:PBSCORES] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:rgheader VALUE_OF [string:rgheader] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:INDEX VALUE_OF [string:INDEX] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:read1 VALUE_OF [string:read1] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:read2 VALUE_OF [string:read2] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $file v:output VALUE_OF [file:output] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $boolean v:3 EXPR_TEMPORARY ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    set v:bwadir [ turbine::retrieve_string ${u:bwadir} CACHED 1 ]
    set v:bwamemparams [ turbine::unpack_args ${u:bwamemparams} 1 string ]
    set v:PBSCORES [ turbine::retrieve_integer ${u:PBSCORES} CACHED 1 ]
    set v:rgheader [ turbine::retrieve_string ${u:rgheader} CACHED 1 ]
    set v:INDEX [ turbine::retrieve_string ${u:INDEX} CACHED 1 ]
    set v:read1 [ turbine::retrieve_string ${u:read1} CACHED 1 ]
    set v:read2 [ turbine::retrieve_string ${u:read2} CACHED 1 ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: __v:bwadir "mem" "-M" {*}${v:bwamemparams} "-t" ${v:PBSCORES} "-R" ${v:rgheader} ${v:INDEX} ${v:read1} ${v:read2} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external ${v:bwadir} [ dict create "stdout" ${v:__filename:output} ] "mem" "-M" {*}${v:bwamemparams} "-t" ${v:PBSCORES} "-R" ${v:rgheader} ${v:INDEX} ${v:read1} ${v:read2}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
    turbine::read_refcount_decr ${u:bwamemparams} 1
}


proc f:samtools_view { u:output u:samtoolsdir u:inputFile u:thr u:args v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: samtools_view"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::read_refcount_incr ${u:thr} 1
    turbine::file_read_refcount_incr ${u:inputFile} 2
    turbine::file_read_refcount_incr ${u:output} 1
    turbine::read_refcount_incr ${u:samtoolsdir} 1
    turbine::read_refcount_incr ${u:args} 1
    set filename:inputFile [ turbine::get_file_path ${u:inputFile} ]
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${filename:inputFile} ${filename:output} ${u:args} [ turbine::get_file_td ${u:inputFile} ] ${u:samtoolsdir} ${u:thr} ] "samtools_view-app-leaf1 {${filename:inputFile}} {${filename:output}} ${v:mapped_output} {${u:args}} {${u:inputFile}} {${u:output}} {${u:samtoolsdir}} {${u:thr}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc samtools_view-app-leaf1 { filename:inputFile filename:output v:mapped_output u:args u:inputFile u:output u:samtoolsdir u:thr } {
    # Var: $string v:samtoolsdir VALUE_OF [string:samtoolsdir] ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    # Var: $int v:thr VALUE_OF [int:thr] ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    # Var: $string v:__filename:inputFile VALUE_OF [string:__filename:inputFile] ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    # Var: $string$[int] v:args VALUE_OF [string[int]:args] ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    # Var: $file v:inputFile VALUE_OF [file:inputFile] ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    # Var: $file v:output VALUE_OF [file:output] ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    # Var: $boolean v:3 EXPR_TEMPORARY ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    set v:samtoolsdir [ turbine::retrieve_string ${u:samtoolsdir} CACHED 1 ]
    set v:thr [ turbine::retrieve_integer ${u:thr} CACHED 1 ]
    set v:__filename:inputFile [ turbine::retrieve_string ${filename:inputFile} ]
    set v:args [ turbine::unpack_args ${u:args} 1 string ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    set v:inputFile [ turbine::retrieve_file ${u:inputFile} CACHED 2 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: __v:samtoolsdir "view" "-@" ${v:thr} "-bS" ${v:__filename:inputFile} {*}${v:args} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external ${v:samtoolsdir} [ dict create "stdout" ${v:__filename:output} ] "view" "-@" ${v:thr} "-bS" ${v:__filename:inputFile} {*}${v:args}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
    turbine::read_refcount_decr ${u:args} 1
}


proc f:novosort { u:output u:novosortdir u:inputFile u:tmpdir u:thr u:sortoptions v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: novosort"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::read_refcount_incr ${u:thr} 1
    turbine::read_refcount_incr ${u:novosortdir} 1
    turbine::read_refcount_incr ${u:tmpdir} 1
    turbine::read_refcount_incr ${u:sortoptions} 1
    turbine::file_read_refcount_incr ${u:inputFile} 2
    turbine::file_read_refcount_incr ${u:output} 1
    set filename:inputFile [ turbine::get_file_path ${u:inputFile} ]
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${filename:inputFile} ${filename:output} [ turbine::get_file_td ${u:inputFile} ] ${u:novosortdir} ${u:sortoptions} ${u:thr} ${u:tmpdir} ] "novosort-app-leaf1 {${filename:inputFile}} {${filename:output}} ${v:mapped_output} {${u:inputFile}} {${u:novosortdir}} {${u:output}} {${u:sortoptions}} {${u:thr}} {${u:tmpdir}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc novosort-app-leaf1 { filename:inputFile filename:output v:mapped_output u:inputFile u:novosortdir u:output u:sortoptions u:thr u:tmpdir } {
    # Var: $string v:novosortdir VALUE_OF [string:novosortdir] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $string v:tmpdir VALUE_OF [string:tmpdir] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $int v:thr VALUE_OF [int:thr] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $string v:__filename:inputFile VALUE_OF [string:__filename:inputFile] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $string$[int] v:sortoptions VALUE_OF [string[int]:sortoptions] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $file v:inputFile VALUE_OF [file:inputFile] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $file v:output VALUE_OF [file:output] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $boolean v:3 EXPR_TEMPORARY ./pipelinefunctions/align_dedup.swift:novosort():33:79
    set v:novosortdir [ turbine::retrieve_string ${u:novosortdir} CACHED 1 ]
    set v:tmpdir [ turbine::retrieve_string ${u:tmpdir} CACHED 1 ]
    set v:thr [ turbine::retrieve_integer ${u:thr} CACHED 1 ]
    set v:__filename:inputFile [ turbine::retrieve_string ${filename:inputFile} ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    set v:sortoptions [ turbine::unpack_args ${u:sortoptions} 1 string ]
    set v:inputFile [ turbine::retrieve_file ${u:inputFile} CACHED 2 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: __v:novosortdir "--index" "--tmpdir" ${v:tmpdir} "--threads" ${v:thr} ${v:__filename:inputFile} "-o" ${v:__filename:output} {*}${v:sortoptions} [ dict create ] ]
    turbine::exec_external ${v:novosortdir} [ dict create ] "--index" "--tmpdir" ${v:tmpdir} "--threads" ${v:thr} ${v:__filename:inputFile} "-o" ${v:__filename:output} {*}${v:sortoptions}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
    turbine::read_refcount_decr ${u:sortoptions} 1
}


proc f:find_files { u:output u:dir u:pattern v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: find_files"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::read_refcount_incr ${u:dir} 1
    turbine::read_refcount_incr ${u:pattern} 1
    turbine::file_read_refcount_incr ${u:output} 1
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${filename:output} ${u:dir} ${u:pattern} ] "find_files-app-leaf1 {${filename:output}} ${v:mapped_output} {${u:dir}} {${u:output}} {${u:pattern}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc find_files-app-leaf1 { filename:output v:mapped_output u:dir u:output u:pattern } {
    # Var: $string v:dir VALUE_OF [string:dir] ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    # Var: $string v:pattern VALUE_OF [string:pattern] ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    # Var: $file v:output VALUE_OF [file:output] ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    # Var: $boolean v:3 EXPR_TEMPORARY ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    set v:dir [ turbine::retrieve_string ${u:dir} CACHED 1 ]
    set v:pattern [ turbine::retrieve_string ${u:pattern} CACHED 1 ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: "find" ${v:dir} "-name" ${v:pattern} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external "find" [ dict create "stdout" ${v:__filename:output} ] ${v:dir} "-name" ${v:pattern}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
}

turbine::defaults
turbine::declare_custom_work_types COASTER
turbine::init $servers "Swift"
turbine::enable_read_refcount
adlb::declare_struct_type 16 s:location [ list "rank" integer "strictness" string "accuracy" string ]
turbine::check_constants "WORKER\[WORKER\]" ${turbine::WORK_TASK} 0 "CONTROL" ${turbine::WORK_TASK} 0 "ADLB_RANK_ANY" ${adlb::RANK_ANY} -100
adlb::add_debug_symbol 1 "__c:s__GATKCombi-2" ""
adlb::add_debug_symbol 2 "__c:s_sknownSite" ""
adlb::add_debug_symbol 3 "__c:s_sknown_g" ""
adlb::add_debug_symbol 4 "__c:s_svariant_g" ""
adlb::add_debug_symbol 5 "__t:7" "JacobVCPipeline:64:33"
adlb::add_debug_symbol 6 "__t:10" "JacobVCPipeline:69:25"
adlb::add_debug_symbol 7 "__t:13" "JacobVCPipeline:69:49"
adlb::add_debug_symbol 8 "__t:651" "JacobVCPipeline:483:16"
adlb::add_debug_symbol 9 "__t:659" "JacobVCPipeline:484:27"
adlb::add_debug_symbol 10 "samples_processing_done" "JacobVCPipeline:66:0"
adlb::add_debug_symbol 11 "docSampleInfo" "JacobVCPipeline:73:39"
adlb::add_debug_symbol 12 "jointVCF" "JacobVCPipeline:483:71"
adlb::add_debug_symbol 13 "configFile" "JacobVCPipeline:59:0"
adlb::add_debug_symbol 14 "sampleInfoFile" "JacobVCPipeline:64:0"
adlb::add_debug_symbol 15 "vars" "JacobVCPipeline:62:0"
adlb::add_debug_symbol 16 "docRunfile" "JacobVCPipeline:69:99"
adlb::add_debug_symbol 17 "variantFiles" "JacobVCPipeline:484:43"
adlb::add_debug_symbol 18 "__t:28" "JacobVCPipeline:__entry():87:88"
adlb::add_debug_symbol 19 "__t:30" "JacobVCPipeline:__entry():88:6"
adlb::add_debug_symbol 20 "__t:32" "JacobVCPipeline:__entry():88:48"
adlb::add_debug_symbol 21 "__t:55" "JacobVCPipeline:__entry():113:14"
adlb::add_debug_symbol 22 "__t:97" "JacobVCPipeline:__entry():126:5"
adlb::add_debug_symbol 23 "__t:326" "JacobVCPipeline:__entry():281:31"
adlb::add_debug_symbol 24 "__t:347" "JacobVCPipeline:__entry():291:30"
adlb::add_debug_symbol 25 "__t:371" "JacobVCPipeline:__entry():321:17"
adlb::add_debug_symbol 26 "__t:96" "JacobVCPipeline:__entry():126:32"
adlb::add_debug_symbol 27 "__t:346" "JacobVCPipeline:__entry():291:17"
adlb::add_debug_symbol 28 "indices" "JacobVCPipeline:__entry():321:9"
adlb::add_debug_symbol 29 "keyValuePair" "pipelinefunctions.miscellaneous:getConfigVariables():8:16"
adlb::add_debug_symbol 30 "varlist" "JacobVCPipeline:__entry():490:1"
adlb::add_debug_symbol 31 "__t:670" "JacobVCPipeline:__entry():489:27"
adlb::add_debug_symbol 32 "__t:680" "JacobVCPipeline:__entry():490:48"
adlb::add_debug_symbol 33 "__t:686" "JacobVCPipeline:__entry():491:26"
adlb::add_debug_symbol 34 "__t:688" "JacobVCPipeline:__entry():491:43"
adlb::add_debug_symbol 35 "__t:691" "JacobVCPipeline:__entry():492:12"
adlb::add_debug_symbol 36 "__t:694" "JacobVCPipeline:__entry():492:39"
adlb::add_debug_symbol 37 "sampleInfo" "JacobVCPipeline:__entry():82:1"
adlb::add_debug_symbol 38 "read1" "JacobVCPipeline:__entry():84:1"
adlb::add_debug_symbol 39 "read2" "JacobVCPipeline:__entry():85:1"
adlb::add_debug_symbol 40 "rgheader" "JacobVCPipeline:__entry():87:1"
adlb::add_debug_symbol 41 "AlignDir" "JacobVCPipeline:__entry():97:1"
adlb::add_debug_symbol 42 "VarcallDir" "JacobVCPipeline:__entry():100:1"
adlb::add_debug_symbol 43 "RealignDir" "JacobVCPipeline:__entry():103:1"
adlb::add_debug_symbol 44 "__t:49" "JacobVCPipeline:__entry():109:23"
adlb::add_debug_symbol 45 "dedupsortedbam" "JacobVCPipeline:__entry():109:52"
adlb::add_debug_symbol 46 "__t:51" "JacobVCPipeline:__entry():110:15"
adlb::add_debug_symbol 47 "outbam" "JacobVCPipeline:__entry():110:46"
adlb::add_debug_symbol 48 "__t:53" "JacobVCPipeline:__entry():111:19"
adlb::add_debug_symbol 49 "rawvariant" "JacobVCPipeline:__entry():111:50"
adlb::add_debug_symbol 50 "qcfile" "JacobVCPipeline:__entry():113:69"
adlb::add_debug_symbol 51 "__t:62" "JacobVCPipeline:__entry():114:18"
adlb::add_debug_symbol 52 "mergedbam" "JacobVCPipeline:__entry():114:90"
adlb::add_debug_symbol 53 "mergedvariant" "JacobVCPipeline:__entry():116:8"
adlb::add_debug_symbol 54 "flagstats" "JacobVCPipeline:__entry():119:68"
adlb::add_debug_symbol 55 "__t:81" "JacobVCPipeline:__entry():122:19"
adlb::add_debug_symbol 56 "alignedsam" "JacobVCPipeline:__entry():122:65"
adlb::add_debug_symbol 57 "chr_bamListfile" "JacobVCPipeline:__entry():123:64"
adlb::add_debug_symbol 58 "chr_vcfListfile" "JacobVCPipeline:__entry():124:63"
adlb::add_debug_symbol 59 "stat" "JacobVCPipeline:__entry():283:1"
adlb::add_debug_symbol 60 "__t:328" "JacobVCPipeline:__entry():284:14"
adlb::add_debug_symbol 61 "__t:331" "JacobVCPipeline:__entry():285:13"
adlb::add_debug_symbol 62 "__t:334" "JacobVCPipeline:__entry():286:12"
adlb::add_debug_symbol 63 "perc_mapped" "JacobVCPipeline:__entry():289:12"
adlb::add_debug_symbol 64 "__t:341" "JacobVCPipeline:__entry():289:39"
adlb::add_debug_symbol 65 "chromosomes_processing_done" "JacobVCPipeline:__entry():322:1"
adlb::add_debug_symbol 66 "chr_bamList" "JacobVCPipeline:__entry():450:1"
adlb::add_debug_symbol 67 "__t:612" "JacobVCPipeline:__entry():462:2"
adlb::add_debug_symbol 68 "chr_vcfList" "JacobVCPipeline:__entry():465:1"
adlb::add_debug_symbol 69 "__t:618" "JacobVCPipeline:__entry():465:52"
adlb::add_debug_symbol 70 "__t:100" "JacobVCPipeline:__entry():127:18"
adlb::add_debug_symbol 71 "dedupsam" "JacobVCPipeline:__entry():127:64"
adlb::add_debug_symbol 72 "__t:105" "JacobVCPipeline:__entry():128:18"
adlb::add_debug_symbol 73 "dedupbam" "JacobVCPipeline:__entry():128:47"
adlb::add_debug_symbol 74 "__t:107" "JacobVCPipeline:__entry():133:23"
adlb::add_debug_symbol 75 "__t:109" "JacobVCPipeline:__entry():133:53"
adlb::add_debug_symbol 76 "__t:111" "JacobVCPipeline:__entry():133:72"
adlb::add_debug_symbol 77 "__t:112" "JacobVCPipeline:__entry():133:72"
adlb::add_debug_symbol 78 "__t:114" "JacobVCPipeline:__entry():134:9"
adlb::add_debug_symbol 79 "__t:115" "JacobVCPipeline:__entry():134:20"
adlb::add_debug_symbol 80 "__t:139" "JacobVCPipeline:__entry():149:3"
adlb::add_debug_symbol 81 "__t:143" "JacobVCPipeline:__entry():152:28"
adlb::add_debug_symbol 82 "__t:150" "JacobVCPipeline:__entry():153:38"
adlb::add_debug_symbol 83 "__t:117" "JacobVCPipeline:__entry():136:24"
adlb::add_debug_symbol 84 "__t:124" "JacobVCPipeline:__entry():137:89"
adlb::add_debug_symbol 85 "__t:131" "JacobVCPipeline:__entry():141:17"
adlb::add_debug_symbol 86 "__t:158" "JacobVCPipeline:__entry():158:17"
adlb::add_debug_symbol 87 "__t:170" "JacobVCPipeline:__entry():172:19"
adlb::add_debug_symbol 88 "alignedbam" "JacobVCPipeline:__entry():172:48"
adlb::add_debug_symbol 89 "alignedsortedbam" "JacobVCPipeline:__entry():176:55"
adlb::add_debug_symbol 90 "metricsfile" "JacobVCPipeline:__entry():177:50"
adlb::add_debug_symbol 91 "__t:180" "JacobVCPipeline:__entry():179:24"
adlb::add_debug_symbol 92 "__t:182" "JacobVCPipeline:__entry():179:54"
adlb::add_debug_symbol 93 "__t:184" "JacobVCPipeline:__entry():179:73"
adlb::add_debug_symbol 94 "__t:185" "JacobVCPipeline:__entry():179:73"
adlb::add_debug_symbol 95 "__t:187" "JacobVCPipeline:__entry():180:10"
adlb::add_debug_symbol 96 "__t:188" "JacobVCPipeline:__entry():180:21"
adlb::add_debug_symbol 97 "__t:210" "JacobVCPipeline:__entry():194:4"
adlb::add_debug_symbol 98 "__t:214" "JacobVCPipeline:__entry():199:31"
adlb::add_debug_symbol 99 "__t:221" "JacobVCPipeline:__entry():200:26"
adlb::add_debug_symbol 100 "__t:241" "JacobVCPipeline:__entry():217:4"
adlb::add_debug_symbol 101 "__t:195" "JacobVCPipeline:__entry():182:94"
adlb::add_debug_symbol 102 "__t:202" "JacobVCPipeline:__entry():186:18"
adlb::add_debug_symbol 103 "__t:222" "JacobVCPipeline:__entry():202:40"
adlb::add_debug_symbol 104 "__t:224" "JacobVCPipeline:__entry():202:57"
adlb::add_debug_symbol 105 "__t:233" "JacobVCPipeline:__entry():208:18"
adlb::add_debug_symbol 106 "__t:246" "JacobVCPipeline:__entry():223:7"
adlb::add_debug_symbol 107 "__t:300" "JacobVCPipeline:__entry():255:30"
adlb::add_debug_symbol 108 "__t:304" "JacobVCPipeline:__entry():256:9"
adlb::add_debug_symbol 109 "__t:305" "JacobVCPipeline:__entry():256:20"
adlb::add_debug_symbol 110 "__t:307" "JacobVCPipeline:__entry():256:40"
adlb::add_debug_symbol 111 "__t:314" "JacobVCPipeline:__entry():263:19"
adlb::add_debug_symbol 112 "__t:249" "JacobVCPipeline:__entry():224:25"
adlb::add_debug_symbol 113 "__t:251" "JacobVCPipeline:__entry():224:55"
adlb::add_debug_symbol 114 "__t:253" "JacobVCPipeline:__entry():224:74"
adlb::add_debug_symbol 115 "__t:254" "JacobVCPipeline:__entry():224:74"
adlb::add_debug_symbol 116 "__t:256" "JacobVCPipeline:__entry():225:11"
adlb::add_debug_symbol 117 "__t:257" "JacobVCPipeline:__entry():225:22"
adlb::add_debug_symbol 118 "__t:264" "JacobVCPipeline:__entry():228:41"
adlb::add_debug_symbol 119 "__t:266" "JacobVCPipeline:__entry():231:27"
adlb::add_debug_symbol 120 "__t:268" "JacobVCPipeline:__entry():231:63"
adlb::add_debug_symbol 121 "__t:273" "JacobVCPipeline:__entry():232:40"
adlb::add_debug_symbol 122 "__t:274" "JacobVCPipeline:__entry():232:51"
adlb::add_debug_symbol 123 "__t:281" "JacobVCPipeline:__entry():235:41"
adlb::add_debug_symbol 124 "__t:288" "JacobVCPipeline:__entry():241:18"
adlb::add_debug_symbol 125 "__t:581" "JacobVCPipeline:__entry():445:44"
adlb::add_debug_symbol 126 "__t:583" "JacobVCPipeline:__entry():446:44"
adlb::add_debug_symbol 127 "__t:592" "JacobVCPipeline:__entry():451:20"
adlb::add_debug_symbol 128 "__t:597" "JacobVCPipeline:__entry():451:81"
adlb::add_debug_symbol 129 "__t:605" "JacobVCPipeline:__entry():455:16"
adlb::add_debug_symbol 130 "__t:351" "JacobVCPipeline:__entry():292:34"
adlb::add_debug_symbol 131 "__t:353" "JacobVCPipeline:__entry():293:17"
adlb::add_debug_symbol 132 "__t:362" "JacobVCPipeline:__entry():301:17"
adlb::add_debug_symbol 133 "__t:624" "JacobVCPipeline:__entry():468:27"
adlb::add_debug_symbol 134 "__t:626" "JacobVCPipeline:__entry():468:44"
adlb::add_debug_symbol 135 "__t:629" "JacobVCPipeline:__entry():468:68"
adlb::add_debug_symbol 136 "__t:632" "JacobVCPipeline:__entry():468:95"
adlb::add_debug_symbol 137 "__t:638" "JacobVCPipeline:__entry():469:40"
adlb::add_debug_symbol 138 "__t:643" "JacobVCPipeline:__entry():473:32"
adlb::add_debug_symbol 139 "__t:644" "JacobVCPipeline:__entry():473:37"
adlb::add_debug_symbol 140 "__t:409" "JacobVCPipeline:__entry():347:20"
adlb::add_debug_symbol 141 "__t:430" "JacobVCPipeline:__entry():365:34"
adlb::add_debug_symbol 142 "__t:433" "JacobVCPipeline:__entry():365:61"
adlb::add_debug_symbol 143 "__t:482" "JacobVCPipeline:__entry():386:33"
adlb::add_debug_symbol 144 "__t:484" "JacobVCPipeline:__entry():386:50"
adlb::add_debug_symbol 145 "__t:490" "JacobVCPipeline:__entry():387:46"
adlb::add_debug_symbol 146 "__t:525" "JacobVCPipeline:__entry():407:47"
adlb::add_debug_symbol 147 "__t:408" "JacobVCPipeline:__entry():347:9"
adlb::add_debug_symbol 148 "__t:429" "JacobVCPipeline:__entry():365:27"
adlb::add_debug_symbol 149 "__t:486" "JacobVCPipeline:__entry():387:12"
adlb::add_debug_symbol 150 "__t:521" "JacobVCPipeline:__entry():407:13"
adlb::add_debug_symbol 151 "__t:448" "JacobVCPipeline:__entry():374:27"
adlb::add_debug_symbol 152 "chrdedupsortedbam" "JacobVCPipeline:__entry():327:68"
adlb::add_debug_symbol 153 "realignedbam" "JacobVCPipeline:__entry():329:63"
adlb::add_debug_symbol 154 "recalibratedbam" "JacobVCPipeline:__entry():330:66"
adlb::add_debug_symbol 155 "intervals" "JacobVCPipeline:__entry():331:61"
adlb::add_debug_symbol 156 "recalreport" "JacobVCPipeline:__entry():332:63"
adlb::add_debug_symbol 157 "gvcfvariant" "JacobVCPipeline:__entry():333:62"
adlb::add_debug_symbol 158 "recalfiles" "JacobVCPipeline:__entry():336:71"
adlb::add_debug_symbol 159 "realfiles" "JacobVCPipeline:__entry():337:70"
adlb::add_debug_symbol 160 "ploidy" "JacobVCPipeline:__entry():339:3"
adlb::add_debug_symbol 161 "__t:411" "JacobVCPipeline:__entry():347:40"
adlb::add_debug_symbol 162 "__t:436" "JacobVCPipeline:__entry():366:6"
adlb::add_debug_symbol 163 "recalparmsindels" "JacobVCPipeline:__entry():369:3"
adlb::add_debug_symbol 164 "__t:442" "JacobVCPipeline:__entry():369:59"
adlb::add_debug_symbol 165 "realparms" "JacobVCPipeline:__entry():375:3"
adlb::add_debug_symbol 166 "__t:461" "JacobVCPipeline:__entry():375:52"
adlb::add_debug_symbol 167 "__t:418" "JacobVCPipeline:__entry():352:18"
adlb::add_debug_symbol 168 "__t:497" "JacobVCPipeline:__entry():393:18"
adlb::add_debug_symbol 169 "__t:545" "JacobVCPipeline:__entry():417:18"
adlb::add_debug_symbol 170 "__t:578" "JacobVCPipeline:__entry():436:30"
adlb::add_debug_symbol 171 "__t:579" "JacobVCPipeline:__entry():436:35"
turbine::start swift:main swift:constants
turbine::finalize
