
# Generated by stc version 0.7.2
# date                    : 2017/01/04 12:48:12
# Turbine version         : 0.9.1
# Input filename          : /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift
# Output filename         : /ui/ncsa/jacobrh/Swift-T-Variant-Calling/swift-t-JacobVCPipeline.Ojc.tic
# STC home                : /usr/local/apps/bioapps/swift-t-1.1/stc
# Turbine home            : /usr/local/apps/bioapps/swift-t-1.1/turbine
# Compiler settings:
# stc.auto-declare              : true
# stc.c_preprocess              : true
# stc.checkpointing             : true
# stc.compiler-debug            : true
# stc.debugging                 : COMMENTS
# stc.ic.output-file            : 
# stc.input_filename            : /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift
# stc.log.file                  : 
# stc.log.trace                 : false
# stc.must_pass_wait_vars       : true
# stc.opt.algebra               : true
# stc.opt.array-build           : true
# stc.opt.batch-refcounts       : true
# stc.opt.cancel-refcounts      : true
# stc.opt.constant-fold         : true
# stc.opt.controlflow-fusion    : true
# stc.opt.dataflow-op-inline    : true
# stc.opt.dead-code-elim        : true
# stc.opt.demote-globals        : true
# stc.opt.disable-asserts       : false
# stc.opt.expand-loop-threshold-insts: 256
# stc.opt.expand-loop-threshold-iters: 16
# stc.opt.expand-loops          : false
# stc.opt.finalized-var         : true
# stc.opt.flatten-nested        : true
# stc.opt.full-function-inline  : false
# stc.opt.full-unroll           : false
# stc.opt.function-always-inline-threshold: 5
# stc.opt.function-inline       : true
# stc.opt.function-inline-threshold: 50
# stc.opt.function-signature    : true
# stc.opt.hoist                 : true
# stc.opt.hoist-refcounts       : true
# stc.opt.loop-simplify         : true
# stc.opt.max-iterations        : 10
# stc.opt.merge-refcounts       : true
# stc.opt.piggyback-refcounts   : true
# stc.opt.pipeline              : false
# stc.opt.propagate-aliases     : true
# stc.opt.reorder-insts         : false
# stc.opt.shared-constants      : true
# stc.opt.unroll-loop-threshold-insts: 192
# stc.opt.unroll-loop-threshold-iters: 8
# stc.opt.unroll-loops          : true
# stc.opt.value-number          : true
# stc.opt.wait-coalesce         : true
# stc.output_filename           : /ui/ncsa/jacobrh/Swift-T-Variant-Calling/swift-t-JacobVCPipeline.Ojc.tic
# stc.preproc.force-cpp         : false
# stc.preproc.force-gcc         : false
# stc.preprocess_only           : false
# stc.profile                   : false
# stc.refcounting               : true
# stc.rpath                     : /ui/ncsa/jacobrh/Swift-T-Variant-Calling/pipelinefunctions
# stc.stc_home                  : /usr/local/apps/bioapps/swift-t-1.1/stc
# stc.turbine.version           : 0.9.1
# stc.turbine_home              : /usr/local/apps/bioapps/swift-t-1.1/turbine
# stc.version                   : 0.7.2

# Metadata:

# rpath entries
lappend auto_path "/ui/ncsa/jacobrh/Swift-T-Variant-Calling/pipelinefunctions"
package require turbine 0.9.1
namespace import turbine::*


proc swift:constants {  } {
    turbine::c::log "function:swift:constants"
    global c:s__GATKCombi-2
    turbine::allocate_custom c:s__GATKCombi-2 string 1 1 1 1
    turbine::store_string ${c:s__GATKCombi-2} "*.GATKCombineGVCF.raw.vcf"
    global c:s_sknownSite
    turbine::allocate_custom c:s_sknownSite string 1 1 2 1
    turbine::store_string ${c:s_sknownSite} "s/^/--knownSites /g"
    global c:s_sknown_g
    turbine::allocate_custom c:s_sknown_g string 1 1 3 1
    turbine::store_string ${c:s_sknown_g} "s/^/-known /g"
    global c:s_svariant_g
    turbine::allocate_custom c:s_svariant_g string 1 1 4 1
    turbine::store_string ${c:s_svariant_g} "s/^/--variant /g"
}

package require align 0.2


proc swift:main {  } {
    turbine::c::log "function: __entry"
    # Var: string[string] u:vars /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:62:0
    global u:vars
    # Var: string t:7 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:64:33
    # Var: string t:10 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:69:25
    # Var: string t:13 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:69:49
    # Var: string t:631 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:485:16
    # Var: string t:639 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:486:27
    # Var: $string v:configFilename VALUE_OF [string:configFilename]
    # Var: int u:samples_processing_done /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:66:0
    # Var: file u:docSampleInfo /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:73:39
    # Var: file u:jointVCF /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:485:71
    # Var: file u:configFile /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:59:0
    # Var: file u:sampleInfoFile /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:64:0
    # Var: file u:docRunfile /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:69:99
    # Var: file u:variantFiles /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:486:43
    # Var: $string v:f RENAMED [$string:__v:f]
    # Var: string t:28 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():87:88
    # Var: string t:30 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():88:6
    # Var: string t:32 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():88:48
    # Var: string t:55 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():113:14
    # Var: string t:97 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():126:5
    # Var: string t:306 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():283:31
    # Var: string t:327 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():293:30
    # Var: string t:351 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():323:17
    # Var: $file v:configFile:1 VALUE_OF [file:configFile]
    # Var: $file v:configFile:2 VALUE_OF [file:configFile]
    # Var: $string$[int] v:configFileData VALUE_OF [string[int]:configFileData]
    # Var: boolean t:96 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():126:32
    # Var: float t:326 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():293:17
    # Var: string[int] u:indices /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():323:9
    lassign [ adlb::multicreate [ list string 1 1 5 ] [ list string 4 1 6 ] [ list string 4 1 7 ] [ list string 1 1 8 ] [ list string 2 1 9 ] [ list integer 1 1 10 ] [ list string 1 1 17 ] [ list string 1 1 18 ] [ list string 1 1 19 ] [ list string 1 1 20 ] [ list string 2 1 21 ] [ list string 1 1 22 ] [ list string 2 1 23 ] [ list string 1 1 24 ] [ list integer 1 1 25 ] [ list float 1 1 26 ] [ list container integer string 1 1 27 ] ] t:7 t:10 t:13 t:631 t:639 u:samples_processing_done t:28 t:30 t:32 t:55 t:97 t:306 t:327 t:351 t:96 t:326 u:indices
    turbine::c::log "allocated t:7=<${t:7}> t:10=<${t:10}> t:13=<${t:13}> t:631=<${t:631}> t:639=<${t:639}>"
    turbine::c::log "allocated u:samples_processing_done=<${u:samples_processing_done}> t:28=<${t:28}> t:30=<${t:30}> t:32=<${t:32}> t:55=<${t:55}>"
    turbine::c::log "allocated t:97=<${t:97}> t:306=<${t:306}> t:327=<${t:327}> t:351=<${t:351}> t:96=<${t:96}>"
    turbine::c::log "allocated t:326=<${t:326}> u:indices=<${u:indices}>"
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 0 1 11 ] [ list file 0 1 12 ] [ list file 1 1 13 ] [ list file 1 1 14 ] [ list file 0 1 15 ] [ list file 1 1 16 ] ] [ list 1 1 0 0 1 1 ] ] u:docSampleInfo u:jointVCF u:configFile u:sampleInfoFile u:docRunfile u:variantFiles
    turbine::argv_accept_impl [ list "runfile" ]
    set v:configFilename [ turbine::argv_get_impl "runfile" ]
    set tcltmp:init_rc 1
    set v:configFile:1 [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:configFile:1 ${v:configFilename}
    turbine::store_file ${u:configFile} v:configFile:1 1
    set v:configFile:2 [ turbine::retrieve_file ${u:configFile} ]
    set v:configFileData [ turbine::file_lines_impl ${v:configFile:2} ]
    turbine::container_reference ${u:vars} "SAMPLEINFORMATION" ${t:7} string
    turbine::container_reference ${u:vars} "OUTPUTDIR" ${t:10} string
    turbine::container_reference ${u:vars} "DELIVERYFOLDER" ${t:13} string
    turbine::container_reference ${u:vars} "TMPDIR" ${t:639} string
    set v:f [ file tail ${v:configFilename} ]
    turbine::container_reference ${u:vars} "SAMPLELB" ${t:28} string
    turbine::container_reference ${u:vars} "SAMPLEPL" ${t:30} string
    turbine::container_reference ${u:vars} "SAMPLECN" ${t:32} string
    turbine::container_reference ${u:vars} "MARKDUPLICATESTOOL" ${t:97} string
    turbine::container_reference ${u:vars} "SAMTOOLSDIR" ${t:306} string
    turbine::container_reference ${u:vars} "DUP_CUTOFF" ${t:327} string
    turbine::container_reference ${u:vars} "CHRNAMES" ${t:351} string
    dict for {tcltmp:ignore v:line} ${v:configFileData} {
        # Var: string[int] u:keyValuePair RENAMED [string[int]:keyValuePair] ./pipelinefunctions/miscellaneous.swift:getConfigVariables():8:16
        # Var: $string$[int] v:keyValuePair VALUE_OF [string[int]:keyValuePair]
        # Var: $string v:alias:name VALUE_OF [string:__alias:name]
        # Var: $string v:alias:value VALUE_OF [string:__alias:value]
        lassign [ adlb::multicreate [ list container integer string 1 2 28 ] ] u:keyValuePair
        turbine::c::log "allocated u:keyValuePair=<${u:keyValuePair}>"
        set v:keyValuePair [ turbine::split_impl ${v:line} "=" ]
        turbine::build_rec ${u:keyValuePair} ${v:keyValuePair} [ list container integer string ] 0 1
        set a:name [ adlb::subscript_container ${u:keyValuePair} 0 ]
        set v:alias:name [ turbine::retrieve_string ${a:name} ]
        set a:value [ adlb::subscript_container ${u:keyValuePair} 1 ]
        set v:alias:value [ turbine::retrieve_string ${a:value} CACHED 1 ]
        turbine::container_insert ${u:vars} ${v:alias:name} ${v:alias:value} string 0
        adlb::write_refcount_decr ${u:keyValuePair} 1
    }
    turbine::rule [ list ${u:samples_processing_done} ] "__entry-explicit-wait4 ${t:10} ${t:13} ${t:631} {${u:jointVCF}} ${u:samples_processing_done} {${u:variantFiles}}"
    turbine::rule [ list ${t:639} ] "__entry-async_op-strcat-2 ${t:639} {${u:variantFiles}}"
    turbine::rule [ list ${t:97} ] "__entry-async_op-eq_string ${t:96} ${t:97}"
    turbine::rule [ list ${t:327} ] "__entry-async_op-parse_float ${t:326} ${t:327}"
    turbine::rule [ list ${t:351} ] "__entry-call_foreign-split ${t:351} ${u:indices}"
    turbine::rule [ list ${t:10} ${t:13} ] [ list __entry-optmerged ${t:10} ${t:13} ${t:55} ${t:631} ${v:f} ${u:configFile} ${u:docRunfile} ${u:jointVCF} ]
    turbine::rule [ list ${t:7} ] "__entry-optmerged-1 ${t:10} ${t:13} ${t:28} ${t:30} ${t:306} ${t:32} ${t:326} ${t:327} ${t:55} ${t:639} ${t:7} ${t:96} ${t:97} {${u:docSampleInfo}} ${u:indices} {${u:sampleInfoFile}} ${u:samples_processing_done}"
    turbine::decr_local_file_refcount v:configFile:1
    adlb::write_refcount_decr ${u:vars} 1
}


proc __entry-explicit-wait4 { t:10 t:13 t:631 u:jointVCF u:samples_processing_done u:variantFiles } {
    # Var: string c:s__GATKCombi-2 OPT_TEMPORARY
    global c:s__GATKCombi-2
    # Var: string[int] u:varlist /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():492:1
    # Var: string t:650 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():491:27
    lassign [ adlb::multicreate [ list container integer string 1 1 29 ] [ list string 1 1 30 ] ] u:varlist t:650
    turbine::c::log "allocated u:varlist=<${u:varlist}> t:650=<${t:650}>"
    f:find_files ${u:variantFiles} ${t:650} ${c:s__GATKCombi-2} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${u:variantFiles} ] ] "__entry-chain22 ${t:631} {${u:jointVCF}} {${u:variantFiles}} ${u:varlist}"
    turbine::rule [ list ${t:10} ${t:13} ] "__entry-async_op-strcat-1 ${t:10} ${t:13} ${t:650}"
    turbine::read_refcount_decr ${t:650} 1
    turbine::read_refcount_decr ${u:samples_processing_done} 1
}


proc __entry-chain22 { t:631 u:jointVCF u:variantFiles u:varlist } {
    # Var: string c:s_svariant_g OPT_TEMPORARY
    global c:s_svariant_g
    # Var: file t:660 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():492:48
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 31 ] ] [ list 0 ] ] t:660
    f:sed ${t:660} ${u:variantFiles} ${c:s_svariant_g} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${t:660} ] ] "__entry-call_foreign-read ${t:631} {${t:660}} {${u:jointVCF}} ${u:varlist}"
    turbine::file_read_refcount_decr ${u:variantFiles} 1
}


proc __entry-call_foreign-read { t:631 t:660 u:jointVCF u:varlist } {
    # Var: string[string] u:vars /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:62:0
    global u:vars
    # Var: $file v:t:660 VALUE_OF [file:__t:660]
    # Var: $string v:t:659 VALUE_OF [string:__t:659]
    # Var: $int v:n:4 RENAMED [$int:__v:n]
    # Var: $string v:t:658 VALUE_OF [string:__t:658]
    # Var: $string v:o:4 RENAMED [$string:__v:o]
    # Var: $string$[int] v:varlist VALUE_OF [string[int]:varlist]
    # Var: string t:666 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():493:26
    # Var: string t:668 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():493:43
    # Var: string t:671 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():494:12
    # Var: string t:674 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():494:39
    # Var: $string$[int] v:variants:1 RENAMED [$string$[int]:__v:variants] ./pipelinefunctions/joint_vcf.swift:GenotypeGVCFs():3:91
    lassign [ adlb::multicreate [ list string 1 1 32 ] [ list string 1 1 33 ] [ list string 1 1 34 ] [ list string 1 1 35 ] ] t:666 t:668 t:671 t:674
    turbine::c::log "allocated t:666=<${t:666}> t:668=<${t:668}> t:671=<${t:671}> t:674=<${t:674}>"
    set v:t:660 [ turbine::retrieve_file ${t:660} CACHED 1 ]
    set v:t:659 [ turbine::file_read_local ${v:t:660} ]
    set v:n:4 [ string length ${v:t:659} ]
    set v:t:658 [ turbine::replace_all_impl ${v:t:659} "\n" " " 0 ${v:n:4} ]
    set v:o:4 [ string trim ${v:t:658} ]
    set v:varlist [ turbine::split_impl ${v:o:4} " " ]
    turbine::build_rec ${u:varlist} ${v:varlist} [ list container integer string ] 0 1
    turbine::container_reference ${u:vars} "JAVADIR" ${t:666} string
    turbine::container_reference ${u:vars} "GATKDIR" ${t:668} string
    turbine::container_reference ${u:vars} "REFGENOMEDIR" ${t:671} string
    turbine::container_reference ${u:vars} "REFGENOME" ${t:674} string
    set v:variants:1 [ turbine::unpack_args ${u:varlist} 1 string ]
    turbine::rule [ list ${t:631} ${t:666} ${t:668} ${t:671} ${t:674} ] "__entry-async_op-strcat ${t:631} ${t:666} ${t:668} ${t:671} ${t:674} {${v:variants:1}} {${u:jointVCF}}"
    turbine::read_refcount_decr ${u:varlist} 1
}


proc __entry-async_op-strcat { t:631 t:666 t:668 t:671 t:674 v:variants:1 u:jointVCF } {
    # Var: $string v:t:671 VALUE_OF [string:__t:671]
    # Var: $string v:t:674 VALUE_OF [string:__t:674]
    # Var: $string v:t:670 VALUE_OF [string:__t:670]
    # Var: $string v:javadir:7 RENAMED [$string:__v:javadir] ./pipelinefunctions/joint_vcf.swift:GenotypeGVCFs():3:91
    # Var: $string v:gatkdir:6 RENAMED [$string:__v:gatkdir] ./pipelinefunctions/joint_vcf.swift:GenotypeGVCFs():3:91
    # Var: $string v:__filename:outputfile:7 RENAMED [$string:__v:__filename:outputfile] ./pipelinefunctions/joint_vcf.swift:GenotypeGVCFs():3:91
    # Var: $file v:outputfile:7 RENAMED [$file:__v:outputfile] ./pipelinefunctions/joint_vcf.swift:GenotypeGVCFs():3:91
    set v:t:671 [ turbine::retrieve_string ${t:671} CACHED 1 ]
    set v:t:674 [ turbine::retrieve_string ${t:674} CACHED 1 ]
    set v:t:670 "${v:t:671}/${v:t:674}"
    set v:javadir:7 [ turbine::retrieve_string ${t:666} CACHED 1 ]
    set v:gatkdir:6 [ turbine::retrieve_string ${t:668} CACHED 1 ]
    set v:__filename:outputfile:7 [ turbine::retrieve_string ${t:631} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:7 [ turbine::create_local_file_ref ${v:__filename:outputfile:7} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:7 "-Xmx8g" "-jar" ${v:gatkdir:6} "-T" "GenotypeGVCFs" "-R" ${v:t:670} {*}${v:variants:1} "-o" ${v:__filename:outputfile:7} [ dict create ] ]
    turbine::exec_external ${v:javadir:7} [ dict create ] "-Xmx8g" "-jar" ${v:gatkdir:6} "-T" "GenotypeGVCFs" "-R" ${v:t:670} {*}${v:variants:1} "-o" ${v:__filename:outputfile:7}
    turbine::store_file ${u:jointVCF} v:outputfile:7 0
    turbine::decr_local_file_refcount v:outputfile:7
}


proc __entry-async_op-strcat-1 { t:10 t:13 t:650 } {
    # Var: $string v:t:10:10 VALUE_OF [string:__t:10]
    # Var: $string v:t:13:7 VALUE_OF [string:__t:13]
    # Var: $string v:t:650 VALUE_OF [string:__t:650]
    set v:t:10:10 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:t:13:7 [ turbine::retrieve_string ${t:13} CACHED 1 ]
    set v:t:650 "${v:t:10:10}/${v:t:13:7}"
    turbine::store_string ${t:650} ${v:t:650}
}


proc __entry-async_op-strcat-2 { t:639 u:variantFiles } {
    # Var: $string v:t:639 VALUE_OF [string:__t:639]
    # Var: $string v:t:638 VALUE_OF [string:__t:638]
    set v:t:639 [ turbine::retrieve_string ${t:639} CACHED 1 ]
    set v:t:638 "${v:t:639}/variantFiles.txt"
    turbine::set_filename_val ${u:variantFiles} ${v:t:638}
}


proc __entry-async_op-eq_string { t:96 t:97 } {
    # Var: $string v:t:97 VALUE_OF [string:__t:97]
    # Var: $boolean v:t:96 VALUE_OF [boolean:__t:96]
    set v:t:97 [ turbine::retrieve_string ${t:97} CACHED 1 ]
    set v:t:96 [ string equal ${v:t:97} "SAMBLASTER" ]
    turbine::store_integer ${t:96} ${v:t:96}
}


proc __entry-async_op-parse_float { t:326 t:327 } {
    # Var: $string v:t:327 VALUE_OF [string:__t:327]
    # Var: $float v:t:326 VALUE_OF [float:__t:326]
    set v:t:327 [ turbine::retrieve_string ${t:327} CACHED 1 ]
    set v:t:326 [ turbine::string2float_impl ${v:t:327} ]
    turbine::store_float ${t:326} ${v:t:326}
}


proc __entry-call_foreign-split { t:351 u:indices } {
    # Var: $string v:t:351 VALUE_OF [string:__t:351]
    # Var: $string$[int] v:indices:1 VALUE_OF [string[int]:indices]
    set v:t:351 [ turbine::retrieve_string ${t:351} CACHED 1 ]
    set v:indices:1 [ turbine::split_impl ${v:t:351} ":" ]
    turbine::build_rec ${u:indices} ${v:indices:1} [ list container integer string ] 0 1
}


proc __entry-optmerged { t:10 t:13 t:55 t:631 v:f u:configFile u:docRunfile u:jointVCF } {
    # Var: $string v:t:10 VALUE_OF [string:__t:10]
    # Var: $string v:t:13 VALUE_OF [string:__t:13]
    # Var: $string v:t:631 VALUE_OF [string:__t:631]
    # Var: $string v:t:643 VALUE_OF [string:__t:643]
    # Var: $string v:t:9 VALUE_OF [string:__t:9]
    # Var: $string v:t:55 VALUE_OF [string:__t:55]
    set v:t:10 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:t:13 [ turbine::retrieve_string ${t:13} CACHED 1 ]
    set v:t:631 "${v:t:10}/${v:t:13}/jointVCFs/jointVCFcalled.vcf"
    turbine::store_string ${t:631} ${v:t:631}
    set v:t:643 "${v:t:10}/${v:t:13}/jointVCFs"
    set v:t:9 "${v:t:10}/${v:t:13}/docs/${v:f}"
    set v:t:55 "${v:t:10}/${v:t:13}/docs/QC_test_results.txt"
    turbine::store_string ${t:55} ${v:t:55}
    turbine::set_filename_val ${u:jointVCF} ${v:t:631}
    turbine::set_filename_val ${u:docRunfile} ${v:t:9}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list mkdir-app-leaf1 ${v:t:643} ]
    turbine::reset_priority
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry:wait:configFile ${v:t:9} ${u:configFile} ${u:docRunfile} ]
    turbine::reset_priority
}


proc mkdir-app-leaf1 { v:t:643 } {
    # Var: $void v:v:3 RENAMED [$void:__v:v] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:mkdir():65:15
    turbine::c::log [ list exec: "mkdir" "-p" ${v:t:643} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:t:643}
}


proc __entry:wait:configFile { v:t:9 u:configFile u:docRunfile } {
    # Var: $file v:configFile VALUE_OF [file:configFile]
    # Var: $file v:docRunfile VALUE_OF [file:docRunfile]
    set v:configFile [ turbine::retrieve_file ${u:configFile} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:docRunfile [ turbine::create_local_file_ref ${v:t:9} ${tcltmp:init_rc} 1 ]
    turbine::copy_local_file_contents ${v:docRunfile} ${v:configFile}
    turbine::store_file ${u:docRunfile} v:docRunfile 0
}


proc __entry-optmerged-1 { t:10 t:13 t:28 t:30 t:306 t:32 t:326 t:327 t:55 t:639 t:7 t:96 t:97 u:docSampleInfo u:indices u:sampleInfoFile u:samples_processing_done } {
    # Var: $string v:p:1 RENAMED [$string:__v:p]
    # Var: $string v:f:1 RENAMED [$string:__v:f]
    # Var: $file v:sampleInfoFile:1 VALUE_OF [file:sampleInfoFile]
    # Var: $file v:sampleInfoFile:2 VALUE_OF [file:sampleInfoFile]
    # Var: $string$[int] v:sampleLines:1 VALUE_OF [string[int]:sampleLines]
    set v:p:1 [ turbine::retrieve_string ${t:7} CACHED 1 ]
    set v:f:1 [ file tail ${v:p:1} ]
    set tcltmp:init_rc 1
    set v:sampleInfoFile:1 [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:sampleInfoFile:1 ${v:p:1}
    turbine::store_file ${u:sampleInfoFile} v:sampleInfoFile:1 1
    set v:sampleInfoFile:2 [ turbine::retrieve_file ${u:sampleInfoFile} ]
    set v:sampleLines:1 [ turbine::file_lines_impl ${v:sampleInfoFile:2} ]
    turbine::rule [ list ${t:10} ${t:13} ] [ list __entry-async_op-strcat-3 ${t:10} ${t:13} ${v:f:1} ${u:docSampleInfo} ${u:sampleInfoFile} ]
    turbine::rule [ list ] "__entry-foreach-wait1 ${t:10} ${t:13} ${t:28} ${t:30} ${t:306} ${t:32} ${t:326} ${t:327} ${t:55} ${t:639} ${t:96} ${t:97} {${v:sampleLines:1}} ${u:indices} ${u:samples_processing_done}"
    turbine::decr_local_file_refcount v:sampleInfoFile:1
}


proc __entry-async_op-strcat-3 { t:10 t:13 v:f:1 u:docSampleInfo u:sampleInfoFile } {
    # Var: $string v:t:10:11 VALUE_OF [string:__t:10]
    # Var: $string v:t:13:8 VALUE_OF [string:__t:13]
    # Var: $string v:t:17 VALUE_OF [string:__t:17]
    set v:t:10:11 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:t:13:8 [ turbine::retrieve_string ${t:13} CACHED 1 ]
    set v:t:17 "${v:t:10:11}/${v:t:13:8}/docs/${v:f:1}"
    turbine::set_filename_val ${u:docSampleInfo} ${v:t:17}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry:wait:sampleInfoFile ${v:t:17} ${u:docSampleInfo} ${u:sampleInfoFile} ]
    turbine::reset_priority
}


proc __entry:wait:sampleInfoFile { v:t:17 u:docSampleInfo u:sampleInfoFile } {
    # Var: $file v:sampleInfoFile VALUE_OF [file:sampleInfoFile]
    # Var: $file v:docSampleInfo VALUE_OF [file:docSampleInfo]
    set v:sampleInfoFile [ turbine::retrieve_file ${u:sampleInfoFile} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:docSampleInfo [ turbine::create_local_file_ref ${v:t:17} ${tcltmp:init_rc} 1 ]
    turbine::copy_local_file_contents ${v:docSampleInfo} ${v:sampleInfoFile}
    turbine::store_file ${u:docSampleInfo} v:docSampleInfo 0
}


proc __entry-foreach-wait1 { t:10 t:13 t:28 t:30 t:306 t:32 t:326 t:327 t:55 t:639 t:96 t:97 v:sampleLines:1 u:indices u:samples_processing_done } {
    set tcltmp:iters [ dict size ${v:sampleLines:1} ]
    turbine::read_refcount_incr ${t:28} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:13} [ expr { 2 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:97} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:10} [ expr { 2 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:32} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:55} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:30} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:96} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${u:indices} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:327} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:306} [ expr { 6 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:326} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:639} [ expr { 5 * ${tcltmp:iters} } ]
    dict for {tcltmp:ignore v:sample} ${v:sampleLines:1} {
        # Var: string c:s_svariant_g OPT_TEMPORARY
        global c:s_svariant_g
        # Var: string[int] u:sampleInfo /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():82:1
        # Var: string u:read1 /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():84:1
        # Var: string u:read2 /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():85:1
        # Var: string u:rgheader /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():87:1
        # Var: string u:AlignDir /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():97:1
        # Var: string u:VarcallDir /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():100:1
        # Var: string u:RealignDir /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():103:1
        # Var: string t:49 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():109:23
        # Var: file u:dedupsortedbam /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():109:52
        # Var: string t:51 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():110:15
        # Var: file u:outbam /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():110:46
        # Var: string t:53 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():111:19
        # Var: file u:rawvariant /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():111:50
        # Var: file u:qcfile /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():113:69
        # Var: string t:62 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():114:18
        # Var: file u:mergedbam /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():114:90
        # Var: file u:mergedvariant /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():116:8
        # Var: file u:flagstats /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():119:68
        # Var: string t:81 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():122:19
        # Var: file u:alignedsam /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():122:65
        # Var: file u:chr_bamListfile /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():123:64
        # Var: file u:chr_vcfListfile /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():124:63
        # Var: string[int] u:stat /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():285:1
        # Var: string[int] t:308 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():286:14
        # Var: string[int] t:311 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():287:13
        # Var: string[int] t:314 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():288:12
        # Var: float u:perc_mapped /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():291:12
        # Var: float t:321 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():291:39
        # Var: int u:chromosomes_processing_done /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():324:1
        # Var: string[int] u:chr_bamList /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():452:1
        # Var: string t:592 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():464:2
        # Var: string[int] u:chr_vcfList /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():467:1
        # Var: file t:598 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():467:52
        # Var: $string$[int] v:sampleInfo VALUE_OF [string[int]:sampleInfo]
        # Var: $string v:alias:sampleName VALUE_OF [string:__alias:sampleName]
        # Var: $string v:alias:read1 VALUE_OF [string:__alias:read1]
        # Var: $string v:alias:read2 VALUE_OF [string:__alias:read2]
        lassign [ adlb::multicreate [ list container integer string 1 2 36 ] [ list string 2 1 37 ] [ list string 2 1 38 ] [ list string 2 1 39 ] [ list string 2 1 40 ] [ list string 1 1 41 ] [ list string 1 1 42 ] [ list string 2 1 43 ] [ list string 1 1 45 ] [ list string 1 1 47 ] [ list string 1 1 50 ] [ list string 1 1 54 ] [ list container integer string 3 1 58 ] [ list container integer string 1 1 59 ] [ list container integer string 1 1 60 ] [ list container integer string 1 1 61 ] [ list float 1 1 62 ] [ list float 1 1 63 ] [ list integer 1 1 64 ] [ list container integer string 1 1 65 ] [ list string 1 1 66 ] [ list container integer string 1 1 67 ] ] u:sampleInfo u:read1 u:read2 u:rgheader u:AlignDir u:VarcallDir u:RealignDir t:49 t:51 t:53 t:62 t:81 u:stat t:308 t:311 t:314 u:perc_mapped t:321 u:chromosomes_processing_done u:chr_bamList t:592 u:chr_vcfList
        turbine::c::log "allocated u:sampleInfo=<${u:sampleInfo}> u:read1=<${u:read1}> u:read2=<${u:read2}> u:rgheader=<${u:rgheader}> u:AlignDir=<${u:AlignDir}>"
        turbine::c::log "allocated u:VarcallDir=<${u:VarcallDir}> u:RealignDir=<${u:RealignDir}> t:49=<${t:49}> t:51=<${t:51}> t:53=<${t:53}>"
        turbine::c::log "allocated t:62=<${t:62}> t:81=<${t:81}> u:stat=<${u:stat}> t:308=<${t:308}> t:311=<${t:311}>"
        turbine::c::log "allocated t:314=<${t:314}> u:perc_mapped=<${u:perc_mapped}> t:321=<${t:321}> u:chromosomes_processing_done=<${u:chromosomes_processing_done}> u:chr_bamList=<${u:chr_bamList}>"
        turbine::c::log "allocated t:592=<${t:592}> u:chr_vcfList=<${u:chr_vcfList}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 4 1 44 ] [ list file 1 1 46 ] [ list file 1 1 48 ] [ list file 6 1 49 ] [ list file 1 1 51 ] [ list file 1 1 52 ] [ list file 1 1 53 ] [ list file 3 1 55 ] [ list file 1 1 56 ] [ list file 1 1 57 ] [ list file 1 1 68 ] ] [ list 1 1 1 1 1 1 1 1 1 1 0 ] ] u:dedupsortedbam u:outbam u:rawvariant u:qcfile u:mergedbam u:mergedvariant u:flagstats u:alignedsam u:chr_bamListfile u:chr_vcfListfile t:598
        set v:sampleInfo [ turbine::split_impl ${v:sample} " " ]
        turbine::build_rec ${u:sampleInfo} ${v:sampleInfo} [ list container integer string ] 0 1
        set a:sampleName [ adlb::subscript_container ${u:sampleInfo} 0 ]
        set v:alias:sampleName [ turbine::retrieve_string ${a:sampleName} ]
        set a:read1 [ adlb::subscript_container ${u:sampleInfo} 1 ]
        set v:alias:read1 [ turbine::retrieve_string ${a:read1} ]
        turbine::store_string ${u:read1} ${v:alias:read1}
        set a:read2 [ adlb::subscript_container ${u:sampleInfo} 2 ]
        set v:alias:read2 [ turbine::retrieve_string ${a:read2} CACHED 1 ]
        turbine::store_string ${u:read2} ${v:alias:read2}
        set a:t:309 [ adlb::subscript_container ${u:stat} 4 ]
        set a:tot_mapped [ adlb::subscript_container ${t:308} 0 ]
        set a:t:312 [ adlb::subscript_container ${u:stat} 0 ]
        set a:tot_reads [ adlb::subscript_container ${t:311} 0 ]
        set a:t:315 [ adlb::subscript_container ${u:stat} 3 ]
        set a:tot_dups [ adlb::subscript_container ${t:314} 0 ]
        f:sed ${t:598} ${u:chr_vcfListfile} ${c:s_svariant_g} -100 "HARD" "RANK"
        turbine::rule [ list ${t:96} ] [ list __entry-if1 ${u:AlignDir} ${t:306} ${t:49} ${t:639} ${t:81} ${t:96} ${t:97} ${v:alias:sampleName} ${u:alignedsam} ${u:dedupsortedbam} ${u:qcfile} ${u:read1} ${u:read2} ${u:rgheader} ]
        turbine::rule [ list ${u:chromosomes_processing_done} ] [ list __entry-explicit-wait3 ${u:RealignDir} ${u:VarcallDir} ${t:306} ${t:51} ${t:592} ${t:62} ${t:639} ${v:alias:sampleName} ${u:chr_bamList} ${u:chr_bamListfile} ${u:chr_vcfListfile} ${u:chromosomes_processing_done} ${u:mergedbam} ${u:outbam} ${u:qcfile} ]
        turbine::rule [ list ${t:28} ${t:30} ${t:32} ] [ list __entry-async_op-sprintf ${t:28} ${t:30} ${t:32} ${v:alias:sampleName} ${u:rgheader} ]
        turbine::rule [ list ${t:55} ] "__entry-copy_in_filename ${t:55} {${u:qcfile}}"
        turbine::rule [ list ${a:t:309} ] "__entry-call_foreign-split-1 {${a:t:309}} ${t:308}"
        turbine::rule [ list ${a:t:312} ] "__entry-call_foreign-split-2 {${a:t:312}} ${t:311}"
        turbine::rule [ list ${a:t:315} ] "__entry-call_foreign-split-3 {${a:t:315}} ${t:314}"
        turbine::rule [ list ${a:tot_reads} ] [ list __entry-async_op-parse_float-1 ${a:tot_dups} ${a:tot_reads} ${t:321} ${t:326} ${t:327} ${v:alias:sampleName} ${u:perc_mapped} ${u:qcfile} ]
        turbine::rule [ list ${a:tot_mapped} ] "__entry-async_op-parse_float-4 {${a:tot_mapped}} ${t:321}"
        turbine::rule [ list [ turbine::get_file_td ${t:598} ] ] "__entry-call_foreign-read-2 ${t:10} ${t:13} ${t:53} {${t:598}} {${v:sampleLines:1}} ${u:chr_vcfList} {${u:mergedvariant}} {${u:rawvariant}} ${u:samples_processing_done}"
        turbine::rule [ list ${t:10} ] [ list __entry-optmerged-8 ${u:AlignDir} ${u:RealignDir} ${u:VarcallDir} ${t:10} ${t:13} ${t:306} ${t:49} ${t:51} ${t:53} ${t:592} ${t:62} ${t:639} ${v:alias:sampleName} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:flagstats} ${u:indices} ${u:mergedbam} ${u:mergedvariant} ${u:outbam} ${u:qcfile} ${u:rawvariant} ${u:stat} ]
        turbine::rule [ list ${t:639} ] [ list __entry-optmerged-15 ${t:639} ${t:81} ${v:alias:sampleName} ${u:alignedsam} ${u:chr_bamListfile} ${u:chr_vcfListfile} ]
        adlb::write_refcount_decr ${u:sampleInfo} 1
    }
    turbine::read_refcount_decr ${t:28} 1
    turbine::read_refcount_decr ${t:10} 1
    turbine::read_refcount_decr ${t:32} 1
    turbine::read_refcount_decr ${t:55} 1
    turbine::read_refcount_decr ${t:13} 1
    turbine::read_refcount_decr ${t:30} 1
    turbine::read_refcount_decr ${t:96} 1
    turbine::read_refcount_decr ${t:97} 1
    turbine::read_refcount_decr ${u:indices} 1
    turbine::read_refcount_decr ${t:306} 1
    turbine::read_refcount_decr ${t:326} 1
    turbine::read_refcount_decr ${t:327} 1
    turbine::read_refcount_decr ${t:639} 1
}


proc __entry-if1 { u:AlignDir t:306 t:49 t:639 t:81 t:96 t:97 v:alias:sampleName u:alignedsam u:dedupsortedbam u:qcfile u:read1 u:read2 u:rgheader } {
    # Var: $boolean v:__t:96 VALUE_OF [boolean:__t:96] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():126:35
    set v:__t:96 [ turbine::retrieve_integer ${t:96} CACHED 1 ]
    if { ${v:__t:96} } {
        # Var: string[string] u:vars /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:62:0
        global u:vars
        # Var: file u:dedupsam /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():128:64
        # Var: string t:105 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():129:18
        # Var: file u:dedupbam /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():129:47
        # Var: string t:107 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():133:24
        # Var: string t:129 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():151:3
        # Var: string t:133 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():154:28
        # Var: int t:137 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():155:7
        # Var: string t:138 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():155:18
        # Var: string[int] t:140 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():155:38
        lassign [ adlb::multicreate [ list string 1 1 70 ] [ list string 1 1 72 ] [ list string 1 1 73 ] [ list string 1 1 74 ] [ list integer 1 1 75 ] [ list string 1 1 76 ] [ list container integer string 1 1 77 ] ] t:105 t:107 t:129 t:133 t:137 t:138 t:140
        turbine::c::log "allocated t:105=<${t:105}> t:107=<${t:107}> t:129=<${t:129}> t:133=<${t:133}> t:137=<${t:137}>"
        turbine::c::log "allocated t:138=<${t:138}> t:140=<${t:140}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 69 ] [ list file 1 1 71 ] ] [ list 1 1 ] ] u:dedupsam u:dedupbam
        turbine::read_refcount_incr ${t:81} 1
        turbine::array_kv_build ${t:140} [ ::adlb::dict_create 0 "--compression" 1 "1" ] 1 integer string
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:align {${u:alignedsam}} ${u:read1} ${u:read2} ${u:rgheader}"
        turbine::reset_priority
        turbine::container_reference ${u:vars} "SAMBLASTERDIR" ${t:107} string
        turbine::container_reference ${u:vars} "NOVOSORTDIR" ${t:133} string
        turbine::container_reference ${u:vars} "PBSCORES" ${t:138} string
        f:novosort ${u:dedupsortedbam} ${t:133} ${u:dedupbam} ${t:639} ${t:137} ${t:140} -100 "HARD" "RANK"
        turbine::rule [ list ${t:639} ] [ list __entry-async_op-strcat-4 ${t:105} ${t:107} ${t:129} ${t:137} ${t:306} ${t:639} ${t:81} ${v:alias:sampleName} ${u:alignedsam} ${u:dedupbam} ${u:dedupsam} ${u:qcfile} ]
        turbine::rule [ list ${u:AlignDir} ] [ list __entry-async_op-strcat-5 ${u:AlignDir} ${t:105} ${t:129} ${v:alias:sampleName} ${u:dedupbam} ]
        turbine::rule [ list ${t:138} ] "__entry-async_op-parse_int ${t:137} ${t:138}"
        turbine::rule [ list ${t:306} ${t:49} [ turbine::get_file_td ${u:dedupsortedbam} ] ] [ list __entry-optmerged-2 ${t:306} ${t:49} ${v:alias:sampleName} ${u:dedupsortedbam} ${u:qcfile} ]
        turbine::read_refcount_decr ${t:133} 1
        turbine::read_refcount_decr ${t:140} 1
    } else {
        # Var: string t:160 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():174:19
        # Var: file u:alignedbam /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():174:48
        lassign [ adlb::multicreate [ list string 2 1 81 ] ] t:160
        turbine::c::log "allocated t:160=<${t:160}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 2 1 82 ] ] [ list 1 ] ] u:alignedbam
        turbine::read_refcount_incr ${t:639} 1
        turbine::read_refcount_incr ${u:AlignDir} 1
        turbine::read_refcount_incr ${u:rgheader} 1
        turbine::file_read_refcount_incr ${u:qcfile} 1
        turbine::read_refcount_incr ${t:306} 1
        turbine::read_refcount_incr ${u:read1} 1
        turbine::read_refcount_incr ${t:97} 1
        turbine::read_refcount_incr ${u:read2} 1
        turbine::read_refcount_incr ${t:49} 1
        turbine::rule [ list ${u:AlignDir} ] [ list __entry-async_op-strcat-6 ${u:AlignDir} ${t:160} ${v:alias:sampleName} ${u:alignedbam} ]
        turbine::rule [ list ${t:97} ] [ list __entry-async_op-eq_string-1 ${u:AlignDir} ${t:160} ${t:306} ${t:49} ${t:639} ${t:97} ${v:alias:sampleName} ${u:alignedbam} ${u:alignedsam} ${u:dedupsortedbam} ${u:qcfile} ${u:read1} ${u:read2} ${u:rgheader} ]
    }
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
    turbine::read_refcount_decr ${t:49} 1
    turbine::read_refcount_decr ${u:read2} 1
    turbine::read_refcount_decr ${t:97} 1
    turbine::read_refcount_decr ${u:read1} 1
    turbine::read_refcount_decr ${t:81} 1
    turbine::read_refcount_decr ${t:306} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::file_read_refcount_decr ${u:qcfile} 1
    turbine::read_refcount_decr ${u:rgheader} 1
    turbine::read_refcount_decr ${u:AlignDir} 1
    turbine::read_refcount_decr ${t:639} 1
}


proc __entry-async_op-strcat-4 { t:105 t:107 t:129 t:137 t:306 t:639 t:81 v:alias:sampleName u:alignedsam u:dedupbam u:dedupsam u:qcfile } {
    # Var: $string v:t:639:4 VALUE_OF [string:__t:639]
    # Var: $string v:t:100 VALUE_OF [string:__t:100]
    set v:t:639:4 [ turbine::retrieve_string ${t:639} CACHED 1 ]
    set v:t:100 "${v:t:639:4}/align/${v:alias:sampleName}.wdups.sam"
    turbine::set_filename_val ${u:dedupsam} ${v:t:100}
    turbine::rule [ list ${t:107} ${t:81} [ turbine::get_file_td ${u:alignedsam} ] ] [ list samblaster-app-leaf1 ${t:105} ${t:107} ${t:129} ${t:137} ${t:306} ${t:81} ${v:alias:sampleName} ${v:t:100} ${u:alignedsam} ${u:dedupbam} ${u:dedupsam} ${u:qcfile} ]
}


proc samblaster-app-leaf1 { t:105 t:107 t:129 t:137 t:306 t:81 v:alias:sampleName v:t:100 u:alignedsam u:dedupbam u:dedupsam u:qcfile } {
    # Var: $string v:samblasterdir RENAMED [$string:__v:samblasterdir] ./pipelinefunctions/align_dedup.swift:samblaster():27:43
    # Var: $string v:__filename:inputFile RENAMED [$string:__v:__filename:inputFile] ./pipelinefunctions/align_dedup.swift:samblaster():27:43
    # Var: $file v:inputFile:2 RENAMED [$file:__v:inputFile] ./pipelinefunctions/align_dedup.swift:samblaster():27:43
    # Var: $file v:output RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:samblaster():27:43
    set v:samblasterdir [ turbine::retrieve_string ${t:107} CACHED 1 ]
    set v:__filename:inputFile [ turbine::retrieve_string ${t:81} CACHED 1 ]
    set v:inputFile:2 [ turbine::retrieve_file ${u:alignedsam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output [ turbine::create_local_file_ref ${v:t:100} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:samblasterdir "-M" "-i" ${v:__filename:inputFile} [ dict create "stdout" ${v:t:100} ] ]
    turbine::exec_external ${v:samblasterdir} [ dict create "stdout" ${v:t:100} ] "-M" "-i" ${v:__filename:inputFile}
    turbine::store_file ${u:dedupsam} v:output 0
    turbine::rule [ list ] [ list __entry-chain1 ${t:105} ${t:129} ${t:137} ${t:306} ${v:alias:sampleName} ${u:dedupbam} ${u:dedupsam} ${u:qcfile} ]
    turbine::decr_local_file_refcount v:output
}


proc __entry-chain1 { t:105 t:129 t:137 t:306 v:alias:sampleName u:dedupbam u:dedupsam u:qcfile } {
    # Var: string[int] t:114 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():137:89
    lassign [ adlb::multicreate [ list container integer string 1 1 78 ] ] t:114
    turbine::c::log "allocated t:114=<${t:114}>"
    turbine::array_kv_build ${t:114} [ ::adlb::dict_create 0 "-u" ] 1 integer string
    f:samtools_view ${u:dedupbam} ${t:306} ${u:dedupsam} ${t:137} ${t:114} -100 "HARD" "RANK"
    turbine::rule [ list ${t:105} ${t:306} [ turbine::get_file_td ${u:dedupbam} ] ] [ list __entry-chain2 ${t:105} ${t:129} ${t:306} ${v:alias:sampleName} ${u:dedupbam} ${u:qcfile} ]
    turbine::read_refcount_decr ${t:137} 1
    turbine::file_read_refcount_decr ${u:dedupsam} 1
    turbine::read_refcount_decr ${t:114} 1
}


proc __entry-chain2 { t:105 t:129 t:306 v:alias:sampleName u:dedupbam u:qcfile } {
    # Var: $string v:samtoolsdir RENAMED [$string:__v:samtoolsdir]
    # Var: $string v:inputFile RENAMED [$string:__v:inputFile]
    # Var: $int v:numAlignments RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:119 VALUE_OF [boolean:__t:119]
    # Var: $boolean v:t:127 VALUE_OF [boolean:__t:127]
    set v:samtoolsdir [ turbine::retrieve_string ${t:306} CACHED 1 ]
    set v:inputFile [ turbine::retrieve_string ${t:105} CACHED 1 ]
    set v:numAlignments [ alignment::samtools_view ${v:samtoolsdir} ${v:inputFile} ]
    set v:t:119 [ expr { ${v:numAlignments} == 0 } ]
    set v:t:127 [ expr { ${v:numAlignments} > 0 } ]
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if2 ${v:alias:sampleName} ${v:inputFile} ${v:t:119} ${u:qcfile} ]
    turbine::reset_priority
    turbine::rule [ list ${t:129} ] "__entry-async_op-assert ${t:129} ${v:t:127}"
    turbine::file_read_refcount_decr ${u:dedupbam} 1
}


proc __entry-if2 { v:alias:sampleName v:inputFile v:t:119 u:qcfile } {
    if { ${v:t:119} } {
        # Var: string t:121 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():143:17
        # Var: $string v:t:121 VALUE_OF [string:__t:121]
        lassign [ adlb::multicreate [ list string 1 1 79 ] ] t:121
        turbine::c::log "allocated t:121=<${t:121}>"
        set v:t:121 "${v:alias:sampleName}\tALIGNMENT\tFAIL\tAlignment was not produced for ${v:inputFile}\n"
        turbine::store_string ${t:121} ${v:t:121}
        f:echo ${u:qcfile} ${t:121} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:121} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-async_op-assert { t:129 v:t:127 } {
    # Var: $string v:t:129:1 VALUE_OF [string:__t:129]
    # Var: $void v:t:126 VALUE_OF [void:__t:126]
    set v:t:129:1 [ turbine::retrieve_string ${t:129} CACHED 1 ]
    turbine::assert_impl ${v:t:127} ${v:t:129:1}
}


proc __entry-async_op-strcat-5 { u:AlignDir t:105 t:129 v:alias:sampleName u:dedupbam } {
    # Var: $string v:AlignDir:3 VALUE_OF [string:AlignDir]
    # Var: $string v:t:105 VALUE_OF [string:__t:105]
    # Var: $string v:t:129 VALUE_OF [string:__t:129]
    set v:AlignDir:3 [ turbine::retrieve_string ${u:AlignDir} CACHED 1 ]
    set v:t:105 "${v:AlignDir:3}${v:alias:sampleName}.wdups.bam"
    turbine::store_string ${t:105} ${v:t:105}
    turbine::set_filename_val ${u:dedupbam} ${v:t:105}
    set v:t:129 "Alignment was not produced for ${v:t:105} alignment failed"
    turbine::store_string ${t:129} ${v:t:129}
}


proc __entry-async_op-parse_int { t:137 t:138 } {
    # Var: $string v:t:138 VALUE_OF [string:__t:138]
    # Var: $int v:t:137 VALUE_OF [int:__t:137]
    set v:t:138 [ turbine::retrieve_string ${t:138} CACHED 1 ]
    set v:t:137 [ turbine::parse_int_impl ${v:t:138} 10 ]
    turbine::store_integer ${t:137} ${v:t:137}
}


proc __entry-optmerged-2 { t:306 t:49 v:alias:sampleName u:dedupsortedbam u:qcfile } {
    # Var: $string v:t:49:2 VALUE_OF [string:__t:49]
    # Var: $string v:t:156 VALUE_OF [string:__t:156]
    # Var: $string v:samtoolsdir:1 RENAMED [$string:__v:samtoolsdir]
    # Var: $int v:numAlignments:1 RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:146 VALUE_OF [boolean:__t:146]
    # Var: $boolean v:t:154 VALUE_OF [boolean:__t:154]
    # Var: $void v:t:153 VALUE_OF [void:__t:153]
    set v:t:49:2 [ turbine::retrieve_string ${t:49} CACHED 1 ]
    set v:t:156 "novosort command did not produce alignments for ${v:t:49:2} Sorting bam failed"
    set v:samtoolsdir:1 [ turbine::retrieve_string ${t:306} CACHED 1 ]
    set v:numAlignments:1 [ alignment::samtools_view ${v:samtoolsdir:1} ${v:t:49:2} ]
    set v:t:146 [ expr { ${v:numAlignments:1} == 0 } ]
    set v:t:154 [ expr { ${v:numAlignments:1} > 0 } ]
    turbine::assert_impl ${v:t:154} ${v:t:156}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if3 ${v:alias:sampleName} ${v:t:146} ${v:t:49:2} ${u:qcfile} ]
    turbine::reset_priority
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
}


proc __entry-if3 { v:alias:sampleName v:t:146 v:t:49:2 u:qcfile } {
    if { ${v:t:146} } {
        # Var: string t:148 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():160:17
        # Var: $string v:t:148 VALUE_OF [string:__t:148]
        lassign [ adlb::multicreate [ list string 1 1 80 ] ] t:148
        turbine::c::log "allocated t:148=<${t:148}>"
        set v:t:148 "${v:alias:sampleName}\tALIGNMENT\tFAIL\tnovosort command did not produce alignments for ${v:t:49:2}\n"
        turbine::store_string ${t:148} ${v:t:148}
        f:echo ${u:qcfile} ${t:148} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:148} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-async_op-strcat-6 { u:AlignDir t:160 v:alias:sampleName u:alignedbam } {
    # Var: $string v:AlignDir:4 VALUE_OF [string:AlignDir]
    # Var: $string v:t:160 VALUE_OF [string:__t:160]
    set v:AlignDir:4 [ turbine::retrieve_string ${u:AlignDir} CACHED 1 ]
    set v:t:160 "${v:AlignDir:4}${v:alias:sampleName}.nodups.bam"
    turbine::store_string ${t:160} ${v:t:160}
    turbine::set_filename_val ${u:alignedbam} ${v:t:160}
}


proc __entry-async_op-eq_string-1 { u:AlignDir t:160 t:306 t:49 t:639 t:97 v:alias:sampleName u:alignedbam u:alignedsam u:dedupsortedbam u:qcfile u:read1 u:read2 u:rgheader } {
    # Var: $string v:t:97:1 VALUE_OF [string:__t:97]
    # Var: $boolean v:t:162 VALUE_OF [boolean:__t:162]
    set v:t:97:1 [ turbine::retrieve_string ${t:97} CACHED 1 ]
    set v:t:162 [ string equal ${v:t:97:1} "PICARD" ]
    if { ${v:t:162} } {
        # Var: string[string] u:vars /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:62:0
        global u:vars
        # Var: file u:alignedsortedbam /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():178:55
        # Var: file u:metricsfile /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():179:50
        # Var: int t:172 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():182:63
        # Var: string t:173 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():182:74
        # Var: string[int] t:175 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():182:94
        # Var: string t:194 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():201:31
        # Var: string[int] t:201 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():202:26
        # Var: string t:221 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():219:4
        lassign [ adlb::multicreate [ list integer 1 1 85 ] [ list string 1 1 86 ] [ list container integer string 1 1 87 ] [ list string 1 1 88 ] [ list container integer string 1 1 89 ] [ list string 1 1 90 ] ] t:172 t:173 t:175 t:194 t:201 t:221
        turbine::c::log "allocated t:172=<${t:172}> t:173=<${t:173}> t:175=<${t:175}> t:194=<${t:194}> t:201=<${t:201}>"
        turbine::c::log "allocated t:221=<${t:221}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 83 ] [ list file 0 1 84 ] ] [ list 1 1 ] ] u:alignedsortedbam u:metricsfile
        turbine::read_refcount_incr ${u:AlignDir} 1
        turbine::read_refcount_incr ${t:49} 1
        turbine::array_kv_build ${t:201} [ ::adlb::dict_create ] 1 integer string
        turbine::array_kv_build ${t:175} [ ::adlb::dict_create 0 "-u" ] 1 integer string
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:align {${u:alignedsam}} ${u:read1} ${u:read2} ${u:rgheader}"
        turbine::reset_priority
        turbine::container_reference ${u:vars} "PBSCORES" ${t:173} string
        f:samtools_view ${u:alignedbam} ${t:306} ${u:alignedsam} ${t:172} ${t:175} -100 "HARD" "RANK"
        turbine::container_reference ${u:vars} "NOVOSORTDIR" ${t:194} string
        f:novosort ${u:alignedsortedbam} ${t:194} ${u:alignedbam} ${t:639} ${t:172} ${t:201} -100 "HARD" "RANK"
        turbine::rule [ list ${t:173} ] "__entry-async_op-parse_int-1 ${t:172} ${t:173}"
        turbine::rule [ list ${t:49} ] "__entry-async_op-strcat-7 ${t:221} ${t:49}"
        turbine::rule [ list ${u:AlignDir} ] [ list __entry-optmerged-3 ${u:AlignDir} ${t:221} ${t:306} ${t:49} ${t:639} ${v:alias:sampleName} ${u:alignedsortedbam} ${u:dedupsortedbam} ${u:metricsfile} ${u:qcfile} ]
        turbine::rule [ list ${t:160} ${t:306} [ turbine::get_file_td ${u:alignedbam} ] ] [ list __entry-optmerged-4 ${t:160} ${t:306} ${v:alias:sampleName} ${u:alignedbam} ${u:qcfile} ]
        turbine::read_refcount_decr ${t:175} 1
        turbine::read_refcount_decr ${t:201} 1
        turbine::read_refcount_decr ${t:172} 1
        turbine::read_refcount_decr ${t:194} 1
    } else {
        # Var: string[string] u:vars /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:62:0
        global u:vars
        # Var: string t:226 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():225:7
        lassign [ adlb::multicreate [ list string 1 1 95 ] ] t:226
        turbine::c::log "allocated t:226=<${t:226}>"
        turbine::file_read_refcount_incr ${u:alignedbam} 2
        turbine::file_read_refcount_incr ${u:alignedsam} 1
        turbine::read_refcount_incr ${t:306} 2
        turbine::file_read_refcount_incr ${u:dedupsortedbam} 1
        turbine::container_reference ${u:vars} "ALIGNERTOOL" ${t:226} string
        turbine::rule [ list [ turbine::get_file_td ${u:alignedbam} ] ] [ list __entry-explicit-wait1 ${t:306} ${t:49} ${t:639} ${v:alias:sampleName} ${u:alignedbam} ${u:dedupsortedbam} ${u:qcfile} ]
        turbine::rule [ list ${t:226} ] "__entry-async_op-eq_string-2 ${t:226} ${t:306} {${u:alignedbam}} {${u:alignedsam}} ${u:read1} ${u:read2} ${u:rgheader}"
        turbine::rule [ list ${t:160} ${t:306} ] [ list __entry-optmerged-6 ${t:160} ${t:306} ${v:alias:sampleName} ${u:qcfile} ]
    }
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
    turbine::read_refcount_decr ${t:49} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${t:160} 1
    turbine::read_refcount_decr ${u:read2} 1
    turbine::read_refcount_decr ${u:read1} 1
    turbine::read_refcount_decr ${t:306} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::file_read_refcount_decr ${u:qcfile} 1
    turbine::read_refcount_decr ${u:rgheader} 1
    turbine::read_refcount_decr ${u:AlignDir} 1
    turbine::read_refcount_decr ${t:639} 1
}


proc __entry-async_op-parse_int-1 { t:172 t:173 } {
    # Var: $string v:t:173 VALUE_OF [string:__t:173]
    # Var: $int v:t:172 VALUE_OF [int:__t:172]
    set v:t:173 [ turbine::retrieve_string ${t:173} CACHED 1 ]
    set v:t:172 [ turbine::parse_int_impl ${v:t:173} 10 ]
    turbine::store_integer ${t:172} ${v:t:172}
}


proc __entry-async_op-strcat-7 { t:221 t:49 } {
    # Var: $string v:t:49:3 VALUE_OF [string:__t:49]
    # Var: $string v:t:221 VALUE_OF [string:__t:221]
    set v:t:49:3 [ turbine::retrieve_string ${t:49} CACHED 1 ]
    set v:t:221 "picard command did not produce alignments for ${v:t:49:3} deduplication failed"
    turbine::store_string ${t:221} ${v:t:221}
}


proc __entry-optmerged-3 { u:AlignDir t:221 t:306 t:49 t:639 v:alias:sampleName u:alignedsortedbam u:dedupsortedbam u:metricsfile u:qcfile } {
    # Var: $string v:AlignDir:5 VALUE_OF [string:AlignDir]
    # Var: $string v:t:166 VALUE_OF [string:__t:166]
    # Var: $string v:t:168 VALUE_OF [string:__t:168]
    set v:AlignDir:5 [ turbine::retrieve_string ${u:AlignDir} CACHED 1 ]
    set v:t:166 "${v:AlignDir:5}${v:alias:sampleName}.nodups.sorted.bam"
    set v:t:168 "${v:AlignDir:5}${v:alias:sampleName}.picard.metrics"
    turbine::set_filename_val ${u:alignedsortedbam} ${v:t:166}
    turbine::set_filename_val ${u:metricsfile} ${v:t:168}
    turbine::rule [ list [ turbine::get_file_td ${u:alignedsortedbam} ] ] [ list __entry-chain5 ${t:221} ${t:306} ${t:49} ${t:639} ${v:alias:sampleName} ${v:t:166} ${v:t:168} ${u:alignedsortedbam} ${u:dedupsortedbam} ${u:metricsfile} ${u:qcfile} ]
}


proc __entry-chain5 { t:221 t:306 t:49 t:639 v:alias:sampleName v:t:166 v:t:168 u:alignedsortedbam u:dedupsortedbam u:metricsfile u:qcfile } {
    # Var: string[string] u:vars /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:62:0
    global u:vars
    # Var: string t:202 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():204:40
    # Var: string t:204 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():204:57
    lassign [ adlb::multicreate [ list string 1 1 91 ] [ list string 1 1 92 ] ] t:202 t:204
    turbine::c::log "allocated t:202=<${t:202}> t:204=<${t:204}>"
    turbine::container_reference ${u:vars} "JAVADIR" ${t:202} string
    turbine::container_reference ${u:vars} "PICARDDIR" ${t:204} string
    turbine::rule [ list ${t:202} ${t:204} ${t:49} ${t:639} ] [ list picard-app-leaf1 ${t:202} ${t:204} ${t:221} ${t:306} ${t:49} ${t:639} ${v:alias:sampleName} ${v:t:166} ${v:t:168} ${u:alignedsortedbam} ${u:dedupsortedbam} ${u:metricsfile} ${u:qcfile} ]
}


proc picard-app-leaf1 { t:202 t:204 t:221 t:306 t:49 t:639 v:alias:sampleName v:t:166 v:t:168 u:alignedsortedbam u:dedupsortedbam u:metricsfile u:qcfile } {
    # Var: $string v:javadir RENAMED [$string:__v:javadir] ./pipelinefunctions/align_dedup.swift:picard():45:212
    # Var: $string v:picarddir RENAMED [$string:__v:picarddir] ./pipelinefunctions/align_dedup.swift:picard():45:212
    # Var: $string v:__filename:outputfile RENAMED [$string:__v:__filename:outputfile] ./pipelinefunctions/align_dedup.swift:picard():45:212
    # Var: $string v:tmpdir RENAMED [$string:__v:tmpdir] ./pipelinefunctions/align_dedup.swift:picard():45:212
    # Var: $file v:inputFile:5 RENAMED [$file:__v:inputFile] ./pipelinefunctions/align_dedup.swift:picard():45:212
    # Var: $file v:outputfile RENAMED [$file:__v:outputfile] ./pipelinefunctions/align_dedup.swift:picard():45:212
    # Var: $file v:metricsfile RENAMED [$file:__v:metricsfile] ./pipelinefunctions/align_dedup.swift:picard():45:212
    set v:javadir [ turbine::retrieve_string ${t:202} CACHED 1 ]
    set v:picarddir [ turbine::retrieve_string ${t:204} CACHED 1 ]
    set v:__filename:outputfile [ turbine::retrieve_string ${t:49} CACHED 1 ]
    set v:tmpdir [ turbine::retrieve_string ${t:639} CACHED 1 ]
    set v:inputFile:5 [ turbine::retrieve_file ${u:alignedsortedbam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile [ turbine::create_local_file_ref ${v:__filename:outputfile} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:metricsfile [ turbine::create_local_file_ref ${v:t:168} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir "-Xmx8g" "-jar" ${v:picarddir} "MarkDuplicates" "INPUT=" ${v:t:166} "OUTPUT=" ${v:__filename:outputfile} "METRICS_FILE=" ${v:t:168} "TMP_DIR=" ${v:tmpdir} "ASSUME_SORTED=true" "MAX_RECORDS_IN_RAM=null" "CREATE_INDEX=true" "VALIDATION_STRINGENCY=SILENT" [ dict create ] ]
    turbine::exec_external ${v:javadir} [ dict create ] "-Xmx8g" "-jar" ${v:picarddir} "MarkDuplicates" "INPUT=" ${v:t:166} "OUTPUT=" ${v:__filename:outputfile} "METRICS_FILE=" ${v:t:168} "TMP_DIR=" ${v:tmpdir} "ASSUME_SORTED=true" "MAX_RECORDS_IN_RAM=null" "CREATE_INDEX=true" "VALIDATION_STRINGENCY=SILENT"
    turbine::store_file ${u:dedupsortedbam} v:outputfile 0
    turbine::store_file ${u:metricsfile} v:metricsfile 0
    turbine::rule [ list ${t:306} ] [ list __entry-chain6 ${t:221} ${t:306} ${v:__filename:outputfile} ${v:alias:sampleName} ${u:qcfile} ]
    turbine::decr_local_file_refcount v:outputfile
    turbine::decr_local_file_refcount v:metricsfile
}


proc __entry-chain6 { t:221 t:306 v:__filename:outputfile v:alias:sampleName u:qcfile } {
    # Var: $string v:samtoolsdir:3 RENAMED [$string:__v:samtoolsdir]
    # Var: $int v:numAlignments:3 RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:211 VALUE_OF [boolean:__t:211]
    # Var: $boolean v:t:219 VALUE_OF [boolean:__t:219]
    set v:samtoolsdir:3 [ turbine::retrieve_string ${t:306} CACHED 1 ]
    set v:numAlignments:3 [ alignment::samtools_view ${v:samtoolsdir:3} ${v:__filename:outputfile} ]
    set v:t:211 [ expr { ${v:numAlignments:3} == 0 } ]
    set v:t:219 [ expr { ${v:numAlignments:3} > 0 } ]
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if6 ${v:__filename:outputfile} ${v:alias:sampleName} ${v:t:211} ${u:qcfile} ]
    turbine::reset_priority
    turbine::rule [ list ${t:221} ] "__entry-async_op-assert-1 ${t:221} ${v:t:219}"
}


proc __entry-if6 { v:__filename:outputfile v:alias:sampleName v:t:211 u:qcfile } {
    if { ${v:t:211} } {
        # Var: string t:213 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():210:18
        # Var: $string v:t:213 VALUE_OF [string:__t:213]
        lassign [ adlb::multicreate [ list string 1 1 93 ] ] t:213
        turbine::c::log "allocated t:213=<${t:213}>"
        set v:t:213 "${v:alias:sampleName}\tALIGNMENT\tFAIL\tpicard command did not produce alignments for ${v:__filename:outputfile}\n"
        turbine::store_string ${t:213} ${v:t:213}
        f:echo ${u:qcfile} ${t:213} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:213} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-async_op-assert-1 { t:221 v:t:219 } {
    # Var: $string v:t:221:1 VALUE_OF [string:__t:221]
    # Var: $void v:t:218 VALUE_OF [void:__t:218]
    set v:t:221:1 [ turbine::retrieve_string ${t:221} CACHED 1 ]
    turbine::assert_impl ${v:t:219} ${v:t:221:1}
}


proc __entry-optmerged-4 { t:160 t:306 v:alias:sampleName u:alignedbam u:qcfile } {
    # Var: $string v:t:160:2 VALUE_OF [string:__t:160]
    # Var: $string v:t:190 VALUE_OF [string:__t:190]
    # Var: $string v:samtoolsdir:2 RENAMED [$string:__v:samtoolsdir]
    # Var: $int v:numAlignments:2 RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:180 VALUE_OF [boolean:__t:180]
    # Var: $boolean v:t:188 VALUE_OF [boolean:__t:188]
    # Var: $void v:t:187 VALUE_OF [void:__t:187]
    set v:t:160:2 [ turbine::retrieve_string ${t:160} CACHED 1 ]
    set v:t:190 "Alignment was not produced for ${v:t:160:2} alignment failed"
    set v:samtoolsdir:2 [ turbine::retrieve_string ${t:306} CACHED 1 ]
    set v:numAlignments:2 [ alignment::samtools_view ${v:samtoolsdir:2} ${v:t:160:2} ]
    set v:t:180 [ expr { ${v:numAlignments:2} == 0 } ]
    set v:t:188 [ expr { ${v:numAlignments:2} > 0 } ]
    turbine::assert_impl ${v:t:188} ${v:t:190}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if5 ${v:alias:sampleName} ${v:t:160:2} ${v:t:180} ${u:qcfile} ]
    turbine::reset_priority
    turbine::file_read_refcount_decr ${u:alignedbam} 1
}


proc __entry-if5 { v:alias:sampleName v:t:160:2 v:t:180 u:qcfile } {
    if { ${v:t:180} } {
        # Var: string t:182 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():188:18
        # Var: $string v:t:182 VALUE_OF [string:__t:182]
        lassign [ adlb::multicreate [ list string 1 1 94 ] ] t:182
        turbine::c::log "allocated t:182=<${t:182}>"
        set v:t:182 "${v:alias:sampleName}\tALIGNMENT\tFAIL\tAlignment was not produced for ${v:t:160:2}\n"
        turbine::store_string ${t:182} ${v:t:182}
        f:echo ${u:qcfile} ${t:182} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:182} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-explicit-wait1 { t:306 t:49 t:639 v:alias:sampleName u:alignedbam u:dedupsortedbam u:qcfile } {
    # Var: string[string] u:vars /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:62:0
    global u:vars
    # Var: string t:280 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():257:30
    # Var: int t:284 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():258:9
    # Var: string t:285 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():258:20
    # Var: string[int] t:287 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():258:40
    lassign [ adlb::multicreate [ list string 1 1 96 ] [ list integer 1 1 97 ] [ list string 1 1 98 ] [ list container integer string 1 1 99 ] ] t:280 t:284 t:285 t:287
    turbine::c::log "allocated t:280=<${t:280}> t:284=<${t:284}> t:285=<${t:285}> t:287=<${t:287}>"
    turbine::array_kv_build ${t:287} [ ::adlb::dict_create 0 "--markDuplicates" ] 1 integer string
    turbine::container_reference ${u:vars} "NOVOSORTDIR" ${t:280} string
    turbine::container_reference ${u:vars} "PBSCORES" ${t:285} string
    f:novosort ${u:dedupsortedbam} ${t:280} ${u:alignedbam} ${t:639} ${t:284} ${t:287} -100 "HARD" "RANK"
    turbine::rule [ list ${t:285} ] "__entry-async_op-parse_int-2 ${t:284} ${t:285}"
    turbine::rule [ list ${t:306} ${t:49} [ turbine::get_file_td ${u:dedupsortedbam} ] ] [ list __entry-optmerged-5 ${t:306} ${t:49} ${v:alias:sampleName} ${u:dedupsortedbam} ${u:qcfile} ]
    turbine::read_refcount_decr ${t:287} 1
    turbine::read_refcount_decr ${t:280} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${t:284} 1
    turbine::read_refcount_decr ${t:639} 1
}


proc __entry-async_op-parse_int-2 { t:284 t:285 } {
    # Var: $string v:t:285 VALUE_OF [string:__t:285]
    # Var: $int v:t:284 VALUE_OF [int:__t:284]
    set v:t:285 [ turbine::retrieve_string ${t:285} CACHED 1 ]
    set v:t:284 [ turbine::parse_int_impl ${v:t:285} 10 ]
    turbine::store_integer ${t:284} ${v:t:284}
}


proc __entry-optmerged-5 { t:306 t:49 v:alias:sampleName u:dedupsortedbam u:qcfile } {
    # Var: $string v:t:49:4 VALUE_OF [string:__t:49]
    # Var: $string v:t:302 VALUE_OF [string:__t:302]
    # Var: $string v:samtoolsdir:4 RENAMED [$string:__v:samtoolsdir]
    # Var: $int v:numAlignments:4 RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:292 VALUE_OF [boolean:__t:292]
    # Var: $boolean v:t:300 VALUE_OF [boolean:__t:300]
    # Var: $void v:t:299 VALUE_OF [void:__t:299]
    set v:t:49:4 [ turbine::retrieve_string ${t:49} CACHED 1 ]
    set v:t:302 "novosort command did not produce alignments for ${v:t:49:4}sorting and deduplication failed"
    set v:samtoolsdir:4 [ turbine::retrieve_string ${t:306} CACHED 1 ]
    set v:numAlignments:4 [ alignment::samtools_view ${v:samtoolsdir:4} ${v:t:49:4} ]
    set v:t:292 [ expr { ${v:numAlignments:4} == 0 } ]
    set v:t:300 [ expr { ${v:numAlignments:4} > 0 } ]
    turbine::assert_impl ${v:t:300} ${v:t:302}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if9 ${v:alias:sampleName} ${v:t:292} ${v:t:49:4} ${u:qcfile} ]
    turbine::reset_priority
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
}


proc __entry-if9 { v:alias:sampleName v:t:292 v:t:49:4 u:qcfile } {
    if { ${v:t:292} } {
        # Var: string t:294 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():265:19
        # Var: $string v:t:294 VALUE_OF [string:__t:294]
        lassign [ adlb::multicreate [ list string 1 1 100 ] ] t:294
        turbine::c::log "allocated t:294=<${t:294}>"
        set v:t:294 "${v:alias:sampleName}\tALIGNMENT\tFAIL\tnovosort command did not produce alignments for ${v:t:49:4}\n"
        turbine::store_string ${t:294} ${v:t:294}
        f:echo ${u:qcfile} ${t:294} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:294} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-async_op-eq_string-2 { t:226 t:306 u:alignedbam u:alignedsam u:read1 u:read2 u:rgheader } {
    # Var: $string v:t:226 VALUE_OF [string:__t:226]
    # Var: $boolean v:t:225 VALUE_OF [boolean:__t:225]
    set v:t:226 [ turbine::retrieve_string ${t:226} CACHED 1 ]
    set v:t:225 [ string equal ${v:t:226} "BWAMEM" ]
    if { ${v:t:225} } {
        # Var: string[string] u:vars /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:62:0
        global u:vars
        # Var: string t:229 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():226:25
        # Var: string t:231 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():226:55
        # Var: string[int] t:233 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():226:74
        # Var: string t:234 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():226:74
        # Var: int t:236 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():227:11
        # Var: string t:237 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():227:22
        lassign [ adlb::multicreate [ list string 1 1 101 ] [ list string 1 1 102 ] [ list container integer string 1 1 103 ] [ list string 1 1 104 ] [ list integer 1 1 105 ] [ list string 1 1 106 ] ] t:229 t:231 t:233 t:234 t:236 t:237
        turbine::c::log "allocated t:229=<${t:229}> t:231=<${t:231}> t:233=<${t:233}> t:234=<${t:234}> t:236=<${t:236}>"
        turbine::c::log "allocated t:237=<${t:237}>"
        turbine::container_reference ${u:vars} "BWADIR" ${t:229} string
        turbine::container_reference ${u:vars} "BWAINDEX" ${t:231} string
        turbine::container_reference ${u:vars} "BWAMEMPARAMS" ${t:234} string
        turbine::container_reference ${u:vars} "PBSCORES" ${t:237} string
        f:bwa_mem ${u:alignedsam} ${t:229} ${u:read1} ${u:read2} ${t:231} ${t:233} ${t:236} ${u:rgheader} -100 "HARD" "RANK"
        turbine::rule [ list [ turbine::get_file_td ${u:alignedsam} ] ] "__entry-chain7 ${t:236} ${t:306} {${u:alignedbam}} {${u:alignedsam}}"
        turbine::rule [ list ${t:234} ] "__entry-arr_copy_in_imm ${t:233} ${t:234}"
        turbine::rule [ list ${t:237} ] "__entry-async_op-parse_int-3 ${t:236} ${t:237}"
        turbine::read_refcount_decr ${t:233} 1
        turbine::read_refcount_decr ${t:231} 1
        turbine::read_refcount_decr ${t:229} 1
    } else {
        # Var: string[string] u:vars /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:62:0
        global u:vars
        # Var: string t:246 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():233:27
        # Var: string t:248 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():233:63
        # Var: string[int] t:250 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():234:14
        # Var: string t:251 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():234:14
        # Var: int t:253 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():234:40
        # Var: string t:254 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():234:51
        lassign [ adlb::multicreate [ list string 1 1 108 ] [ list string 1 1 109 ] [ list container integer string 1 1 110 ] [ list string 1 1 111 ] [ list integer 1 1 112 ] [ list string 1 1 113 ] ] t:246 t:248 t:250 t:251 t:253 t:254
        turbine::c::log "allocated t:246=<${t:246}> t:248=<${t:248}> t:250=<${t:250}> t:251=<${t:251}> t:253=<${t:253}>"
        turbine::c::log "allocated t:254=<${t:254}>"
        turbine::container_reference ${u:vars} "NOVOALIGNDIR" ${t:246} string
        turbine::container_reference ${u:vars} "NOVOALIGNINDEX" ${t:248} string
        turbine::container_reference ${u:vars} "NOVOALIGNPARAMS" ${t:251} string
        turbine::container_reference ${u:vars} "PBSCORES" ${t:254} string
        f:novoalign ${u:alignedsam} ${t:246} ${u:read1} ${u:read2} ${t:248} ${t:250} ${t:253} ${u:rgheader} -100 "HARD" "RANK"
        turbine::rule [ list [ turbine::get_file_td ${u:alignedsam} ] ] "__entry-chain8 ${t:253} ${t:306} {${u:alignedbam}} {${u:alignedsam}}"
        turbine::rule [ list ${t:251} ] "__entry-arr_copy_in_imm-1 ${t:250} ${t:251}"
        turbine::rule [ list ${t:254} ] "__entry-async_op-parse_int-4 ${t:253} ${t:254}"
        turbine::read_refcount_decr ${t:248} 1
        turbine::read_refcount_decr ${t:246} 1
        turbine::read_refcount_decr ${t:250} 1
    }
    turbine::read_refcount_decr ${t:306} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${u:rgheader} 1
    turbine::read_refcount_decr ${u:read2} 1
    turbine::read_refcount_decr ${u:read1} 1
}


proc __entry-chain7 { t:236 t:306 u:alignedbam u:alignedsam } {
    # Var: string[int] t:244 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():230:41
    lassign [ adlb::multicreate [ list container integer string 1 1 107 ] ] t:244
    turbine::c::log "allocated t:244=<${t:244}>"
    turbine::array_kv_build ${t:244} [ ::adlb::dict_create 0 "-u" ] 1 integer string
    f:samtools_view ${u:alignedbam} ${t:306} ${u:alignedsam} ${t:236} ${t:244} -100 "HARD" "RANK"
    turbine::read_refcount_decr ${t:244} 1
    turbine::read_refcount_decr ${t:236} 1
    turbine::read_refcount_decr ${t:306} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
}


proc __entry-arr_copy_in_imm { t:233 t:234 } {
    # Var: $string v:t:234 VALUE_OF [string:__t:234]
    set v:t:234 [ turbine::retrieve_string ${t:234} CACHED 1 ]
    turbine::array_kv_build ${t:233} [ ::adlb::dict_create 0 ${v:t:234} ] 1 integer string
}


proc __entry-async_op-parse_int-3 { t:236 t:237 } {
    # Var: $string v:t:237 VALUE_OF [string:__t:237]
    # Var: $int v:t:236 VALUE_OF [int:__t:236]
    set v:t:237 [ turbine::retrieve_string ${t:237} CACHED 1 ]
    set v:t:236 [ turbine::parse_int_impl ${v:t:237} 10 ]
    turbine::store_integer ${t:236} ${v:t:236}
}


proc __entry-chain8 { t:253 t:306 u:alignedbam u:alignedsam } {
    # Var: string[int] t:261 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():237:41
    lassign [ adlb::multicreate [ list container integer string 1 1 114 ] ] t:261
    turbine::c::log "allocated t:261=<${t:261}>"
    turbine::array_kv_build ${t:261} [ ::adlb::dict_create 0 "-u" ] 1 integer string
    f:samtools_view ${u:alignedbam} ${t:306} ${u:alignedsam} ${t:253} ${t:261} -100 "HARD" "RANK"
    turbine::read_refcount_decr ${t:253} 1
    turbine::read_refcount_decr ${t:306} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${t:261} 1
}


proc __entry-arr_copy_in_imm-1 { t:250 t:251 } {
    # Var: $string v:t:251 VALUE_OF [string:__t:251]
    set v:t:251 [ turbine::retrieve_string ${t:251} CACHED 1 ]
    turbine::array_kv_build ${t:250} [ ::adlb::dict_create 0 ${v:t:251} ] 1 integer string
}


proc __entry-async_op-parse_int-4 { t:253 t:254 } {
    # Var: $string v:t:254 VALUE_OF [string:__t:254]
    # Var: $int v:t:253 VALUE_OF [int:__t:253]
    set v:t:254 [ turbine::retrieve_string ${t:254} CACHED 1 ]
    set v:t:253 [ turbine::parse_int_impl ${v:t:254} 10 ]
    turbine::store_integer ${t:253} ${v:t:253}
}


proc __entry-optmerged-6 { t:160 t:306 v:alias:sampleName u:qcfile } {
    # Var: $string v:t:160:3 VALUE_OF [string:__t:160]
    # Var: $string v:t:276 VALUE_OF [string:__t:276]
    # Var: $string v:samtoolsdir:5 RENAMED [$string:__v:samtoolsdir]
    # Var: $int v:numAlignments:5 RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:266 VALUE_OF [boolean:__t:266]
    # Var: $boolean v:t:274 VALUE_OF [boolean:__t:274]
    # Var: $void v:t:273 VALUE_OF [void:__t:273]
    set v:t:160:3 [ turbine::retrieve_string ${t:160} CACHED 1 ]
    set v:t:276 "bwa mem command did not produce alignments for ${v:t:160:3} alignment failed"
    set v:samtoolsdir:5 [ turbine::retrieve_string ${t:306} CACHED 1 ]
    set v:numAlignments:5 [ alignment::samtools_view ${v:samtoolsdir:5} ${v:t:160:3} ]
    set v:t:266 [ expr { ${v:numAlignments:5} == 0 } ]
    set v:t:274 [ expr { ${v:numAlignments:5} > 0 } ]
    turbine::assert_impl ${v:t:274} ${v:t:276}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if8 ${v:alias:sampleName} ${v:t:160:3} ${v:t:266} ${u:qcfile} ]
    turbine::reset_priority
}


proc __entry-if8 { v:alias:sampleName v:t:160:3 v:t:266 u:qcfile } {
    if { ${v:t:266} } {
        # Var: string t:268 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():243:18
        # Var: $string v:t:268 VALUE_OF [string:__t:268]
        lassign [ adlb::multicreate [ list string 1 1 115 ] ] t:268
        turbine::c::log "allocated t:268=<${t:268}>"
        set v:t:268 "${v:alias:sampleName}\tALIGNMENT\tFAIL\tbwa mem or novoalign command did not produce alignments for ${v:t:160:3}\n"
        turbine::store_string ${t:268} ${v:t:268}
        f:echo ${u:qcfile} ${t:268} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:268} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-explicit-wait3 { u:RealignDir u:VarcallDir t:306 t:51 t:592 t:62 t:639 v:alias:sampleName u:chr_bamList u:chr_bamListfile u:chr_vcfListfile u:chromosomes_processing_done u:mergedbam u:outbam u:qcfile } {
    # Var: string t:561 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():447:44
    # Var: string t:563 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():448:44
    # Var: $string v:t:561 VALUE_OF [string:__t:561]
    # Var: $string v:t:563 VALUE_OF [string:__t:563]
    lassign [ adlb::multicreate [ list string 1 1 116 ] [ list string 1 1 117 ] ] t:561 t:563
    turbine::c::log "allocated t:561=<${t:561}> t:563=<${t:563}>"
    set v:t:561 "${v:alias:sampleName}.*.recalibrated.bam"
    turbine::store_string ${t:561} ${v:t:561}
    f:find_files ${u:chr_bamListfile} ${u:RealignDir} ${t:561} -100 "HARD" "RANK"
    set v:t:563 "${v:alias:sampleName}.*.raw.g.vcf"
    turbine::store_string ${t:563} ${v:t:563}
    f:find_files ${u:chr_vcfListfile} ${u:VarcallDir} ${t:563} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${u:chr_bamListfile} ] ] [ list __entry-call_foreign-read-1 ${t:306} ${t:51} ${t:592} ${t:62} ${t:639} ${v:alias:sampleName} ${u:chr_bamList} ${u:chr_bamListfile} ${u:mergedbam} ${u:outbam} ${u:qcfile} ]
    turbine::read_refcount_decr ${u:chromosomes_processing_done} 1
    turbine::read_refcount_decr ${t:563} 1
    turbine::read_refcount_decr ${t:561} 1
    turbine::file_read_refcount_decr ${u:chr_vcfListfile} 1
    turbine::read_refcount_decr ${u:VarcallDir} 1
    turbine::read_refcount_decr ${u:RealignDir} 1
}


proc __entry-call_foreign-read-1 { t:306 t:51 t:592 t:62 t:639 v:alias:sampleName u:chr_bamList u:chr_bamListfile u:mergedbam u:outbam u:qcfile } {
    # Var: string[string] u:vars /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:62:0
    global u:vars
    # Var: $file v:chr_bamListfile VALUE_OF [file:chr_bamListfile]
    # Var: $string v:t:567 VALUE_OF [string:__t:567]
    # Var: $int v:n:2 RENAMED [$int:__v:n]
    # Var: $string v:t:566 VALUE_OF [string:__t:566]
    # Var: $string v:o:2 RENAMED [$string:__v:o]
    # Var: $string$[int] v:chr_bamList VALUE_OF [string[int]:chr_bamList]
    # Var: string t:572 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():453:20
    # Var: string t:577 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():453:81
    lassign [ adlb::multicreate [ list string 1 1 118 ] [ list string 1 1 119 ] ] t:572 t:577
    turbine::c::log "allocated t:572=<${t:572}> t:577=<${t:577}>"
    set v:chr_bamListfile [ turbine::retrieve_file ${u:chr_bamListfile} CACHED 1 ]
    set v:t:567 [ turbine::file_read_local ${v:chr_bamListfile} ]
    set v:n:2 [ string length ${v:t:567} ]
    set v:t:566 [ turbine::replace_all_impl ${v:t:567} "\n" " " 0 ${v:n:2} ]
    set v:o:2 [ string trim ${v:t:566} ]
    set v:chr_bamList [ turbine::split_impl ${v:o:2} " " ]
    turbine::build_rec ${u:chr_bamList} ${v:chr_bamList} [ list container integer string ] 0 1
    turbine::container_reference ${u:vars} "NOVOSORTDIR" ${t:572} string
    turbine::container_reference ${u:vars} "PBSCORES" ${t:577} string
    turbine::rule [ list ${t:51} ${t:572} ${t:577} ${t:639} ] [ list __entry-async_op-parse_int-5 ${t:306} ${t:51} ${t:572} ${t:577} ${t:592} ${t:62} ${t:639} ${v:alias:sampleName} ${u:chr_bamList} ${u:mergedbam} ${u:outbam} ${u:qcfile} ]
}


proc __entry-async_op-parse_int-5 { t:306 t:51 t:572 t:577 t:592 t:62 t:639 v:alias:sampleName u:chr_bamList u:mergedbam u:outbam u:qcfile } {
    # Var: $string v:t:577 VALUE_OF [string:__t:577]
    # Var: $int v:t:576 VALUE_OF [int:__t:576]
    # Var: $string v:novosortdir RENAMED [$string:__v:novosortdir] ./pipelinefunctions/align_dedup.swift:novosort():40:72
    # Var: $string v:tmpdir:1 RENAMED [$string:__v:tmpdir] ./pipelinefunctions/align_dedup.swift:novosort():40:72
    # Var: $string$[int] v:inputFile:17 RENAMED [$string$[int]:__v:inputFile] ./pipelinefunctions/align_dedup.swift:novosort():40:72
    # Var: $string v:__filename:output:1 RENAMED [$string:__v:__filename:output] ./pipelinefunctions/align_dedup.swift:novosort():40:72
    # Var: $file v:output:1 RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:novosort():40:72
    set v:t:577 [ turbine::retrieve_string ${t:577} CACHED 1 ]
    set v:t:576 [ turbine::parse_int_impl ${v:t:577} 10 ]
    set v:novosortdir [ turbine::retrieve_string ${t:572} CACHED 1 ]
    set v:tmpdir:1 [ turbine::retrieve_string ${t:639} CACHED 1 ]
    set v:inputFile:17 [ turbine::unpack_args ${u:chr_bamList} 1 string ]
    set v:__filename:output:1 [ turbine::retrieve_string ${t:51} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output:1 [ turbine::create_local_file_ref ${v:__filename:output:1} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:novosortdir "--index" "--tmpdir" ${v:tmpdir:1} "--threads" ${v:t:576} {*}${v:inputFile:17} "-o" ${v:__filename:output:1} [ dict create ] ]
    turbine::exec_external ${v:novosortdir} [ dict create ] "--index" "--tmpdir" ${v:tmpdir:1} "--threads" ${v:t:576} {*}${v:inputFile:17} "-o" ${v:__filename:output:1}
    turbine::store_file ${u:outbam} v:output:1 0
    turbine::rule [ list ] [ list __entry-chain17 ${t:306} ${t:592} ${t:62} ${v:alias:sampleName} ${u:mergedbam} ${u:outbam} ${u:qcfile} ]
    turbine::decr_local_file_refcount v:output:1
    turbine::read_refcount_decr ${u:chr_bamList} 1
}


proc __entry-chain17 { t:306 t:592 t:62 v:alias:sampleName u:mergedbam u:outbam u:qcfile } {
    f:cp ${u:mergedbam} ${u:outbam} -100 "HARD" "RANK"
    turbine::rule [ list ${t:306} ${t:62} [ turbine::get_file_td ${u:mergedbam} ] ] [ list __entry-chain18 ${t:306} ${t:592} ${t:62} ${v:alias:sampleName} ${u:mergedbam} ${u:qcfile} ]
    turbine::file_read_refcount_decr ${u:outbam} 1
}


proc __entry-chain18 { t:306 t:592 t:62 v:alias:sampleName u:mergedbam u:qcfile } {
    # Var: $string v:samtoolsdir:10 RENAMED [$string:__v:samtoolsdir]
    # Var: $string v:inputFile:16 RENAMED [$string:__v:inputFile]
    # Var: $int v:numAlignments:9 RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:583 VALUE_OF [boolean:__t:583]
    # Var: $boolean v:t:590 VALUE_OF [boolean:__t:590]
    set v:samtoolsdir:10 [ turbine::retrieve_string ${t:306} CACHED 1 ]
    set v:inputFile:16 [ turbine::retrieve_string ${t:62} CACHED 1 ]
    set v:numAlignments:9 [ alignment::samtools_view ${v:samtoolsdir:10} ${v:inputFile:16} ]
    set v:t:583 [ expr { ${v:numAlignments:9} == 0 } ]
    set v:t:590 [ expr { ${v:numAlignments:9} > 0 } ]
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if17 ${v:alias:sampleName} ${v:inputFile:16} ${v:t:583} ${u:qcfile} ]
    turbine::reset_priority
    turbine::rule [ list ${t:592} ] "__entry-async_op-assert-2 ${t:592} ${v:t:590}"
    turbine::file_read_refcount_decr ${u:mergedbam} 1
}


proc __entry-if17 { v:alias:sampleName v:inputFile:16 v:t:583 u:qcfile } {
    if { ${v:t:583} } {
        # Var: string t:585 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():457:16
        # Var: $string v:t:585 VALUE_OF [string:__t:585]
        lassign [ adlb::multicreate [ list string 1 1 120 ] ] t:585
        turbine::c::log "allocated t:585=<${t:585}>"
        set v:t:585 "${v:alias:sampleName}\tMERGE\tFAIL\tnovosort command did not produce alignments for ${v:inputFile:16}\n"
        turbine::store_string ${t:585} ${v:t:585}
        f:echo ${u:qcfile} ${t:585} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:585} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-async_op-assert-2 { t:592 v:t:590 } {
    # Var: $string v:t:592:1 VALUE_OF [string:__t:592]
    # Var: $void v:t:589 VALUE_OF [void:__t:589]
    set v:t:592:1 [ turbine::retrieve_string ${t:592} CACHED 1 ]
    turbine::assert_impl ${v:t:590} ${v:t:592:1}
}


proc __entry-async_op-sprintf { t:28 t:30 t:32 v:alias:sampleName u:rgheader } {
    # Var: $string v:t:28 VALUE_OF [string:__t:28]
    # Var: $string v:t:30 VALUE_OF [string:__t:30]
    # Var: $string v:t:32 VALUE_OF [string:__t:32]
    # Var: $string v:rgheader VALUE_OF [string:rgheader]
    set v:t:28 [ turbine::retrieve_string ${t:28} CACHED 1 ]
    set v:t:30 [ turbine::retrieve_string ${t:30} CACHED 1 ]
    set v:t:32 [ turbine::retrieve_string ${t:32} CACHED 1 ]
    set v:rgheader [ eval format [ list "@RG\tID:%s\tLB:%s\tPL:%s\tPU:%s\tSM:%s\tCN:%s" ${v:alias:sampleName} ${v:t:28} ${v:t:30} ${v:alias:sampleName} ${v:alias:sampleName} ${v:t:32} ] ]
    turbine::store_string ${u:rgheader} ${v:rgheader}
}


proc __entry-copy_in_filename { t:55 u:qcfile } {
    # Var: $string v:t:55:1 VALUE_OF [string:__t:55]
    set v:t:55:1 [ turbine::retrieve_string ${t:55} CACHED 1 ]
    turbine::set_filename_val ${u:qcfile} ${v:t:55:1}
}


proc __entry-call_foreign-split-1 { a:t:309 t:308 } {
    # Var: $string v:alias:t:309 VALUE_OF [string:__alias:t:309]
    # Var: $string$[int] v:t:308 VALUE_OF [string[int]:__t:308]
    set v:alias:t:309 [ turbine::retrieve_string ${a:t:309} CACHED 1 ]
    set v:t:308 [ turbine::split_impl ${v:alias:t:309} " " ]
    turbine::build_rec ${t:308} ${v:t:308} [ list container integer string ] 0 1
}


proc __entry-call_foreign-split-2 { a:t:312 t:311 } {
    # Var: $string v:alias:t:312 VALUE_OF [string:__alias:t:312]
    # Var: $string$[int] v:t:311 VALUE_OF [string[int]:__t:311]
    set v:alias:t:312 [ turbine::retrieve_string ${a:t:312} CACHED 1 ]
    set v:t:311 [ turbine::split_impl ${v:alias:t:312} " " ]
    turbine::build_rec ${t:311} ${v:t:311} [ list container integer string ] 0 1
}


proc __entry-call_foreign-split-3 { a:t:315 t:314 } {
    # Var: $string v:alias:t:315 VALUE_OF [string:__alias:t:315]
    # Var: $string$[int] v:t:314 VALUE_OF [string[int]:__t:314]
    set v:alias:t:315 [ turbine::retrieve_string ${a:t:315} CACHED 1 ]
    set v:t:314 [ turbine::split_impl ${v:alias:t:315} " " ]
    turbine::build_rec ${t:314} ${v:t:314} [ list container integer string ] 0 1
}


proc __entry-async_op-parse_float-1 { a:tot_dups a:tot_reads t:321 t:326 t:327 v:alias:sampleName u:perc_mapped u:qcfile } {
    # Var: $string v:alias:tot_reads VALUE_OF [string:__alias:tot_reads]
    # Var: $float v:t:320 VALUE_OF [float:__t:320]
    set v:alias:tot_reads [ turbine::retrieve_string ${a:tot_reads} CACHED 1 ]
    set v:t:320 [ turbine::string2float_impl ${v:alias:tot_reads} ]
    turbine::rule [ list ${t:321} ] "__entry-async_op-div_float ${t:321} ${v:t:320} ${u:perc_mapped}"
    turbine::rule [ list ${a:tot_dups} ${t:326} ] [ list __entry-async_op-parse_float-2 ${a:tot_dups} ${t:326} ${t:327} ${v:alias:sampleName} ${v:t:320} ${u:perc_mapped} ${u:qcfile} ]
}


proc __entry-async_op-div_float { t:321 v:t:320 u:perc_mapped } {
    # Var: $float v:t:321:1 VALUE_OF [float:__t:321]
    # Var: $float v:perc_mapped VALUE_OF [float:perc_mapped]
    set v:t:321:1 [ turbine::retrieve_float ${t:321} CACHED 1 ]
    set v:perc_mapped [ expr { ${v:t:321:1} / ${v:t:320} } ]
    turbine::store_float ${u:perc_mapped} ${v:perc_mapped}
}


proc __entry-async_op-parse_float-2 { a:tot_dups t:326 t:327 v:alias:sampleName v:t:320 u:perc_mapped u:qcfile } {
    # Var: $string v:alias:tot_dups VALUE_OF [string:__alias:tot_dups]
    # Var: $float v:t:318 VALUE_OF [float:__t:318]
    # Var: $float v:t:317 VALUE_OF [float:__t:317]
    # Var: $float v:perc_dup VALUE_OF [float:perc_dup]
    # Var: $float v:t:326:1 VALUE_OF [float:__t:326]
    # Var: $boolean v:t:325 VALUE_OF [boolean:__t:325]
    set v:alias:tot_dups [ turbine::retrieve_string ${a:tot_dups} CACHED 1 ]
    set v:t:318 [ turbine::string2float_impl ${v:alias:tot_dups} ]
    set v:t:317 [ expr { ${v:t:318} * 100.0 } ]
    set v:perc_dup [ expr { ${v:t:317} / ${v:t:320} } ]
    set v:t:326:1 [ turbine::retrieve_float ${t:326} CACHED 1 ]
    set v:t:325 [ expr { ${v:perc_dup} < ${v:t:326:1} } ]
    if { ${v:t:325} } {
        # Var: string[string] u:vars /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:62:0
        global u:vars
        # Var: string t:331 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():294:34
        lassign [ adlb::multicreate [ list string 1 1 121 ] ] t:331
        turbine::c::log "allocated t:331=<${t:331}>"
        turbine::file_read_refcount_incr ${u:qcfile} 1
        turbine::read_refcount_incr ${t:327} 2
        turbine::read_refcount_incr ${u:perc_mapped} 1
        turbine::container_reference ${u:vars} "MAP_CUTOFF" ${t:331} string
        turbine::rule [ list ${t:331} ${u:perc_mapped} ] [ list __entry-async_op-parse_float-3 ${t:327} ${t:331} ${v:alias:sampleName} ${v:perc_dup} ${u:perc_mapped} ${u:qcfile} ]
    }
    turbine::read_refcount_decr ${u:perc_mapped} 1
    turbine::read_refcount_decr ${t:327} 1
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-async_op-parse_float-3 { t:327 t:331 v:alias:sampleName v:perc_dup u:perc_mapped u:qcfile } {
    # Var: $string v:t:331 VALUE_OF [string:__t:331]
    # Var: $float v:t:330 VALUE_OF [float:__t:330]
    # Var: $float v:perc_mapped:1 VALUE_OF [float:perc_mapped]
    # Var: $boolean v:t:329 VALUE_OF [boolean:__t:329]
    set v:t:331 [ turbine::retrieve_string ${t:331} CACHED 1 ]
    set v:t:330 [ turbine::string2float_impl ${v:t:331} ]
    set v:perc_mapped:1 [ turbine::retrieve_float ${u:perc_mapped} CACHED 1 ]
    set v:t:329 [ expr { ${v:perc_mapped:1} > ${v:t:330} } ]
    if { ${v:t:329} } {
        # Var: string t:333 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():295:17
        lassign [ adlb::multicreate [ list string 1 1 122 ] ] t:333
        turbine::c::log "allocated t:333=<${t:333}>"
        f:echo ${u:qcfile} ${t:333} -100 "HARD" "RANK"
        turbine::rule [ list ${t:327} ] [ list __entry-async_op-strcat-8 ${t:327} ${t:333} ${v:alias:sampleName} ${v:perc_dup} ${v:perc_mapped:1} ${v:t:331} ]
        turbine::read_refcount_decr ${t:333} 1
    } else {
        # Var: string t:342 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():303:17
        lassign [ adlb::multicreate [ list string 1 1 123 ] ] t:342
        turbine::c::log "allocated t:342=<${t:342}>"
        f:echo ${u:qcfile} ${t:342} -100 "HARD" "RANK"
        turbine::rule [ list ${t:327} ] [ list __entry-async_op-strcat-9 ${t:327} ${t:342} ${v:alias:sampleName} ${v:perc_dup} ${v:perc_mapped:1} ${v:t:331} ]
        turbine::read_refcount_decr ${t:342} 1
    }
    turbine::read_refcount_decr ${t:327} 1
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-async_op-strcat-8 { t:327 t:333 v:alias:sampleName v:perc_dup v:perc_mapped:1 v:t:331 } {
    # Var: $string v:t:327:1 VALUE_OF [string:__t:327]
    # Var: $string v:t:333 VALUE_OF [string:__t:333]
    set v:t:327:1 [ turbine::retrieve_string ${t:327} CACHED 1 ]
    set v:t:333 "${v:alias:sampleName}\tQCTEST\tPASS\n\trule1 ok: percent_duplication=${v:perc_dup}<? duplication_cutoff=${v:t:327:1}\n\trule2 ok: percent_mapped=${v:perc_mapped:1}>? mapping_cutoff=${v:t:331}"
    turbine::store_string ${t:333} ${v:t:333}
}


proc __entry-async_op-strcat-9 { t:327 t:342 v:alias:sampleName v:perc_dup v:perc_mapped:1 v:t:331 } {
    # Var: $string v:t:327:2 VALUE_OF [string:__t:327]
    # Var: $string v:t:342 VALUE_OF [string:__t:342]
    set v:t:327:2 [ turbine::retrieve_string ${t:327} CACHED 1 ]
    set v:t:342 "${v:alias:sampleName}\tQCTEST\tFAIL\n\trule1 ok: percent_duplication=${v:perc_dup}<? duplication_cutoff=${v:t:327:2}\n\trule2 not ok: percent_mapped=${v:perc_mapped:1}>? mapping_cutoff=${v:t:331}"
    turbine::store_string ${t:342} ${v:t:342}
}


proc __entry-async_op-parse_float-4 { a:tot_mapped t:321 } {
    # Var: $string v:alias:tot_mapped VALUE_OF [string:__alias:tot_mapped]
    # Var: $float v:t:322 VALUE_OF [float:__t:322]
    # Var: $float v:t:321 VALUE_OF [float:__t:321]
    set v:alias:tot_mapped [ turbine::retrieve_string ${a:tot_mapped} CACHED 1 ]
    set v:t:322 [ turbine::string2float_impl ${v:alias:tot_mapped} ]
    set v:t:321 [ expr { ${v:t:322} * 100.0 } ]
    turbine::store_float ${t:321} ${v:t:321}
}


proc __entry-call_foreign-read-2 { t:10 t:13 t:53 t:598 v:sampleLines:1 u:chr_vcfList u:mergedvariant u:rawvariant u:samples_processing_done } {
    # Var: string[string] u:vars /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:62:0
    global u:vars
    # Var: $file v:t:598 VALUE_OF [file:__t:598]
    # Var: $string v:t:597 VALUE_OF [string:__t:597]
    # Var: $int v:n:3 RENAMED [$int:__v:n]
    # Var: $string v:t:596 VALUE_OF [string:__t:596]
    # Var: $string v:o:3 RENAMED [$string:__v:o]
    # Var: $string$[int] v:chr_vcfList VALUE_OF [string[int]:chr_vcfList]
    # Var: string t:604 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():470:27
    # Var: string t:606 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():470:44
    # Var: string t:609 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():470:68
    # Var: string t:612 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():470:95
    # Var: string t:618 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():471:40
    # Var: $string$[int] v:variants RENAMED [$string$[int]:__v:variants] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    lassign [ adlb::multicreate [ list string 1 1 124 ] [ list string 1 1 125 ] [ list string 1 1 126 ] [ list string 1 1 127 ] [ list string 1 1 128 ] ] t:604 t:606 t:609 t:612 t:618
    turbine::c::log "allocated t:604=<${t:604}> t:606=<${t:606}> t:609=<${t:609}> t:612=<${t:612}> t:618=<${t:618}>"
    set v:t:598 [ turbine::retrieve_file ${t:598} CACHED 1 ]
    set v:t:597 [ turbine::file_read_local ${v:t:598} ]
    set v:n:3 [ string length ${v:t:597} ]
    set v:t:596 [ turbine::replace_all_impl ${v:t:597} "\n" " " 0 ${v:n:3} ]
    set v:o:3 [ string trim ${v:t:596} ]
    set v:chr_vcfList [ turbine::split_impl ${v:o:3} " " ]
    turbine::build_rec ${u:chr_vcfList} ${v:chr_vcfList} [ list container integer string ] 0 1
    turbine::container_reference ${u:vars} "JAVADIR" ${t:604} string
    turbine::container_reference ${u:vars} "GATKDIR" ${t:606} string
    turbine::container_reference ${u:vars} "REFGENOMEDIR" ${t:609} string
    turbine::container_reference ${u:vars} "REFGENOME" ${t:612} string
    turbine::container_reference ${u:vars} "DBSNP" ${t:618} string
    set v:variants [ turbine::unpack_args ${u:chr_vcfList} 1 string ]
    turbine::rule [ list ${t:53} ${t:604} ${t:606} ${t:609} ${t:612} ${t:618} ] "__entry-optmerged-7 ${t:10} ${t:13} ${t:53} ${t:604} ${t:606} ${t:609} ${t:612} ${t:618} {${v:sampleLines:1}} {${v:variants}} {${u:mergedvariant}} {${u:rawvariant}} ${u:samples_processing_done}"
    turbine::read_refcount_decr ${u:chr_vcfList} 1
}


proc __entry-optmerged-7 { t:10 t:13 t:53 t:604 t:606 t:609 t:612 t:618 v:sampleLines:1 v:variants u:mergedvariant u:rawvariant u:samples_processing_done } {
    # Var: $string v:t:609 VALUE_OF [string:__t:609]
    # Var: $string v:t:618 VALUE_OF [string:__t:618]
    # Var: $string v:t:614 VALUE_OF [string:__t:614]
    # Var: $string v:t:612 VALUE_OF [string:__t:612]
    # Var: $string v:t:608 VALUE_OF [string:__t:608]
    # Var: $string v:javadir:6 RENAMED [$string:__v:javadir] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    # Var: $string v:gatkdir:5 RENAMED [$string:__v:gatkdir] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    # Var: $string v:__filename:outputfile:6 RENAMED [$string:__v:__filename:outputfile] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    # Var: $file v:outputfile:6 RENAMED [$file:__v:outputfile] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    set v:t:609 [ turbine::retrieve_string ${t:609} CACHED 1 ]
    set v:t:618 [ turbine::retrieve_string ${t:618} CACHED 1 ]
    set v:t:614 "${v:t:609}/${v:t:618}"
    set v:t:612 [ turbine::retrieve_string ${t:612} CACHED 1 ]
    set v:t:608 "${v:t:609}/${v:t:612}"
    set v:javadir:6 [ turbine::retrieve_string ${t:604} CACHED 1 ]
    set v:gatkdir:5 [ turbine::retrieve_string ${t:606} CACHED 1 ]
    set v:__filename:outputfile:6 [ turbine::retrieve_string ${t:53} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:6 [ turbine::create_local_file_ref ${v:__filename:outputfile:6} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:6 "-Xmx8g" "-jar" ${v:gatkdir:5} "-T" "CombineGVCFs" "-R" ${v:t:608} "--dbsnp" ${v:t:614} {*}${v:variants} "-o" ${v:__filename:outputfile:6} [ dict create ] ]
    turbine::exec_external ${v:javadir:6} [ dict create ] "-Xmx8g" "-jar" ${v:gatkdir:5} "-T" "CombineGVCFs" "-R" ${v:t:608} "--dbsnp" ${v:t:614} {*}${v:variants} "-o" ${v:__filename:outputfile:6}
    turbine::store_file ${u:rawvariant} v:outputfile:6 0
    turbine::rule [ list ] "__entry-chain20 ${t:10} ${t:13} {${v:sampleLines:1}} {${u:mergedvariant}} {${u:rawvariant}} ${u:samples_processing_done}"
    turbine::decr_local_file_refcount v:outputfile:6
}


proc __entry-chain20 { t:10 t:13 v:sampleLines:1 u:mergedvariant u:rawvariant u:samples_processing_done } {
    f:cp ${u:mergedvariant} ${u:rawvariant} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${u:mergedvariant} ] ] "__entry-chain21 ${t:10} ${t:13} {${v:sampleLines:1}} {${u:mergedvariant}} ${u:samples_processing_done}"
    turbine::file_read_refcount_decr ${u:rawvariant} 1
}


proc __entry-chain21 { t:10 t:13 v:sampleLines:1 u:mergedvariant u:samples_processing_done } {
    # Var: *rw(file)[int] t:623 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():475:32
    # Var: string t:624 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():475:37
    # Var: $int v:t:621 VALUE_OF [int:__t:621]
    lassign [ adlb::multicreate [ list container integer file_ref 1 1 129 ] [ list string 1 1 130 ] ] t:623 t:624
    turbine::c::log "allocated t:623=<${t:623}> t:624=<${t:624}>"
    set v:t:621 [ dict size ${v:sampleLines:1} ]
    turbine::glob [ list ${t:623} ] [ list ${t:624} ]
    turbine::rule [ list ${t:10} ${t:13} ] "__entry-async_op-strcat-10 ${t:10} ${t:13} ${t:624}"
    turbine::rule [ list ${t:623} ] "__entry-call_foreign-size ${t:623} ${v:t:621} ${u:samples_processing_done}"
    turbine::file_read_refcount_decr ${u:mergedvariant} 1
}


proc __entry-async_op-strcat-10 { t:10 t:13 t:624 } {
    # Var: $string v:t:10:9 VALUE_OF [string:__t:10]
    # Var: $string v:t:13:6 VALUE_OF [string:__t:13]
    # Var: $string v:t:624 VALUE_OF [string:__t:624]
    set v:t:10:9 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:t:13:6 [ turbine::retrieve_string ${t:13} CACHED 1 ]
    set v:t:624 "${v:t:10:9}/${v:t:13:6}/*.GATKCombineGVCF.raw.vcf"
    turbine::store_string ${t:624} ${v:t:624}
}


proc __entry-call_foreign-size { t:623 v:t:621 u:samples_processing_done } {
    # Var: file$[int] v:t:623 VALUE_OF [*rw(file)[int]:__t:623]
    # Var: $int v:t:622 VALUE_OF [int:__t:622]
    # Var: $boolean v:t:620 VALUE_OF [boolean:__t:620]
    set v:t:623 [ adlb::enumerate ${t:623} dict all 0 0 ]
    set v:t:622 [ dict size ${v:t:623} ]
    set v:t:620 [ expr { ${v:t:621} == ${v:t:622} } ]
    if { ${v:t:620} } {
        turbine::store_integer ${u:samples_processing_done} 1
    }
    turbine::read_refcount_decr ${t:623} 1
}


proc __entry-optmerged-8 { u:AlignDir u:RealignDir u:VarcallDir t:10 t:13 t:306 t:49 t:51 t:53 t:592 t:62 t:639 v:alias:sampleName u:chromosomes_processing_done u:dedupsortedbam u:flagstats u:indices u:mergedbam u:mergedvariant u:outbam u:qcfile u:rawvariant u:stat } {
    # Var: $string v:t:10:4 VALUE_OF [string:__t:10]
    # Var: $string v:AlignDir VALUE_OF [string:AlignDir]
    # Var: $string v:VarcallDir VALUE_OF [string:VarcallDir]
    # Var: $string v:RealignDir VALUE_OF [string:RealignDir]
    # Var: $string v:t:49 VALUE_OF [string:__t:49]
    # Var: $string v:t:78 VALUE_OF [string:__t:78]
    # Var: $string v:t:53 VALUE_OF [string:__t:53]
    # Var: $string v:t:51 VALUE_OF [string:__t:51]
    set v:t:10:4 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:AlignDir "${v:t:10:4}/${v:alias:sampleName}/align/"
    turbine::store_string ${u:AlignDir} ${v:AlignDir}
    set v:VarcallDir "${v:t:10:4}/${v:alias:sampleName}/variant/"
    turbine::store_string ${u:VarcallDir} ${v:VarcallDir}
    set v:RealignDir "${v:t:10:4}/${v:alias:sampleName}/realign/"
    turbine::store_string ${u:RealignDir} ${v:RealignDir}
    set v:t:49 "${v:AlignDir}${v:alias:sampleName}.wdups.sorted.bam"
    turbine::store_string ${t:49} ${v:t:49}
    turbine::set_filename_val ${u:dedupsortedbam} ${v:t:49}
    set v:t:78 "${v:AlignDir}${v:alias:sampleName}.wdups.sorted.bam.flagstats"
    turbine::set_filename_val ${u:flagstats} ${v:t:78}
    set v:t:53 "${v:VarcallDir}${v:alias:sampleName}.GATKCombineGVCF.raw.vcf"
    turbine::store_string ${t:53} ${v:t:53}
    turbine::set_filename_val ${u:rawvariant} ${v:t:53}
    set v:t:51 "${v:RealignDir}${v:alias:sampleName}.recalibrated.bam"
    turbine::store_string ${t:51} ${v:t:51}
    turbine::set_filename_val ${u:outbam} ${v:t:51}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list mkdir-app-leaf1-1 ${v:AlignDir} ]
    turbine::reset_priority
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list mkdir-app-leaf1-2 ${v:VarcallDir} ]
    turbine::reset_priority
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list mkdir-app-leaf1-3 ${v:RealignDir} ]
    turbine::reset_priority
    turbine::rule [ list ${t:13} ] [ list __entry-optmerged-9 ${t:13} ${t:592} ${t:62} ${v:alias:sampleName} ${v:t:10:4} ${u:mergedbam} ${u:mergedvariant} ]
    turbine::rule [ list [ turbine::get_file_td ${u:dedupsortedbam} ] ] [ list __entry-optmerged-10 ${t:306} ${t:639} ${v:RealignDir} ${v:VarcallDir} ${v:alias:sampleName} ${v:t:49} ${v:t:78} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:flagstats} ${u:indices} ${u:qcfile} ${u:stat} ]
}


proc mkdir-app-leaf1-1 { v:AlignDir } {
    # Var: $void v:v RENAMED [$void:__v:v] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:mkdir():65:15
    turbine::c::log [ list exec: "mkdir" "-p" ${v:AlignDir} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:AlignDir}
}


proc mkdir-app-leaf1-2 { v:VarcallDir } {
    # Var: $void v:v:1 RENAMED [$void:__v:v] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:mkdir():65:15
    turbine::c::log [ list exec: "mkdir" "-p" ${v:VarcallDir} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:VarcallDir}
}


proc mkdir-app-leaf1-3 { v:RealignDir } {
    # Var: $void v:v:2 RENAMED [$void:__v:v] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:mkdir():65:15
    turbine::c::log [ list exec: "mkdir" "-p" ${v:RealignDir} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:RealignDir}
}


proc __entry-optmerged-9 { t:13 t:592 t:62 v:alias:sampleName v:t:10:4 u:mergedbam u:mergedvariant } {
    # Var: $string v:t:13:4 VALUE_OF [string:__t:13]
    # Var: $string v:t:62 VALUE_OF [string:__t:62]
    # Var: $string v:t:70 VALUE_OF [string:__t:70]
    # Var: $string v:t:592 VALUE_OF [string:__t:592]
    set v:t:13:4 [ turbine::retrieve_string ${t:13} CACHED 1 ]
    set v:t:62 "${v:t:10:4}/${v:t:13:4}/${v:alias:sampleName}.recalibrated.bam"
    turbine::store_string ${t:62} ${v:t:62}
    set v:t:70 "${v:t:10:4}/${v:t:13:4}/${v:alias:sampleName}.GATKCombineGVCF.raw.vcf"
    turbine::set_filename_val ${u:mergedbam} ${v:t:62}
    set v:t:592 "novosort command did not produce alignments for ${v:t:62}"
    turbine::store_string ${t:592} ${v:t:592}
    turbine::set_filename_val ${u:mergedvariant} ${v:t:70}
}


proc __entry-optmerged-10 { t:306 t:639 v:RealignDir v:VarcallDir v:alias:sampleName v:t:49 v:t:78 u:chromosomes_processing_done u:dedupsortedbam u:flagstats u:indices u:qcfile u:stat } {
    # Var: string[string] u:vars /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:62:0
    global u:vars
    # Var: string t:389 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():349:20
    # Var: string t:410 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():367:34
    # Var: string t:413 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():367:61
    # Var: string t:462 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():388:33
    # Var: string t:464 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():388:50
    # Var: string t:470 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():389:46
    # Var: string t:505 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():409:47
    lassign [ adlb::multicreate [ list string 1 1 131 ] [ list string 1 1 132 ] [ list string 1 1 133 ] [ list string 1 1 134 ] [ list string 1 1 135 ] [ list string 1 1 136 ] [ list string 1 1 137 ] ] t:389 t:410 t:413 t:462 t:464 t:470 t:505
    turbine::c::log "allocated t:389=<${t:389}> t:410=<${t:410}> t:413=<${t:413}> t:462=<${t:462}> t:464=<${t:464}>"
    turbine::c::log "allocated t:470=<${t:470}> t:505=<${t:505}>"
    turbine::container_reference ${u:vars} "PBSCORES" ${t:389} string
    turbine::container_reference ${u:vars} "REFGENOMEDIR" ${t:410} string
    turbine::container_reference ${u:vars} "INDELDIR" ${t:413} string
    turbine::container_reference ${u:vars} "JAVADIR" ${t:462} string
    turbine::container_reference ${u:vars} "GATKDIR" ${t:464} string
    turbine::container_reference ${u:vars} "REFGENOME" ${t:470} string
    turbine::container_reference ${u:vars} "DBSNP" ${t:505} string
    turbine::rule [ list ${u:indices} ] [ list __entry-explicit-wait2 ${t:306} ${t:389} ${t:410} ${t:413} ${t:462} ${t:464} ${t:470} ${t:505} ${t:639} ${v:RealignDir} ${v:VarcallDir} ${v:alias:sampleName} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:indices} ${u:qcfile} ]
    turbine::rule [ list ${t:306} ] [ list samtools_flagstat-app-leaf1 ${t:306} ${v:t:49} ${v:t:78} ${u:dedupsortedbam} ${u:flagstats} ${u:stat} ]
}


proc __entry-explicit-wait2 { t:306 t:389 t:410 t:413 t:462 t:464 t:470 t:505 t:639 v:RealignDir v:VarcallDir v:alias:sampleName u:chromosomes_processing_done u:dedupsortedbam u:indices u:qcfile } {
    # Var: int t:388 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():349:9
    # Var: string t:409 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():367:27
    # Var: string t:466 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():389:12
    # Var: string t:501 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():409:13
    # Var: string t:428 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():376:27
    lassign [ adlb::multicreate [ list integer 1 1 138 ] [ list string 1 1 139 ] [ list string 1 1 140 ] [ list string 1 1 141 ] [ list string 1 1 142 ] ] t:388 t:409 t:466 t:501 t:428
    turbine::c::log "allocated t:388=<${t:388}> t:409=<${t:409}> t:466=<${t:466}> t:501=<${t:501}> t:428=<${t:428}>"
    set tcltmp:container_sz [ adlb::enumerate ${u:indices} count all 0 ]
    set tcltmp:iters ${tcltmp:container_sz}
    turbine::read_refcount_incr ${t:462} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${u:indices} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:466} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::file_read_refcount_incr ${u:dedupsortedbam} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:464} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:388} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::file_read_refcount_incr ${u:qcfile} [ expr { 3 * ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:306} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:501} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:639} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:409} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:428} [ expr { ${tcltmp:iters} - 1 } ]
    __entry-foreach2:outer ${t:306} ${t:388} ${t:409} ${t:428} ${t:462} ${t:464} ${t:466} ${t:501} ${t:639} ${v:RealignDir} ${v:VarcallDir} ${v:alias:sampleName} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:indices} ${u:qcfile} 0 [ expr { ${tcltmp:container_sz} - 1 } ] 1
    turbine::rule [ list ${t:389} ] "__entry-async_op-parse_int-6 ${t:388} ${t:389}"
    turbine::rule [ list ${t:410} ] "__entry-optmerged-13 ${t:409} ${t:410} ${t:413} ${t:428} ${t:466} ${t:470} ${t:501} ${t:505}"
}


proc __entry-foreach2:outer { t:306 t:388 t:409 t:428 t:462 t:464 t:466 t:501 t:639 v:RealignDir v:VarcallDir v:alias:sampleName u:chromosomes_processing_done u:dedupsortedbam u:indices u:qcfile tcltmp:lo tcltmp:hi tcltmp:inc } {
    if { [ expr { ${tcltmp:lo} > ${tcltmp:hi} } ] } {
        return
    }
    while {1} {
        set tcltmp:itersleft [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
        if { [ expr { ${tcltmp:itersleft} <= 64 } ] } {
            __entry-foreach2:inner ${t:306} ${t:388} ${t:409} ${t:428} ${t:462} ${t:464} ${t:466} ${t:501} ${t:639} ${v:RealignDir} ${v:VarcallDir} ${v:alias:sampleName} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:indices} ${u:qcfile} ${tcltmp:lo} ${tcltmp:hi} ${tcltmp:inc}
            return
        } else {
            set tcltmp:skip [ expr { ${tcltmp:inc} * max(64,((${tcltmp:itersleft} - 1) / 16) + 1) } ]
            for { set tcltmp:splitstart [ expr { ${tcltmp:lo} + ${tcltmp:skip} } ] } { ${tcltmp:splitstart} <= ${tcltmp:hi} } { incr tcltmp:splitstart ${tcltmp:skip} } {
                set tcltmp:splitend [ expr { min(${tcltmp:hi},${tcltmp:splitstart} + ${tcltmp:skip} - 1) } ]
                set tcltmp:prio [ turbine::get_priority ]
                turbine::set_priority ${tcltmp:prio}
                adlb::spawn 0 [ list __entry-foreach2:outer ${t:306} ${t:388} ${t:409} ${t:428} ${t:462} ${t:464} ${t:466} ${t:501} ${t:639} ${v:RealignDir} ${v:VarcallDir} ${v:alias:sampleName} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:indices} ${u:qcfile} ${tcltmp:splitstart} ${tcltmp:splitend} ${tcltmp:inc} ]
                turbine::reset_priority
            }
            set tcltmp:hi [ expr { ${tcltmp:lo} + ${tcltmp:skip} - 1 } ]
        }
    }
}


proc __entry-foreach2:inner { t:306 t:388 t:409 t:428 t:462 t:464 t:466 t:501 t:639 v:RealignDir v:VarcallDir v:alias:sampleName u:chromosomes_processing_done u:dedupsortedbam u:indices u:qcfile tcltmp:lo tcltmp:hi tcltmp:inc } {
    set tcltmp:splitlen [ expr { ${tcltmp:hi} - ${tcltmp:lo} + 1 } ]
    set tcltmp:contents [ adlb::enumerate ${u:indices} members ${tcltmp:splitlen} ${tcltmp:lo} ]
    foreach v:chr ${tcltmp:contents} {
        # Var: string c:s_sknownSite OPT_TEMPORARY
        global c:s_sknownSite
        # Var: string c:s_sknown_g OPT_TEMPORARY
        global c:s_sknown_g
        # Var: file u:chrdedupsortedbam /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():329:68
        # Var: file u:realignedbam /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():331:63
        # Var: file u:recalibratedbam /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():332:66
        # Var: file u:intervals /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():333:61
        # Var: file u:recalreport /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():334:63
        # Var: file u:gvcfvariant /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():335:62
        # Var: file u:recalfiles /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():338:71
        # Var: file u:realfiles /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():339:70
        # Var: int u:ploidy /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():341:3
        # Var: string[int] t:391 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():349:40
        # Var: string t:416 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():368:6
        # Var: string[int] u:recalparmsindels /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():371:3
        # Var: file t:422 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():371:59
        # Var: string[int] u:realparms /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():377:3
        # Var: file t:441 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():377:52
        # Var: $boolean v:t:384 VALUE_OF [boolean:__t:384]
        # Var: $string v:t:392 VALUE_OF [string:__t:392]
        # Var: $string v:t:416 VALUE_OF [string:__t:416]
        # Var: $string v:t:369 VALUE_OF [string:__t:369]
        # Var: $string v:t:354 VALUE_OF [string:__t:354]
        # Var: $string v:t:357 VALUE_OF [string:__t:357]
        # Var: $string v:t:360 VALUE_OF [string:__t:360]
        # Var: $string v:t:363 VALUE_OF [string:__t:363]
        # Var: $string v:t:366 VALUE_OF [string:__t:366]
        # Var: $string v:t:405 VALUE_OF [string:__t:405]
        # Var: $string v:t:485 VALUE_OF [string:__t:485]
        # Var: $string v:t:533 VALUE_OF [string:__t:533]
        lassign [ adlb::multicreate [ list integer 1 1 151 ] [ list container integer string 1 1 152 ] [ list string 1 1 153 ] [ list container integer string 1 1 154 ] [ list container integer string 1 1 156 ] ] u:ploidy t:391 t:416 u:recalparmsindels u:realparms
        turbine::c::log "allocated u:ploidy=<${u:ploidy}> t:391=<${t:391}> t:416=<${t:416}> u:recalparmsindels=<${u:recalparmsindels}> u:realparms=<${u:realparms}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 143 ] [ list file 1 1 144 ] [ list file 1 1 145 ] [ list file 1 1 146 ] [ list file 1 1 147 ] [ list file 0 1 148 ] [ list file 1 1 149 ] [ list file 1 1 150 ] [ list file 1 1 155 ] [ list file 1 1 157 ] ] [ list 1 1 1 1 1 1 1 1 0 0 ] ] u:chrdedupsortedbam u:realignedbam u:recalibratedbam u:intervals u:recalreport u:gvcfvariant u:recalfiles u:realfiles t:422 t:441
        set v:t:384 [ string equal ${v:chr} "M" ]
        set v:t:392 "${v:chr}"
        turbine::array_kv_build ${t:391} [ ::adlb::dict_create 0 ${v:t:392} ] 1 integer string
        f:samtools_view ${u:chrdedupsortedbam} ${t:306} ${u:dedupsortedbam} ${t:388} ${t:391} -100 "HARD" "RANK"
        set v:t:416 "*${v:chr}.vcf"
        turbine::store_string ${t:416} ${v:t:416}
        f:find_files ${u:recalfiles} ${t:409} ${t:416} -100 "HARD" "RANK"
        f:sed ${t:422} ${u:recalfiles} ${c:s_sknownSite} -100 "HARD" "RANK"
        f:find_files ${u:realfiles} ${t:428} ${t:416} -100 "HARD" "RANK"
        f:sed ${t:441} ${u:recalfiles} ${c:s_sknown_g} -100 "HARD" "RANK"
        if { ${v:t:384} } {
            turbine::store_integer ${u:ploidy} 1
        } else {
            turbine::store_integer ${u:ploidy} 2
        }
        set v:t:369 "${v:VarcallDir}${v:alias:sampleName}.${v:chr}.raw.g.vcf"
        turbine::set_filename_val ${u:gvcfvariant} ${v:t:369}
        set v:t:354 "${v:RealignDir}${v:alias:sampleName}.${v:chr}.wdups.sorted.bam"
        set v:t:357 "${v:RealignDir}${v:alias:sampleName}.${v:chr}.realigned.bam"
        set v:t:360 "${v:RealignDir}${v:alias:sampleName}.${v:chr}.recalibrated.bam"
        set v:t:363 "${v:RealignDir}${v:alias:sampleName}.${v:chr}.realignTargetCreator.intervals"
        set v:t:366 "${v:RealignDir}${v:alias:sampleName}.${v:chr}.recal_report.grp"
        set v:t:405 "samtools command did not produce alignments for ${v:t:354}splitting by chromosome failed"
        turbine::set_filename_val ${u:chrdedupsortedbam} ${v:t:354}
        set v:t:485 "GATK IndelRealigner command did not produce alignments for ${v:t:357}"
        turbine::set_filename_val ${u:realignedbam} ${v:t:357}
        turbine::set_filename_val ${u:recalibratedbam} ${v:t:360}
        set v:t:533 "GATK BQSR Recalibrator command did not produce alignments for ${v:t:360}"
        turbine::set_filename_val ${u:intervals} ${v:t:363}
        turbine::set_filename_val ${u:recalreport} ${v:t:366}
        turbine::rule [ list [ turbine::get_file_td ${t:422} ] ] "__entry-call_foreign-read-3 {${t:422}} ${u:recalparmsindels}"
        turbine::rule [ list [ turbine::get_file_td ${t:441} ] ] "__entry-call_foreign-read-4 {${t:441}} ${u:realparms}"
        turbine::rule [ list ${t:639} ] [ list __entry-optmerged-11 ${t:639} ${v:alias:sampleName} ${v:chr} ${u:realfiles} ${u:recalfiles} ]
        turbine::rule [ list ${t:306} [ turbine::get_file_td ${u:chrdedupsortedbam} ] ] [ list __entry-optmerged-12 ${t:306} ${t:388} ${t:462} ${t:464} ${t:466} ${t:501} ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:t:354} ${v:t:357} ${v:t:360} ${v:t:363} ${v:t:366} ${v:t:369} ${v:t:405} ${v:t:485} ${v:t:533} ${u:chrdedupsortedbam} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:intervals} ${u:ploidy} ${u:qcfile} ${u:realignedbam} ${u:realparms} ${u:recalibratedbam} ${u:recalparmsindels} ${u:recalreport} ]
        turbine::read_refcount_decr ${t:391} 1
        turbine::read_refcount_decr ${t:416} 1
        turbine::file_read_refcount_decr ${u:realfiles} 1
        turbine::file_read_refcount_decr ${u:recalfiles} 1
    }
    set tcltmp:iters [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
    turbine::file_read_refcount_decr ${u:dedupsortedbam} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_decr ${t:428} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_decr ${t:409} [ expr { ${tcltmp:iters} } ]
}


proc __entry-call_foreign-read-3 { t:422 u:recalparmsindels } {
    # Var: $file v:t:422 VALUE_OF [file:__t:422]
    # Var: $string v:t:421 VALUE_OF [string:__t:421]
    # Var: $int v:n RENAMED [$int:__v:n]
    # Var: $string v:t:420 VALUE_OF [string:__t:420]
    # Var: $string v:o RENAMED [$string:__v:o]
    # Var: $string$[int] v:recalparmsindels VALUE_OF [string[int]:recalparmsindels]
    set v:t:422 [ turbine::retrieve_file ${t:422} CACHED 1 ]
    set v:t:421 [ turbine::file_read_local ${v:t:422} ]
    set v:n [ string length ${v:t:421} ]
    set v:t:420 [ turbine::replace_all_impl ${v:t:421} "\n" " " 0 ${v:n} ]
    set v:o [ string trim ${v:t:420} ]
    set v:recalparmsindels [ turbine::split_impl ${v:o} " " ]
    turbine::build_rec ${u:recalparmsindels} ${v:recalparmsindels} [ list container integer string ] 0 1
}


proc __entry-call_foreign-read-4 { t:441 u:realparms } {
    # Var: $file v:t:441 VALUE_OF [file:__t:441]
    # Var: $string v:t:440 VALUE_OF [string:__t:440]
    # Var: $int v:n:1 RENAMED [$int:__v:n]
    # Var: $string v:t:439 VALUE_OF [string:__t:439]
    # Var: $string v:o:1 RENAMED [$string:__v:o]
    # Var: $string$[int] v:realparms VALUE_OF [string[int]:realparms]
    set v:t:441 [ turbine::retrieve_file ${t:441} CACHED 1 ]
    set v:t:440 [ turbine::file_read_local ${v:t:441} ]
    set v:n:1 [ string length ${v:t:440} ]
    set v:t:439 [ turbine::replace_all_impl ${v:t:440} "\n" " " 0 ${v:n:1} ]
    set v:o:1 [ string trim ${v:t:439} ]
    set v:realparms [ turbine::split_impl ${v:o:1} " " ]
    turbine::build_rec ${u:realparms} ${v:realparms} [ list container integer string ] 0 1
}


proc __entry-optmerged-11 { t:639 v:alias:sampleName v:chr u:realfiles u:recalfiles } {
    # Var: $string v:t:639:5 VALUE_OF [string:__t:639]
    # Var: $string v:t:372 VALUE_OF [string:__t:372]
    # Var: $string v:t:378 VALUE_OF [string:__t:378]
    set v:t:639:5 [ turbine::retrieve_string ${t:639} CACHED 1 ]
    set v:t:372 "${v:t:639:5}/${v:alias:sampleName}.${v:chr}.recal_foundfiles.txt"
    set v:t:378 "${v:t:639:5}/${v:alias:sampleName}.${v:chr}.real_foundfiles.txt"
    turbine::set_filename_val ${u:recalfiles} ${v:t:372}
    turbine::set_filename_val ${u:realfiles} ${v:t:378}
}


proc __entry-optmerged-12 { t:306 t:388 t:462 t:464 t:466 t:501 v:VarcallDir v:alias:sampleName v:chr v:t:354 v:t:357 v:t:360 v:t:363 v:t:366 v:t:369 v:t:405 v:t:485 v:t:533 u:chrdedupsortedbam u:chromosomes_processing_done u:gvcfvariant u:indices u:intervals u:ploidy u:qcfile u:realignedbam u:realparms u:recalibratedbam u:recalparmsindels u:recalreport } {
    # Var: $string v:samtoolsdir:9 RENAMED [$string:__v:samtoolsdir] ./pipelinefunctions/realign_varcall_by_chr.swift:samtools_index():4:21
    set v:samtoolsdir:9 [ turbine::retrieve_string ${t:306} CACHED 1 ]
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list samtools_index-app-leaf1 ${t:388} ${t:462} ${t:464} ${t:466} ${t:501} ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:samtoolsdir:9} ${v:t:354} ${v:t:357} ${v:t:360} ${v:t:363} ${v:t:366} ${v:t:369} ${v:t:485} ${v:t:533} ${u:chrdedupsortedbam} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:intervals} ${u:ploidy} ${u:qcfile} ${u:realignedbam} ${u:realparms} ${u:recalibratedbam} ${u:recalparmsindels} ${u:recalreport} ]
    turbine::reset_priority
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-chain10 ${v:alias:sampleName} ${v:samtoolsdir:9} ${v:t:354} ${v:t:405} ${u:qcfile} ]
    turbine::reset_priority
}


proc samtools_index-app-leaf1 { t:388 t:462 t:464 t:466 t:501 v:VarcallDir v:alias:sampleName v:chr v:samtoolsdir:9 v:t:354 v:t:357 v:t:360 v:t:363 v:t:366 v:t:369 v:t:485 v:t:533 u:chrdedupsortedbam u:chromosomes_processing_done u:gvcfvariant u:indices u:intervals u:ploidy u:qcfile u:realignedbam u:realparms u:recalibratedbam u:recalparmsindels u:recalreport } {
    # Var: $file v:inputFilename RENAMED [$file:__v:inputFilename] ./pipelinefunctions/realign_varcall_by_chr.swift:samtools_index():4:21
    # Var: $void v:signal RENAMED [$void:__v:signal] ./pipelinefunctions/realign_varcall_by_chr.swift:samtools_index():4:21
    set v:inputFilename [ turbine::retrieve_file ${u:chrdedupsortedbam} ]
    turbine::c::log [ list exec: __v:samtoolsdir:9 "index" ${v:t:354} [ dict create ] ]
    turbine::exec_external ${v:samtoolsdir:9} [ dict create ] "index" ${v:t:354}
    turbine::rule [ list ${t:388} ${t:462} ${t:464} ${t:466} ${u:realparms} ] [ list __entry-chain11 ${t:388} ${t:462} ${t:464} ${t:466} ${t:501} ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:samtoolsdir:9} ${v:t:354} ${v:t:357} ${v:t:360} ${v:t:363} ${v:t:366} ${v:t:369} ${v:t:485} ${v:t:533} ${u:chrdedupsortedbam} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:intervals} ${u:ploidy} ${u:qcfile} ${u:realignedbam} ${u:realparms} ${u:recalibratedbam} ${u:recalparmsindels} ${u:recalreport} ]
}


proc __entry-chain11 { t:388 t:462 t:464 t:466 t:501 v:VarcallDir v:alias:sampleName v:chr v:samtoolsdir:9 v:t:354 v:t:357 v:t:360 v:t:363 v:t:366 v:t:369 v:t:485 v:t:533 u:chrdedupsortedbam u:chromosomes_processing_done u:gvcfvariant u:indices u:intervals u:ploidy u:qcfile u:realignedbam u:realparms u:recalibratedbam u:recalparmsindels u:recalreport } {
    # Var: $string v:javadir:1 RENAMED [$string:__v:javadir] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():9:121
    # Var: $string v:gatkdir RENAMED [$string:__v:gatkdir] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():9:121
    # Var: $string v:reference RENAMED [$string:__v:reference] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():9:121
    # Var: $string$[int] v:known RENAMED [$string$[int]:__v:known] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():9:121
    # Var: $int v:thr RENAMED [$int:__v:thr] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():9:121
    # Var: $file v:inputFile:9 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():9:121
    # Var: $file v:outputfile:1 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():9:121
    set v:javadir:1 [ turbine::retrieve_string ${t:462} CACHED 1 ]
    set v:gatkdir [ turbine::retrieve_string ${t:464} CACHED 1 ]
    set v:reference [ turbine::retrieve_string ${t:466} CACHED 1 ]
    set v:known [ turbine::unpack_args ${u:realparms} 1 string ]
    set v:thr [ turbine::retrieve_integer ${t:388} CACHED 1 ]
    set v:inputFile:9 [ turbine::retrieve_file ${u:chrdedupsortedbam} ]
    set tcltmp:init_rc 2
    set v:outputfile:1 [ turbine::create_local_file_ref ${v:t:363} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx8g" "-jar" ${v:gatkdir} "-T" "RealignerTargetCreator" "-R" ${v:reference} "-I" ${v:t:354} {*}${v:known} "-nt" ${v:thr} "-o" ${v:t:363} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx8g" "-jar" ${v:gatkdir} "-T" "RealignerTargetCreator" "-R" ${v:reference} "-I" ${v:t:354} {*}${v:known} "-nt" ${v:thr} "-o" ${v:t:363}
    turbine::store_file ${u:intervals} v:outputfile:1 0
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list IndelRealigner-app-leaf1 ${t:501} ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:gatkdir} ${v:javadir:1} ${v:known} ${v:reference} ${v:samtoolsdir:9} ${v:t:354} ${v:t:357} ${v:t:360} ${v:t:363} ${v:t:366} ${v:t:369} ${v:t:485} ${v:t:533} ${v:thr} ${u:chrdedupsortedbam} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:intervals} ${u:ploidy} ${u:qcfile} ${u:realignedbam} ${u:recalibratedbam} ${u:recalparmsindels} ${u:recalreport} ]
    turbine::reset_priority
    turbine::decr_local_file_refcount v:outputfile:1
    turbine::read_refcount_decr ${u:realparms} 1
}


proc IndelRealigner-app-leaf1 { t:501 v:VarcallDir v:alias:sampleName v:chr v:gatkdir v:javadir:1 v:known v:reference v:samtoolsdir:9 v:t:354 v:t:357 v:t:360 v:t:363 v:t:366 v:t:369 v:t:485 v:t:533 v:thr u:chrdedupsortedbam u:chromosomes_processing_done u:gvcfvariant u:indices u:intervals u:ploidy u:qcfile u:realignedbam u:recalibratedbam u:recalparmsindels u:recalreport } {
    # Var: $file v:inputFile:13 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:IndelRealigner():14:133
    # Var: $file v:intervals RENAMED [$file:__v:intervals] ./pipelinefunctions/realign_varcall_by_chr.swift:IndelRealigner():14:133
    # Var: $file v:outputfile:3 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:IndelRealigner():14:133
    set v:inputFile:13 [ turbine::retrieve_file ${u:chrdedupsortedbam} CACHED 1 ]
    set v:intervals [ turbine::retrieve_file ${u:intervals} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:3 [ turbine::create_local_file_ref ${v:t:357} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx8g" "-jar" ${v:gatkdir} "-T" "IndelRealigner" "-R" ${v:reference} "-I" ${v:t:354} {*}${v:known} "--targetIntervals" ${v:t:363} "-o" ${v:t:357} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx8g" "-jar" ${v:gatkdir} "-T" "IndelRealigner" "-R" ${v:reference} "-I" ${v:t:354} {*}${v:known} "--targetIntervals" ${v:t:363} "-o" ${v:t:357}
    turbine::store_file ${u:realignedbam} v:outputfile:3 0
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-chain12 ${v:alias:sampleName} ${v:samtoolsdir:9} ${v:t:357} ${v:t:485} ${u:qcfile} ]
    turbine::reset_priority
    turbine::rule [ list ${t:501} ${u:recalparmsindels} ] [ list BaseRecalibrator-app-leaf1 ${t:501} ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:gatkdir} ${v:javadir:1} ${v:reference} ${v:samtoolsdir:9} ${v:t:357} ${v:t:360} ${v:t:366} ${v:t:369} ${v:t:533} ${v:thr} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:ploidy} ${u:qcfile} ${u:realignedbam} ${u:recalibratedbam} ${u:recalparmsindels} ${u:recalreport} ]
    turbine::decr_local_file_refcount v:outputfile:3
}


proc __entry-chain12 { v:alias:sampleName v:samtoolsdir:9 v:t:357 v:t:485 u:qcfile } {
    # Var: $int v:numAlignments:7 RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:475 VALUE_OF [boolean:__t:475]
    # Var: $boolean v:t:483 VALUE_OF [boolean:__t:483]
    # Var: $void v:t:482 VALUE_OF [void:__t:482]
    set v:numAlignments:7 [ alignment::samtools_view ${v:samtoolsdir:9} ${v:t:357} ]
    set v:t:475 [ expr { ${v:numAlignments:7} == 0 } ]
    set v:t:483 [ expr { ${v:numAlignments:7} > 0 } ]
    turbine::assert_impl ${v:t:483} ${v:t:485}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if14 ${v:alias:sampleName} ${v:t:357} ${v:t:475} ${u:qcfile} ]
    turbine::reset_priority
}


proc __entry-if14 { v:alias:sampleName v:t:357 v:t:475 u:qcfile } {
    if { ${v:t:475} } {
        # Var: string t:477 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():395:18
        # Var: $string v:t:477 VALUE_OF [string:__t:477]
        lassign [ adlb::multicreate [ list string 1 1 158 ] ] t:477
        turbine::c::log "allocated t:477=<${t:477}>"
        set v:t:477 "${v:alias:sampleName}\tREALIGNMENT\tFAIL\tGATK: IndelRealigner command did not produce alignments for ${v:t:357}\n"
        turbine::store_string ${t:477} ${v:t:477}
        f:echo ${u:qcfile} ${t:477} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:477} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc BaseRecalibrator-app-leaf1 { t:501 v:VarcallDir v:alias:sampleName v:chr v:gatkdir v:javadir:1 v:reference v:samtoolsdir:9 v:t:357 v:t:360 v:t:366 v:t:369 v:t:533 v:thr u:chromosomes_processing_done u:gvcfvariant u:indices u:ploidy u:qcfile u:realignedbam u:recalibratedbam u:recalparmsindels u:recalreport } {
    # Var: $string v:dbsnp RENAMED [$string:__v:dbsnp] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():19:143
    # Var: $string$[int] v:knownindels RENAMED [$string$[int]:__v:knownindels] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():19:143
    # Var: $file v:inputFile:14 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():19:143
    # Var: $file v:outputfile:4 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():19:143
    set v:dbsnp [ turbine::retrieve_string ${t:501} CACHED 1 ]
    set v:knownindels [ turbine::unpack_args ${u:recalparmsindels} 1 string ]
    set v:inputFile:14 [ turbine::retrieve_file ${u:realignedbam} ]
    set tcltmp:init_rc 2
    set v:outputfile:4 [ turbine::create_local_file_ref ${v:t:366} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx16g" "-jar" ${v:gatkdir} "-T" "BaseRecalibrator" "-R" ${v:reference} "-I" ${v:t:357} "-knownSites" ${v:dbsnp} {*}${v:knownindels} "-nct" ${v:thr} "-o" ${v:t:366} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx16g" "-jar" ${v:gatkdir} "-T" "BaseRecalibrator" "-R" ${v:reference} "-I" ${v:t:357} "-knownSites" ${v:dbsnp} {*}${v:knownindels} "-nct" ${v:thr} "-o" ${v:t:366}
    turbine::store_file ${u:recalreport} v:outputfile:4 0
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-chain13 ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:dbsnp} ${v:gatkdir} ${v:javadir:1} ${v:reference} ${v:samtoolsdir:9} ${v:t:357} ${v:t:360} ${v:t:366} ${v:t:369} ${v:t:533} ${v:thr} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:ploidy} ${u:qcfile} ${u:realignedbam} ${u:recalibratedbam} ${u:recalreport} ]
    turbine::reset_priority
    turbine::decr_local_file_refcount v:outputfile:4
    turbine::read_refcount_decr ${u:recalparmsindels} 1
}


proc __entry-chain13 { v:VarcallDir v:alias:sampleName v:chr v:dbsnp v:gatkdir v:javadir:1 v:reference v:samtoolsdir:9 v:t:357 v:t:360 v:t:366 v:t:369 v:t:533 v:thr u:chromosomes_processing_done u:gvcfvariant u:indices u:ploidy u:qcfile u:realignedbam u:recalibratedbam u:recalreport } {
    # Var: $file v:inputFile:12 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:PrintReads():24:129
    # Var: $file v:recalreport RENAMED [$file:__v:recalreport] ./pipelinefunctions/realign_varcall_by_chr.swift:PrintReads():24:129
    # Var: $file v:outputfile:2 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:PrintReads():24:129
    # Var: $int v:ploidy RENAMED [$int:__v:ploidy] ./pipelinefunctions/realign_varcall_by_chr.swift:HaplotypeCaller():29:455
    set v:inputFile:12 [ turbine::retrieve_file ${u:realignedbam} CACHED 1 ]
    set v:recalreport [ turbine::retrieve_file ${u:recalreport} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:2 [ turbine::create_local_file_ref ${v:t:360} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx16g" "-jar" ${v:gatkdir} "-T" "PrintReads" "-R" ${v:reference} "-I" ${v:t:357} "-BQSR" ${v:t:366} "-nct" ${v:thr} "--out" ${v:t:360} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx16g" "-jar" ${v:gatkdir} "-T" "PrintReads" "-R" ${v:reference} "-I" ${v:t:357} "-BQSR" ${v:t:366} "-nct" ${v:thr} "--out" ${v:t:360}
    turbine::store_file ${u:recalibratedbam} v:outputfile:2 0
    set v:ploidy [ turbine::retrieve_integer ${u:ploidy} CACHED 1 ]
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-chain14 ${v:alias:sampleName} ${v:samtoolsdir:9} ${v:t:360} ${v:t:533} ${u:qcfile} ]
    turbine::reset_priority
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list HaplotypeCaller-app-leaf1 ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:dbsnp} ${v:gatkdir} ${v:javadir:1} ${v:ploidy} ${v:reference} ${v:t:360} ${v:t:369} ${v:thr} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:recalibratedbam} ]
    turbine::reset_priority
    turbine::decr_local_file_refcount v:outputfile:2
}


proc __entry-chain14 { v:alias:sampleName v:samtoolsdir:9 v:t:360 v:t:533 u:qcfile } {
    # Var: $int v:numAlignments:8 RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:523 VALUE_OF [boolean:__t:523]
    # Var: $boolean v:t:531 VALUE_OF [boolean:__t:531]
    # Var: $void v:t:530 VALUE_OF [void:__t:530]
    set v:numAlignments:8 [ alignment::samtools_view ${v:samtoolsdir:9} ${v:t:360} ]
    set v:t:523 [ expr { ${v:numAlignments:8} == 0 } ]
    set v:t:531 [ expr { ${v:numAlignments:8} > 0 } ]
    turbine::assert_impl ${v:t:531} ${v:t:533}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if15 ${v:alias:sampleName} ${v:t:360} ${v:t:523} ${u:qcfile} ]
    turbine::reset_priority
}


proc __entry-if15 { v:alias:sampleName v:t:360 v:t:523 u:qcfile } {
    if { ${v:t:523} } {
        # Var: string t:525 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():419:18
        # Var: $string v:t:525 VALUE_OF [string:__t:525]
        lassign [ adlb::multicreate [ list string 1 1 159 ] ] t:525
        turbine::c::log "allocated t:525=<${t:525}>"
        set v:t:525 "${v:alias:sampleName}\tRECALIBRATION\tFAIL\tGATK: BQSR Recalibration command did not produce alignments for ${v:t:360}\n"
        turbine::store_string ${t:525} ${v:t:525}
        f:echo ${u:qcfile} ${t:525} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:525} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc HaplotypeCaller-app-leaf1 { v:VarcallDir v:alias:sampleName v:chr v:dbsnp v:gatkdir v:javadir:1 v:ploidy v:reference v:t:360 v:t:369 v:thr u:chromosomes_processing_done u:gvcfvariant u:indices u:recalibratedbam } {
    # Var: $file v:inputFile:15 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:HaplotypeCaller():29:455
    # Var: $file v:outputfile:5 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:HaplotypeCaller():29:455
    # Var: *rw(file)[int] t:558 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():438:30
    # Var: string t:559 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():438:35
    # Var: $string$[int] v:indices VALUE_OF [string[int]:indices]
    # Var: $int v:t:556 VALUE_OF [int:__t:556]
    # Var: $string v:t:559 VALUE_OF [string:__t:559]
    lassign [ adlb::multicreate [ list container integer file_ref 1 1 160 ] [ list string 1 1 161 ] ] t:558 t:559
    turbine::c::log "allocated t:558=<${t:558}> t:559=<${t:559}>"
    set v:inputFile:15 [ turbine::retrieve_file ${u:recalibratedbam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:5 [ turbine::create_local_file_ref ${v:t:369} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx8g" "-jar" ${v:gatkdir} "-T" "HaplotypeCaller" "-R" ${v:reference} "-I" ${v:t:360} "--dbsnp" ${v:dbsnp} "-o" ${v:t:369} "--emitRefConfidence" "GVCF" "-gt_mode" "DISCOVERY" "-A" "Coverage" "-A" "FisherStrand" "-A" "StrandOddsRatio" "-A" "HaplotypeScore" "-A" "MappingQualityRankSumTest" "-A" "QualByDepth" "-A" "RMSMappingQuality" "-A" "ReadPosRankSumTest" "-stand_call_conf" 30 "-stand_emit_conf" 30 "--sample_ploidy" ${v:ploidy} "-nt" 1 "-nct" ${v:thr} "-L" ${v:chr} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx8g" "-jar" ${v:gatkdir} "-T" "HaplotypeCaller" "-R" ${v:reference} "-I" ${v:t:360} "--dbsnp" ${v:dbsnp} "-o" ${v:t:369} "--emitRefConfidence" "GVCF" "-gt_mode" "DISCOVERY" "-A" "Coverage" "-A" "FisherStrand" "-A" "StrandOddsRatio" "-A" "HaplotypeScore" "-A" "MappingQualityRankSumTest" "-A" "QualByDepth" "-A" "RMSMappingQuality" "-A" "ReadPosRankSumTest" "-stand_call_conf" 30 "-stand_emit_conf" 30 "--sample_ploidy" ${v:ploidy} "-nt" 1 "-nct" ${v:thr} "-L" ${v:chr}
    turbine::store_file ${u:gvcfvariant} v:outputfile:5 0
    set v:indices [ adlb::enumerate ${u:indices} dict all 0 1 ]
    set v:t:556 [ dict size ${v:indices} ]
    turbine::glob [ list ${t:558} ] [ list ${t:559} ]
    set v:t:559 "${v:VarcallDir}${v:alias:sampleName}.*.raw.g.vcf"
    turbine::store_string ${t:559} ${v:t:559}
    turbine::rule [ list ${t:558} ] "__entry-call_foreign-size-1 ${t:558} ${v:t:556} ${u:chromosomes_processing_done}"
    turbine::decr_local_file_refcount v:outputfile:5
}


proc __entry-call_foreign-size-1 { t:558 v:t:556 u:chromosomes_processing_done } {
    # Var: file$[int] v:t:558 VALUE_OF [*rw(file)[int]:__t:558]
    # Var: $int v:t:557 VALUE_OF [int:__t:557]
    # Var: $boolean v:t:555 VALUE_OF [boolean:__t:555]
    set v:t:558 [ adlb::enumerate ${t:558} dict all 0 0 ]
    set v:t:557 [ dict size ${v:t:558} ]
    set v:t:555 [ expr { ${v:t:556} == ${v:t:557} } ]
    if { ${v:t:555} } {
        turbine::store_integer ${u:chromosomes_processing_done} 1
    }
    turbine::read_refcount_decr ${t:558} 1
}


proc __entry-chain10 { v:alias:sampleName v:samtoolsdir:9 v:t:354 v:t:405 u:qcfile } {
    # Var: $int v:numAlignments:6 RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:396 VALUE_OF [boolean:__t:396]
    # Var: $boolean v:t:403 VALUE_OF [boolean:__t:403]
    # Var: $void v:t:402 VALUE_OF [void:__t:402]
    set v:numAlignments:6 [ alignment::samtools_view ${v:samtoolsdir:9} ${v:t:354} ]
    set v:t:396 [ expr { ${v:numAlignments:6} == 0 } ]
    set v:t:403 [ expr { ${v:numAlignments:6} > 0 } ]
    turbine::assert_impl ${v:t:403} ${v:t:405}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if13 ${v:alias:sampleName} ${v:t:354} ${v:t:396} ${u:qcfile} ]
    turbine::reset_priority
}


proc __entry-if13 { v:alias:sampleName v:t:354 v:t:396 u:qcfile } {
    if { ${v:t:396} } {
        # Var: string t:398 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:__entry():354:18
        # Var: $string v:t:398 VALUE_OF [string:__t:398]
        lassign [ adlb::multicreate [ list string 1 1 162 ] ] t:398
        turbine::c::log "allocated t:398=<${t:398}>"
        set v:t:398 "${v:alias:sampleName}\tREALIGNMENT\tFAIL\tsamtools command did not produce alignments for ${v:t:354}\n"
        turbine::store_string ${t:398} ${v:t:398}
        f:echo ${u:qcfile} ${t:398} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:398} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-async_op-parse_int-6 { t:388 t:389 } {
    # Var: $string v:t:389 VALUE_OF [string:__t:389]
    # Var: $int v:t:388 VALUE_OF [int:__t:388]
    set v:t:389 [ turbine::retrieve_string ${t:389} CACHED 1 ]
    set v:t:388 [ turbine::parse_int_impl ${v:t:389} 10 ]
    turbine::store_integer ${t:388} ${v:t:388}
}


proc __entry-optmerged-13 { t:409 t:410 t:413 t:428 t:466 t:470 t:501 t:505 } {
    # Var: $string v:t:410:2 VALUE_OF [string:__t:410]
    set v:t:410:2 [ turbine::retrieve_string ${t:410} CACHED 1 ]
    turbine::rule [ list ${t:470} ] [ list __entry-async_op-strcat-11 ${t:466} ${t:470} ${v:t:410:2} ]
    turbine::rule [ list ${t:505} ] [ list __entry-async_op-strcat-12 ${t:501} ${t:505} ${v:t:410:2} ]
    turbine::rule [ list ${t:413} ] [ list __entry-optmerged-14 ${t:409} ${t:413} ${t:428} ${v:t:410:2} ]
}


proc __entry-async_op-strcat-11 { t:466 t:470 v:t:410:2 } {
    # Var: $string v:t:470 VALUE_OF [string:__t:470]
    # Var: $string v:t:466 VALUE_OF [string:__t:466]
    set v:t:470 [ turbine::retrieve_string ${t:470} CACHED 1 ]
    set v:t:466 "${v:t:410:2}/${v:t:470}"
    turbine::store_string ${t:466} ${v:t:466}
}


proc __entry-async_op-strcat-12 { t:501 t:505 v:t:410:2 } {
    # Var: $string v:t:505 VALUE_OF [string:__t:505]
    # Var: $string v:t:501 VALUE_OF [string:__t:501]
    set v:t:505 [ turbine::retrieve_string ${t:505} CACHED 1 ]
    set v:t:501 "${v:t:410:2}/${v:t:505}"
    turbine::store_string ${t:501} ${v:t:501}
}


proc __entry-optmerged-14 { t:409 t:413 t:428 v:t:410:2 } {
    # Var: $string v:t:413 VALUE_OF [string:__t:413]
    # Var: $string v:t:409 VALUE_OF [string:__t:409]
    # Var: $string v:t:429 VALUE_OF [string:__t:429]
    # Var: $string v:t:428 VALUE_OF [string:__t:428]
    set v:t:413 [ turbine::retrieve_string ${t:413} CACHED 1 ]
    set v:t:409 "${v:t:410:2}/${v:t:413}/"
    turbine::store_string ${t:409} ${v:t:409}
    set v:t:429 "${v:t:410:2}/${v:t:413}"
    set v:t:428 "${v:t:429}/"
    turbine::store_string ${t:428} ${v:t:428}
}


proc samtools_flagstat-app-leaf1 { t:306 v:t:49 v:t:78 u:dedupsortedbam u:flagstats u:stat } {
    # Var: $string v:samtoolsdir:11 RENAMED [$string:__v:samtoolsdir] ./pipelinefunctions/align_dedup.swift:samtools_flagstat():51:42
    # Var: $file v:inputFile:18 RENAMED [$file:__v:inputFile] ./pipelinefunctions/align_dedup.swift:samtools_flagstat():51:42
    # Var: $file v:output:2 RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:samtools_flagstat():51:42
    # Var: $file v:flagstats VALUE_OF [file:flagstats]
    # Var: $string$[int] v:stat VALUE_OF [string[int]:stat]
    set v:samtoolsdir:11 [ turbine::retrieve_string ${t:306} CACHED 1 ]
    set v:inputFile:18 [ turbine::retrieve_file ${u:dedupsortedbam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output:2 [ turbine::create_local_file_ref ${v:t:78} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:samtoolsdir:11 "flagstat" ${v:t:49} [ dict create "stdout" ${v:t:78} ] ]
    turbine::exec_external ${v:samtoolsdir:11} [ dict create "stdout" ${v:t:78} ] "flagstat" ${v:t:49}
    turbine::store_file ${u:flagstats} v:output:2 0
    set v:flagstats [ turbine::retrieve_file ${u:flagstats} CACHED 1 ]
    set v:stat [ turbine::file_lines_impl ${v:flagstats} ]
    turbine::build_rec ${u:stat} ${v:stat} [ list container integer string ] 0 1
    turbine::decr_local_file_refcount v:output:2
}


proc __entry-optmerged-15 { t:639 t:81 v:alias:sampleName u:alignedsam u:chr_bamListfile u:chr_vcfListfile } {
    # Var: $string v:t:639:1 VALUE_OF [string:__t:639]
    # Var: $string v:t:81 VALUE_OF [string:__t:81]
    # Var: $string v:t:86 VALUE_OF [string:__t:86]
    # Var: $string v:t:91 VALUE_OF [string:__t:91]
    set v:t:639:1 [ turbine::retrieve_string ${t:639} CACHED 1 ]
    set v:t:81 "${v:t:639:1}/align/${v:alias:sampleName}.nodups.sam"
    turbine::store_string ${t:81} ${v:t:81}
    set v:t:86 "${v:t:639:1}/${v:alias:sampleName}.chr_bamList.txt"
    set v:t:91 "${v:t:639:1}/${v:alias:sampleName}.chr_vcfList.txt"
    turbine::set_filename_val ${u:alignedsam} ${v:t:81}
    turbine::set_filename_val ${u:chr_bamListfile} ${v:t:86}
    turbine::set_filename_val ${u:chr_vcfListfile} ${v:t:91}
}


proc f:align { u:outputSam u:read1 u:read2 u:rgheader } {
    turbine::c::log "function: align"
    # Var: string[string] u:vars /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:62:0
    global u:vars
    # Var: string t:2 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:align():38:5
    lassign [ adlb::multicreate [ list string 1 1 163 ] ] t:2
    turbine::c::log "allocated t:2=<${t:2}>"
    turbine::container_reference ${u:vars} "ALIGNERTOOL" ${t:2} string
    turbine::rule [ list ${t:2} ] "align-async_op-eq_string ${t:2} {${u:outputSam}} {${u:read1}} {${u:read2}} {${u:rgheader}}"
}


proc align-async_op-eq_string { t:2 u:outputSam u:read1 u:read2 u:rgheader } {
    # Var: $string v:t:2 VALUE_OF [string:__t:2]
    # Var: $boolean v:t:1 VALUE_OF [boolean:__t:1]
    set v:t:2 [ turbine::retrieve_string ${t:2} CACHED 1 ]
    set v:t:1 [ string equal ${v:t:2} "BWAMEM" ]
    if { ${v:t:1} } {
        # Var: string[string] u:vars /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:62:0
        global u:vars
        # Var: string t:5 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:align():40:22
        # Var: string t:7 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:align():40:52
        # Var: string[int] t:9 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:align():41:9
        # Var: string t:10 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:align():41:9
        # Var: int t:12 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:align():41:32
        # Var: string t:13 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:align():41:43
        lassign [ adlb::multicreate [ list string 1 1 164 ] [ list string 1 1 165 ] [ list container integer string 1 1 166 ] [ list string 1 1 167 ] [ list integer 1 1 168 ] [ list string 1 1 169 ] ] t:5 t:7 t:9 t:10 t:12 t:13
        turbine::c::log "allocated t:5=<${t:5}> t:7=<${t:7}> t:9=<${t:9}> t:10=<${t:10}> t:12=<${t:12}>"
        turbine::c::log "allocated t:13=<${t:13}>"
        turbine::container_reference ${u:vars} "BWADIR" ${t:5} string
        turbine::container_reference ${u:vars} "BWAINDEX" ${t:7} string
        turbine::container_reference ${u:vars} "BWAMEMPARAMS" ${t:10} string
        turbine::container_reference ${u:vars} "PBSCORES" ${t:13} string
        f:bwa_mem ${u:outputSam} ${t:5} ${u:read1} ${u:read2} ${t:7} ${t:9} ${t:12} ${u:rgheader} -100 "HARD" "RANK"
        turbine::rule [ list ${t:10} ] "align-arr_copy_in_imm ${t:10} ${t:9}"
        turbine::rule [ list ${t:13} ] "align-async_op-parse_int ${t:12} ${t:13}"
        turbine::read_refcount_decr ${t:9} 1
        turbine::read_refcount_decr ${t:7} 1
        turbine::read_refcount_decr ${t:5} 1
        turbine::read_refcount_decr ${t:12} 1
    } else {
        # Var: string[string] u:vars /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:62:0
        global u:vars
        # Var: string t:15 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:align():45:24
        # Var: string t:17 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:align():45:60
        # Var: string[int] t:19 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:align():46:12
        # Var: string t:20 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:align():46:12
        # Var: int t:22 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:align():46:38
        # Var: string t:23 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/JacobVCPipeline.swift:align():46:49
        lassign [ adlb::multicreate [ list string 1 1 170 ] [ list string 1 1 171 ] [ list container integer string 1 1 172 ] [ list string 1 1 173 ] [ list integer 1 1 174 ] [ list string 1 1 175 ] ] t:15 t:17 t:19 t:20 t:22 t:23
        turbine::c::log "allocated t:15=<${t:15}> t:17=<${t:17}> t:19=<${t:19}> t:20=<${t:20}> t:22=<${t:22}>"
        turbine::c::log "allocated t:23=<${t:23}>"
        turbine::container_reference ${u:vars} "NOVOALIGNDIR" ${t:15} string
        turbine::container_reference ${u:vars} "NOVOALIGNINDEX" ${t:17} string
        turbine::container_reference ${u:vars} "NOVOALIGNPARAMS" ${t:20} string
        turbine::container_reference ${u:vars} "PBSCORES" ${t:23} string
        f:novoalign ${u:outputSam} ${t:15} ${u:read1} ${u:read2} ${t:17} ${t:19} ${t:22} ${u:rgheader} -100 "HARD" "RANK"
        turbine::rule [ list ${t:20} ] "align-arr_copy_in_imm-1 ${t:19} ${t:20}"
        turbine::rule [ list ${t:23} ] "align-async_op-parse_int-1 ${t:22} ${t:23}"
        turbine::read_refcount_decr ${t:19} 1
        turbine::read_refcount_decr ${t:15} 1
        turbine::read_refcount_decr ${t:17} 1
        turbine::read_refcount_decr ${t:22} 1
    }
    turbine::file_read_refcount_decr ${u:outputSam} 1
    turbine::read_refcount_decr ${u:rgheader} 1
    turbine::read_refcount_decr ${u:read2} 1
    turbine::read_refcount_decr ${u:read1} 1
}


proc align-arr_copy_in_imm { t:10 t:9 } {
    # Var: $string v:t:10 VALUE_OF [string:__t:10]
    set v:t:10 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    turbine::array_kv_build ${t:9} [ ::adlb::dict_create 0 ${v:t:10} ] 1 integer string
}


proc align-async_op-parse_int { t:12 t:13 } {
    # Var: $string v:t:13 VALUE_OF [string:__t:13]
    # Var: $int v:t:12 VALUE_OF [int:__t:12]
    set v:t:13 [ turbine::retrieve_string ${t:13} CACHED 1 ]
    set v:t:12 [ turbine::parse_int_impl ${v:t:13} 10 ]
    turbine::store_integer ${t:12} ${v:t:12}
}


proc align-arr_copy_in_imm-1 { t:19 t:20 } {
    # Var: $string v:t:20 VALUE_OF [string:__t:20]
    set v:t:20 [ turbine::retrieve_string ${t:20} CACHED 1 ]
    turbine::array_kv_build ${t:19} [ ::adlb::dict_create 0 ${v:t:20} ] 1 integer string
}


proc align-async_op-parse_int-1 { t:22 t:23 } {
    # Var: $string v:t:23 VALUE_OF [string:__t:23]
    # Var: $int v:t:22 VALUE_OF [int:__t:22]
    set v:t:23 [ turbine::retrieve_string ${t:23} CACHED 1 ]
    set v:t:22 [ turbine::parse_int_impl ${v:t:23} 10 ]
    turbine::store_integer ${t:22} ${v:t:22}
}


proc f:cp { u:o u:i v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: cp"
    # Var: $boolean v:mapped_o OPT_TEMPORARY
    turbine::file_read_refcount_incr ${u:o} 1
    turbine::file_read_refcount_incr ${u:i} 2
    set filename:i [ turbine::get_file_path ${u:i} ]
    set v:mapped_o [ turbine::is_file_mapped ${u:o} ]
    set filename:o [ turbine::get_file_path ${u:o} ]
    if { ${v:mapped_o} } {
    } else {
        # Var: $string optf:o FILENAME_OF [file:o]
        set optf:o [ turbine::mktemp ]
        turbine::set_filename_val ${u:o} ${optf:o}
    }
    turbine::rule [ list ${filename:i} ${filename:o} [ turbine::get_file_td ${u:i} ] ] "cp-app-leaf1 {${filename:i}} {${filename:o}} ${v:mapped_o} {${u:i}} {${u:o}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc cp-app-leaf1 { filename:i filename:o v:mapped_o u:i u:o } {
    # Var: $string v:__filename:i VALUE_OF [string:__filename:i] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:cp():24:9
    # Var: $string v:__filename:o VALUE_OF [string:__filename:o] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:cp():24:9
    # Var: $file v:i VALUE_OF [file:i] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:cp():24:9
    # Var: $file v:o VALUE_OF [file:o] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:cp():24:9
    # Var: $boolean v:3 EXPR_TEMPORARY /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:cp():24:9
    set v:__filename:i [ turbine::retrieve_string ${filename:i} ]
    set v:__filename:o [ turbine::retrieve_string ${filename:o} CACHED 1 ]
    set v:i [ turbine::retrieve_file ${u:i} CACHED 2 ]
    if { ${v:mapped_o} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:o [ turbine::create_local_file_ref ${v:__filename:o} ${tcltmp:init_rc} ${v:mapped_o} ]
    turbine::c::log [ list exec: "cp" ${v:__filename:i} ${v:__filename:o} [ dict create ] ]
    turbine::exec_external "cp" [ dict create ] ${v:__filename:i} ${v:__filename:o}
    set v:3 [ expr { ! ${v:mapped_o} } ]
    turbine::store_file ${u:o} v:o ${v:3}
    turbine::decr_local_file_refcount v:o
}


proc f:sed { u:o u:i u:command v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: sed"
    # Var: $boolean v:mapped_o OPT_TEMPORARY
    turbine::read_refcount_incr ${u:command} 1
    turbine::file_read_refcount_incr ${u:o} 1
    turbine::file_read_refcount_incr ${u:i} 2
    set filename:i [ turbine::get_file_path ${u:i} ]
    set v:mapped_o [ turbine::is_file_mapped ${u:o} ]
    set filename:o [ turbine::get_file_path ${u:o} ]
    if { ${v:mapped_o} } {
    } else {
        # Var: $string optf:o FILENAME_OF [file:o]
        set optf:o [ turbine::mktemp ]
        turbine::set_filename_val ${u:o} ${optf:o}
    }
    turbine::rule [ list ${filename:i} ${filename:o} ${u:command} [ turbine::get_file_td ${u:i} ] ] "sed-app-leaf1 {${filename:i}} {${filename:o}} ${v:mapped_o} {${u:command}} {${u:i}} {${u:o}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc sed-app-leaf1 { filename:i filename:o v:mapped_o u:command u:i u:o } {
    # Var: $string v:command VALUE_OF [string:command] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    # Var: $string v:__filename:i VALUE_OF [string:__filename:i] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    # Var: $string v:__filename:o VALUE_OF [string:__filename:o] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    # Var: $file v:i VALUE_OF [file:i] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    # Var: $file v:o VALUE_OF [file:o] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    # Var: $boolean v:3 EXPR_TEMPORARY /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    set v:command [ turbine::retrieve_string ${u:command} CACHED 1 ]
    set v:__filename:i [ turbine::retrieve_string ${filename:i} ]
    set v:__filename:o [ turbine::retrieve_string ${filename:o} CACHED 1 ]
    set v:i [ turbine::retrieve_file ${u:i} CACHED 2 ]
    if { ${v:mapped_o} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:o [ turbine::create_local_file_ref ${v:__filename:o} ${tcltmp:init_rc} ${v:mapped_o} ]
    turbine::c::log [ list exec: "sed" ${v:command} ${v:__filename:i} [ dict create "stdout" ${v:__filename:o} ] ]
    turbine::exec_external "sed" [ dict create "stdout" ${v:__filename:o} ] ${v:command} ${v:__filename:i}
    set v:3 [ expr { ! ${v:mapped_o} } ]
    turbine::store_file ${u:o} v:o ${v:3}
    turbine::decr_local_file_refcount v:o
}


proc f:echo { u:o u:s v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: echo"
    # Var: $boolean v:mapped_o OPT_TEMPORARY
    turbine::file_read_refcount_incr ${u:o} 1
    turbine::read_refcount_incr ${u:s} 1
    set v:mapped_o [ turbine::is_file_mapped ${u:o} ]
    set filename:o [ turbine::get_file_path ${u:o} ]
    if { ${v:mapped_o} } {
    } else {
        # Var: $string optf:o FILENAME_OF [file:o]
        set optf:o [ turbine::mktemp ]
        turbine::set_filename_val ${u:o} ${optf:o}
    }
    turbine::rule [ list ${filename:o} ${u:s} ] "echo-app-leaf1 {${filename:o}} ${v:mapped_o} {${u:o}} {${u:s}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc echo-app-leaf1 { filename:o v:mapped_o u:o u:s } {
    # Var: $string v:s VALUE_OF [string:s] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:echo():55:19
    # Var: $string v:__filename:o VALUE_OF [string:__filename:o] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:echo():55:19
    # Var: $file v:o VALUE_OF [file:o] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:echo():55:19
    # Var: $boolean v:3 EXPR_TEMPORARY /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:echo():55:19
    set v:s [ turbine::retrieve_string ${u:s} CACHED 1 ]
    set v:__filename:o [ turbine::retrieve_string ${filename:o} CACHED 1 ]
    if { ${v:mapped_o} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:o [ turbine::create_local_file_ref ${v:__filename:o} ${tcltmp:init_rc} ${v:mapped_o} ]
    turbine::c::log [ list exec: "echo" ${v:s} [ dict create "stdout" ${v:__filename:o} ] ]
    turbine::exec_external "echo" [ dict create "stdout" ${v:__filename:o} ] ${v:s}
    set v:3 [ expr { ! ${v:mapped_o} } ]
    turbine::store_file ${u:o} v:o ${v:3}
    turbine::decr_local_file_refcount v:o
}


proc f:bwa_mem { u:output u:bwadir u:read1 u:read2 u:INDEX u:bwamemparams u:PBSCORES u:rgheader v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: bwa_mem"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::read_refcount_incr ${u:read1} 1
    turbine::read_refcount_incr ${u:read2} 1
    turbine::read_refcount_incr ${u:bwamemparams} 1
    turbine::read_refcount_incr ${u:rgheader} 1
    turbine::read_refcount_incr ${u:INDEX} 1
    turbine::read_refcount_incr ${u:bwadir} 1
    turbine::read_refcount_incr ${u:PBSCORES} 1
    turbine::file_read_refcount_incr ${u:output} 1
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${u:INDEX} ${u:PBSCORES} ${filename:output} ${u:bwadir} ${u:bwamemparams} ${u:read1} ${u:read2} ${u:rgheader} ] "bwa_mem-app-leaf1 {${u:INDEX}} {${u:PBSCORES}} {${filename:output}} ${v:mapped_output} {${u:bwadir}} {${u:bwamemparams}} {${u:output}} {${u:read1}} {${u:read2}} {${u:rgheader}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc bwa_mem-app-leaf1 { u:INDEX u:PBSCORES filename:output v:mapped_output u:bwadir u:bwamemparams u:output u:read1 u:read2 u:rgheader } {
    # Var: $string v:bwadir VALUE_OF [string:bwadir] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string$[int] v:bwamemparams VALUE_OF [string[int]:bwamemparams] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $int v:PBSCORES VALUE_OF [int:PBSCORES] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:rgheader VALUE_OF [string:rgheader] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:INDEX VALUE_OF [string:INDEX] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:read1 VALUE_OF [string:read1] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:read2 VALUE_OF [string:read2] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $file v:output VALUE_OF [file:output] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $boolean v:3 EXPR_TEMPORARY ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    set v:bwadir [ turbine::retrieve_string ${u:bwadir} CACHED 1 ]
    set v:bwamemparams [ turbine::unpack_args ${u:bwamemparams} 1 string ]
    set v:PBSCORES [ turbine::retrieve_integer ${u:PBSCORES} CACHED 1 ]
    set v:rgheader [ turbine::retrieve_string ${u:rgheader} CACHED 1 ]
    set v:INDEX [ turbine::retrieve_string ${u:INDEX} CACHED 1 ]
    set v:read1 [ turbine::retrieve_string ${u:read1} CACHED 1 ]
    set v:read2 [ turbine::retrieve_string ${u:read2} CACHED 1 ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: __v:bwadir "mem" "-M" {*}${v:bwamemparams} "-t" ${v:PBSCORES} "-R" ${v:rgheader} ${v:INDEX} ${v:read1} ${v:read2} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external ${v:bwadir} [ dict create "stdout" ${v:__filename:output} ] "mem" "-M" {*}${v:bwamemparams} "-t" ${v:PBSCORES} "-R" ${v:rgheader} ${v:INDEX} ${v:read1} ${v:read2}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
    turbine::read_refcount_decr ${u:bwamemparams} 1
}


proc f:novoalign { u:output u:novoaligndir u:read1 u:read2 u:INDEX u:novoalignparams u:PBSCORES u:rgheader v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: novoalign"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::read_refcount_incr ${u:read1} 1
    turbine::read_refcount_incr ${u:read2} 1
    turbine::read_refcount_incr ${u:rgheader} 1
    turbine::read_refcount_incr ${u:INDEX} 1
    turbine::read_refcount_incr ${u:novoalignparams} 1
    turbine::read_refcount_incr ${u:novoaligndir} 1
    turbine::read_refcount_incr ${u:PBSCORES} 1
    turbine::file_read_refcount_incr ${u:output} 1
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${u:INDEX} ${u:PBSCORES} ${filename:output} ${u:novoaligndir} ${u:novoalignparams} ${u:read1} ${u:read2} ${u:rgheader} ] "novoalign-app-leaf1 {${u:INDEX}} {${u:PBSCORES}} {${filename:output}} ${v:mapped_output} {${u:novoaligndir}} {${u:novoalignparams}} {${u:output}} {${u:read1}} {${u:read2}} {${u:rgheader}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc novoalign-app-leaf1 { u:INDEX u:PBSCORES filename:output v:mapped_output u:novoaligndir u:novoalignparams u:output u:read1 u:read2 u:rgheader } {
    # Var: $string v:novoaligndir VALUE_OF [string:novoaligndir] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $int v:PBSCORES VALUE_OF [int:PBSCORES] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $string v:INDEX VALUE_OF [string:INDEX] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $string v:read1 VALUE_OF [string:read1] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $string v:read2 VALUE_OF [string:read2] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $string v:rgheader VALUE_OF [string:rgheader] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $file v:output VALUE_OF [file:output] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $boolean v:3 EXPR_TEMPORARY ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    set v:novoaligndir [ turbine::retrieve_string ${u:novoaligndir} CACHED 1 ]
    set v:PBSCORES [ turbine::retrieve_integer ${u:PBSCORES} CACHED 1 ]
    set v:INDEX [ turbine::retrieve_string ${u:INDEX} CACHED 1 ]
    set v:read1 [ turbine::retrieve_string ${u:read1} CACHED 1 ]
    set v:read2 [ turbine::retrieve_string ${u:read2} CACHED 1 ]
    set v:rgheader [ turbine::retrieve_string ${u:rgheader} CACHED 1 ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: __v:novoaligndir "-c" ${v:PBSCORES} "-d" ${v:INDEX} "-f" ${v:read1} ${v:read2} "-o" "SAM" ${v:rgheader} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external ${v:novoaligndir} [ dict create "stdout" ${v:__filename:output} ] "-c" ${v:PBSCORES} "-d" ${v:INDEX} "-f" ${v:read1} ${v:read2} "-o" "SAM" ${v:rgheader}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
    turbine::read_refcount_decr ${u:novoalignparams} 1
}


proc f:samtools_view { u:output u:samtoolsdir u:inputFile u:thr u:args v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: samtools_view"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::read_refcount_incr ${u:thr} 1
    turbine::file_read_refcount_incr ${u:inputFile} 2
    turbine::file_read_refcount_incr ${u:output} 1
    turbine::read_refcount_incr ${u:samtoolsdir} 1
    turbine::read_refcount_incr ${u:args} 1
    set filename:inputFile [ turbine::get_file_path ${u:inputFile} ]
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${filename:inputFile} ${filename:output} ${u:args} [ turbine::get_file_td ${u:inputFile} ] ${u:samtoolsdir} ${u:thr} ] "samtools_view-app-leaf1 {${filename:inputFile}} {${filename:output}} ${v:mapped_output} {${u:args}} {${u:inputFile}} {${u:output}} {${u:samtoolsdir}} {${u:thr}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc samtools_view-app-leaf1 { filename:inputFile filename:output v:mapped_output u:args u:inputFile u:output u:samtoolsdir u:thr } {
    # Var: $string v:samtoolsdir VALUE_OF [string:samtoolsdir] ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    # Var: $int v:thr VALUE_OF [int:thr] ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    # Var: $string v:__filename:inputFile VALUE_OF [string:__filename:inputFile] ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    # Var: $string$[int] v:args VALUE_OF [string[int]:args] ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    # Var: $file v:inputFile VALUE_OF [file:inputFile] ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    # Var: $file v:output VALUE_OF [file:output] ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    # Var: $boolean v:3 EXPR_TEMPORARY ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    set v:samtoolsdir [ turbine::retrieve_string ${u:samtoolsdir} CACHED 1 ]
    set v:thr [ turbine::retrieve_integer ${u:thr} CACHED 1 ]
    set v:__filename:inputFile [ turbine::retrieve_string ${filename:inputFile} ]
    set v:args [ turbine::unpack_args ${u:args} 1 string ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    set v:inputFile [ turbine::retrieve_file ${u:inputFile} CACHED 2 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: __v:samtoolsdir "view" "-@" ${v:thr} "-bS" ${v:__filename:inputFile} {*}${v:args} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external ${v:samtoolsdir} [ dict create "stdout" ${v:__filename:output} ] "view" "-@" ${v:thr} "-bS" ${v:__filename:inputFile} {*}${v:args}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
    turbine::read_refcount_decr ${u:args} 1
}


proc f:novosort { u:output u:novosortdir u:inputFile u:tmpdir u:thr u:sortoptions v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: novosort"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::read_refcount_incr ${u:thr} 1
    turbine::read_refcount_incr ${u:novosortdir} 1
    turbine::read_refcount_incr ${u:tmpdir} 1
    turbine::read_refcount_incr ${u:sortoptions} 1
    turbine::file_read_refcount_incr ${u:inputFile} 2
    turbine::file_read_refcount_incr ${u:output} 1
    set filename:inputFile [ turbine::get_file_path ${u:inputFile} ]
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${filename:inputFile} ${filename:output} [ turbine::get_file_td ${u:inputFile} ] ${u:novosortdir} ${u:sortoptions} ${u:thr} ${u:tmpdir} ] "novosort-app-leaf1 {${filename:inputFile}} {${filename:output}} ${v:mapped_output} {${u:inputFile}} {${u:novosortdir}} {${u:output}} {${u:sortoptions}} {${u:thr}} {${u:tmpdir}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc novosort-app-leaf1 { filename:inputFile filename:output v:mapped_output u:inputFile u:novosortdir u:output u:sortoptions u:thr u:tmpdir } {
    # Var: $string v:novosortdir VALUE_OF [string:novosortdir] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $string v:tmpdir VALUE_OF [string:tmpdir] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $int v:thr VALUE_OF [int:thr] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $string v:__filename:inputFile VALUE_OF [string:__filename:inputFile] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $string$[int] v:sortoptions VALUE_OF [string[int]:sortoptions] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $file v:inputFile VALUE_OF [file:inputFile] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $file v:output VALUE_OF [file:output] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $boolean v:3 EXPR_TEMPORARY ./pipelinefunctions/align_dedup.swift:novosort():33:79
    set v:novosortdir [ turbine::retrieve_string ${u:novosortdir} CACHED 1 ]
    set v:tmpdir [ turbine::retrieve_string ${u:tmpdir} CACHED 1 ]
    set v:thr [ turbine::retrieve_integer ${u:thr} CACHED 1 ]
    set v:__filename:inputFile [ turbine::retrieve_string ${filename:inputFile} ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    set v:sortoptions [ turbine::unpack_args ${u:sortoptions} 1 string ]
    set v:inputFile [ turbine::retrieve_file ${u:inputFile} CACHED 2 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: __v:novosortdir "--index" "--tmpdir" ${v:tmpdir} "--threads" ${v:thr} ${v:__filename:inputFile} "-o" ${v:__filename:output} {*}${v:sortoptions} [ dict create ] ]
    turbine::exec_external ${v:novosortdir} [ dict create ] "--index" "--tmpdir" ${v:tmpdir} "--threads" ${v:thr} ${v:__filename:inputFile} "-o" ${v:__filename:output} {*}${v:sortoptions}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
    turbine::read_refcount_decr ${u:sortoptions} 1
}


proc f:find_files { u:output u:dir u:pattern v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: find_files"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::read_refcount_incr ${u:dir} 1
    turbine::read_refcount_incr ${u:pattern} 1
    turbine::file_read_refcount_incr ${u:output} 1
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${filename:output} ${u:dir} ${u:pattern} ] "find_files-app-leaf1 {${filename:output}} ${v:mapped_output} {${u:dir}} {${u:output}} {${u:pattern}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc find_files-app-leaf1 { filename:output v:mapped_output u:dir u:output u:pattern } {
    # Var: $string v:dir VALUE_OF [string:dir] ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    # Var: $string v:pattern VALUE_OF [string:pattern] ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    # Var: $file v:output VALUE_OF [file:output] ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    # Var: $boolean v:3 EXPR_TEMPORARY ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    set v:dir [ turbine::retrieve_string ${u:dir} CACHED 1 ]
    set v:pattern [ turbine::retrieve_string ${u:pattern} CACHED 1 ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: "find" ${v:dir} "-name" ${v:pattern} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external "find" [ dict create "stdout" ${v:__filename:output} ] ${v:dir} "-name" ${v:pattern}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
}

turbine::defaults
turbine::declare_custom_work_types COASTER
turbine::init $servers "Swift"
turbine::enable_read_refcount
adlb::declare_struct_type 16 s:location [ list "rank" integer "strictness" string "accuracy" string ]
turbine::check_constants "WORKER\[WORKER\]" ${turbine::WORK_TASK} 0 "CONTROL" ${turbine::WORK_TASK} 0 "ADLB_RANK_ANY" ${adlb::RANK_ANY} -100
lassign [ turbine::declare_globals [ list "u:vars" ] [ list [ list container string string 1 1 176 ] ] ] u:vars
adlb::add_debug_symbol 1 "__c:s__GATKCombi-2" ""
adlb::add_debug_symbol 2 "__c:s_sknownSite" ""
adlb::add_debug_symbol 3 "__c:s_sknown_g" ""
adlb::add_debug_symbol 4 "__c:s_svariant_g" ""
adlb::add_debug_symbol 5 "__t:7" "JacobVCPipeline:64:33"
adlb::add_debug_symbol 6 "__t:10" "JacobVCPipeline:69:25"
adlb::add_debug_symbol 7 "__t:13" "JacobVCPipeline:69:49"
adlb::add_debug_symbol 8 "__t:631" "JacobVCPipeline:485:16"
adlb::add_debug_symbol 9 "__t:639" "JacobVCPipeline:486:27"
adlb::add_debug_symbol 10 "samples_processing_done" "JacobVCPipeline:66:0"
adlb::add_debug_symbol 11 "docSampleInfo" "JacobVCPipeline:73:39"
adlb::add_debug_symbol 12 "jointVCF" "JacobVCPipeline:485:71"
adlb::add_debug_symbol 13 "configFile" "JacobVCPipeline:59:0"
adlb::add_debug_symbol 14 "sampleInfoFile" "JacobVCPipeline:64:0"
adlb::add_debug_symbol 15 "docRunfile" "JacobVCPipeline:69:99"
adlb::add_debug_symbol 16 "variantFiles" "JacobVCPipeline:486:43"
adlb::add_debug_symbol 17 "__t:28" "JacobVCPipeline:__entry():87:88"
adlb::add_debug_symbol 18 "__t:30" "JacobVCPipeline:__entry():88:6"
adlb::add_debug_symbol 19 "__t:32" "JacobVCPipeline:__entry():88:48"
adlb::add_debug_symbol 20 "__t:55" "JacobVCPipeline:__entry():113:14"
adlb::add_debug_symbol 21 "__t:97" "JacobVCPipeline:__entry():126:5"
adlb::add_debug_symbol 22 "__t:306" "JacobVCPipeline:__entry():283:31"
adlb::add_debug_symbol 23 "__t:327" "JacobVCPipeline:__entry():293:30"
adlb::add_debug_symbol 24 "__t:351" "JacobVCPipeline:__entry():323:17"
adlb::add_debug_symbol 25 "__t:96" "JacobVCPipeline:__entry():126:32"
adlb::add_debug_symbol 26 "__t:326" "JacobVCPipeline:__entry():293:17"
adlb::add_debug_symbol 27 "indices" "JacobVCPipeline:__entry():323:9"
adlb::add_debug_symbol 28 "keyValuePair" "pipelinefunctions.miscellaneous:getConfigVariables():8:16"
adlb::add_debug_symbol 29 "varlist" "JacobVCPipeline:__entry():492:1"
adlb::add_debug_symbol 30 "__t:650" "JacobVCPipeline:__entry():491:27"
adlb::add_debug_symbol 31 "__t:660" "JacobVCPipeline:__entry():492:48"
adlb::add_debug_symbol 32 "__t:666" "JacobVCPipeline:__entry():493:26"
adlb::add_debug_symbol 33 "__t:668" "JacobVCPipeline:__entry():493:43"
adlb::add_debug_symbol 34 "__t:671" "JacobVCPipeline:__entry():494:12"
adlb::add_debug_symbol 35 "__t:674" "JacobVCPipeline:__entry():494:39"
adlb::add_debug_symbol 36 "sampleInfo" "JacobVCPipeline:__entry():82:1"
adlb::add_debug_symbol 37 "read1" "JacobVCPipeline:__entry():84:1"
adlb::add_debug_symbol 38 "read2" "JacobVCPipeline:__entry():85:1"
adlb::add_debug_symbol 39 "rgheader" "JacobVCPipeline:__entry():87:1"
adlb::add_debug_symbol 40 "AlignDir" "JacobVCPipeline:__entry():97:1"
adlb::add_debug_symbol 41 "VarcallDir" "JacobVCPipeline:__entry():100:1"
adlb::add_debug_symbol 42 "RealignDir" "JacobVCPipeline:__entry():103:1"
adlb::add_debug_symbol 43 "__t:49" "JacobVCPipeline:__entry():109:23"
adlb::add_debug_symbol 44 "dedupsortedbam" "JacobVCPipeline:__entry():109:52"
adlb::add_debug_symbol 45 "__t:51" "JacobVCPipeline:__entry():110:15"
adlb::add_debug_symbol 46 "outbam" "JacobVCPipeline:__entry():110:46"
adlb::add_debug_symbol 47 "__t:53" "JacobVCPipeline:__entry():111:19"
adlb::add_debug_symbol 48 "rawvariant" "JacobVCPipeline:__entry():111:50"
adlb::add_debug_symbol 49 "qcfile" "JacobVCPipeline:__entry():113:69"
adlb::add_debug_symbol 50 "__t:62" "JacobVCPipeline:__entry():114:18"
adlb::add_debug_symbol 51 "mergedbam" "JacobVCPipeline:__entry():114:90"
adlb::add_debug_symbol 52 "mergedvariant" "JacobVCPipeline:__entry():116:8"
adlb::add_debug_symbol 53 "flagstats" "JacobVCPipeline:__entry():119:68"
adlb::add_debug_symbol 54 "__t:81" "JacobVCPipeline:__entry():122:19"
adlb::add_debug_symbol 55 "alignedsam" "JacobVCPipeline:__entry():122:65"
adlb::add_debug_symbol 56 "chr_bamListfile" "JacobVCPipeline:__entry():123:64"
adlb::add_debug_symbol 57 "chr_vcfListfile" "JacobVCPipeline:__entry():124:63"
adlb::add_debug_symbol 58 "stat" "JacobVCPipeline:__entry():285:1"
adlb::add_debug_symbol 59 "__t:308" "JacobVCPipeline:__entry():286:14"
adlb::add_debug_symbol 60 "__t:311" "JacobVCPipeline:__entry():287:13"
adlb::add_debug_symbol 61 "__t:314" "JacobVCPipeline:__entry():288:12"
adlb::add_debug_symbol 62 "perc_mapped" "JacobVCPipeline:__entry():291:12"
adlb::add_debug_symbol 63 "__t:321" "JacobVCPipeline:__entry():291:39"
adlb::add_debug_symbol 64 "chromosomes_processing_done" "JacobVCPipeline:__entry():324:1"
adlb::add_debug_symbol 65 "chr_bamList" "JacobVCPipeline:__entry():452:1"
adlb::add_debug_symbol 66 "__t:592" "JacobVCPipeline:__entry():464:2"
adlb::add_debug_symbol 67 "chr_vcfList" "JacobVCPipeline:__entry():467:1"
adlb::add_debug_symbol 68 "__t:598" "JacobVCPipeline:__entry():467:52"
adlb::add_debug_symbol 69 "dedupsam" "JacobVCPipeline:__entry():128:64"
adlb::add_debug_symbol 70 "__t:105" "JacobVCPipeline:__entry():129:18"
adlb::add_debug_symbol 71 "dedupbam" "JacobVCPipeline:__entry():129:47"
adlb::add_debug_symbol 72 "__t:107" "JacobVCPipeline:__entry():133:24"
adlb::add_debug_symbol 73 "__t:129" "JacobVCPipeline:__entry():151:3"
adlb::add_debug_symbol 74 "__t:133" "JacobVCPipeline:__entry():154:28"
adlb::add_debug_symbol 75 "__t:137" "JacobVCPipeline:__entry():155:7"
adlb::add_debug_symbol 76 "__t:138" "JacobVCPipeline:__entry():155:18"
adlb::add_debug_symbol 77 "__t:140" "JacobVCPipeline:__entry():155:38"
adlb::add_debug_symbol 78 "__t:114" "JacobVCPipeline:__entry():137:89"
adlb::add_debug_symbol 79 "__t:121" "JacobVCPipeline:__entry():143:17"
adlb::add_debug_symbol 80 "__t:148" "JacobVCPipeline:__entry():160:17"
adlb::add_debug_symbol 81 "__t:160" "JacobVCPipeline:__entry():174:19"
adlb::add_debug_symbol 82 "alignedbam" "JacobVCPipeline:__entry():174:48"
adlb::add_debug_symbol 83 "alignedsortedbam" "JacobVCPipeline:__entry():178:55"
adlb::add_debug_symbol 84 "metricsfile" "JacobVCPipeline:__entry():179:50"
adlb::add_debug_symbol 85 "__t:172" "JacobVCPipeline:__entry():182:63"
adlb::add_debug_symbol 86 "__t:173" "JacobVCPipeline:__entry():182:74"
adlb::add_debug_symbol 87 "__t:175" "JacobVCPipeline:__entry():182:94"
adlb::add_debug_symbol 88 "__t:194" "JacobVCPipeline:__entry():201:31"
adlb::add_debug_symbol 89 "__t:201" "JacobVCPipeline:__entry():202:26"
adlb::add_debug_symbol 90 "__t:221" "JacobVCPipeline:__entry():219:4"
adlb::add_debug_symbol 91 "__t:202" "JacobVCPipeline:__entry():204:40"
adlb::add_debug_symbol 92 "__t:204" "JacobVCPipeline:__entry():204:57"
adlb::add_debug_symbol 93 "__t:213" "JacobVCPipeline:__entry():210:18"
adlb::add_debug_symbol 94 "__t:182" "JacobVCPipeline:__entry():188:18"
adlb::add_debug_symbol 95 "__t:226" "JacobVCPipeline:__entry():225:7"
adlb::add_debug_symbol 96 "__t:280" "JacobVCPipeline:__entry():257:30"
adlb::add_debug_symbol 97 "__t:284" "JacobVCPipeline:__entry():258:9"
adlb::add_debug_symbol 98 "__t:285" "JacobVCPipeline:__entry():258:20"
adlb::add_debug_symbol 99 "__t:287" "JacobVCPipeline:__entry():258:40"
adlb::add_debug_symbol 100 "__t:294" "JacobVCPipeline:__entry():265:19"
adlb::add_debug_symbol 101 "__t:229" "JacobVCPipeline:__entry():226:25"
adlb::add_debug_symbol 102 "__t:231" "JacobVCPipeline:__entry():226:55"
adlb::add_debug_symbol 103 "__t:233" "JacobVCPipeline:__entry():226:74"
adlb::add_debug_symbol 104 "__t:234" "JacobVCPipeline:__entry():226:74"
adlb::add_debug_symbol 105 "__t:236" "JacobVCPipeline:__entry():227:11"
adlb::add_debug_symbol 106 "__t:237" "JacobVCPipeline:__entry():227:22"
adlb::add_debug_symbol 107 "__t:244" "JacobVCPipeline:__entry():230:41"
adlb::add_debug_symbol 108 "__t:246" "JacobVCPipeline:__entry():233:27"
adlb::add_debug_symbol 109 "__t:248" "JacobVCPipeline:__entry():233:63"
adlb::add_debug_symbol 110 "__t:250" "JacobVCPipeline:__entry():234:14"
adlb::add_debug_symbol 111 "__t:251" "JacobVCPipeline:__entry():234:14"
adlb::add_debug_symbol 112 "__t:253" "JacobVCPipeline:__entry():234:40"
adlb::add_debug_symbol 113 "__t:254" "JacobVCPipeline:__entry():234:51"
adlb::add_debug_symbol 114 "__t:261" "JacobVCPipeline:__entry():237:41"
adlb::add_debug_symbol 115 "__t:268" "JacobVCPipeline:__entry():243:18"
adlb::add_debug_symbol 116 "__t:561" "JacobVCPipeline:__entry():447:44"
adlb::add_debug_symbol 117 "__t:563" "JacobVCPipeline:__entry():448:44"
adlb::add_debug_symbol 118 "__t:572" "JacobVCPipeline:__entry():453:20"
adlb::add_debug_symbol 119 "__t:577" "JacobVCPipeline:__entry():453:81"
adlb::add_debug_symbol 120 "__t:585" "JacobVCPipeline:__entry():457:16"
adlb::add_debug_symbol 121 "__t:331" "JacobVCPipeline:__entry():294:34"
adlb::add_debug_symbol 122 "__t:333" "JacobVCPipeline:__entry():295:17"
adlb::add_debug_symbol 123 "__t:342" "JacobVCPipeline:__entry():303:17"
adlb::add_debug_symbol 124 "__t:604" "JacobVCPipeline:__entry():470:27"
adlb::add_debug_symbol 125 "__t:606" "JacobVCPipeline:__entry():470:44"
adlb::add_debug_symbol 126 "__t:609" "JacobVCPipeline:__entry():470:68"
adlb::add_debug_symbol 127 "__t:612" "JacobVCPipeline:__entry():470:95"
adlb::add_debug_symbol 128 "__t:618" "JacobVCPipeline:__entry():471:40"
adlb::add_debug_symbol 129 "__t:623" "JacobVCPipeline:__entry():475:32"
adlb::add_debug_symbol 130 "__t:624" "JacobVCPipeline:__entry():475:37"
adlb::add_debug_symbol 131 "__t:389" "JacobVCPipeline:__entry():349:20"
adlb::add_debug_symbol 132 "__t:410" "JacobVCPipeline:__entry():367:34"
adlb::add_debug_symbol 133 "__t:413" "JacobVCPipeline:__entry():367:61"
adlb::add_debug_symbol 134 "__t:462" "JacobVCPipeline:__entry():388:33"
adlb::add_debug_symbol 135 "__t:464" "JacobVCPipeline:__entry():388:50"
adlb::add_debug_symbol 136 "__t:470" "JacobVCPipeline:__entry():389:46"
adlb::add_debug_symbol 137 "__t:505" "JacobVCPipeline:__entry():409:47"
adlb::add_debug_symbol 138 "__t:388" "JacobVCPipeline:__entry():349:9"
adlb::add_debug_symbol 139 "__t:409" "JacobVCPipeline:__entry():367:27"
adlb::add_debug_symbol 140 "__t:466" "JacobVCPipeline:__entry():389:12"
adlb::add_debug_symbol 141 "__t:501" "JacobVCPipeline:__entry():409:13"
adlb::add_debug_symbol 142 "__t:428" "JacobVCPipeline:__entry():376:27"
adlb::add_debug_symbol 143 "chrdedupsortedbam" "JacobVCPipeline:__entry():329:68"
adlb::add_debug_symbol 144 "realignedbam" "JacobVCPipeline:__entry():331:63"
adlb::add_debug_symbol 145 "recalibratedbam" "JacobVCPipeline:__entry():332:66"
adlb::add_debug_symbol 146 "intervals" "JacobVCPipeline:__entry():333:61"
adlb::add_debug_symbol 147 "recalreport" "JacobVCPipeline:__entry():334:63"
adlb::add_debug_symbol 148 "gvcfvariant" "JacobVCPipeline:__entry():335:62"
adlb::add_debug_symbol 149 "recalfiles" "JacobVCPipeline:__entry():338:71"
adlb::add_debug_symbol 150 "realfiles" "JacobVCPipeline:__entry():339:70"
adlb::add_debug_symbol 151 "ploidy" "JacobVCPipeline:__entry():341:3"
adlb::add_debug_symbol 152 "__t:391" "JacobVCPipeline:__entry():349:40"
adlb::add_debug_symbol 153 "__t:416" "JacobVCPipeline:__entry():368:6"
adlb::add_debug_symbol 154 "recalparmsindels" "JacobVCPipeline:__entry():371:3"
adlb::add_debug_symbol 155 "__t:422" "JacobVCPipeline:__entry():371:59"
adlb::add_debug_symbol 156 "realparms" "JacobVCPipeline:__entry():377:3"
adlb::add_debug_symbol 157 "__t:441" "JacobVCPipeline:__entry():377:52"
adlb::add_debug_symbol 158 "__t:477" "JacobVCPipeline:__entry():395:18"
adlb::add_debug_symbol 159 "__t:525" "JacobVCPipeline:__entry():419:18"
adlb::add_debug_symbol 160 "__t:558" "JacobVCPipeline:__entry():438:30"
adlb::add_debug_symbol 161 "__t:559" "JacobVCPipeline:__entry():438:35"
adlb::add_debug_symbol 162 "__t:398" "JacobVCPipeline:__entry():354:18"
adlb::add_debug_symbol 163 "__t:2" "JacobVCPipeline:align():38:5"
adlb::add_debug_symbol 164 "__t:5" "JacobVCPipeline:align():40:22"
adlb::add_debug_symbol 165 "__t:7" "JacobVCPipeline:align():40:52"
adlb::add_debug_symbol 166 "__t:9" "JacobVCPipeline:align():41:9"
adlb::add_debug_symbol 167 "__t:10" "JacobVCPipeline:align():41:9"
adlb::add_debug_symbol 168 "__t:12" "JacobVCPipeline:align():41:32"
adlb::add_debug_symbol 169 "__t:13" "JacobVCPipeline:align():41:43"
adlb::add_debug_symbol 170 "__t:15" "JacobVCPipeline:align():45:24"
adlb::add_debug_symbol 171 "__t:17" "JacobVCPipeline:align():45:60"
adlb::add_debug_symbol 172 "__t:19" "JacobVCPipeline:align():46:12"
adlb::add_debug_symbol 173 "__t:20" "JacobVCPipeline:align():46:12"
adlb::add_debug_symbol 174 "__t:22" "JacobVCPipeline:align():46:38"
adlb::add_debug_symbol 175 "__t:23" "JacobVCPipeline:align():46:49"
adlb::add_debug_symbol 176 "vars" "JacobVCPipeline:62:0"
turbine::start swift:main swift:constants
turbine::finalize
