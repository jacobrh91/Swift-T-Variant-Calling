
# Generated by stc version 0.7.2
# date                    : 2017/01/17 17:13:22
# Turbine version         : 0.9.1
# Input filename          : /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift
# Output filename         : /ui/ncsa/jacobrh/Swift-T-Variant-Calling/swift-t-VCPipeline.KM4.tic
# STC home                : /usr/local/apps/bioapps/swift-t-1.1/stc
# Turbine home            : /usr/local/apps/bioapps/swift-t-1.1/turbine
# Compiler settings:
# stc.auto-declare              : true
# stc.c_preprocess              : true
# stc.checkpointing             : true
# stc.compiler-debug            : true
# stc.debugging                 : COMMENTS
# stc.ic.output-file            : 
# stc.input_filename            : /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift
# stc.log.file                  : 
# stc.log.trace                 : false
# stc.must_pass_wait_vars       : true
# stc.opt.algebra               : true
# stc.opt.array-build           : true
# stc.opt.batch-refcounts       : true
# stc.opt.cancel-refcounts      : true
# stc.opt.constant-fold         : true
# stc.opt.controlflow-fusion    : true
# stc.opt.dataflow-op-inline    : true
# stc.opt.dead-code-elim        : true
# stc.opt.demote-globals        : true
# stc.opt.disable-asserts       : false
# stc.opt.expand-loop-threshold-insts: 256
# stc.opt.expand-loop-threshold-iters: 16
# stc.opt.expand-loops          : false
# stc.opt.finalized-var         : true
# stc.opt.flatten-nested        : true
# stc.opt.full-function-inline  : false
# stc.opt.full-unroll           : false
# stc.opt.function-always-inline-threshold: 5
# stc.opt.function-inline       : true
# stc.opt.function-inline-threshold: 50
# stc.opt.function-signature    : true
# stc.opt.hoist                 : true
# stc.opt.hoist-refcounts       : true
# stc.opt.loop-simplify         : true
# stc.opt.max-iterations        : 10
# stc.opt.merge-refcounts       : true
# stc.opt.piggyback-refcounts   : true
# stc.opt.pipeline              : false
# stc.opt.propagate-aliases     : true
# stc.opt.reorder-insts         : false
# stc.opt.shared-constants      : true
# stc.opt.unroll-loop-threshold-insts: 192
# stc.opt.unroll-loop-threshold-iters: 8
# stc.opt.unroll-loops          : true
# stc.opt.value-number          : true
# stc.opt.wait-coalesce         : true
# stc.output_filename           : /ui/ncsa/jacobrh/Swift-T-Variant-Calling/swift-t-VCPipeline.KM4.tic
# stc.preproc.force-cpp         : false
# stc.preproc.force-gcc         : false
# stc.preprocess_only           : false
# stc.profile                   : false
# stc.refcounting               : true
# stc.rpath                     : /ui/ncsa/jacobrh/Swift-T-Variant-Calling/pipelinefunctions
# stc.stc_home                  : /usr/local/apps/bioapps/swift-t-1.1/stc
# stc.turbine.version           : 0.9.1
# stc.turbine_home              : /usr/local/apps/bioapps/swift-t-1.1/turbine
# stc.version                   : 0.7.2

# Metadata:

# rpath entries
lappend auto_path "/ui/ncsa/jacobrh/Swift-T-Variant-Calling/pipelinefunctions"
package require turbine 0.9.1
namespace import turbine::*


proc swift:constants {  } {
    turbine::c::log "function:swift:constants"
    global c:s_alignment
    turbine::allocate_custom c:s_alignment string 1 1 1 1
    turbine::store_string ${c:s_alignment} "alignment"
    global c:s_deduplicat
    turbine::allocate_custom c:s_deduplicat string 1 1 2 1
    turbine::store_string ${c:s_deduplicat} "deduplication"
    global c:s_realignmen
    turbine::allocate_custom c:s_realignmen string 1 1 3 1
    turbine::store_string ${c:s_realignmen} "realignment"
    global c:s_recalibrat
    turbine::allocate_custom c:s_recalibrat string 1 1 4 1
    turbine::store_string ${c:s_recalibrat} "recalibration"
    global c:s_sknownSite
    turbine::allocate_custom c:s_sknownSite string 1 1 5 1
    turbine::store_string ${c:s_sknownSite} "s/^/--knownSites /g"
    global c:s_sknown_g
    turbine::allocate_custom c:s_sknown_g string 1 1 6 1
    turbine::store_string ${c:s_sknown_g} "s/^/-known /g"
}

package require align 0.2


proc swift:main {  } {
    turbine::c::log "function: __entry"
    # Var: string[string] u:vars /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:561:0
    global u:vars
    # Var: string t:7 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:563:33
    # Var: string t:10 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:567:6
    # Var: string t:13 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:568:6
    # Var: string t:19 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:571:49
    # Var: string t:33 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:591:4
    # Var: boolean t:65 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:637:4
    # Var: $string v:configFilename VALUE_OF [string:configFilename]
    # Var: file u:docSampleInfo /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:575:32
    # Var: *rw(file)[int] u:samplesOutput /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:635:0
    # Var: file u:configFile /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:558:0
    # Var: file u:sampleInfoFile /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:563:0
    # Var: file u:docRunfile /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:571:99
    # Var: $string v:f RENAMED [$string:__v:f]
    # Var: string t:3:2 RENAMED [string:__t:3] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():309:7
    # Var: string t:5:2 RENAMED [string:__t:5] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():309:25
    # Var: string t:7:1 RENAMED [string:__t:7] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():309:67
    # Var: string t:36:1 RENAMED [string:__t:36] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():345:29
    # Var: string t:39:1 RENAMED [string:__t:39] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():345:73
    # Var: string t:67:1 RENAMED [string:__t:67] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():380:32
    # Var: string t:71:1 RENAMED [string:__t:71] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():381:61
    # Var: string t:2:7 RENAMED [string:__t:2] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:alignReads():156:5
    # Var: string t:6:7 RENAMED [string:__t:6] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:markDuplicates():188:5
    # Var: $file v:configFile:1 VALUE_OF [file:configFile]
    # Var: $file v:configFile:2 VALUE_OF [file:configFile]
    # Var: $string$[int] v:configFileData VALUE_OF [string[int]:configFileData]
    # Var: string[int] t:41:1 RENAMED [string[int]:__t:41] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():345:93
    # Var: int t:38:1 RENAMED [int:__t:38] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():345:62
    # Var: float t:75:1 RENAMED [float:__t:75] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():384:18
    # Var: float t:79:1 RENAMED [float:__t:79] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():384:68
    # Var: boolean t:1:10 RENAMED [boolean:__t:1] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:alignReads():156:25
    # Var: boolean t:5:7 RENAMED [boolean:__t:5] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:markDuplicates():188:32
    lassign [ adlb::multicreate [ list string 1 1 7 ] [ list string 4 1 8 ] [ list string 2 1 9 ] [ list string 3 1 10 ] [ list string 2 1 11 ] [ list integer 1 1 12 ] [ list container integer file_ref 1 1 14 ] [ list string 1 1 18 ] [ list string 1 1 19 ] [ list string 1 1 20 ] [ list string 1 1 21 ] [ list string 1 1 22 ] [ list string 2 1 23 ] [ list string 2 1 24 ] [ list string 1 1 25 ] [ list string 2 1 26 ] [ list container integer string 1 1 27 ] [ list integer 1 1 28 ] [ list float 1 1 29 ] [ list float 1 1 30 ] [ list integer 1 1 31 ] [ list integer 1 1 32 ] ] t:7 t:10 t:13 t:19 t:33 t:65 u:samplesOutput t:3:2 t:5:2 t:7:1 t:36:1 t:39:1 t:67:1 t:71:1 t:2:7 t:6:7 t:41:1 t:38:1 t:75:1 t:79:1 t:1:10 t:5:7
    turbine::c::log "allocated t:7=<${t:7}> t:10=<${t:10}> t:13=<${t:13}> t:19=<${t:19}> t:33=<${t:33}>"
    turbine::c::log "allocated t:65=<${t:65}> u:samplesOutput=<${u:samplesOutput}> t:3:2=<${t:3:2}> t:5:2=<${t:5:2}> t:7:1=<${t:7:1}>"
    turbine::c::log "allocated t:36:1=<${t:36:1}> t:39:1=<${t:39:1}> t:67:1=<${t:67:1}> t:71:1=<${t:71:1}> t:2:7=<${t:2:7}>"
    turbine::c::log "allocated t:6:7=<${t:6:7}> t:41:1=<${t:41:1}> t:38:1=<${t:38:1}> t:75:1=<${t:75:1}> t:79:1=<${t:79:1}>"
    turbine::c::log "allocated t:1:10=<${t:1:10}> t:5:7=<${t:5:7}>"
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 0 1 13 ] [ list file 1 1 15 ] [ list file 1 1 16 ] [ list file 0 1 17 ] ] [ list 1 0 0 1 ] ] u:docSampleInfo u:configFile u:sampleInfoFile u:docRunfile
    turbine::argv_accept_impl [ list "runfile" ]
    set v:configFilename [ turbine::argv_get_impl "runfile" ]
    set tcltmp:init_rc 1
    set v:configFile:1 [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:configFile:1 ${v:configFilename}
    turbine::store_file ${u:configFile} v:configFile:1 1
    set v:configFile:2 [ turbine::retrieve_file ${u:configFile} ]
    set v:configFileData [ turbine::file_lines_impl ${v:configFile:2} ]
    turbine::container_reference ${u:vars} "SAMPLEINFORMATION" ${t:7} string
    turbine::container_reference ${u:vars} "OUTPUTDIR" ${t:10} string
    turbine::container_reference ${u:vars} "TMPDIR" ${t:13} string
    turbine::container_reference ${u:vars} "DELIVERYFOLDER" ${t:19} string
    turbine::container_reference ${u:vars} "ANALYSIS" ${t:33} string
    set v:f [ file tail ${v:configFilename} ]
    turbine::container_reference ${u:vars} "SAMPLELB" ${t:3:2} string
    turbine::container_reference ${u:vars} "SAMPLEPL" ${t:5:2} string
    turbine::container_reference ${u:vars} "SAMPLECN" ${t:7:1} string
    turbine::container_reference ${u:vars} "SAMTOOLSDIR" ${t:36:1} string
    turbine::container_reference ${u:vars} "PBSCORES" ${t:39:1} string
    turbine::container_reference ${u:vars} "DUP_CUTOFF" ${t:67:1} string
    turbine::container_reference ${u:vars} "MAP_CUTOFF" ${t:71:1} string
    turbine::container_reference ${u:vars} "ALIGNERTOOL" ${t:2:7} string
    turbine::container_reference ${u:vars} "MARKDUPLICATESTOOL" ${t:6:7} string
    turbine::array_kv_build ${t:41:1} [ ::adlb::dict_create 0 "-u" ] 1 integer string
    dict for {tcltmp:ignore v:line} ${v:configFileData} {
        # Var: string[int] u:keyValuePair RENAMED [string[int]:keyValuePair] ./pipelinefunctions/miscellaneous.swift:getConfigVariables():8:16
        # Var: $string$[int] v:keyValuePair VALUE_OF [string[int]:keyValuePair]
        # Var: $string v:alias:name VALUE_OF [string:__alias:name]
        # Var: $string v:alias:value VALUE_OF [string:__alias:value]
        lassign [ adlb::multicreate [ list container integer string 1 2 33 ] ] u:keyValuePair
        turbine::c::log "allocated u:keyValuePair=<${u:keyValuePair}>"
        set v:keyValuePair [ turbine::split_impl ${v:line} "=" ]
        turbine::build_rec ${u:keyValuePair} ${v:keyValuePair} [ list container integer string ] 0 1
        set a:name [ adlb::subscript_container ${u:keyValuePair} 0 ]
        set v:alias:name [ turbine::retrieve_string ${a:name} ]
        set a:value [ adlb::subscript_container ${u:keyValuePair} 1 ]
        set v:alias:value [ turbine::retrieve_string ${a:value} CACHED 1 ]
        turbine::container_insert ${u:vars} ${v:alias:name} ${v:alias:value} string 0
        adlb::write_refcount_decr ${u:keyValuePair} 1
    }
    turbine::rule [ list ${t:13} ] "mkdir-app-leaf1 ${t:13}"
    turbine::rule [ list ${t:39:1} ] "__entry-async_op-parse_int ${t:38:1} ${t:39:1}"
    turbine::rule [ list ${t:67:1} ] "__entry-async_op-parse_float ${t:67:1} ${t:75:1}"
    turbine::rule [ list ${t:71:1} ] "__entry-async_op-parse_float-1 ${t:71:1} ${t:79:1}"
    turbine::rule [ list ${t:2:7} ] "__entry-async_op-eq_string ${t:1:10} ${t:2:7}"
    turbine::rule [ list ${t:6:7} ] "__entry-async_op-eq_string-1 ${t:5:7} ${t:6:7}"
    turbine::rule [ list ${t:7} ] "__entry-optmerged ${t:10} ${t:13} ${t:19} ${t:1:10} ${t:33} ${t:36:1} ${t:38:1} ${t:3:2} ${t:41:1} ${t:5:2} ${t:5:7} ${t:65} ${t:67:1} ${t:6:7} ${t:7} ${t:71:1} ${t:75:1} ${t:79:1} ${t:7:1} {${u:docSampleInfo}} {${u:sampleInfoFile}} ${u:samplesOutput}"
    turbine::rule [ list ${t:10} ] [ list __entry-optmerged-8 ${t:10} ${t:19} ${v:f} ${u:configFile} ${u:docRunfile} ]
    turbine::rule [ list ${t:33} ] "__entry-optmerged-9 ${t:10} ${t:19} ${t:33} ${t:65} ${u:samplesOutput}"
    turbine::decr_local_file_refcount v:configFile:1
    adlb::write_refcount_decr ${u:vars} 1
}


proc mkdir-app-leaf1 { t:13 } {
    # Var: $string v:dirname:5 RENAMED [$string:__v:dirname] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:mkdir():65:15
    # Var: $void v:v:8 RENAMED [$void:__v:v] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:mkdir():65:15
    set v:dirname:5 [ turbine::retrieve_string ${t:13} CACHED 1 ]
    turbine::c::log [ list exec: "mkdir" "-p" ${v:dirname:5} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:dirname:5}
}


proc __entry-async_op-parse_int { t:38:1 t:39:1 } {
    # Var: $string v:t:39:1 VALUE_OF [string:__t:39:1]
    # Var: $int v:t:38:1 VALUE_OF [int:__t:38:1]
    set v:t:39:1 [ turbine::retrieve_string ${t:39:1} CACHED 1 ]
    set v:t:38:1 [ turbine::parse_int_impl ${v:t:39:1} 10 ]
    turbine::store_integer ${t:38:1} ${v:t:38:1}
}


proc __entry-async_op-parse_float { t:67:1 t:75:1 } {
    # Var: $string v:t:67:1 VALUE_OF [string:__t:67:1]
    # Var: $float v:t:75:1 VALUE_OF [float:__t:75:1]
    set v:t:67:1 [ turbine::retrieve_string ${t:67:1} CACHED 1 ]
    set v:t:75:1 [ turbine::string2float_impl ${v:t:67:1} ]
    turbine::store_float ${t:75:1} ${v:t:75:1}
}


proc __entry-async_op-parse_float-1 { t:71:1 t:79:1 } {
    # Var: $string v:t:71:1 VALUE_OF [string:__t:71:1]
    # Var: $float v:t:79:1 VALUE_OF [float:__t:79:1]
    set v:t:71:1 [ turbine::retrieve_string ${t:71:1} CACHED 1 ]
    set v:t:79:1 [ turbine::string2float_impl ${v:t:71:1} ]
    turbine::store_float ${t:79:1} ${v:t:79:1}
}


proc __entry-async_op-eq_string { t:1:10 t:2:7 } {
    # Var: $string v:t:2:7 VALUE_OF [string:__t:2:7]
    # Var: $boolean v:t:1:10 VALUE_OF [boolean:__t:1:10]
    set v:t:2:7 [ turbine::retrieve_string ${t:2:7} CACHED 1 ]
    set v:t:1:10 [ string equal ${v:t:2:7} "BWAMEM" ]
    turbine::store_integer ${t:1:10} ${v:t:1:10}
}


proc __entry-async_op-eq_string-1 { t:5:7 t:6:7 } {
    # Var: $string v:t:6:7 VALUE_OF [string:__t:6:7]
    # Var: $boolean v:t:5:7 VALUE_OF [boolean:__t:5:7]
    set v:t:6:7 [ turbine::retrieve_string ${t:6:7} CACHED 1 ]
    set v:t:5:7 [ string equal ${v:t:6:7} "SAMBLASTER" ]
    turbine::store_integer ${t:5:7} ${v:t:5:7}
}


proc __entry-optmerged { t:10 t:13 t:19 t:1:10 t:33 t:36:1 t:38:1 t:3:2 t:41:1 t:5:2 t:5:7 t:65 t:67:1 t:6:7 t:7 t:71:1 t:75:1 t:79:1 t:7:1 u:docSampleInfo u:sampleInfoFile u:samplesOutput } {
    # Var: $string v:p:1 RENAMED [$string:__v:p]
    # Var: $string v:f:1 RENAMED [$string:__v:f]
    # Var: $file v:sampleInfoFile:1 VALUE_OF [file:sampleInfoFile]
    # Var: $file v:sampleInfoFile:2 VALUE_OF [file:sampleInfoFile]
    # Var: $string$[int] v:sampleLines VALUE_OF [string[int]:sampleLines]
    set v:p:1 [ turbine::retrieve_string ${t:7} CACHED 1 ]
    set v:f:1 [ file tail ${v:p:1} ]
    set tcltmp:init_rc 1
    set v:sampleInfoFile:1 [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:sampleInfoFile:1 ${v:p:1}
    turbine::store_file ${u:sampleInfoFile} v:sampleInfoFile:1 1
    set v:sampleInfoFile:2 [ turbine::retrieve_file ${u:sampleInfoFile} ]
    set v:sampleLines [ turbine::file_lines_impl ${v:sampleInfoFile:2} ]
    turbine::rule [ list ${t:10} ${t:19} ] [ list __entry-async_op-strcat ${t:10} ${t:19} ${v:f:1} ${u:docSampleInfo} ${u:sampleInfoFile} ]
    turbine::rule [ list ] "mainSampleLoop-foreach-wait1 ${t:10} ${t:13} ${t:1:10} ${t:33} ${t:36:1} ${t:38:1} ${t:3:2} ${t:41:1} ${t:5:2} ${t:5:7} ${t:65} ${t:67:1} ${t:6:7} ${t:71:1} ${t:75:1} ${t:79:1} ${t:7:1} {${v:sampleLines}} ${u:samplesOutput}"
    turbine::decr_local_file_refcount v:sampleInfoFile:1
}


proc __entry-async_op-strcat { t:10 t:19 v:f:1 u:docSampleInfo u:sampleInfoFile } {
    # Var: $string v:t:10:3 VALUE_OF [string:__t:10]
    # Var: $string v:t:19:3 VALUE_OF [string:__t:19]
    # Var: $string v:t:23 VALUE_OF [string:__t:23]
    set v:t:10:3 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:t:19:3 [ turbine::retrieve_string ${t:19} CACHED 1 ]
    set v:t:23 "${v:t:10:3}/${v:t:19:3}/docs/${v:f:1}"
    turbine::set_filename_val ${u:docSampleInfo} ${v:t:23}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry:wait:sampleInfoFile ${v:t:23} ${u:docSampleInfo} ${u:sampleInfoFile} ]
    turbine::reset_priority
}


proc __entry:wait:sampleInfoFile { v:t:23 u:docSampleInfo u:sampleInfoFile } {
    # Var: $file v:sampleInfoFile VALUE_OF [file:sampleInfoFile]
    # Var: $file v:docSampleInfo VALUE_OF [file:docSampleInfo]
    set v:sampleInfoFile [ turbine::retrieve_file ${u:sampleInfoFile} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:docSampleInfo [ turbine::create_local_file_ref ${v:t:23} ${tcltmp:init_rc} 1 ]
    turbine::copy_local_file_contents ${v:docSampleInfo} ${v:sampleInfoFile}
    turbine::store_file ${u:docSampleInfo} v:docSampleInfo 0
}


proc mainSampleLoop-foreach-wait1 { t:10 t:13 t:1:10 t:33 t:36:1 t:38:1 t:3:2 t:41:1 t:5:2 t:5:7 t:65 t:67:1 t:6:7 t:71:1 t:75:1 t:79:1 t:7:1 v:sampleLines u:samplesOutput } {
    set tcltmp:iters [ dict size ${v:sampleLines} ]
    turbine::read_refcount_incr ${t:41:1} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:7:1} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:67:1} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:79:1} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:13} [ expr { 4 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:5:7} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:75:1} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:6:7} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:10} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:65} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:33} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:71:1} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:5:2} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:3:2} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:1:10} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:38:1} [ expr { 4 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:36:1} [ expr { 3 * ${tcltmp:iters} } ]
    adlb::write_refcount_incr ${u:samplesOutput} [ expr { ${tcltmp:iters} } ]
    dict for {v:index:1 v:sample} ${v:sampleLines} {
        # Var: string[int] u:sampleInfo RENAMED [string[int]:sampleInfo] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():303:2
        # Var: string u:sampleName RENAMED [string:sampleName] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():304:2
        # Var: string u:rgheader RENAMED [string:rgheader] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():308:2
        # Var: string u:AlignDir RENAMED [string:AlignDir] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():320:2
        # Var: string u:VarcallDir RENAMED [string:VarcallDir] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():323:2
        # Var: string u:RealignDir RENAMED [string:RealignDir] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():326:2
        # Var: file u:alignedbam RENAMED [file:alignedbam] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():332:49
        # Var: string t:26:1 RENAMED [string:__t:26] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():333:24
        # Var: file u:dedupsortedbam RENAMED [file:dedupsortedbam] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():333:53
        # Var: file u:flagstats RENAMED [file:flagstats] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():336:69
        # Var: string t:31:1 RENAMED [string:__t:31] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():339:20
        # Var: file u:alignedsam RENAMED [file:alignedsam] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():339:66
        # Var: string[int] u:stat RENAMED [string[int]:stat] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():369:2
        # Var: string[int] t:48:1 RENAMED [string[int]:__t:48] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():370:15
        # Var: string[int] t:51:1 RENAMED [string[int]:__t:51] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():371:14
        # Var: string[int] t:54:1 RENAMED [string[int]:__t:54] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():372:13
        # Var: float u:perc_mapped RENAMED [float:perc_mapped] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():375:13
        # Var: float t:61:1 RENAMED [float:__t:61] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():375:40
        # Var: string u:cutoff_info RENAMED [string:cutoff_info] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():378:2
        # Var: boolean t:78:1 RENAMED [boolean:__t:78] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():384:66
        # Var: $string$[int] v:sampleInfo VALUE_OF [string[int]:sampleInfo]
        # Var: $string v:alias:sampleName VALUE_OF [string:__alias:sampleName]
        # Var: $string v:alias:read1 VALUE_OF [string:__alias:read1]
        # Var: $string v:alias:read2 VALUE_OF [string:__alias:read2]
        lassign [ adlb::multicreate [ list container integer string 1 2 34 ] [ list string 3 1 35 ] [ list string 2 1 36 ] [ list string 2 1 37 ] [ list string 1 1 38 ] [ list string 1 1 39 ] [ list string 1 1 41 ] [ list string 4 1 44 ] [ list container integer string 3 1 46 ] [ list container integer string 1 1 47 ] [ list container integer string 1 1 48 ] [ list container integer string 1 1 49 ] [ list float 1 1 50 ] [ list float 1 1 51 ] [ list string 2 1 52 ] [ list integer 1 1 53 ] ] u:sampleInfo u:sampleName u:rgheader u:AlignDir u:VarcallDir u:RealignDir t:26:1 t:31:1 u:stat t:48:1 t:51:1 t:54:1 u:perc_mapped t:61:1 u:cutoff_info t:78:1
        turbine::c::log "allocated u:sampleInfo=<${u:sampleInfo}> u:sampleName=<${u:sampleName}> u:rgheader=<${u:rgheader}> u:AlignDir=<${u:AlignDir}> u:VarcallDir=<${u:VarcallDir}>"
        turbine::c::log "allocated u:RealignDir=<${u:RealignDir}> t:26:1=<${t:26:1}> t:31:1=<${t:31:1}> u:stat=<${u:stat}> t:48:1=<${t:48:1}>"
        turbine::c::log "allocated t:51:1=<${t:51:1}> t:54:1=<${t:54:1}> u:perc_mapped=<${u:perc_mapped}> t:61:1=<${t:61:1}> u:cutoff_info=<${u:cutoff_info}>"
        turbine::c::log "allocated t:78:1=<${t:78:1}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 2 1 40 ] [ list file 4 1 42 ] [ list file 1 1 43 ] [ list file 2 1 45 ] ] [ list 1 1 1 1 ] ] u:alignedbam u:dedupsortedbam u:flagstats u:alignedsam
        set v:sampleInfo [ turbine::split_impl ${v:sample} " " ]
        turbine::build_rec ${u:sampleInfo} ${v:sampleInfo} [ list container integer string ] 0 1
        set a:sampleName [ adlb::subscript_container ${u:sampleInfo} 0 ]
        set v:alias:sampleName [ turbine::retrieve_string ${a:sampleName} ]
        turbine::store_string ${u:sampleName} ${v:alias:sampleName}
        set a:read1 [ adlb::subscript_container ${u:sampleInfo} 1 ]
        set v:alias:read1 [ turbine::retrieve_string ${a:read1} ]
        set a:read2 [ adlb::subscript_container ${u:sampleInfo} 2 ]
        set v:alias:read2 [ turbine::retrieve_string ${a:read2} CACHED 1 ]
        f:samtools_view ${u:alignedbam} ${t:36:1} ${u:alignedsam} ${t:38:1} ${t:41:1} -100 "HARD" "RANK"
        set a:t:49:1 [ adlb::subscript_container ${u:stat} 4 ]
        set a:tot_mapped [ adlb::subscript_container ${t:48:1} 0 ]
        set a:t:52:1 [ adlb::subscript_container ${u:stat} 0 ]
        set a:tot_reads [ adlb::subscript_container ${t:51:1} 0 ]
        set a:t:55:1 [ adlb::subscript_container ${u:stat} 3 ]
        set a:tot_dups [ adlb::subscript_container ${t:54:1} 0 ]
        turbine::rule [ list ${t:65} ] [ list mainSampleLoop-if2 ${u:RealignDir} ${u:VarcallDir} ${t:13} ${t:33} ${t:36:1} ${t:38:1} ${t:65} ${v:alias:sampleName} ${v:index:1} ${u:dedupsortedbam} ${u:sampleName} ${u:samplesOutput} ]
        turbine::rule [ list ${t:1:10} ] [ list alignReads-if1 ${t:1:10} ${t:31:1} ${t:38:1} ${v:alias:read1} ${v:alias:read2} ${u:alignedsam} ${u:rgheader} ]
        turbine::rule [ list ${t:5:7} ] [ list markDuplicates-if1 ${u:AlignDir} ${t:13} ${t:26:1} ${t:31:1} ${t:36:1} ${t:38:1} ${t:41:1} ${t:5:7} ${t:6:7} ${v:alias:sampleName} ${u:alignedbam} ${u:alignedsam} ${u:dedupsortedbam} ]
        turbine::rule [ list ${t:3:2} ${t:5:2} ${t:7:1} ] [ list __entry-async_op-sprintf ${t:3:2} ${t:5:2} ${t:7:1} ${v:alias:sampleName} ${u:rgheader} ]
        turbine::rule [ list ${t:13} ] [ list __entry-async_op-strcat-10 ${t:13} ${t:31:1} ${v:alias:sampleName} ${u:alignedsam} ]
        turbine::rule [ list ${a:t:49:1} ] "__entry-call_foreign-split-1 {${a:t:49:1}} ${t:48:1}"
        turbine::rule [ list ${a:t:52:1} ] "__entry-call_foreign-split-2 {${a:t:52:1}} ${t:51:1}"
        turbine::rule [ list ${a:t:55:1} ] "__entry-call_foreign-split-3 {${a:t:55:1}} ${t:54:1}"
        turbine::rule [ list ${a:tot_reads} ] [ list __entry-async_op-parse_float-2 ${a:tot_dups} ${a:tot_reads} ${t:61:1} ${t:67:1} ${t:71:1} ${t:75:1} ${t:78:1} ${t:79:1} ${v:alias:sampleName} ${u:cutoff_info} ${u:perc_mapped} ]
        turbine::rule [ list ${a:tot_mapped} ] "__entry-async_op-parse_float-4 {${a:tot_mapped}} ${t:61:1}"
        turbine::rule [ list ${t:10} ] [ list __entry-optmerged-6 ${u:AlignDir} ${u:RealignDir} ${u:VarcallDir} ${t:10} ${t:26:1} ${t:31:1} ${t:36:1} ${v:alias:sampleName} ${u:alignedbam} ${u:alignedsam} ${u:dedupsortedbam} ${u:flagstats} ${u:sampleName} ${u:stat} ]
        adlb::write_refcount_decr ${u:sampleInfo} 1
    }
    turbine::read_refcount_decr ${t:5:7} 1
    turbine::read_refcount_decr ${t:67:1} 1
    turbine::read_refcount_decr ${t:41:1} 1
    turbine::read_refcount_decr ${t:79:1} 1
    turbine::read_refcount_decr ${t:36:1} 1
    turbine::read_refcount_decr ${t:6:7} 1
    turbine::read_refcount_decr ${t:75:1} 1
    turbine::read_refcount_decr ${t:10} 1
    turbine::read_refcount_decr ${t:65} 1
    turbine::read_refcount_decr ${t:33} 1
    turbine::read_refcount_decr ${t:71:1} 1
    turbine::read_refcount_decr ${t:13} 1
    turbine::read_refcount_decr ${t:5:2} 1
    turbine::read_refcount_decr ${t:7:1} 1
    turbine::read_refcount_decr ${t:3:2} 1
    turbine::read_refcount_decr ${t:1:10} 1
    turbine::read_refcount_decr ${t:38:1} 1
    adlb::write_refcount_decr ${u:samplesOutput} 1
}


proc mainSampleLoop-if2 { u:RealignDir u:VarcallDir t:13 t:33 t:36:1 t:38:1 t:65 v:alias:sampleName v:index:1 u:dedupsortedbam u:sampleName u:samplesOutput } {
    # Var: $boolean v:__t:89 RENAMED [$boolean:__v:__t:89] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():402:7
    set v:__t:89 [ turbine::retrieve_integer ${t:65} CACHED 1 ]
    if { ${v:__t:89} } {
        # Var: string[string] u:vars /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:561:0
        global u:vars
        # Var: string t:90:1 RENAMED [string:__t:90] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():408:19
        # Var: file u:gvcfSample RENAMED [file:gvcfSample] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():410:52
        # Var: *rw(file)[int] u:gvcfChrCollection RENAMED [*rw(file)[int]:gvcfChrCollection] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():412:3
        # Var: string[int] u:chrSampleArray RENAMED [string[int]:chrSampleArray] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():528:3
        # Var: string t:185 RENAMED [string:__t:185] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():540:29
        # Var: string t:187 RENAMED [string:__t:187] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():540:46
        # Var: string t:189 RENAMED [string:__t:189] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():541:8
        # Var: string t:190 RENAMED [string:__t:190] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():541:15
        # Var: string t:193 RENAMED [string:__t:193] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():541:42
        # Var: string t:195 RENAMED [string:__t:195] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():542:8
        # Var: string t:199 RENAMED [string:__t:199] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():542:42
        # Var: boolean t:146 RENAMED [boolean:__t:146] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():473:25
        lassign [ adlb::multicreate [ list string 1 1 54 ] [ list container integer file_ref 1 1 56 ] [ list container integer string 1 1 57 ] [ list string 2 1 58 ] [ list string 2 1 59 ] [ list string 2 1 60 ] [ list string 2 1 61 ] [ list string 1 1 62 ] [ list string 2 1 63 ] [ list string 1 1 64 ] [ list integer 1 1 65 ] ] t:90:1 u:gvcfChrCollection u:chrSampleArray t:185 t:187 t:189 t:190 t:193 t:195 t:199 t:146
        turbine::c::log "allocated t:90:1=<${t:90:1}> u:gvcfChrCollection=<${u:gvcfChrCollection}> u:chrSampleArray=<${u:chrSampleArray}> t:185=<${t:185}> t:187=<${t:187}>"
        turbine::c::log "allocated t:189=<${t:189}> t:190=<${t:190}> t:193=<${t:193}> t:195=<${t:195}> t:199=<${t:199}>"
        turbine::c::log "allocated t:146=<${t:146}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 55 ] ] [ list 1 ] ] u:gvcfSample
        adlb::write_refcount_incr ${u:samplesOutput} 1
        turbine::read_refcount_incr ${u:RealignDir} 1
        turbine::read_refcount_incr ${t:38:1} 1
        turbine::read_refcount_incr ${u:VarcallDir} 2
        turbine::read_refcount_incr ${u:sampleName} 1
        turbine::read_refcount_incr ${t:13} 1
        turbine::read_refcount_incr ${t:33} 1
        turbine::file_read_refcount_incr ${u:dedupsortedbam} 1
        turbine::read_refcount_incr ${t:36:1} 1
        turbine::container_reference ${u:vars} "CHRNAMES" ${t:90:1} string
        turbine::container_reference ${u:vars} "JAVADIR" ${t:185} string
        turbine::container_reference ${u:vars} "GATKDIR" ${t:187} string
        turbine::container_reference ${u:vars} "REFGENOMEDIR" ${t:190} string
        turbine::container_reference ${u:vars} "REFGENOME" ${t:193} string
        turbine::container_reference ${u:vars} "DBSNP" ${t:199} string
        turbine::rule [ list ${u:gvcfChrCollection} ] "mainSampleLoop-foreach-wait3 ${u:chrSampleArray} ${u:gvcfChrCollection}"
        turbine::rule [ list ${t:90:1} ] [ list __entry-call_foreign-split ${u:RealignDir} ${u:VarcallDir} ${t:13} ${t:146} ${t:185} ${t:187} ${t:189} ${t:190} ${t:195} ${t:36:1} ${t:38:1} ${t:90:1} ${v:alias:sampleName} ${u:dedupsortedbam} ${u:gvcfChrCollection} ${u:sampleName} ]
        turbine::rule [ list ${u:VarcallDir} ] [ list __entry-async_op-strcat-5 ${u:VarcallDir} ${t:185} ${t:187} ${t:189} ${t:195} ${v:alias:sampleName} ${v:index:1} ${u:chrSampleArray} ${u:gvcfSample} ${u:samplesOutput} ]
        turbine::rule [ list ${t:33} ] "__entry-async_op-eq_string-2 ${t:146} ${t:33}"
        turbine::rule [ list ${t:190} ] "__entry-optmerged-4 ${t:189} ${t:190} ${t:193} ${t:195} ${t:199}"
    }
    turbine::read_refcount_decr ${u:sampleName} 1
    turbine::read_refcount_decr ${u:VarcallDir} 1
    turbine::read_refcount_decr ${t:36:1} 1
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
    turbine::read_refcount_decr ${t:33} 1
    turbine::read_refcount_decr ${t:38:1} 1
    turbine::read_refcount_decr ${t:13} 1
    turbine::read_refcount_decr ${u:RealignDir} 1
    adlb::write_refcount_decr ${u:samplesOutput} 1
}


proc mainSampleLoop-foreach-wait3 { u:chrSampleArray u:gvcfChrCollection } {
    set tcltmp:container_sz [ adlb::enumerate ${u:gvcfChrCollection} count all 0 ]
    set tcltmp:iters ${tcltmp:container_sz}
    turbine::read_refcount_incr ${u:gvcfChrCollection} [ expr { ${tcltmp:iters} - 1 } ]
    adlb::write_refcount_incr ${u:chrSampleArray} [ expr { ${tcltmp:iters} - 1 } ]
    mainSampleLoop-foreach3:outer ${u:chrSampleArray} ${u:gvcfChrCollection} 0 [ expr { ${tcltmp:container_sz} - 1 } ] 1
}


proc mainSampleLoop-foreach3:outer { u:chrSampleArray u:gvcfChrCollection tcltmp:lo tcltmp:hi tcltmp:inc } {
    if { [ expr { ${tcltmp:lo} > ${tcltmp:hi} } ] } {
        return
    }
    while {1} {
        set tcltmp:itersleft [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
        if { [ expr { ${tcltmp:itersleft} <= 64 } ] } {
            mainSampleLoop-foreach3:inner ${u:chrSampleArray} ${u:gvcfChrCollection} ${tcltmp:lo} ${tcltmp:hi} ${tcltmp:inc}
            return
        } else {
            set tcltmp:skip [ expr { ${tcltmp:inc} * max(64,((${tcltmp:itersleft} - 1) / 16) + 1) } ]
            for { set tcltmp:splitstart [ expr { ${tcltmp:lo} + ${tcltmp:skip} } ] } { ${tcltmp:splitstart} <= ${tcltmp:hi} } { incr tcltmp:splitstart ${tcltmp:skip} } {
                set tcltmp:splitend [ expr { min(${tcltmp:hi},${tcltmp:splitstart} + ${tcltmp:skip} - 1) } ]
                set tcltmp:prio [ turbine::get_priority ]
                turbine::set_priority ${tcltmp:prio}
                adlb::spawn 0 "mainSampleLoop-foreach3:outer ${u:chrSampleArray} ${u:gvcfChrCollection} ${tcltmp:splitstart} ${tcltmp:splitend} ${tcltmp:inc}"
                turbine::reset_priority
            }
            set tcltmp:hi [ expr { ${tcltmp:lo} + ${tcltmp:skip} - 1 } ]
        }
    }
}


proc mainSampleLoop-foreach3:inner { u:chrSampleArray u:gvcfChrCollection tcltmp:lo tcltmp:hi tcltmp:inc } {
    set tcltmp:splitlen [ expr { ${tcltmp:hi} - ${tcltmp:lo} + 1 } ]
    set tcltmp:contents [ adlb::enumerate ${u:gvcfChrCollection} dict ${tcltmp:splitlen} ${tcltmp:lo} ]
    dict for {v:ind u:f} ${tcltmp:contents} {
        turbine::file_read_refcount_incr ${u:f} 1
        set optf:f [ turbine::get_file_path ${u:f} ]
        turbine::rule [ list ${optf:f} ] "__entry-async_op-strcat-1 {${optf:f}} ${v:ind} ${u:chrSampleArray}"
    }
    set tcltmp:iters [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
    turbine::read_refcount_decr ${u:gvcfChrCollection} [ expr { ${tcltmp:iters} } ]
}


proc __entry-async_op-strcat-1 { optf:f v:ind u:chrSampleArray } {
    # Var: $string v:of:f VALUE_OF [string:__of:f]
    # Var: $string v:t:181 VALUE_OF [string:__t:181]
    set v:of:f [ turbine::retrieve_string ${optf:f} CACHED 1 ]
    set v:t:181 "--variant ${v:of:f}"
    turbine::container_insert ${u:chrSampleArray} ${v:ind} ${v:t:181} string 1
}


proc __entry-call_foreign-split { u:RealignDir u:VarcallDir t:13 t:146 t:185 t:187 t:189 t:190 t:195 t:36:1 t:38:1 t:90:1 v:alias:sampleName u:dedupsortedbam u:gvcfChrCollection u:sampleName } {
    # Var: $string v:t:90:1 VALUE_OF [string:__t:90:1]
    # Var: $string$[int] v:indices VALUE_OF [string[int]:indices]
    set v:t:90:1 [ turbine::retrieve_string ${t:90:1} CACHED 1 ]
    set v:indices [ turbine::split_impl ${v:t:90:1} ":" ]
    set tcltmp:iters [ dict size ${v:indices} ]
    turbine::read_refcount_incr ${u:sampleName} [ expr { 3 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:187} [ expr { 2 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:185} [ expr { 2 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:13} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:189} [ expr { 2 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:146} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:190} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:38:1} [ expr { 2 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${u:VarcallDir} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:36:1} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:195} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${u:RealignDir} [ expr { 2 * ${tcltmp:iters} } ]
    adlb::write_refcount_incr ${u:gvcfChrCollection} [ expr { ${tcltmp:iters} } ]
    dict for {v:chrIndex v:chr} ${v:indices} {
        # Var: string u:chr RENAMED [string:chr] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():414:28
        # Var: string t:95 RENAMED [string:__t:95] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():418:29
        # Var: file u:chrdedupsortedbam RENAMED [file:chrdedupsortedbam] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():419:8
        # Var: file u:recalibratedbam RENAMED [file:recalibratedbam] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():421:68
        # Var: string t:101 RENAMED [string:__t:101] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():424:25
        # Var: file u:gvcfSampleChr RENAMED [file:gvcfSampleChr] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():424:66
        # Var: string t:104 RENAMED [string:__t:104] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():426:22
        # Var: file u:recalfiles RENAMED [file:recalfiles] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():427:8
        # Var: string[int] t:115 RENAMED [string[int]:__t:115] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():434:41
        # Var: string[int] u:recalparmsindels RENAMED [string[int]:recalparmsindels] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():440:4
        # Var: string[int] u:realparms RENAMED [string[int]:realparms] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():441:4
        # Var: int u:ploidy RENAMED [int:ploidy] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():499:4
        # Var: $string v:t:116 VALUE_OF [string:__t:116]
        # Var: $boolean v:t:159 VALUE_OF [boolean:__t:159]
        lassign [ adlb::multicreate [ list string 2 1 66 ] [ list string 1 1 67 ] [ list string 1 1 70 ] [ list string 2 1 72 ] [ list container integer string 1 1 74 ] [ list container integer string 2 1 75 ] [ list container integer string 1 1 76 ] [ list integer 1 1 77 ] ] u:chr t:95 t:101 t:104 t:115 u:recalparmsindels u:realparms u:ploidy
        turbine::c::log "allocated u:chr=<${u:chr}> t:95=<${t:95}> t:101=<${t:101}> t:104=<${t:104}> t:115=<${t:115}>"
        turbine::c::log "allocated u:recalparmsindels=<${u:recalparmsindels}> u:realparms=<${u:realparms}> u:ploidy=<${u:ploidy}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 3 1 68 ] [ list file 3 1 69 ] [ list file 1 1 71 ] [ list file 2 1 73 ] ] [ list 1 1 1 1 ] ] u:chrdedupsortedbam u:recalibratedbam u:gvcfSampleChr u:recalfiles
        turbine::store_string ${u:chr} ${v:chr}
        set v:t:116 "${v:chr}"
        turbine::array_kv_build ${t:115} [ ::adlb::dict_create 0 ${v:t:116} ] 1 integer string
        f:samtools_view ${u:chrdedupsortedbam} ${t:36:1} ${u:dedupsortedbam} ${t:38:1} ${t:115} -100 "HARD" "RANK"
        set v:t:159 [ string equal ${v:chr} "M" ]
        if { ${v:t:159} } {
            turbine::store_integer ${u:ploidy} 1
        } else {
            turbine::store_integer ${u:ploidy} 2
        }
        turbine::rule [ list ${t:146} ] [ list mainSampleLoop-if3 ${u:RealignDir} ${t:146} ${t:185} ${t:187} ${t:189} ${t:36:1} ${t:38:1} ${t:95} ${v:alias:sampleName} ${v:chr} ${u:chr} ${u:chrdedupsortedbam} ${u:realparms} ${u:recalibratedbam} ${u:recalparmsindels} ${u:sampleName} ]
        turbine::rule [ list ${u:VarcallDir} ] [ list __entry-async_op-strcat-2 ${u:VarcallDir} ${t:101} ${v:alias:sampleName} ${v:chr} ${u:gvcfSampleChr} ]
        turbine::rule [ list ${t:13} ] [ list __entry-async_op-strcat-3 ${t:104} ${t:13} ${v:alias:sampleName} ${v:chr} ${u:recalfiles} ]
        turbine::rule [ list ${u:RealignDir} ] [ list __entry-optmerged-2 ${u:RealignDir} ${t:101} ${t:104} ${t:185} ${t:187} ${t:189} ${t:190} ${t:195} ${t:38:1} ${t:95} ${v:alias:sampleName} ${v:chr} ${v:chrIndex} ${u:chrdedupsortedbam} ${u:gvcfChrCollection} ${u:gvcfSampleChr} ${u:ploidy} ${u:realparms} ${u:recalfiles} ${u:recalibratedbam} ${u:recalparmsindels} ${u:sampleName} ]
        turbine::read_refcount_decr ${t:115} 1
    }
    turbine::read_refcount_decr ${t:189} 1
    turbine::read_refcount_decr ${t:187} 1
    turbine::read_refcount_decr ${t:36:1} 1
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
    turbine::read_refcount_decr ${t:146} 1
    turbine::read_refcount_decr ${t:13} 1
    turbine::read_refcount_decr ${t:190} 1
    turbine::read_refcount_decr ${t:195} 1
    turbine::read_refcount_decr ${t:185} 1
    turbine::read_refcount_decr ${u:sampleName} 1
    turbine::read_refcount_decr ${u:VarcallDir} 1
    turbine::read_refcount_decr ${t:38:1} 1
    turbine::read_refcount_decr ${u:RealignDir} 1
    adlb::write_refcount_decr ${u:gvcfChrCollection} 1
}


proc mainSampleLoop-if3 { u:RealignDir t:146 t:185 t:187 t:189 t:36:1 t:38:1 t:95 v:alias:sampleName v:chr u:chr u:chrdedupsortedbam u:realparms u:recalibratedbam u:recalparmsindels u:sampleName } {
    # Var: $boolean v:__t:146 RENAMED [$boolean:__v:__t:146] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():473:28
    set v:__t:146 [ turbine::retrieve_integer ${t:146} CACHED 1 ]
    if { ${v:__t:146} } {
        # Var: file u:realignedbam RENAMED [file:realignedbam] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():478:11
        # Var: void t:153 RENAMED [void:__t:153] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():481:5
        lassign [ adlb::multicreate [ list integer 1 1 79 ] ] t:153
        turbine::c::log "allocated t:153=<${t:153}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 2 1 78 ] ] [ list 1 ] ] u:realignedbam
        turbine::read_refcount_incr ${u:RealignDir} 1
        turbine::read_refcount_incr ${t:38:1} 1
        turbine::read_refcount_incr ${u:realparms} 1
        turbine::read_refcount_incr ${u:sampleName} 1
        turbine::read_refcount_incr ${t:95} 1
        turbine::read_refcount_incr ${t:185} 1
        turbine::read_refcount_incr ${t:187} 1
        turbine::read_refcount_incr ${t:189} 1
        f:samtools_index ${t:153} ${t:36:1} ${u:chrdedupsortedbam} -100 "HARD" "RANK"
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:recalibrateBam {${u:recalibratedbam}} ${u:sampleName} ${u:chr} {${u:realignedbam}} ${u:recalparmsindels}"
        turbine::reset_priority
        turbine::rule [ list ${u:RealignDir} ] [ list __entry-optmerged-1 ${u:RealignDir} ${t:153} ${t:185} ${t:187} ${t:189} ${t:38:1} ${t:95} ${v:alias:sampleName} ${v:chr} ${u:chrdedupsortedbam} ${u:realignedbam} ${u:realparms} ${u:sampleName} ]
    } else {
        # Var: void t:156 RENAMED [void:__t:156] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():493:5
        lassign [ adlb::multicreate [ list integer 1 1 81 ] ] t:156
        turbine::c::log "allocated t:156=<${t:156}>"
        f:samtools_index ${t:156} ${t:36:1} ${u:chrdedupsortedbam} -100 "HARD" "RANK"
        turbine::rule [ list ${t:156} ] "mainSampleLoop-chain3 ${t:156} ${u:chr} {${u:chrdedupsortedbam}} {${u:recalibratedbam}} ${u:recalparmsindels} ${u:sampleName}"
    }
    turbine::file_read_refcount_decr ${u:chrdedupsortedbam} 1
    turbine::read_refcount_decr ${t:189} 1
    turbine::read_refcount_decr ${t:187} 1
    turbine::read_refcount_decr ${t:36:1} 1
    turbine::file_read_refcount_decr ${u:recalibratedbam} 1
    turbine::read_refcount_decr ${u:recalparmsindels} 1
    turbine::read_refcount_decr ${t:185} 1
    turbine::read_refcount_decr ${t:95} 1
    turbine::read_refcount_decr ${u:chr} 1
    turbine::read_refcount_decr ${u:sampleName} 1
    turbine::read_refcount_decr ${u:realparms} 1
    turbine::read_refcount_decr ${t:38:1} 1
    turbine::read_refcount_decr ${u:RealignDir} 1
}


proc __entry-optmerged-1 { u:RealignDir t:153 t:185 t:187 t:189 t:38:1 t:95 v:alias:sampleName v:chr u:chrdedupsortedbam u:realignedbam u:realparms u:sampleName } {
    # Var: $string v:RealignDir:3 VALUE_OF [string:RealignDir]
    # Var: $string v:t:150 VALUE_OF [string:__t:150]
    set v:RealignDir:3 [ turbine::retrieve_string ${u:RealignDir} CACHED 1 ]
    set v:t:150 "${v:RealignDir:3}${v:alias:sampleName}.${v:chr}.realigned.bam"
    turbine::set_filename_val ${u:realignedbam} ${v:t:150}
    turbine::rule [ list ${t:153} ] [ list mainSampleLoop-chain2 ${t:153} ${t:185} ${t:187} ${t:189} ${t:38:1} ${t:95} ${v:RealignDir:3} ${v:alias:sampleName} ${v:chr} ${v:t:150} ${u:chrdedupsortedbam} ${u:realignedbam} ${u:realparms} ${u:sampleName} ]
}


proc mainSampleLoop-chain2 { t:153 t:185 t:187 t:189 t:38:1 t:95 v:RealignDir:3 v:alias:sampleName v:chr v:t:150 u:chrdedupsortedbam u:realignedbam u:realparms u:sampleName } {
    # Var: file u:intervals RENAMED [file:intervals] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:realignBam():235:59
    # Var: $void v:t:1:7 VALUE_OF [void:__t:1:7]
    # Var: $string v:t:7:2 VALUE_OF [string:__t:7:2]
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 80 ] ] [ list 1 ] ] u:intervals
    set v:t:1:7 [ turbine::printf_local "\n\n\n\n\nThis printed from realignBam\n\n\n\n\n\n\n" ]
    set v:t:7:2 "${v:RealignDir:3}${v:alias:sampleName}.${v:chr}.realignTargetCreator.intervals"
    turbine::set_filename_val ${u:intervals} ${v:t:7:2}
    turbine::rule [ list ${t:185} ${t:187} ${t:189} ${t:38:1} ${t:95} [ turbine::get_file_td ${u:chrdedupsortedbam} ] ${u:realparms} ] [ list RealignerTargetCreator-app-leaf1 ${t:185} ${t:187} ${t:189} ${t:38:1} ${t:95} ${v:t:150} ${v:t:7:2} ${u:chrdedupsortedbam} ${u:intervals} ${u:realignedbam} ${u:realparms} ${u:sampleName} ]
    turbine::read_refcount_decr ${t:153} 1
}


proc RealignerTargetCreator-app-leaf1 { t:185 t:187 t:189 t:38:1 t:95 v:t:150 v:t:7:2 u:chrdedupsortedbam u:intervals u:realignedbam u:realparms u:sampleName } {
    # Var: $string v:javadir:2 RENAMED [$string:__v:javadir] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():9:121
    # Var: $string v:gatkdir:2 RENAMED [$string:__v:gatkdir] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():9:121
    # Var: $string v:reference:2 RENAMED [$string:__v:reference] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():9:121
    # Var: $string v:__filename:inputFile RENAMED [$string:__v:__filename:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():9:121
    # Var: $string$[int] v:known RENAMED [$string$[int]:__v:known] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():9:121
    # Var: $int v:thr RENAMED [$int:__v:thr] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():9:121
    # Var: $file v:inputFile RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():9:121
    # Var: $file v:outputfile:2 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():9:121
    set v:javadir:2 [ turbine::retrieve_string ${t:185} CACHED 1 ]
    set v:gatkdir:2 [ turbine::retrieve_string ${t:187} CACHED 1 ]
    set v:reference:2 [ turbine::retrieve_string ${t:189} CACHED 1 ]
    set v:__filename:inputFile [ turbine::retrieve_string ${t:95} CACHED 1 ]
    set v:known [ turbine::unpack_args ${u:realparms} 1 string ]
    set v:thr [ turbine::retrieve_integer ${t:38:1} CACHED 1 ]
    set v:inputFile [ turbine::retrieve_file ${u:chrdedupsortedbam} ]
    set tcltmp:init_rc 2
    set v:outputfile:2 [ turbine::create_local_file_ref ${v:t:7:2} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:2 "-Xmx8g" "-jar" ${v:gatkdir:2} "-T" "RealignerTargetCreator" "-R" ${v:reference:2} "-I" ${v:__filename:inputFile} {*}${v:known} "-nt" ${v:thr} "-o" ${v:t:7:2} [ dict create ] ]
    turbine::exec_external ${v:javadir:2} [ dict create ] "-Xmx8g" "-jar" ${v:gatkdir:2} "-T" "RealignerTargetCreator" "-R" ${v:reference:2} "-I" ${v:__filename:inputFile} {*}${v:known} "-nt" ${v:thr} "-o" ${v:t:7:2}
    turbine::store_file ${u:intervals} v:outputfile:2 0
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list IndelRealigner-app-leaf1 ${v:__filename:inputFile} ${v:gatkdir:2} ${v:javadir:2} ${v:known} ${v:reference:2} ${v:t:150} ${v:t:7:2} ${u:chrdedupsortedbam} ${u:intervals} ${u:realignedbam} ${u:sampleName} ]
    turbine::reset_priority
    turbine::decr_local_file_refcount v:outputfile:2
    turbine::read_refcount_decr ${u:realparms} 1
}


proc IndelRealigner-app-leaf1 { v:__filename:inputFile v:gatkdir:2 v:javadir:2 v:known v:reference:2 v:t:150 v:t:7:2 u:chrdedupsortedbam u:intervals u:realignedbam u:sampleName } {
    # Var: string c:s_realignmen OPT_TEMPORARY
    global c:s_realignmen
    # Var: $file v:inputFile:1 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:IndelRealigner():14:133
    # Var: $file v:intervals RENAMED [$file:__v:intervals] ./pipelinefunctions/realign_varcall_by_chr.swift:IndelRealigner():14:133
    # Var: $file v:outputfile:1 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:IndelRealigner():14:133
    set v:inputFile:1 [ turbine::retrieve_file ${u:chrdedupsortedbam} CACHED 1 ]
    set v:intervals [ turbine::retrieve_file ${u:intervals} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:1 [ turbine::create_local_file_ref ${v:t:150} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:2 "-Xmx8g" "-jar" ${v:gatkdir:2} "-T" "IndelRealigner" "-R" ${v:reference:2} "-I" ${v:__filename:inputFile} {*}${v:known} "--targetIntervals" ${v:t:7:2} "-o" ${v:t:150} [ dict create ] ]
    turbine::exec_external ${v:javadir:2} [ dict create ] "-Xmx8g" "-jar" ${v:gatkdir:2} "-T" "IndelRealigner" "-R" ${v:reference:2} "-I" ${v:__filename:inputFile} {*}${v:known} "--targetIntervals" ${v:t:7:2} "-o" ${v:t:150}
    turbine::store_file ${u:realignedbam} v:outputfile:1 0
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:checkBam {${u:realignedbam}} ${u:sampleName} ${c:s_realignmen}"
    turbine::reset_priority
    turbine::decr_local_file_refcount v:outputfile:1
}


proc mainSampleLoop-chain3 { t:156 u:chr u:chrdedupsortedbam u:recalibratedbam u:recalparmsindels u:sampleName } {
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:recalibrateBam {${u:recalibratedbam}} ${u:sampleName} ${u:chr} {${u:chrdedupsortedbam}} ${u:recalparmsindels}"
    turbine::reset_priority
    turbine::read_refcount_decr ${t:156} 1
}


proc __entry-async_op-strcat-2 { u:VarcallDir t:101 v:alias:sampleName v:chr u:gvcfSampleChr } {
    # Var: $string v:VarcallDir:2 VALUE_OF [string:VarcallDir]
    # Var: $string v:t:101 VALUE_OF [string:__t:101]
    set v:VarcallDir:2 [ turbine::retrieve_string ${u:VarcallDir} CACHED 1 ]
    set v:t:101 "${v:VarcallDir:2}${v:alias:sampleName}.${v:chr}.raw.g.vcf"
    turbine::store_string ${t:101} ${v:t:101}
    turbine::set_filename_val ${u:gvcfSampleChr} ${v:t:101}
}


proc __entry-async_op-strcat-3 { t:104 t:13 v:alias:sampleName v:chr u:recalfiles } {
    # Var: $string v:t:13:1 VALUE_OF [string:__t:13]
    # Var: $string v:t:104 VALUE_OF [string:__t:104]
    set v:t:13:1 [ turbine::retrieve_string ${t:13} CACHED 1 ]
    set v:t:104 "${v:t:13:1}/${v:alias:sampleName}.${v:chr}.recal_foundfiles.txt"
    turbine::store_string ${t:104} ${v:t:104}
    turbine::set_filename_val ${u:recalfiles} ${v:t:104}
}


proc __entry-optmerged-2 { u:RealignDir t:101 t:104 t:185 t:187 t:189 t:190 t:195 t:38:1 t:95 v:alias:sampleName v:chr v:chrIndex u:chrdedupsortedbam u:gvcfChrCollection u:gvcfSampleChr u:ploidy u:realparms u:recalfiles u:recalibratedbam u:recalparmsindels u:sampleName } {
    # Var: $string v:RealignDir:1 VALUE_OF [string:RealignDir]
    # Var: $string v:t:95 VALUE_OF [string:__t:95]
    # Var: $string v:t:98 VALUE_OF [string:__t:98]
    set v:RealignDir:1 [ turbine::retrieve_string ${u:RealignDir} CACHED 1 ]
    set v:t:95 "${v:RealignDir:1}${v:alias:sampleName}.${v:chr}.wdups.sorted.bam"
    turbine::store_string ${t:95} ${v:t:95}
    set v:t:98 "${v:RealignDir:1}${v:alias:sampleName}.${v:chr}.recalibrated.bam"
    turbine::set_filename_val ${u:chrdedupsortedbam} ${v:t:95}
    turbine::set_filename_val ${u:recalibratedbam} ${v:t:98}
    turbine::rule [ list [ turbine::get_file_td ${u:chrdedupsortedbam} ] ] [ list __entry-optmerged-3 ${t:104} ${t:190} ${v:chr} ${u:chrdedupsortedbam} ${u:realparms} ${u:recalfiles} ${u:recalparmsindels} ${u:sampleName} ]
    turbine::rule [ list ${t:101} ${t:185} ${t:187} ${t:189} ${t:195} ${t:38:1} [ turbine::get_file_td ${u:recalibratedbam} ] ] [ list HaplotypeCaller-app-leaf1 ${t:101} ${t:104} ${t:185} ${t:187} ${t:189} ${t:195} ${t:38:1} ${v:chr} ${v:chrIndex} ${v:t:98} ${u:gvcfChrCollection} ${u:gvcfSampleChr} ${u:ploidy} ${u:recalfiles} ${u:recalibratedbam} ]
}


proc __entry-optmerged-3 { t:104 t:190 v:chr u:chrdedupsortedbam u:realparms u:recalfiles u:recalparmsindels u:sampleName } {
    # Var: string c:s_sknownSite OPT_TEMPORARY
    global c:s_sknownSite
    # Var: string[string] u:vars /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:561:0
    global u:vars
    # Var: string c:s_realignmen OPT_TEMPORARY
    global c:s_realignmen
    # Var: string c:s_sknown_g OPT_TEMPORARY
    global c:s_sknown_g
    # Var: string t:122 RENAMED [string:__t:122] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():448:40
    # Var: file t:131 RENAMED [file:__t:131] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():453:28
    # Var: file t:140 RENAMED [file:__t:140] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:mainSampleLoop():461:28
    # Var: $string v:t:125 VALUE_OF [string:__t:125]
    lassign [ adlb::multicreate [ list string 1 1 82 ] ] t:122
    turbine::c::log "allocated t:122=<${t:122}>"
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 83 ] [ list file 1 1 84 ] ] [ list 0 0 ] ] t:131 t:140
    turbine::container_reference ${u:vars} "INDELDIR" ${t:122} string
    set v:t:125 "*${v:chr}.vcf"
    f:sed ${t:131} ${u:recalfiles} ${c:s_sknownSite} -100 "HARD" "RANK"
    f:sed ${t:140} ${u:recalfiles} ${c:s_sknown_g} -100 "HARD" "RANK"
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:checkBam {${u:chrdedupsortedbam}} ${u:sampleName} ${c:s_realignmen}"
    turbine::reset_priority
    turbine::rule [ list ${t:104} ${t:122} ${t:190} ] [ list __entry-async_op-strcat-4 ${t:104} ${t:122} ${t:190} ${v:t:125} ${u:recalfiles} ]
    turbine::rule [ list [ turbine::get_file_td ${t:131} ] ] "__entry-call_foreign-read {${t:131}} ${u:recalparmsindels}"
    turbine::rule [ list [ turbine::get_file_td ${t:140} ] ] "__entry-call_foreign-read-1 {${t:140}} ${u:realparms}"
    turbine::file_read_refcount_decr ${u:recalfiles} 1
}


proc __entry-async_op-strcat-4 { t:104 t:122 t:190 v:t:125 u:recalfiles } {
    # Var: $string v:t:190:2 VALUE_OF [string:__t:190]
    # Var: $string v:t:122 VALUE_OF [string:__t:122]
    # Var: $string v:t:118 VALUE_OF [string:__t:118]
    # Var: $string v:__filename:output RENAMED [$string:__v:__filename:output] ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    # Var: $file v:output RENAMED [$file:__v:output] ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    set v:t:190:2 [ turbine::retrieve_string ${t:190} CACHED 1 ]
    set v:t:122 [ turbine::retrieve_string ${t:122} CACHED 1 ]
    set v:t:118 "${v:t:190:2}/${v:t:122}/"
    set v:__filename:output [ turbine::retrieve_string ${t:104} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: "find" ${v:t:118} "-name" ${v:t:125} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external "find" [ dict create "stdout" ${v:__filename:output} ] ${v:t:118} "-name" ${v:t:125}
    turbine::store_file ${u:recalfiles} v:output 0
    turbine::decr_local_file_refcount v:output
}


proc __entry-call_foreign-read { t:131 u:recalparmsindels } {
    # Var: $file v:t:131 VALUE_OF [file:__t:131]
    # Var: $string v:t:130 VALUE_OF [string:__t:130]
    # Var: $int v:n RENAMED [$int:__v:n]
    # Var: $string v:t:129 VALUE_OF [string:__t:129]
    # Var: $string v:o RENAMED [$string:__v:o]
    # Var: $string$[int] v:recalparmsindels VALUE_OF [string[int]:recalparmsindels]
    set v:t:131 [ turbine::retrieve_file ${t:131} CACHED 1 ]
    set v:t:130 [ turbine::file_read_local ${v:t:131} ]
    set v:n [ string length ${v:t:130} ]
    set v:t:129 [ turbine::replace_all_impl ${v:t:130} "\n" " " 0 ${v:n} ]
    set v:o [ string trim ${v:t:129} ]
    set v:recalparmsindels [ turbine::split_impl ${v:o} " " ]
    turbine::build_rec ${u:recalparmsindels} ${v:recalparmsindels} [ list container integer string ] 0 1
}


proc __entry-call_foreign-read-1 { t:140 u:realparms } {
    # Var: $file v:t:140 VALUE_OF [file:__t:140]
    # Var: $string v:t:139 VALUE_OF [string:__t:139]
    # Var: $int v:n:1 RENAMED [$int:__v:n]
    # Var: $string v:t:138 VALUE_OF [string:__t:138]
    # Var: $string v:o:1 RENAMED [$string:__v:o]
    # Var: $string$[int] v:realparms VALUE_OF [string[int]:realparms]
    set v:t:140 [ turbine::retrieve_file ${t:140} CACHED 1 ]
    set v:t:139 [ turbine::file_read_local ${v:t:140} ]
    set v:n:1 [ string length ${v:t:139} ]
    set v:t:138 [ turbine::replace_all_impl ${v:t:139} "\n" " " 0 ${v:n:1} ]
    set v:o:1 [ string trim ${v:t:138} ]
    set v:realparms [ turbine::split_impl ${v:o:1} " " ]
    turbine::build_rec ${u:realparms} ${v:realparms} [ list container integer string ] 0 1
}


proc HaplotypeCaller-app-leaf1 { t:101 t:104 t:185 t:187 t:189 t:195 t:38:1 v:chr v:chrIndex v:t:98 u:gvcfChrCollection u:gvcfSampleChr u:ploidy u:recalfiles u:recalibratedbam } {
    # Var: $string v:javadir:3 RENAMED [$string:__v:javadir] ./pipelinefunctions/realign_varcall_by_chr.swift:HaplotypeCaller():29:455
    # Var: $string v:gatkdir:3 RENAMED [$string:__v:gatkdir] ./pipelinefunctions/realign_varcall_by_chr.swift:HaplotypeCaller():29:455
    # Var: $string v:reference:3 RENAMED [$string:__v:reference] ./pipelinefunctions/realign_varcall_by_chr.swift:HaplotypeCaller():29:455
    # Var: $string v:dbsnp RENAMED [$string:__v:dbsnp] ./pipelinefunctions/realign_varcall_by_chr.swift:HaplotypeCaller():29:455
    # Var: $string v:__filename:outputfile:3 RENAMED [$string:__v:__filename:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:HaplotypeCaller():29:455
    # Var: $int v:ploidy RENAMED [$int:__v:ploidy] ./pipelinefunctions/realign_varcall_by_chr.swift:HaplotypeCaller():29:455
    # Var: $int v:thr:1 RENAMED [$int:__v:thr] ./pipelinefunctions/realign_varcall_by_chr.swift:HaplotypeCaller():29:455
    # Var: $file v:inputFile:2 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:HaplotypeCaller():29:455
    # Var: $file v:outputfile:3 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:HaplotypeCaller():29:455
    set v:javadir:3 [ turbine::retrieve_string ${t:185} CACHED 1 ]
    set v:gatkdir:3 [ turbine::retrieve_string ${t:187} CACHED 1 ]
    set v:reference:3 [ turbine::retrieve_string ${t:189} CACHED 1 ]
    set v:dbsnp [ turbine::retrieve_string ${t:195} CACHED 1 ]
    set v:__filename:outputfile:3 [ turbine::retrieve_string ${t:101} CACHED 1 ]
    set v:ploidy [ turbine::retrieve_integer ${u:ploidy} CACHED 1 ]
    set v:thr:1 [ turbine::retrieve_integer ${t:38:1} CACHED 1 ]
    set v:inputFile:2 [ turbine::retrieve_file ${u:recalibratedbam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:3 [ turbine::create_local_file_ref ${v:__filename:outputfile:3} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:3 "-Xmx8g" "-jar" ${v:gatkdir:3} "-T" "HaplotypeCaller" "-R" ${v:reference:3} "-I" ${v:t:98} "--dbsnp" ${v:dbsnp} "-o" ${v:__filename:outputfile:3} "--emitRefConfidence" "GVCF" "-gt_mode" "DISCOVERY" "-A" "Coverage" "-A" "FisherStrand" "-A" "StrandOddsRatio" "-A" "HaplotypeScore" "-A" "MappingQualityRankSumTest" "-A" "QualByDepth" "-A" "RMSMappingQuality" "-A" "ReadPosRankSumTest" "-stand_call_conf" 30 "-stand_emit_conf" 30 "--sample_ploidy" ${v:ploidy} "-nt" 1 "-nct" ${v:thr:1} "-L" ${v:chr} [ dict create ] ]
    turbine::exec_external ${v:javadir:3} [ dict create ] "-Xmx8g" "-jar" ${v:gatkdir:3} "-T" "HaplotypeCaller" "-R" ${v:reference:3} "-I" ${v:t:98} "--dbsnp" ${v:dbsnp} "-o" ${v:__filename:outputfile:3} "--emitRefConfidence" "GVCF" "-gt_mode" "DISCOVERY" "-A" "Coverage" "-A" "FisherStrand" "-A" "StrandOddsRatio" "-A" "HaplotypeScore" "-A" "MappingQualityRankSumTest" "-A" "QualByDepth" "-A" "RMSMappingQuality" "-A" "ReadPosRankSumTest" "-stand_call_conf" 30 "-stand_emit_conf" 30 "--sample_ploidy" ${v:ploidy} "-nt" 1 "-nct" ${v:thr:1} "-L" ${v:chr}
    turbine::store_file ${u:gvcfSampleChr} v:outputfile:3 0
    turbine::container_insert ${u:gvcfChrCollection} ${v:chrIndex} ${u:gvcfSampleChr} file_ref 1
    turbine::rule [ list ${t:104} [ turbine::get_file_td ${u:recalfiles} ] ] "mainSampleLoop-chain5 ${t:104} {${u:recalfiles}}"
    turbine::decr_local_file_refcount v:outputfile:3
}


proc mainSampleLoop-chain5 { t:104 u:recalfiles } {
    # Var: $string v:__filename:f:1 RENAMED [$string:__v:__filename:f] ./pipelinefunctions/miscellaneous.swift:rm():21:13
    # Var: $file v:f:3 RENAMED [$file:__v:f] ./pipelinefunctions/miscellaneous.swift:rm():21:13
    # Var: $void v:v:2 RENAMED [$void:__v:v] ./pipelinefunctions/miscellaneous.swift:rm():21:13
    set v:__filename:f:1 [ turbine::retrieve_string ${t:104} CACHED 1 ]
    set v:f:3 [ turbine::retrieve_file ${u:recalfiles} CACHED 1 ]
    turbine::c::log [ list exec: "rm" ${v:__filename:f:1} [ dict create ] ]
    turbine::exec_external "rm" [ dict create ] ${v:__filename:f:1}
}


proc __entry-async_op-strcat-5 { u:VarcallDir t:185 t:187 t:189 t:195 v:alias:sampleName v:index:1 u:chrSampleArray u:gvcfSample u:samplesOutput } {
    # Var: $string v:VarcallDir:1 VALUE_OF [string:VarcallDir]
    # Var: $string v:t:93:1 VALUE_OF [string:__t:93:1]
    set v:VarcallDir:1 [ turbine::retrieve_string ${u:VarcallDir} CACHED 1 ]
    set v:t:93:1 "${v:VarcallDir:1}${v:alias:sampleName}.raw.g.vcf"
    turbine::set_filename_val ${u:gvcfSample} ${v:t:93:1}
    turbine::rule [ list ${t:185} ${t:187} ${t:189} ${t:195} ${u:chrSampleArray} ] [ list join-argwait ${t:185} ${t:187} ${t:189} ${t:195} ${v:index:1} ${v:t:93:1} ${u:chrSampleArray} ${u:gvcfSample} ${u:samplesOutput} ]
}


proc join-argwait { t:185 t:187 t:189 t:195 v:index:1 v:t:93:1 u:chrSampleArray u:gvcfSample u:samplesOutput } {
    # Var: $string$[int] v:A:1 RENAMED [$string$[int]:__v:A]
    # Var: $string v:s:5 RENAMED [$string:__v:s]
    # Var: $string v:javadir:4 RENAMED [$string:__v:javadir] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    # Var: $string v:gatkdir:4 RENAMED [$string:__v:gatkdir] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    # Var: $string v:reference:4 RENAMED [$string:__v:reference] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    # Var: $string v:dbsnp:1 RENAMED [$string:__v:dbsnp] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    # Var: $file v:outputfile:4 RENAMED [$file:__v:outputfile] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    set v:A:1 [ turbine::enumerate_rec ${u:chrSampleArray} [ list container string ] 0 1 ]
    set v:s:5 [ turbine::string_join_impl ${v:A:1} " " ]
    set v:javadir:4 [ turbine::retrieve_string ${t:185} CACHED 1 ]
    set v:gatkdir:4 [ turbine::retrieve_string ${t:187} CACHED 1 ]
    set v:reference:4 [ turbine::retrieve_string ${t:189} CACHED 1 ]
    set v:dbsnp:1 [ turbine::retrieve_string ${t:195} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:4 [ turbine::create_local_file_ref ${v:t:93:1} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:4 "-Xmx8g" "-jar" ${v:gatkdir:4} "-T" "CombineGVCFs" "-R" ${v:reference:4} "--dbsnp" ${v:dbsnp:1} ${v:s:5} "-o" ${v:t:93:1} [ dict create ] ]
    turbine::exec_external ${v:javadir:4} [ dict create ] "-Xmx8g" "-jar" ${v:gatkdir:4} "-T" "CombineGVCFs" "-R" ${v:reference:4} "--dbsnp" ${v:dbsnp:1} ${v:s:5} "-o" ${v:t:93:1}
    turbine::store_file ${u:gvcfSample} v:outputfile:4 0
    turbine::container_insert ${u:samplesOutput} ${v:index:1} ${u:gvcfSample} file_ref 1
    turbine::decr_local_file_refcount v:outputfile:4
}


proc __entry-async_op-eq_string-2 { t:146 t:33 } {
    # Var: $string v:t:33:6 VALUE_OF [string:__t:33]
    # Var: $boolean v:t:146 VALUE_OF [boolean:__t:146]
    set v:t:33:6 [ turbine::retrieve_string ${t:33} CACHED 1 ]
    set v:t:146 [ string equal ${v:t:33:6} "VC_REALIGN" ]
    turbine::store_integer ${t:146} ${v:t:146}
}


proc __entry-optmerged-4 { t:189 t:190 t:193 t:195 t:199 } {
    # Var: $string v:t:190 VALUE_OF [string:__t:190]
    set v:t:190 [ turbine::retrieve_string ${t:190} CACHED 1 ]
    turbine::rule [ list ${t:193} ] [ list __entry-async_op-strcat-6 ${t:189} ${t:193} ${v:t:190} ]
    turbine::rule [ list ${t:199} ] [ list __entry-async_op-strcat-7 ${t:195} ${t:199} ${v:t:190} ]
}


proc __entry-async_op-strcat-6 { t:189 t:193 v:t:190 } {
    # Var: $string v:t:193 VALUE_OF [string:__t:193]
    # Var: $string v:t:189 VALUE_OF [string:__t:189]
    set v:t:193 [ turbine::retrieve_string ${t:193} CACHED 1 ]
    set v:t:189 "${v:t:190}/${v:t:193}"
    turbine::store_string ${t:189} ${v:t:189}
}


proc __entry-async_op-strcat-7 { t:195 t:199 v:t:190 } {
    # Var: $string v:t:199 VALUE_OF [string:__t:199]
    # Var: $string v:t:195 VALUE_OF [string:__t:195]
    set v:t:199 [ turbine::retrieve_string ${t:199} CACHED 1 ]
    set v:t:195 "${v:t:190}/${v:t:199}"
    turbine::store_string ${t:195} ${v:t:195}
}


proc alignReads-if1 { t:1:10 t:31:1 t:38:1 v:alias:read1 v:alias:read2 u:alignedsam u:rgheader } {
    # Var: $boolean v:__t:1:5 RENAMED [$boolean:__v:__t:1] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:alignReads():156:28
    set v:__t:1:5 [ turbine::retrieve_integer ${t:1:10} CACHED 1 ]
    if { ${v:__t:1:5} } {
        # Var: string[string] u:vars /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:561:0
        global u:vars
        # Var: string t:5:6 RENAMED [string:__t:5] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:alignReads():158:22
        # Var: string t:7:5 RENAMED [string:__t:7] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:alignReads():158:52
        # Var: string[int] t:9:4 RENAMED [string[int]:__t:9] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:alignReads():159:9
        # Var: string t:10:4 RENAMED [string:__t:10] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:alignReads():159:9
        lassign [ adlb::multicreate [ list string 1 1 85 ] [ list string 1 1 86 ] [ list container integer string 1 1 87 ] [ list string 1 1 88 ] ] t:5:6 t:7:5 t:9:4 t:10:4
        turbine::c::log "allocated t:5:6=<${t:5:6}> t:7:5=<${t:7:5}> t:9:4=<${t:9:4}> t:10:4=<${t:10:4}>"
        turbine::container_reference ${u:vars} "BWADIR" ${t:5:6} string
        turbine::container_reference ${u:vars} "BWAINDEX" ${t:7:5} string
        turbine::container_reference ${u:vars} "BWAMEMPARAMS" ${t:10:4} string
        turbine::rule [ list ${t:10:4} ] [ list __entry-arr_copy_in_imm ${t:10:4} ${t:31:1} ${t:38:1} ${t:5:6} ${t:7:5} ${t:9:4} ${v:alias:read1} ${v:alias:read2} ${u:alignedsam} ${u:rgheader} ]
    } else {
        # Var: string[string] u:vars /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:561:0
        global u:vars
        # Var: string t:15:4 RENAMED [string:__t:15] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:alignReads():164:24
        # Var: string t:17:4 RENAMED [string:__t:17] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:alignReads():164:60
        lassign [ adlb::multicreate [ list string 1 1 89 ] [ list string 1 1 90 ] ] t:15:4 t:17:4
        turbine::c::log "allocated t:15:4=<${t:15:4}> t:17:4=<${t:17:4}>"
        turbine::container_reference ${u:vars} "NOVOALIGNDIR" ${t:15:4} string
        turbine::container_reference ${u:vars} "NOVOALIGNINDEX" ${t:17:4} string
        turbine::rule [ list ${t:15:4} ${t:17:4} ${t:31:1} ${t:38:1} ${u:rgheader} ] [ list novoalign-app-leaf1 ${t:15:4} ${t:17:4} ${t:31:1} ${t:38:1} ${v:alias:read1} ${v:alias:read2} ${u:alignedsam} ${u:rgheader} ]
    }
    turbine::read_refcount_decr ${t:31:1} 1
    turbine::read_refcount_decr ${t:38:1} 1
    turbine::read_refcount_decr ${u:rgheader} 1
}


proc __entry-arr_copy_in_imm { t:10:4 t:31:1 t:38:1 t:5:6 t:7:5 t:9:4 v:alias:read1 v:alias:read2 u:alignedsam u:rgheader } {
    # Var: $string v:t:10:4:1 VALUE_OF [string:__t:10:4]
    set v:t:10:4:1 [ turbine::retrieve_string ${t:10:4} CACHED 1 ]
    turbine::array_kv_build ${t:9:4} [ ::adlb::dict_create 0 ${v:t:10:4:1} ] 1 integer string
    turbine::rule [ list ${t:31:1} ${t:38:1} ${t:5:6} ${t:7:5} ${u:rgheader} ] [ list bwa_mem-app-leaf1 ${t:31:1} ${t:38:1} ${t:5:6} ${t:7:5} ${t:9:4} ${v:alias:read1} ${v:alias:read2} ${u:alignedsam} ${u:rgheader} ]
}


proc bwa_mem-app-leaf1 { t:31:1 t:38:1 t:5:6 t:7:5 t:9:4 v:alias:read1 v:alias:read2 u:alignedsam u:rgheader } {
    # Var: $string v:bwadir RENAMED [$string:__v:bwadir] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string$[int] v:bwamemparams RENAMED [$string$[int]:__v:bwamemparams] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $int v:PBSCORES RENAMED [$int:__v:PBSCORES] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:rgheader RENAMED [$string:__v:rgheader] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:INDEX RENAMED [$string:__v:INDEX] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:__filename:output:2 RENAMED [$string:__v:__filename:output] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $file v:output:2 RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    set v:bwadir [ turbine::retrieve_string ${t:5:6} CACHED 1 ]
    set v:bwamemparams [ turbine::unpack_args ${t:9:4} 1 string ]
    set v:PBSCORES [ turbine::retrieve_integer ${t:38:1} CACHED 1 ]
    set v:rgheader [ turbine::retrieve_string ${u:rgheader} CACHED 1 ]
    set v:INDEX [ turbine::retrieve_string ${t:7:5} CACHED 1 ]
    set v:__filename:output:2 [ turbine::retrieve_string ${t:31:1} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output:2 [ turbine::create_local_file_ref ${v:__filename:output:2} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:bwadir "mem" "-M" {*}${v:bwamemparams} "-t" ${v:PBSCORES} "-R" ${v:rgheader} ${v:INDEX} ${v:alias:read1} ${v:alias:read2} [ dict create "stdout" ${v:__filename:output:2} ] ]
    turbine::exec_external ${v:bwadir} [ dict create "stdout" ${v:__filename:output:2} ] "mem" "-M" {*}${v:bwamemparams} "-t" ${v:PBSCORES} "-R" ${v:rgheader} ${v:INDEX} ${v:alias:read1} ${v:alias:read2}
    turbine::store_file ${u:alignedsam} v:output:2 0
    turbine::decr_local_file_refcount v:output:2
    turbine::read_refcount_decr ${t:9:4} 1
}


proc novoalign-app-leaf1 { t:15:4 t:17:4 t:31:1 t:38:1 v:alias:read1 v:alias:read2 u:alignedsam u:rgheader } {
    # Var: $string v:novoaligndir RENAMED [$string:__v:novoaligndir] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $int v:PBSCORES:1 RENAMED [$int:__v:PBSCORES] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $string v:INDEX:1 RENAMED [$string:__v:INDEX] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $string v:rgheader:1 RENAMED [$string:__v:rgheader] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $string v:__filename:output:1 RENAMED [$string:__v:__filename:output] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $file v:output:1 RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    set v:novoaligndir [ turbine::retrieve_string ${t:15:4} CACHED 1 ]
    set v:PBSCORES:1 [ turbine::retrieve_integer ${t:38:1} CACHED 1 ]
    set v:INDEX:1 [ turbine::retrieve_string ${t:17:4} CACHED 1 ]
    set v:rgheader:1 [ turbine::retrieve_string ${u:rgheader} CACHED 1 ]
    set v:__filename:output:1 [ turbine::retrieve_string ${t:31:1} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output:1 [ turbine::create_local_file_ref ${v:__filename:output:1} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:novoaligndir "-c" ${v:PBSCORES:1} "-d" ${v:INDEX:1} "-f" ${v:alias:read1} ${v:alias:read2} "-o" "SAM" ${v:rgheader:1} [ dict create "stdout" ${v:__filename:output:1} ] ]
    turbine::exec_external ${v:novoaligndir} [ dict create "stdout" ${v:__filename:output:1} ] "-c" ${v:PBSCORES:1} "-d" ${v:INDEX:1} "-f" ${v:alias:read1} ${v:alias:read2} "-o" "SAM" ${v:rgheader:1}
    turbine::store_file ${u:alignedsam} v:output:1 0
    turbine::decr_local_file_refcount v:output:1
}


proc markDuplicates-if1 { u:AlignDir t:13 t:26:1 t:31:1 t:36:1 t:38:1 t:41:1 t:5:7 t:6:7 v:alias:sampleName u:alignedbam u:alignedsam u:dedupsortedbam } {
    # Var: $boolean v:__t:5:6 RENAMED [$boolean:__v:__t:5] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:markDuplicates():188:35
    set v:__t:5:6 [ turbine::retrieve_integer ${t:5:7} CACHED 1 ]
    if { ${v:__t:5:6} } {
        # Var: string[string] u:vars /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:561:0
        global u:vars
        # Var: file u:dedupsam RENAMED [file:dedupsam] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:markDuplicates():189:64
        # Var: file u:dedupbam RENAMED [file:dedupbam] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:markDuplicates():190:47
        # Var: string t:16:5 RENAMED [string:__t:16] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:markDuplicates():193:24
        # Var: string t:26:4 RENAMED [string:__t:26] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:markDuplicates():199:28
        # Var: string[int] t:33:4 RENAMED [string[int]:__t:33] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:markDuplicates():200:38
        lassign [ adlb::multicreate [ list string 1 1 93 ] [ list string 1 1 94 ] [ list container integer string 1 1 95 ] ] t:16:5 t:26:4 t:33:4
        turbine::c::log "allocated t:16:5=<${t:16:5}> t:26:4=<${t:26:4}> t:33:4=<${t:33:4}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 91 ] [ list file 1 1 92 ] ] [ list 1 1 ] ] u:dedupsam u:dedupbam
        turbine::file_read_refcount_incr ${u:alignedsam} 1
        turbine::read_refcount_incr ${t:31:1} 1
        turbine::array_kv_build ${t:33:4} [ ::adlb::dict_create 0 "--compression" 1 "1" ] 1 integer string
        turbine::container_reference ${u:vars} "SAMBLASTERDIR" ${t:16:5} string
        f:samtools_view ${u:dedupbam} ${t:36:1} ${u:dedupsam} ${t:38:1} ${t:41:1} -100 "HARD" "RANK"
        turbine::container_reference ${u:vars} "NOVOSORTDIR" ${t:26:4} string
        f:novosort ${u:dedupsortedbam} ${t:26:4} ${u:dedupbam} ${t:13} ${t:38:1} ${t:33:4} -100 "HARD" "RANK"
        turbine::rule [ list ${t:13} ] [ list __entry-async_op-strcat-8 ${t:13} ${t:16:5} ${t:31:1} ${v:alias:sampleName} ${u:alignedsam} ${u:dedupsam} ]
        turbine::rule [ list ${u:AlignDir} ] [ list __entry-async_op-strcat-9 ${u:AlignDir} ${v:alias:sampleName} ${u:dedupbam} ]
        turbine::read_refcount_decr ${t:33:4} 1
        turbine::read_refcount_decr ${t:26:4} 1
        turbine::file_read_refcount_decr ${u:dedupbam} 1
    } else {
        turbine::file_read_refcount_incr ${u:alignedbam} 1
        turbine::read_refcount_incr ${t:38:1} 1
        turbine::read_refcount_incr ${t:26:1} 1
        turbine::read_refcount_incr ${t:6:7} 1
        turbine::file_read_refcount_incr ${u:dedupsortedbam} 1
        turbine::rule [ list ${t:6:7} ] [ list __entry-async_op-eq_string-3 ${u:AlignDir} ${t:13} ${t:26:1} ${t:38:1} ${t:6:7} ${v:alias:sampleName} ${u:alignedbam} ${u:dedupsortedbam} ]
    }
    turbine::read_refcount_decr ${t:31:1} 1
    turbine::read_refcount_decr ${t:41:1} 1
    turbine::read_refcount_decr ${t:36:1} 1
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
    turbine::read_refcount_decr ${t:6:7} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::read_refcount_decr ${t:26:1} 1
    turbine::read_refcount_decr ${t:38:1} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${t:13} 1
    turbine::read_refcount_decr ${u:AlignDir} 1
}


proc __entry-async_op-strcat-8 { t:13 t:16:5 t:31:1 v:alias:sampleName u:alignedsam u:dedupsam } {
    # Var: $string v:t:13:2 VALUE_OF [string:__t:13]
    # Var: $string v:t:9:5 VALUE_OF [string:__t:9:5]
    set v:t:13:2 [ turbine::retrieve_string ${t:13} CACHED 1 ]
    set v:t:9:5 "${v:t:13:2}/align/${v:alias:sampleName}.wdups.sam"
    turbine::set_filename_val ${u:dedupsam} ${v:t:9:5}
    turbine::rule [ list ${t:16:5} ${t:31:1} [ turbine::get_file_td ${u:alignedsam} ] ] [ list samblaster-app-leaf1 ${t:16:5} ${t:31:1} ${v:t:9:5} ${u:alignedsam} ${u:dedupsam} ]
}


proc samblaster-app-leaf1 { t:16:5 t:31:1 v:t:9:5 u:alignedsam u:dedupsam } {
    # Var: $string v:samblasterdir RENAMED [$string:__v:samblasterdir] ./pipelinefunctions/align_dedup.swift:samblaster():27:43
    # Var: $string v:__filename:inputFile:3 RENAMED [$string:__v:__filename:inputFile] ./pipelinefunctions/align_dedup.swift:samblaster():27:43
    # Var: $file v:inputFile:3 RENAMED [$file:__v:inputFile] ./pipelinefunctions/align_dedup.swift:samblaster():27:43
    # Var: $file v:output:3 RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:samblaster():27:43
    set v:samblasterdir [ turbine::retrieve_string ${t:16:5} CACHED 1 ]
    set v:__filename:inputFile:3 [ turbine::retrieve_string ${t:31:1} CACHED 1 ]
    set v:inputFile:3 [ turbine::retrieve_file ${u:alignedsam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output:3 [ turbine::create_local_file_ref ${v:t:9:5} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:samblasterdir "-M" "-i" ${v:__filename:inputFile:3} [ dict create "stdout" ${v:t:9:5} ] ]
    turbine::exec_external ${v:samblasterdir} [ dict create "stdout" ${v:t:9:5} ] "-M" "-i" ${v:__filename:inputFile:3}
    turbine::store_file ${u:dedupsam} v:output:3 0
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list rm-app-leaf1 ${v:t:9:5} ${u:dedupsam} ]
    turbine::reset_priority
    turbine::decr_local_file_refcount v:output:3
}


proc rm-app-leaf1 { v:t:9:5 u:dedupsam } {
    # Var: $file v:f:4 RENAMED [$file:__v:f] ./pipelinefunctions/miscellaneous.swift:rm():21:13
    # Var: $void v:v:3 RENAMED [$void:__v:v] ./pipelinefunctions/miscellaneous.swift:rm():21:13
    set v:f:4 [ turbine::retrieve_file ${u:dedupsam} CACHED 1 ]
    turbine::c::log [ list exec: "rm" ${v:t:9:5} [ dict create ] ]
    turbine::exec_external "rm" [ dict create ] ${v:t:9:5}
}


proc __entry-async_op-strcat-9 { u:AlignDir v:alias:sampleName u:dedupbam } {
    # Var: $string v:AlignDir:4 VALUE_OF [string:AlignDir]
    # Var: $string v:t:14:5 VALUE_OF [string:__t:14:5]
    set v:AlignDir:4 [ turbine::retrieve_string ${u:AlignDir} CACHED 1 ]
    set v:t:14:5 "${v:AlignDir:4}${v:alias:sampleName}.wdups.bam"
    turbine::set_filename_val ${u:dedupbam} ${v:t:14:5}
}


proc __entry-async_op-eq_string-3 { u:AlignDir t:13 t:26:1 t:38:1 t:6:7 v:alias:sampleName u:alignedbam u:dedupsortedbam } {
    # Var: $string v:t:6:7:1 VALUE_OF [string:__t:6:7]
    # Var: $boolean v:t:36:3 VALUE_OF [boolean:__t:36:3]
    set v:t:6:7:1 [ turbine::retrieve_string ${t:6:7} CACHED 1 ]
    set v:t:36:3 [ string equal ${v:t:6:7:1} "PICARD" ]
    if { ${v:t:36:3} } {
        # Var: string[string] u:vars /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:561:0
        global u:vars
        # Var: file u:metricsfile RENAMED [file:metricsfile] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:markDuplicates():205:50
        # Var: file u:alignedsortedbam RENAMED [file:alignedsortedbam] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:markDuplicates():206:55
        # Var: string t:44:2 RENAMED [string:__t:44] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:markDuplicates():209:30
        # Var: string[int] t:51:2 RENAMED [string[int]:__t:51] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:markDuplicates():210:25
        # Var: string t:52:2 RENAMED [string:__t:52] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:markDuplicates():213:39
        # Var: string t:54:2 RENAMED [string:__t:54] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:markDuplicates():213:56
        lassign [ adlb::multicreate [ list string 1 1 98 ] [ list container integer string 1 1 99 ] [ list string 1 1 100 ] [ list string 1 1 101 ] ] t:44:2 t:51:2 t:52:2 t:54:2
        turbine::c::log "allocated t:44:2=<${t:44:2}> t:51:2=<${t:51:2}> t:52:2=<${t:52:2}> t:54:2=<${t:54:2}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 0 1 96 ] [ list file 1 1 97 ] ] [ list 1 1 ] ] u:metricsfile u:alignedsortedbam
        turbine::read_refcount_incr ${u:AlignDir} 1
        turbine::read_refcount_incr ${t:13} 1
        turbine::read_refcount_incr ${t:26:1} 1
        turbine::array_kv_build ${t:51:2} [ ::adlb::dict_create ] 1 integer string
        turbine::container_reference ${u:vars} "NOVOSORTDIR" ${t:44:2} string
        f:novosort ${u:alignedsortedbam} ${t:44:2} ${u:alignedbam} ${t:13} ${t:38:1} ${t:51:2} -100 "HARD" "RANK"
        turbine::container_reference ${u:vars} "JAVADIR" ${t:52:2} string
        turbine::container_reference ${u:vars} "PICARDDIR" ${t:54:2} string
        turbine::rule [ list ${u:AlignDir} ] [ list __entry-optmerged-5 ${u:AlignDir} ${t:13} ${t:26:1} ${t:52:2} ${t:54:2} ${v:alias:sampleName} ${u:alignedsortedbam} ${u:dedupsortedbam} ${u:metricsfile} ]
        turbine::read_refcount_decr ${t:51:2} 1
        turbine::read_refcount_decr ${t:44:2} 1
    } else {
        # Var: string[string] u:vars /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:561:0
        global u:vars
        # Var: string t:58:2 RENAMED [string:__t:58] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:markDuplicates():220:28
        # Var: string[int] t:65:2 RENAMED [string[int]:__t:65] /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:markDuplicates():221:38
        lassign [ adlb::multicreate [ list string 1 1 102 ] [ list container integer string 1 1 103 ] ] t:58:2 t:65:2
        turbine::c::log "allocated t:58:2=<${t:58:2}> t:65:2=<${t:65:2}>"
        turbine::array_kv_build ${t:65:2} [ ::adlb::dict_create 0 "--markDuplicates" ] 1 integer string
        turbine::container_reference ${u:vars} "NOVOSORTDIR" ${t:58:2} string
        f:novosort ${u:dedupsortedbam} ${t:58:2} ${u:alignedbam} ${t:13} ${t:38:1} ${t:65:2} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:65:2} 1
        turbine::read_refcount_decr ${t:58:2} 1
    }
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
    turbine::read_refcount_decr ${t:26:1} 1
    turbine::read_refcount_decr ${t:38:1} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${t:13} 1
    turbine::read_refcount_decr ${u:AlignDir} 1
}


proc __entry-optmerged-5 { u:AlignDir t:13 t:26:1 t:52:2 t:54:2 v:alias:sampleName u:alignedsortedbam u:dedupsortedbam u:metricsfile } {
    # Var: $string v:AlignDir:5 VALUE_OF [string:AlignDir]
    # Var: $string v:t:40:2 VALUE_OF [string:__t:40:2]
    # Var: $string v:t:42:2 VALUE_OF [string:__t:42:2]
    set v:AlignDir:5 [ turbine::retrieve_string ${u:AlignDir} CACHED 1 ]
    set v:t:40:2 "${v:AlignDir:5}${v:alias:sampleName}.picard.metrics"
    set v:t:42:2 "${v:AlignDir:5}${v:alias:sampleName}.nodups.sorted.bam"
    turbine::set_filename_val ${u:metricsfile} ${v:t:40:2}
    turbine::set_filename_val ${u:alignedsortedbam} ${v:t:42:2}
    turbine::rule [ list ${t:13} ${t:26:1} ${t:52:2} ${t:54:2} [ turbine::get_file_td ${u:alignedsortedbam} ] ] [ list picard-app-leaf1 ${t:13} ${t:26:1} ${t:52:2} ${t:54:2} ${v:t:40:2} ${v:t:42:2} ${u:alignedsortedbam} ${u:dedupsortedbam} ${u:metricsfile} ]
}


proc picard-app-leaf1 { t:13 t:26:1 t:52:2 t:54:2 v:t:40:2 v:t:42:2 u:alignedsortedbam u:dedupsortedbam u:metricsfile } {
    # Var: $string v:javadir:5 RENAMED [$string:__v:javadir] ./pipelinefunctions/align_dedup.swift:picard():45:212
    # Var: $string v:picarddir RENAMED [$string:__v:picarddir] ./pipelinefunctions/align_dedup.swift:picard():45:212
    # Var: $string v:__filename:outputfile:5 RENAMED [$string:__v:__filename:outputfile] ./pipelinefunctions/align_dedup.swift:picard():45:212
    # Var: $string v:tmpdir RENAMED [$string:__v:tmpdir] ./pipelinefunctions/align_dedup.swift:picard():45:212
    # Var: $file v:inputFile:1:1 RENAMED [$file:__v:inputFile] ./pipelinefunctions/align_dedup.swift:picard():45:212
    # Var: $file v:outputfile:5 RENAMED [$file:__v:outputfile] ./pipelinefunctions/align_dedup.swift:picard():45:212
    # Var: $file v:metricsfile RENAMED [$file:__v:metricsfile] ./pipelinefunctions/align_dedup.swift:picard():45:212
    set v:javadir:5 [ turbine::retrieve_string ${t:52:2} CACHED 1 ]
    set v:picarddir [ turbine::retrieve_string ${t:54:2} CACHED 1 ]
    set v:__filename:outputfile:5 [ turbine::retrieve_string ${t:26:1} CACHED 1 ]
    set v:tmpdir [ turbine::retrieve_string ${t:13} CACHED 1 ]
    set v:inputFile:1:1 [ turbine::retrieve_file ${u:alignedsortedbam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:5 [ turbine::create_local_file_ref ${v:__filename:outputfile:5} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:metricsfile [ turbine::create_local_file_ref ${v:t:40:2} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:5 "-Xmx8g" "-jar" ${v:picarddir} "MarkDuplicates" "INPUT=" ${v:t:42:2} "OUTPUT=" ${v:__filename:outputfile:5} "METRICS_FILE=" ${v:t:40:2} "TMP_DIR=" ${v:tmpdir} "ASSUME_SORTED=true" "MAX_RECORDS_IN_RAM=null" "CREATE_INDEX=true" "VALIDATION_STRINGENCY=SILENT" [ dict create ] ]
    turbine::exec_external ${v:javadir:5} [ dict create ] "-Xmx8g" "-jar" ${v:picarddir} "MarkDuplicates" "INPUT=" ${v:t:42:2} "OUTPUT=" ${v:__filename:outputfile:5} "METRICS_FILE=" ${v:t:40:2} "TMP_DIR=" ${v:tmpdir} "ASSUME_SORTED=true" "MAX_RECORDS_IN_RAM=null" "CREATE_INDEX=true" "VALIDATION_STRINGENCY=SILENT"
    turbine::store_file ${u:dedupsortedbam} v:outputfile:5 0
    turbine::store_file ${u:metricsfile} v:metricsfile 0
    turbine::decr_local_file_refcount v:outputfile:5
    turbine::decr_local_file_refcount v:metricsfile
}


proc __entry-async_op-sprintf { t:3:2 t:5:2 t:7:1 v:alias:sampleName u:rgheader } {
    # Var: $string v:t:3:2 VALUE_OF [string:__t:3:2]
    # Var: $string v:t:5:2 VALUE_OF [string:__t:5:2]
    # Var: $string v:t:7:1 VALUE_OF [string:__t:7:1]
    # Var: $string v:rgheader:2 VALUE_OF [string:rgheader]
    set v:t:3:2 [ turbine::retrieve_string ${t:3:2} CACHED 1 ]
    set v:t:5:2 [ turbine::retrieve_string ${t:5:2} CACHED 1 ]
    set v:t:7:1 [ turbine::retrieve_string ${t:7:1} CACHED 1 ]
    set v:rgheader:2 [ eval format [ list "@RG\tID:%s\tLB:%s\tPL:%s\tPU:%s\tSM:%s\tCN:%s" ${v:alias:sampleName} ${v:t:3:2} ${v:t:5:2} ${v:alias:sampleName} ${v:alias:sampleName} ${v:t:7:1} ] ]
    turbine::store_string ${u:rgheader} ${v:rgheader:2}
}


proc __entry-async_op-strcat-10 { t:13 t:31:1 v:alias:sampleName u:alignedsam } {
    # Var: $string v:t:13 VALUE_OF [string:__t:13]
    # Var: $string v:t:31:1 VALUE_OF [string:__t:31:1]
    set v:t:13 [ turbine::retrieve_string ${t:13} CACHED 1 ]
    set v:t:31:1 "${v:t:13}/align/${v:alias:sampleName}.nodups.sam"
    turbine::store_string ${t:31:1} ${v:t:31:1}
    turbine::set_filename_val ${u:alignedsam} ${v:t:31:1}
}


proc __entry-call_foreign-split-1 { a:t:49:1 t:48:1 } {
    # Var: $string v:alias:t:49:1 VALUE_OF [string:__alias:t:49:1]
    # Var: $string$[int] v:t:48:1:1 VALUE_OF [string[int]:__t:48:1]
    set v:alias:t:49:1 [ turbine::retrieve_string ${a:t:49:1} CACHED 1 ]
    set v:t:48:1:1 [ turbine::split_impl ${v:alias:t:49:1} " " ]
    turbine::build_rec ${t:48:1} ${v:t:48:1:1} [ list container integer string ] 0 1
}


proc __entry-call_foreign-split-2 { a:t:52:1 t:51:1 } {
    # Var: $string v:alias:t:52:1 VALUE_OF [string:__alias:t:52:1]
    # Var: $string$[int] v:t:51:1 VALUE_OF [string[int]:__t:51:1]
    set v:alias:t:52:1 [ turbine::retrieve_string ${a:t:52:1} CACHED 1 ]
    set v:t:51:1 [ turbine::split_impl ${v:alias:t:52:1} " " ]
    turbine::build_rec ${t:51:1} ${v:t:51:1} [ list container integer string ] 0 1
}


proc __entry-call_foreign-split-3 { a:t:55:1 t:54:1 } {
    # Var: $string v:alias:t:55:1 VALUE_OF [string:__alias:t:55:1]
    # Var: $string$[int] v:t:54:1 VALUE_OF [string[int]:__t:54:1]
    set v:alias:t:55:1 [ turbine::retrieve_string ${a:t:55:1} CACHED 1 ]
    set v:t:54:1 [ turbine::split_impl ${v:alias:t:55:1} " " ]
    turbine::build_rec ${t:54:1} ${v:t:54:1} [ list container integer string ] 0 1
}


proc __entry-async_op-parse_float-2 { a:tot_dups a:tot_reads t:61:1 t:67:1 t:71:1 t:75:1 t:78:1 t:79:1 v:alias:sampleName u:cutoff_info u:perc_mapped } {
    # Var: $string v:alias:tot_reads VALUE_OF [string:__alias:tot_reads]
    # Var: $float v:t:60:1 VALUE_OF [float:__t:60:1]
    set v:alias:tot_reads [ turbine::retrieve_string ${a:tot_reads} CACHED 1 ]
    set v:t:60:1 [ turbine::string2float_impl ${v:alias:tot_reads} ]
    turbine::rule [ list ${t:61:1} ] "__entry-async_op-div_float ${t:61:1} ${t:78:1} ${t:79:1} ${v:t:60:1} ${u:perc_mapped}"
    turbine::rule [ list ${a:tot_dups} ] [ list __entry-async_op-parse_float-3 ${a:tot_dups} ${t:67:1} ${t:71:1} ${t:75:1} ${t:78:1} ${v:alias:sampleName} ${v:t:60:1} ${u:cutoff_info} ${u:perc_mapped} ]
}


proc __entry-async_op-div_float { t:61:1 t:78:1 t:79:1 v:t:60:1 u:perc_mapped } {
    # Var: $float v:t:61:1:1 VALUE_OF [float:__t:61:1]
    # Var: $float v:perc_mapped VALUE_OF [float:perc_mapped]
    set v:t:61:1:1 [ turbine::retrieve_float ${t:61:1} CACHED 1 ]
    set v:perc_mapped [ expr { ${v:t:61:1:1} / ${v:t:60:1} } ]
    turbine::store_float ${u:perc_mapped} ${v:perc_mapped}
    turbine::rule [ list ${t:79:1} ] "__entry-async_op-gt_float ${t:78:1} ${t:79:1} ${v:perc_mapped}"
}


proc __entry-async_op-gt_float { t:78:1 t:79:1 v:perc_mapped } {
    # Var: $float v:t:79:1:1 VALUE_OF [float:__t:79:1]
    # Var: $boolean v:t:78:1 VALUE_OF [boolean:__t:78:1]
    set v:t:79:1:1 [ turbine::retrieve_float ${t:79:1} CACHED 1 ]
    set v:t:78:1 [ expr { ${v:perc_mapped} > ${v:t:79:1:1} } ]
    turbine::store_integer ${t:78:1} ${v:t:78:1}
}


proc __entry-async_op-parse_float-3 { a:tot_dups t:67:1 t:71:1 t:75:1 t:78:1 v:alias:sampleName v:t:60:1 u:cutoff_info u:perc_mapped } {
    # Var: $string v:alias:tot_dups VALUE_OF [string:__alias:tot_dups]
    # Var: $float v:t:58:1 VALUE_OF [float:__t:58:1]
    # Var: $float v:t:57:1 VALUE_OF [float:__t:57:1]
    # Var: $float v:perc_dup VALUE_OF [float:perc_dup]
    set v:alias:tot_dups [ turbine::retrieve_string ${a:tot_dups} CACHED 1 ]
    set v:t:58:1 [ turbine::string2float_impl ${v:alias:tot_dups} ]
    set v:t:57:1 [ expr { ${v:t:58:1} * 100.0 } ]
    set v:perc_dup [ expr { ${v:t:57:1} / ${v:t:60:1} } ]
    turbine::rule [ list ${t:67:1} ${t:71:1} ${u:perc_mapped} ] [ list __entry-async_op-strcat-11 ${t:67:1} ${t:71:1} ${v:alias:sampleName} ${v:perc_dup} ${u:cutoff_info} ${u:perc_mapped} ]
    turbine::rule [ list ${t:75:1} ${t:78:1} ] "__entry-async_op-lt_float ${t:75:1} ${t:78:1} ${v:perc_dup} ${u:cutoff_info}"
}


proc __entry-async_op-strcat-11 { t:67:1 t:71:1 v:alias:sampleName v:perc_dup u:cutoff_info u:perc_mapped } {
    # Var: $string v:t:67:1:1 VALUE_OF [string:__t:67:1]
    # Var: $float v:perc_mapped:1 VALUE_OF [float:perc_mapped]
    # Var: $string v:t:71:1:1 VALUE_OF [string:__t:71:1]
    # Var: $string v:cutoff_info VALUE_OF [string:cutoff_info]
    set v:t:67:1:1 [ turbine::retrieve_string ${t:67:1} CACHED 1 ]
    set v:perc_mapped:1 [ turbine::retrieve_float ${u:perc_mapped} CACHED 1 ]
    set v:t:71:1:1 [ turbine::retrieve_string ${t:71:1} CACHED 1 ]
    set v:cutoff_info "${v:alias:sampleName}\tPercentDuplication=${v:perc_dup};DuplicationCutoff=${v:t:67:1:1}\tPercentMapped=${v:perc_mapped:1};MappingCutoff=${v:t:71:1:1}"
    turbine::store_string ${u:cutoff_info} ${v:cutoff_info}
}


proc __entry-async_op-lt_float { t:75:1 t:78:1 v:perc_dup u:cutoff_info } {
    # Var: $float v:t:75:1:1 VALUE_OF [float:__t:75:1]
    # Var: $boolean v:t:74:1 VALUE_OF [boolean:__t:74:1]
    # Var: $boolean v:t:78:1:1 VALUE_OF [boolean:__t:78:1]
    # Var: $boolean v:t:73:1 VALUE_OF [boolean:__t:73:1]
    set v:t:75:1:1 [ turbine::retrieve_float ${t:75:1} CACHED 1 ]
    set v:t:74:1 [ expr { ${v:perc_dup} < ${v:t:75:1:1} } ]
    set v:t:78:1:1 [ turbine::retrieve_integer ${t:78:1} CACHED 1 ]
    set v:t:73:1 [ expr { ${v:t:74:1} && ${v:t:78:1:1} } ]
    if { ${v:t:73:1} } {
        turbine::rule [ list ${u:cutoff_info} ] "__entry-async_op-strcat-12 ${u:cutoff_info}"
    } else {
        turbine::rule [ list ${u:cutoff_info} ] "__entry-async_op-strcat-13 ${u:cutoff_info}"
    }
    turbine::read_refcount_decr ${u:cutoff_info} 1
}


proc __entry-async_op-strcat-12 { u:cutoff_info } {
    # Var: $string v:cutoff_info:1 VALUE_OF [string:cutoff_info]
    # Var: $string v:t:83:1 VALUE_OF [string:__t:83:1]
    # Var: $void v:t:82:1 VALUE_OF [void:__t:82:1]
    set v:cutoff_info:1 [ turbine::retrieve_string ${u:cutoff_info} CACHED 1 ]
    set v:t:83:1 "QC-Test SUCCESS: ${v:cutoff_info:1}"
    set v:t:82:1 [ turbine::printf_local ${v:t:83:1} ]
}


proc __entry-async_op-strcat-13 { u:cutoff_info } {
    # Var: $string v:cutoff_info:2 VALUE_OF [string:cutoff_info]
    # Var: $string v:t:87:1 VALUE_OF [string:__t:87:1]
    # Var: $void v:t:85:1 VALUE_OF [void:__t:85:1]
    set v:cutoff_info:2 [ turbine::retrieve_string ${u:cutoff_info} CACHED 1 ]
    set v:t:87:1 "QC-Test FAILURE: ${v:cutoff_info:2}"
    turbine::assert_impl 0 ${v:t:87:1}
}


proc __entry-async_op-parse_float-4 { a:tot_mapped t:61:1 } {
    # Var: $string v:alias:tot_mapped VALUE_OF [string:__alias:tot_mapped]
    # Var: $float v:t:62:1 VALUE_OF [float:__t:62:1]
    # Var: $float v:t:61:1 VALUE_OF [float:__t:61:1]
    set v:alias:tot_mapped [ turbine::retrieve_string ${a:tot_mapped} CACHED 1 ]
    set v:t:62:1 [ turbine::string2float_impl ${v:alias:tot_mapped} ]
    set v:t:61:1 [ expr { ${v:t:62:1} * 100.0 } ]
    turbine::store_float ${t:61:1} ${v:t:61:1}
}


proc __entry-optmerged-6 { u:AlignDir u:RealignDir u:VarcallDir t:10 t:26:1 t:31:1 t:36:1 v:alias:sampleName u:alignedbam u:alignedsam u:dedupsortedbam u:flagstats u:sampleName u:stat } {
    # Var: string c:s_deduplicat OPT_TEMPORARY
    global c:s_deduplicat
    # Var: string c:s_alignment OPT_TEMPORARY
    global c:s_alignment
    # Var: $string v:t:10:4 VALUE_OF [string:__t:10]
    # Var: $string v:AlignDir VALUE_OF [string:AlignDir]
    # Var: $string v:VarcallDir VALUE_OF [string:VarcallDir]
    # Var: $string v:RealignDir VALUE_OF [string:RealignDir]
    # Var: $string v:t:26:1 VALUE_OF [string:__t:26:1]
    # Var: $string v:t:28:1 VALUE_OF [string:__t:28:1]
    # Var: $string v:t:24:1 VALUE_OF [string:__t:24:1]
    set v:t:10:4 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:AlignDir "${v:t:10:4}/${v:alias:sampleName}/align/"
    turbine::store_string ${u:AlignDir} ${v:AlignDir}
    set v:VarcallDir "${v:t:10:4}/${v:alias:sampleName}/variant/"
    turbine::store_string ${u:VarcallDir} ${v:VarcallDir}
    set v:RealignDir "${v:t:10:4}/${v:alias:sampleName}/realign/"
    turbine::store_string ${u:RealignDir} ${v:RealignDir}
    set v:t:26:1 "${v:AlignDir}${v:alias:sampleName}.wdups.sorted.bam"
    turbine::store_string ${t:26:1} ${v:t:26:1}
    turbine::set_filename_val ${u:dedupsortedbam} ${v:t:26:1}
    turbine::rule [ list [ turbine::get_file_td ${u:dedupsortedbam} ] ] "f:checkBam {${u:dedupsortedbam}} ${u:sampleName} ${c:s_deduplicat}"
    set v:t:28:1 "${v:AlignDir}${v:alias:sampleName}.wdups.sorted.bam.flagstats"
    turbine::set_filename_val ${u:flagstats} ${v:t:28:1}
    set v:t:24:1 "${v:AlignDir}${v:alias:sampleName}.nodups.bam"
    turbine::set_filename_val ${u:alignedbam} ${v:t:24:1}
    turbine::rule [ list [ turbine::get_file_td ${u:alignedbam} ] ] "f:checkBam {${u:alignedbam}} ${u:sampleName} ${c:s_alignment}"
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list mkdir-app-leaf1-1 ${v:AlignDir} ]
    turbine::reset_priority
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list mkdir-app-leaf1-2 ${v:VarcallDir} ]
    turbine::reset_priority
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list mkdir-app-leaf1-3 ${v:RealignDir} ]
    turbine::reset_priority
    turbine::rule [ list [ turbine::get_file_td ${u:dedupsortedbam} ] ] [ list __entry-optmerged-7 ${t:31:1} ${t:36:1} ${v:t:26:1} ${v:t:28:1} ${u:alignedsam} ${u:dedupsortedbam} ${u:flagstats} ${u:stat} ]
}


proc mkdir-app-leaf1-1 { v:AlignDir } {
    # Var: $void v:v:4 RENAMED [$void:__v:v] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:mkdir():65:15
    turbine::c::log [ list exec: "mkdir" "-p" ${v:AlignDir} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:AlignDir}
}


proc mkdir-app-leaf1-2 { v:VarcallDir } {
    # Var: $void v:v:5 RENAMED [$void:__v:v] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:mkdir():65:15
    turbine::c::log [ list exec: "mkdir" "-p" ${v:VarcallDir} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:VarcallDir}
}


proc mkdir-app-leaf1-3 { v:RealignDir } {
    # Var: $void v:v:6 RENAMED [$void:__v:v] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:mkdir():65:15
    turbine::c::log [ list exec: "mkdir" "-p" ${v:RealignDir} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:RealignDir}
}


proc __entry-optmerged-7 { t:31:1 t:36:1 v:t:26:1 v:t:28:1 u:alignedsam u:dedupsortedbam u:flagstats u:stat } {
    turbine::rule [ list ${t:31:1} [ turbine::get_file_td ${u:alignedsam} ] ] "mainSampleLoop-explicit-wait1 ${t:31:1} {${u:alignedsam}}"
    turbine::rule [ list ${t:36:1} ] [ list samtools_flagstat-app-leaf1 ${t:36:1} ${v:t:26:1} ${v:t:28:1} ${u:dedupsortedbam} ${u:flagstats} ${u:stat} ]
}


proc mainSampleLoop-explicit-wait1 { t:31:1 u:alignedsam } {
    # Var: $string v:__filename:f RENAMED [$string:__v:__filename:f] ./pipelinefunctions/miscellaneous.swift:rm():21:13
    # Var: $file v:f:2 RENAMED [$file:__v:f] ./pipelinefunctions/miscellaneous.swift:rm():21:13
    # Var: $void v:v:1 RENAMED [$void:__v:v] ./pipelinefunctions/miscellaneous.swift:rm():21:13
    set v:__filename:f [ turbine::retrieve_string ${t:31:1} CACHED 1 ]
    set v:f:2 [ turbine::retrieve_file ${u:alignedsam} CACHED 1 ]
    turbine::c::log [ list exec: "rm" ${v:__filename:f} [ dict create ] ]
    turbine::exec_external "rm" [ dict create ] ${v:__filename:f}
}


proc samtools_flagstat-app-leaf1 { t:36:1 v:t:26:1 v:t:28:1 u:dedupsortedbam u:flagstats u:stat } {
    # Var: $string v:samtoolsdir RENAMED [$string:__v:samtoolsdir] ./pipelinefunctions/align_dedup.swift:samtools_flagstat():51:42
    # Var: $file v:inputFile:4 RENAMED [$file:__v:inputFile] ./pipelinefunctions/align_dedup.swift:samtools_flagstat():51:42
    # Var: $file v:output:4 RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:samtools_flagstat():51:42
    # Var: $file v:flagstats VALUE_OF [file:flagstats]
    # Var: $string$[int] v:stat VALUE_OF [string[int]:stat]
    set v:samtoolsdir [ turbine::retrieve_string ${t:36:1} CACHED 1 ]
    set v:inputFile:4 [ turbine::retrieve_file ${u:dedupsortedbam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output:4 [ turbine::create_local_file_ref ${v:t:28:1} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:samtoolsdir "flagstat" ${v:t:26:1} [ dict create "stdout" ${v:t:28:1} ] ]
    turbine::exec_external ${v:samtoolsdir} [ dict create "stdout" ${v:t:28:1} ] "flagstat" ${v:t:26:1}
    turbine::store_file ${u:flagstats} v:output:4 0
    set v:flagstats [ turbine::retrieve_file ${u:flagstats} CACHED 1 ]
    set v:stat [ turbine::file_lines_impl ${v:flagstats} ]
    turbine::build_rec ${u:stat} ${v:stat} [ list container integer string ] 0 1
    turbine::decr_local_file_refcount v:output:4
}


proc __entry-optmerged-8 { t:10 t:19 v:f u:configFile u:docRunfile } {
    # Var: $string v:dirname:4 RENAMED [$string:__v:dirname] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:mkdir():65:15
    set v:dirname:4 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list mkdir-app-leaf1-4 ${v:dirname:4} ]
    turbine::reset_priority
    turbine::rule [ list ${t:19} ] [ list __entry-async_op-strcat-14 ${t:19} ${v:dirname:4} ${v:f} ${u:configFile} ${u:docRunfile} ]
}


proc mkdir-app-leaf1-4 { v:dirname:4 } {
    # Var: $void v:v:7 RENAMED [$void:__v:v] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:mkdir():65:15
    turbine::c::log [ list exec: "mkdir" "-p" ${v:dirname:4} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:dirname:4}
}


proc __entry-async_op-strcat-14 { t:19 v:dirname:4 v:f u:configFile u:docRunfile } {
    # Var: $string v:t:19 VALUE_OF [string:__t:19]
    # Var: $string v:t:15 VALUE_OF [string:__t:15]
    set v:t:19 [ turbine::retrieve_string ${t:19} CACHED 1 ]
    set v:t:15 "${v:dirname:4}/${v:t:19}/docs/${v:f}"
    turbine::set_filename_val ${u:docRunfile} ${v:t:15}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry:wait:configFile ${v:t:15} ${u:configFile} ${u:docRunfile} ]
    turbine::reset_priority
}


proc __entry:wait:configFile { v:t:15 u:configFile u:docRunfile } {
    # Var: $file v:configFile VALUE_OF [file:configFile]
    # Var: $file v:docRunfile VALUE_OF [file:docRunfile]
    set v:configFile [ turbine::retrieve_file ${u:configFile} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:docRunfile [ turbine::create_local_file_ref ${v:t:15} ${tcltmp:init_rc} 1 ]
    turbine::copy_local_file_contents ${v:docRunfile} ${v:configFile}
    turbine::store_file ${u:docRunfile} v:docRunfile 0
}


proc __entry-optmerged-9 { t:10 t:19 t:33 t:65 u:samplesOutput } {
    # Var: $string v:t:33 VALUE_OF [string:__t:33]
    # Var: $boolean v:t:32 VALUE_OF [boolean:__t:32]
    # Var: $boolean v:alignOnlyCheck VALUE_OF [boolean:alignOnlyCheck]
    # Var: $boolean v:t:65 VALUE_OF [boolean:__t:65]
    set v:t:33 [ turbine::retrieve_string ${t:33} CACHED 1 ]
    set v:t:32 [ string equal ${v:t:33} "" ]
    set v:alignOnlyCheck [ string equal ${v:t:33} "ALIGN_ONLY" ]
    if { ${v:t:32} } {
        # Var: $void v:t:36 VALUE_OF [void:__t:36]
        set v:t:36 [ turbine::printf_local "WARNING: No analysis choice specified: variant calling with no realignment is the default choice\n" ]
    } else {
        # Var: $boolean v:t:40 VALUE_OF [boolean:__t:40]
        # Var: $boolean v:t:44 VALUE_OF [boolean:__t:44]
        # Var: $boolean v:t:48 VALUE_OF [boolean:__t:48]
        # Var: $boolean v:t:39 VALUE_OF [boolean:__t:39]
        # Var: $boolean v:t:38 VALUE_OF [boolean:__t:38]
        set v:t:40 [ expr { ! [ string equal ${v:t:33} "ALIGN_ONLY" ] } ]
        set v:t:44 [ expr { ! [ string equal ${v:t:33} "VC_REALIGN" ] } ]
        set v:t:48 [ expr { ! [ string equal ${v:t:33} "VC_NO_REALIGN" ] } ]
        set v:t:39 [ expr { ${v:t:40} && ${v:t:44} } ]
        set v:t:38 [ expr { ${v:t:39} && ${v:t:48} } ]
        if { ${v:t:38} } {
            # Var: $string v:message VALUE_OF [string:message]
            # Var: $void v:t:60 VALUE_OF [void:__t:60]
            set v:message "FAILURE: Analysis option <${v:t:33}> is not a vaild entry.\n\tPlease enter one of the following:\n\t\tFor alignment only: ALIGN_ONLY\n\t\tFor variant calling with realignment: VC_REALIGN\n\t\tFor variant calling without realignment: VC_NO_REALIGN\n"
            turbine::assert_impl 0 ${v:message}
        }
    }
    set v:t:65 [ expr { ! ${v:alignOnlyCheck} } ]
    turbine::store_integer ${t:65} ${v:t:65}
    if { ${v:t:65} } {
        turbine::read_refcount_incr ${u:samplesOutput} 1
        turbine::read_refcount_incr ${t:10} 1
        turbine::read_refcount_incr ${t:19} 1
        turbine::rule [ list ${u:samplesOutput} ] "__entry-explicit-wait1 ${t:10} ${t:19} ${u:samplesOutput}"
    }
    turbine::read_refcount_decr ${t:19} 1
    turbine::read_refcount_decr ${t:10} 1
    turbine::read_refcount_decr ${u:samplesOutput} 1
}


proc __entry-explicit-wait1 { t:10 t:19 u:samplesOutput } {
    # Var: string[string] u:vars /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:561:0
    global u:vars
    # Var: file u:jointVCF /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:__entry():644:11
    # Var: string[int] u:variantSampleArray /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:__entry():652:2
    # Var: string t:85 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:__entry():660:27
    # Var: string t:87 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:__entry():660:44
    # Var: string t:89 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:__entry():660:61
    # Var: string t:90 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:__entry():660:68
    # Var: string t:93 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:__entry():661:11
    lassign [ adlb::multicreate [ list container integer string 1 1 105 ] [ list string 1 1 106 ] [ list string 1 1 107 ] [ list string 1 1 108 ] [ list string 1 1 109 ] [ list string 1 1 110 ] ] u:variantSampleArray t:85 t:87 t:89 t:90 t:93
    turbine::c::log "allocated u:variantSampleArray=<${u:variantSampleArray}> t:85=<${t:85}> t:87=<${t:87}> t:89=<${t:89}> t:90=<${t:90}>"
    turbine::c::log "allocated t:93=<${t:93}>"
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 0 1 104 ] ] [ list 1 ] ] u:jointVCF
    turbine::container_reference ${u:vars} "JAVADIR" ${t:85} string
    turbine::container_reference ${u:vars} "GATKDIR" ${t:87} string
    turbine::container_reference ${u:vars} "REFGENOMEDIR" ${t:90} string
    turbine::container_reference ${u:vars} "REFGENOME" ${t:93} string
    set tcltmp:container_sz [ adlb::enumerate ${u:samplesOutput} count all 0 ]
    set tcltmp:iters ${tcltmp:container_sz}
    turbine::read_refcount_incr ${u:samplesOutput} [ expr { ${tcltmp:iters} - 1 } ]
    adlb::write_refcount_incr ${u:variantSampleArray} [ expr { ${tcltmp:iters} - 1 } ]
    __entry-foreach1:outer ${u:variantSampleArray} ${u:samplesOutput} 0 [ expr { ${tcltmp:container_sz} - 1 } ] 1
    turbine::rule [ list ${t:90} ${t:93} ] "__entry-async_op-strcat-16 ${t:89} ${t:90} ${t:93}"
    turbine::rule [ list ${t:10} ${t:19} ] "__entry-optmerged-10 ${t:10} ${t:19} ${t:85} ${t:87} ${t:89} {${u:jointVCF}} ${u:variantSampleArray}"
}


proc __entry-foreach1:outer { u:variantSampleArray u:samplesOutput tcltmp:lo tcltmp:hi tcltmp:inc } {
    if { [ expr { ${tcltmp:lo} > ${tcltmp:hi} } ] } {
        return
    }
    while {1} {
        set tcltmp:itersleft [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
        if { [ expr { ${tcltmp:itersleft} <= 64 } ] } {
            __entry-foreach1:inner ${u:variantSampleArray} ${u:samplesOutput} ${tcltmp:lo} ${tcltmp:hi} ${tcltmp:inc}
            return
        } else {
            set tcltmp:skip [ expr { ${tcltmp:inc} * max(64,((${tcltmp:itersleft} - 1) / 16) + 1) } ]
            for { set tcltmp:splitstart [ expr { ${tcltmp:lo} + ${tcltmp:skip} } ] } { ${tcltmp:splitstart} <= ${tcltmp:hi} } { incr tcltmp:splitstart ${tcltmp:skip} } {
                set tcltmp:splitend [ expr { min(${tcltmp:hi},${tcltmp:splitstart} + ${tcltmp:skip} - 1) } ]
                set tcltmp:prio [ turbine::get_priority ]
                turbine::set_priority ${tcltmp:prio}
                adlb::spawn 0 "__entry-foreach1:outer ${u:variantSampleArray} ${u:samplesOutput} ${tcltmp:splitstart} ${tcltmp:splitend} ${tcltmp:inc}"
                turbine::reset_priority
            }
            set tcltmp:hi [ expr { ${tcltmp:lo} + ${tcltmp:skip} - 1 } ]
        }
    }
}


proc __entry-foreach1:inner { u:variantSampleArray u:samplesOutput tcltmp:lo tcltmp:hi tcltmp:inc } {
    set tcltmp:splitlen [ expr { ${tcltmp:hi} - ${tcltmp:lo} + 1 } ]
    set tcltmp:contents [ adlb::enumerate ${u:samplesOutput} dict ${tcltmp:splitlen} ${tcltmp:lo} ]
    dict for {v:index u:item} ${tcltmp:contents} {
        turbine::file_read_refcount_incr ${u:item} 1
        set optf:item [ turbine::get_file_path ${u:item} ]
        turbine::rule [ list ${optf:item} ] "__entry-async_op-strcat-15 {${optf:item}} ${v:index} ${u:variantSampleArray}"
    }
    set tcltmp:iters [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
    turbine::read_refcount_decr ${u:samplesOutput} [ expr { ${tcltmp:iters} } ]
}


proc __entry-async_op-strcat-15 { optf:item v:index u:variantSampleArray } {
    # Var: $string v:of:item VALUE_OF [string:__of:item]
    # Var: $string v:t:81 VALUE_OF [string:__t:81]
    set v:of:item [ turbine::retrieve_string ${optf:item} CACHED 1 ]
    set v:t:81 "--variant ${v:of:item}"
    turbine::container_insert ${u:variantSampleArray} ${v:index} ${v:t:81} string 1
}


proc __entry-async_op-strcat-16 { t:89 t:90 t:93 } {
    # Var: $string v:t:90 VALUE_OF [string:__t:90]
    # Var: $string v:t:93 VALUE_OF [string:__t:93]
    # Var: $string v:t:89 VALUE_OF [string:__t:89]
    set v:t:90 [ turbine::retrieve_string ${t:90} CACHED 1 ]
    set v:t:93 [ turbine::retrieve_string ${t:93} CACHED 1 ]
    set v:t:89 "${v:t:90}/${v:t:93}"
    turbine::store_string ${t:89} ${v:t:89}
}


proc __entry-optmerged-10 { t:10 t:19 t:85 t:87 t:89 u:jointVCF u:variantSampleArray } {
    # Var: $string v:t:10:1 VALUE_OF [string:__t:10]
    # Var: $string v:t:19:1 VALUE_OF [string:__t:19]
    # Var: $string v:t:66 VALUE_OF [string:__t:66]
    # Var: $string v:t:74 VALUE_OF [string:__t:74]
    set v:t:10:1 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:t:19:1 [ turbine::retrieve_string ${t:19} CACHED 1 ]
    set v:t:66 "${v:t:10:1}/${v:t:19:1}/jointVCFs/jointVCFcalled.vcf"
    set v:t:74 "${v:t:10:1}/${v:t:19:1}/jointVCFs"
    turbine::set_filename_val ${u:jointVCF} ${v:t:66}
    turbine::rule [ list ${t:85} ${t:87} ${t:89} ${u:variantSampleArray} ] [ list join-argwait-1 ${t:85} ${t:87} ${t:89} ${v:t:66} ${u:jointVCF} ${u:variantSampleArray} ]
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list mkdir-app-leaf1-5 ${v:t:74} ]
    turbine::reset_priority
}


proc join-argwait-1 { t:85 t:87 t:89 v:t:66 u:jointVCF u:variantSampleArray } {
    # Var: $string$[int] v:A RENAMED [$string$[int]:__v:A]
    # Var: $string v:s RENAMED [$string:__v:s]
    # Var: $string v:javadir RENAMED [$string:__v:javadir] ./pipelinefunctions/joint_vcf.swift:GenotypeGVCFs():3:91
    # Var: $string v:gatkdir RENAMED [$string:__v:gatkdir] ./pipelinefunctions/joint_vcf.swift:GenotypeGVCFs():3:91
    # Var: $string v:reference RENAMED [$string:__v:reference] ./pipelinefunctions/joint_vcf.swift:GenotypeGVCFs():3:91
    # Var: $file v:outputfile RENAMED [$file:__v:outputfile] ./pipelinefunctions/joint_vcf.swift:GenotypeGVCFs():3:91
    set v:A [ turbine::enumerate_rec ${u:variantSampleArray} [ list container string ] 0 1 ]
    set v:s [ turbine::string_join_impl ${v:A} " " ]
    set v:javadir [ turbine::retrieve_string ${t:85} CACHED 1 ]
    set v:gatkdir [ turbine::retrieve_string ${t:87} CACHED 1 ]
    set v:reference [ turbine::retrieve_string ${t:89} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile [ turbine::create_local_file_ref ${v:t:66} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir "-Xmx8g" "-jar" ${v:gatkdir} "-T" "GenotypeGVCFs" "-R" ${v:reference} ${v:s} "-o" ${v:t:66} [ dict create ] ]
    turbine::exec_external ${v:javadir} [ dict create ] "-Xmx8g" "-jar" ${v:gatkdir} "-T" "GenotypeGVCFs" "-R" ${v:reference} ${v:s} "-o" ${v:t:66}
    turbine::store_file ${u:jointVCF} v:outputfile 0
    turbine::decr_local_file_refcount v:outputfile
}


proc mkdir-app-leaf1-5 { v:t:74 } {
    # Var: $void v:v RENAMED [$void:__v:v] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:mkdir():65:15
    turbine::c::log [ list exec: "mkdir" "-p" ${v:t:74} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:t:74}
}


proc f:recalibrateBam { u:recalibratedbam u:sampleName u:chr u:inputBam u:recalparmsindels } {
    turbine::c::log "function: recalibrateBam"
    # Var: string[string] u:vars /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:561:0
    global u:vars
    # Var: string t:1 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:recalibrateBam():254:28
    # Var: file u:recalreport /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:recalibrateBam():256:61
    # Var: string t:8 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:recalibrateBam():259:32
    # Var: string t:10 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:recalibrateBam():259:49
    # Var: string t:12 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:recalibrateBam():260:11
    # Var: string t:13 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:recalibrateBam():260:18
    # Var: string t:16 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:recalibrateBam():260:45
    # Var: int t:18 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:recalibrateBam():261:11
    # Var: string t:19 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:recalibrateBam():261:22
    # Var: string t:21 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:recalibrateBam():262:11
    # Var: string t:25 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:recalibrateBam():262:45
    # Var: $boolean v:mapped_outputfile:2 RENAMED [$boolean:__v:mapped_outputfile]
    lassign [ adlb::multicreate [ list string 1 1 111 ] [ list string 1 1 113 ] [ list string 1 1 114 ] [ list string 1 1 115 ] [ list string 1 1 116 ] [ list string 1 1 117 ] [ list integer 1 1 118 ] [ list string 1 1 119 ] [ list string 1 1 120 ] [ list string 1 1 121 ] ] t:1 t:8 t:10 t:12 t:13 t:16 t:18 t:19 t:21 t:25
    turbine::c::log "allocated t:1=<${t:1}> t:8=<${t:8}> t:10=<${t:10}> t:12=<${t:12}> t:13=<${t:13}>"
    turbine::c::log "allocated t:16=<${t:16}> t:18=<${t:18}> t:19=<${t:19}> t:21=<${t:21}> t:25=<${t:25}>"
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 112 ] ] [ list 1 ] ] u:recalreport
    turbine::file_read_refcount_incr ${u:inputBam} 1
    turbine::file_read_refcount_incr ${u:recalibratedbam} 1
    turbine::container_reference ${u:vars} "OUTPUTDIR" ${t:1} string
    turbine::container_reference ${u:vars} "JAVADIR" ${t:8} string
    turbine::container_reference ${u:vars} "GATKDIR" ${t:10} string
    turbine::container_reference ${u:vars} "REFGENOMEDIR" ${t:13} string
    turbine::container_reference ${u:vars} "REFGENOME" ${t:16} string
    turbine::container_reference ${u:vars} "PBSCORES" ${t:19} string
    turbine::container_reference ${u:vars} "DBSNP" ${t:25} string
    set filename:inputFile [ turbine::get_file_path ${u:inputBam} ]
    set v:mapped_outputfile:2 [ turbine::is_file_mapped ${u:recalibratedbam} ]
    set filename:outputfile:1 [ turbine::get_file_path ${u:recalibratedbam} ]
    if { ${v:mapped_outputfile:2} } {
    } else {
        # Var: $string optf:outputfile:1 RENAMED [$string:__of:outputfile]
        set optf:outputfile:1 [ turbine::mktemp ]
        turbine::set_filename_val ${u:recalibratedbam} ${optf:outputfile:1}
    }
    turbine::rule [ list ${t:1} ${u:chr} ${u:sampleName} ] "recalibrateBam-async_op-strcat {${filename:inputFile}} {${filename:outputfile:1}} ${t:1} ${t:10} ${t:12} ${t:18} ${t:21} ${t:8} ${v:mapped_outputfile:2} {${u:chr}} {${u:inputBam}} {${u:recalibratedbam}} {${u:recalparmsindels}} {${u:recalreport}} {${u:sampleName}}"
    turbine::rule [ list ${t:19} ] "recalibrateBam-async_op-parse_int ${t:18} ${t:19}"
    turbine::rule [ list ${t:13} ] "recalibrateBam-optmerged ${t:12} ${t:13} ${t:16} ${t:21} ${t:25}"
}


proc recalibrateBam-async_op-strcat { filename:inputFile filename:outputfile:1 t:1 t:10 t:12 t:18 t:21 t:8 v:mapped_outputfile:2 u:chr u:inputBam u:recalibratedbam u:recalparmsindels u:recalreport u:sampleName } {
    # Var: $string v:t:1 VALUE_OF [string:__t:1]
    # Var: $string v:sampleName VALUE_OF [string:sampleName]
    # Var: $string v:RealignDir VALUE_OF [string:RealignDir]
    # Var: $string v:chr VALUE_OF [string:chr]
    # Var: $string v:t:5 VALUE_OF [string:__t:5]
    set v:t:1 [ turbine::retrieve_string ${t:1} CACHED 1 ]
    set v:sampleName [ turbine::retrieve_string ${u:sampleName} ]
    set v:RealignDir "${v:t:1}/${v:sampleName}/realign/"
    set v:chr [ turbine::retrieve_string ${u:chr} CACHED 1 ]
    set v:t:5 "${v:RealignDir}${v:sampleName}.${v:chr}.recal_report.grp"
    turbine::set_filename_val ${u:recalreport} ${v:t:5}
    turbine::rule [ list ${filename:inputFile} ${t:10} ${t:12} ${t:18} ${t:21} ${t:8} [ turbine::get_file_td ${u:inputBam} ] ${u:recalparmsindels} ] [ list BaseRecalibrator-app-leaf1 ${filename:inputFile} ${filename:outputfile:1} ${t:10} ${t:12} ${t:18} ${t:21} ${t:8} ${v:mapped_outputfile:2} ${v:t:5} ${u:inputBam} ${u:recalibratedbam} ${u:recalparmsindels} ${u:recalreport} ${u:sampleName} ]
}


proc BaseRecalibrator-app-leaf1 { filename:inputFile filename:outputfile:1 t:10 t:12 t:18 t:21 t:8 v:mapped_outputfile:2 v:t:5 u:inputBam u:recalibratedbam u:recalparmsindels u:recalreport u:sampleName } {
    # Var: $string v:javadir RENAMED [$string:__v:javadir] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():19:143
    # Var: $string v:gatkdir RENAMED [$string:__v:gatkdir] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():19:143
    # Var: $string v:reference RENAMED [$string:__v:reference] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():19:143
    # Var: $string v:__filename:inputFile RENAMED [$string:__v:__filename:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():19:143
    # Var: $string v:dbsnp RENAMED [$string:__v:dbsnp] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():19:143
    # Var: $string$[int] v:knownindels RENAMED [$string$[int]:__v:knownindels] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():19:143
    # Var: $int v:thr RENAMED [$int:__v:thr] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():19:143
    # Var: $file v:inputFile RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():19:143
    # Var: $file v:outputfile RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():19:143
    set v:javadir [ turbine::retrieve_string ${t:8} CACHED 1 ]
    set v:gatkdir [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:reference [ turbine::retrieve_string ${t:12} CACHED 1 ]
    set v:__filename:inputFile [ turbine::retrieve_string ${filename:inputFile} ]
    set v:dbsnp [ turbine::retrieve_string ${t:21} CACHED 1 ]
    set v:knownindels [ turbine::unpack_args ${u:recalparmsindels} 1 string ]
    set v:thr [ turbine::retrieve_integer ${t:18} CACHED 1 ]
    set v:inputFile [ turbine::retrieve_file ${u:inputBam} ]
    set tcltmp:init_rc 2
    set v:outputfile [ turbine::create_local_file_ref ${v:t:5} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir "-Xmx16g" "-jar" ${v:gatkdir} "-T" "BaseRecalibrator" "-R" ${v:reference} "-I" ${v:__filename:inputFile} "-knownSites" ${v:dbsnp} {*}${v:knownindels} "-nct" ${v:thr} "-o" ${v:t:5} [ dict create ] ]
    turbine::exec_external ${v:javadir} [ dict create ] "-Xmx16g" "-jar" ${v:gatkdir} "-T" "BaseRecalibrator" "-R" ${v:reference} "-I" ${v:__filename:inputFile} "-knownSites" ${v:dbsnp} {*}${v:knownindels} "-nct" ${v:thr} "-o" ${v:t:5}
    turbine::store_file ${u:recalreport} v:outputfile 0
    turbine::rule [ list ${filename:outputfile:1} ] [ list PrintReads-app-leaf1 ${filename:outputfile:1} ${v:__filename:inputFile} ${v:gatkdir} ${v:javadir} ${v:mapped_outputfile:2} ${v:reference} ${v:t:5} ${v:thr} ${u:inputBam} ${u:recalibratedbam} ${u:recalreport} ${u:sampleName} ]
    turbine::decr_local_file_refcount v:outputfile
    turbine::read_refcount_decr ${u:recalparmsindels} 1
    turbine::file_read_refcount_decr ${u:inputBam} 1
}


proc PrintReads-app-leaf1 { filename:outputfile:1 v:__filename:inputFile v:gatkdir v:javadir v:mapped_outputfile:2 v:reference v:t:5 v:thr u:inputBam u:recalibratedbam u:recalreport u:sampleName } {
    # Var: string c:s_recalibrat OPT_TEMPORARY
    global c:s_recalibrat
    # Var: $string v:__filename:outputfile:1 RENAMED [$string:__v:__filename:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:PrintReads():24:129
    # Var: $file v:inputFile:1 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:PrintReads():24:129
    # Var: $file v:recalreport RENAMED [$file:__v:recalreport] ./pipelinefunctions/realign_varcall_by_chr.swift:PrintReads():24:129
    # Var: $file v:outputfile:1 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:PrintReads():24:129
    # Var: $boolean v:3:1 RENAMED [$boolean:__v:3] ./pipelinefunctions/realign_varcall_by_chr.swift:PrintReads():24:129
    set v:__filename:outputfile:1 [ turbine::retrieve_string ${filename:outputfile:1} ]
    set v:inputFile:1 [ turbine::retrieve_file ${u:inputBam} CACHED 1 ]
    set v:recalreport [ turbine::retrieve_file ${u:recalreport} CACHED 1 ]
    if { ${v:mapped_outputfile:2} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:outputfile:1 [ turbine::create_local_file_ref ${v:__filename:outputfile:1} ${tcltmp:init_rc} ${v:mapped_outputfile:2} ]
    turbine::c::log [ list exec: __v:javadir "-Xmx16g" "-jar" ${v:gatkdir} "-T" "PrintReads" "-R" ${v:reference} "-I" ${v:__filename:inputFile} "-BQSR" ${v:t:5} "-nct" ${v:thr} "--out" ${v:__filename:outputfile:1} [ dict create ] ]
    turbine::exec_external ${v:javadir} [ dict create ] "-Xmx16g" "-jar" ${v:gatkdir} "-T" "PrintReads" "-R" ${v:reference} "-I" ${v:__filename:inputFile} "-BQSR" ${v:t:5} "-nct" ${v:thr} "--out" ${v:__filename:outputfile:1}
    set v:3:1 [ expr { ! ${v:mapped_outputfile:2} } ]
    turbine::store_file ${u:recalibratedbam} v:outputfile:1 ${v:3:1}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:checkBam {${u:recalibratedbam}} {${u:sampleName}} ${c:s_recalibrat}"
    turbine::reset_priority
    turbine::decr_local_file_refcount v:outputfile:1
    turbine::file_read_refcount_decr ${u:recalibratedbam} 1
}


proc recalibrateBam-async_op-parse_int { t:18 t:19 } {
    # Var: $string v:t:19 VALUE_OF [string:__t:19]
    # Var: $int v:t:18 VALUE_OF [int:__t:18]
    set v:t:19 [ turbine::retrieve_string ${t:19} CACHED 1 ]
    set v:t:18 [ turbine::parse_int_impl ${v:t:19} 10 ]
    turbine::store_integer ${t:18} ${v:t:18}
}


proc recalibrateBam-optmerged { t:12 t:13 t:16 t:21 t:25 } {
    # Var: $string v:t:13 VALUE_OF [string:__t:13]
    set v:t:13 [ turbine::retrieve_string ${t:13} CACHED 1 ]
    turbine::rule [ list ${t:16} ] [ list recalibrateBam-async_op-strcat-1 ${t:12} ${t:16} ${v:t:13} ]
    turbine::rule [ list ${t:25} ] [ list recalibrateBam-async_op-strcat-2 ${t:21} ${t:25} ${v:t:13} ]
}


proc recalibrateBam-async_op-strcat-1 { t:12 t:16 v:t:13 } {
    # Var: $string v:t:16 VALUE_OF [string:__t:16]
    # Var: $string v:t:12 VALUE_OF [string:__t:12]
    set v:t:16 [ turbine::retrieve_string ${t:16} CACHED 1 ]
    set v:t:12 "${v:t:13}/${v:t:16}"
    turbine::store_string ${t:12} ${v:t:12}
}


proc recalibrateBam-async_op-strcat-2 { t:21 t:25 v:t:13 } {
    # Var: $string v:t:25 VALUE_OF [string:__t:25]
    # Var: $string v:t:21 VALUE_OF [string:__t:21]
    set v:t:25 [ turbine::retrieve_string ${t:25} CACHED 1 ]
    set v:t:21 "${v:t:13}/${v:t:25}"
    turbine::store_string ${t:21} ${v:t:21}
}


proc f:checkBam { u:bamFile u:sampleName u:workflowStep } {
    turbine::c::log "function: checkBam"
    # Var: string[string] u:vars /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:561:0
    global u:vars
    # Var: string t:1 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:checkBam():279:32
    # Var: string u:message /ui/ncsa/jacobrh/Swift-T-Variant-Calling/VCPipeline.swift:checkBam():281:2
    # Var: $string v:of:bamFile VALUE_OF [string:__of:bamFile]
    lassign [ adlb::multicreate [ list string 1 1 122 ] [ list string 1 1 123 ] ] t:1 u:message
    turbine::c::log "allocated t:1=<${t:1}> u:message=<${u:message}>"
    turbine::container_reference ${u:vars} "SAMTOOLSDIR" ${t:1} string
    set v:of:bamFile [ turbine::get_filename_val ${u:bamFile} ]
    turbine::rule [ list ${t:1} ] [ list samtools_view2-argwait ${t:1} ${v:of:bamFile} ${u:message} ]
    turbine::rule [ list ${u:sampleName} ${u:workflowStep} ] [ list checkBam-async_op-strcat ${v:of:bamFile} ${u:message} ${u:sampleName} ${u:workflowStep} ]
    turbine::file_read_refcount_decr ${u:bamFile} 1
}


proc samtools_view2-argwait { t:1 v:of:bamFile u:message } {
    # Var: $string v:samtoolsdir RENAMED [$string:__v:samtoolsdir]
    # Var: $int v:numAlignments RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:11 VALUE_OF [boolean:__t:11]
    set v:samtoolsdir [ turbine::retrieve_string ${t:1} CACHED 1 ]
    set v:numAlignments [ alignment::samtools_view ${v:samtoolsdir} ${v:of:bamFile} ]
    set v:t:11 [ expr { ${v:numAlignments} > 0 } ]
    turbine::rule [ list ${u:message} ] "checkBam-async_op-assert ${v:t:11} ${u:message}"
}


proc checkBam-async_op-assert { v:t:11 u:message } {
    # Var: $string v:message:1 VALUE_OF [string:message]
    # Var: $void v:t:10 VALUE_OF [void:__t:10]
    set v:message:1 [ turbine::retrieve_string ${u:message} CACHED 1 ]
    turbine::assert_impl ${v:t:11} ${v:message:1}
}


proc checkBam-async_op-strcat { v:of:bamFile u:message u:sampleName u:workflowStep } {
    # Var: $string v:workflowStep VALUE_OF [string:workflowStep]
    # Var: $string v:sampleName VALUE_OF [string:sampleName]
    # Var: $string v:message VALUE_OF [string:message]
    set v:workflowStep [ turbine::retrieve_string ${u:workflowStep} CACHED 1 ]
    set v:sampleName [ turbine::retrieve_string ${u:sampleName} CACHED 1 ]
    set v:message "FAILURE: ${v:of:bamFile} contains no alignments. Likely error during the ${v:workflowStep} step when processing${v:sampleName}."
    turbine::store_string ${u:message} ${v:message}
}


proc f:sed { u:o u:i u:command v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: sed"
    # Var: $boolean v:mapped_o OPT_TEMPORARY
    turbine::read_refcount_incr ${u:command} 1
    turbine::file_read_refcount_incr ${u:o} 1
    turbine::file_read_refcount_incr ${u:i} 2
    set filename:i [ turbine::get_file_path ${u:i} ]
    set v:mapped_o [ turbine::is_file_mapped ${u:o} ]
    set filename:o [ turbine::get_file_path ${u:o} ]
    if { ${v:mapped_o} } {
    } else {
        # Var: $string optf:o FILENAME_OF [file:o]
        set optf:o [ turbine::mktemp ]
        turbine::set_filename_val ${u:o} ${optf:o}
    }
    turbine::rule [ list ${filename:i} ${filename:o} ${u:command} [ turbine::get_file_td ${u:i} ] ] "sed-app-leaf1 {${filename:i}} {${filename:o}} ${v:mapped_o} {${u:command}} {${u:i}} {${u:o}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc sed-app-leaf1 { filename:i filename:o v:mapped_o u:command u:i u:o } {
    # Var: $string v:command VALUE_OF [string:command] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    # Var: $string v:__filename:i VALUE_OF [string:__filename:i] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    # Var: $string v:__filename:o VALUE_OF [string:__filename:o] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    # Var: $file v:i VALUE_OF [file:i] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    # Var: $file v:o VALUE_OF [file:o] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    # Var: $boolean v:3 EXPR_TEMPORARY /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    set v:command [ turbine::retrieve_string ${u:command} CACHED 1 ]
    set v:__filename:i [ turbine::retrieve_string ${filename:i} ]
    set v:__filename:o [ turbine::retrieve_string ${filename:o} CACHED 1 ]
    set v:i [ turbine::retrieve_file ${u:i} CACHED 2 ]
    if { ${v:mapped_o} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:o [ turbine::create_local_file_ref ${v:__filename:o} ${tcltmp:init_rc} ${v:mapped_o} ]
    turbine::c::log [ list exec: "sed" ${v:command} ${v:__filename:i} [ dict create "stdout" ${v:__filename:o} ] ]
    turbine::exec_external "sed" [ dict create "stdout" ${v:__filename:o} ] ${v:command} ${v:__filename:i}
    set v:3 [ expr { ! ${v:mapped_o} } ]
    turbine::store_file ${u:o} v:o ${v:3}
    turbine::decr_local_file_refcount v:o
}


proc f:samtools_view { u:output u:samtoolsdir u:inputFile u:thr u:args v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: samtools_view"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::read_refcount_incr ${u:thr} 1
    turbine::file_read_refcount_incr ${u:inputFile} 2
    turbine::file_read_refcount_incr ${u:output} 1
    turbine::read_refcount_incr ${u:samtoolsdir} 1
    turbine::read_refcount_incr ${u:args} 1
    set filename:inputFile [ turbine::get_file_path ${u:inputFile} ]
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${filename:inputFile} ${filename:output} ${u:args} [ turbine::get_file_td ${u:inputFile} ] ${u:samtoolsdir} ${u:thr} ] "samtools_view-app-leaf1 {${filename:inputFile}} {${filename:output}} ${v:mapped_output} {${u:args}} {${u:inputFile}} {${u:output}} {${u:samtoolsdir}} {${u:thr}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc samtools_view-app-leaf1 { filename:inputFile filename:output v:mapped_output u:args u:inputFile u:output u:samtoolsdir u:thr } {
    # Var: $string v:samtoolsdir VALUE_OF [string:samtoolsdir] ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    # Var: $int v:thr VALUE_OF [int:thr] ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    # Var: $string v:__filename:inputFile VALUE_OF [string:__filename:inputFile] ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    # Var: $string$[int] v:args VALUE_OF [string[int]:args] ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    # Var: $file v:inputFile VALUE_OF [file:inputFile] ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    # Var: $file v:output VALUE_OF [file:output] ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    # Var: $boolean v:3 EXPR_TEMPORARY ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    set v:samtoolsdir [ turbine::retrieve_string ${u:samtoolsdir} CACHED 1 ]
    set v:thr [ turbine::retrieve_integer ${u:thr} CACHED 1 ]
    set v:__filename:inputFile [ turbine::retrieve_string ${filename:inputFile} ]
    set v:args [ turbine::unpack_args ${u:args} 1 string ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    set v:inputFile [ turbine::retrieve_file ${u:inputFile} CACHED 2 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: __v:samtoolsdir "view" "-@" ${v:thr} "-bS" ${v:__filename:inputFile} {*}${v:args} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external ${v:samtoolsdir} [ dict create "stdout" ${v:__filename:output} ] "view" "-@" ${v:thr} "-bS" ${v:__filename:inputFile} {*}${v:args}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
    turbine::read_refcount_decr ${u:args} 1
}


proc f:novosort { u:output u:novosortdir u:inputFile u:tmpdir u:thr u:sortoptions v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: novosort"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::read_refcount_incr ${u:thr} 1
    turbine::read_refcount_incr ${u:novosortdir} 1
    turbine::read_refcount_incr ${u:tmpdir} 1
    turbine::read_refcount_incr ${u:sortoptions} 1
    turbine::file_read_refcount_incr ${u:inputFile} 2
    turbine::file_read_refcount_incr ${u:output} 1
    set filename:inputFile [ turbine::get_file_path ${u:inputFile} ]
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${filename:inputFile} ${filename:output} [ turbine::get_file_td ${u:inputFile} ] ${u:novosortdir} ${u:sortoptions} ${u:thr} ${u:tmpdir} ] "novosort-app-leaf1 {${filename:inputFile}} {${filename:output}} ${v:mapped_output} {${u:inputFile}} {${u:novosortdir}} {${u:output}} {${u:sortoptions}} {${u:thr}} {${u:tmpdir}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc novosort-app-leaf1 { filename:inputFile filename:output v:mapped_output u:inputFile u:novosortdir u:output u:sortoptions u:thr u:tmpdir } {
    # Var: $string v:novosortdir VALUE_OF [string:novosortdir] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $string v:tmpdir VALUE_OF [string:tmpdir] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $int v:thr VALUE_OF [int:thr] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $string v:__filename:inputFile VALUE_OF [string:__filename:inputFile] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $string$[int] v:sortoptions VALUE_OF [string[int]:sortoptions] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $file v:inputFile VALUE_OF [file:inputFile] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $file v:output VALUE_OF [file:output] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $boolean v:3 EXPR_TEMPORARY ./pipelinefunctions/align_dedup.swift:novosort():33:79
    set v:novosortdir [ turbine::retrieve_string ${u:novosortdir} CACHED 1 ]
    set v:tmpdir [ turbine::retrieve_string ${u:tmpdir} CACHED 1 ]
    set v:thr [ turbine::retrieve_integer ${u:thr} CACHED 1 ]
    set v:__filename:inputFile [ turbine::retrieve_string ${filename:inputFile} ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    set v:sortoptions [ turbine::unpack_args ${u:sortoptions} 1 string ]
    set v:inputFile [ turbine::retrieve_file ${u:inputFile} CACHED 2 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: __v:novosortdir "--index" "--tmpdir" ${v:tmpdir} "--threads" ${v:thr} ${v:__filename:inputFile} "-o" ${v:__filename:output} {*}${v:sortoptions} [ dict create ] ]
    turbine::exec_external ${v:novosortdir} [ dict create ] "--index" "--tmpdir" ${v:tmpdir} "--threads" ${v:thr} ${v:__filename:inputFile} "-o" ${v:__filename:output} {*}${v:sortoptions}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
    turbine::read_refcount_decr ${u:sortoptions} 1
}


proc f:samtools_index { u:signal u:samtoolsdir u:inputFilename v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: samtools_index"
    turbine::file_read_refcount_incr ${u:inputFilename} 2
    turbine::read_refcount_incr ${u:samtoolsdir} 1
    set filename:inputFilename [ turbine::get_file_path ${u:inputFilename} ]
    turbine::rule [ list ${filename:inputFilename} [ turbine::get_file_td ${u:inputFilename} ] ${u:samtoolsdir} ] "samtools_index-app-leaf1 {${filename:inputFilename}} {${u:inputFilename}} {${u:samtoolsdir}} {${u:signal}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc samtools_index-app-leaf1 { filename:inputFilename u:inputFilename u:samtoolsdir u:signal } {
    # Var: $string v:samtoolsdir VALUE_OF [string:samtoolsdir] ./pipelinefunctions/realign_varcall_by_chr.swift:samtools_index():4:21
    # Var: $string v:__filename:inputFilename VALUE_OF [string:__filename:inputFilename] ./pipelinefunctions/realign_varcall_by_chr.swift:samtools_index():4:21
    # Var: $file v:inputFilename VALUE_OF [file:inputFilename] ./pipelinefunctions/realign_varcall_by_chr.swift:samtools_index():4:21
    # Var: $void v:signal VALUE_OF [void:signal] ./pipelinefunctions/realign_varcall_by_chr.swift:samtools_index():4:21
    set v:samtoolsdir [ turbine::retrieve_string ${u:samtoolsdir} CACHED 1 ]
    set v:__filename:inputFilename [ turbine::retrieve_string ${filename:inputFilename} ]
    set v:inputFilename [ turbine::retrieve_file ${u:inputFilename} CACHED 2 ]
    turbine::c::log [ list exec: __v:samtoolsdir "index" ${v:__filename:inputFilename} [ dict create ] ]
    turbine::exec_external ${v:samtoolsdir} [ dict create ] "index" ${v:__filename:inputFilename}
    turbine::store_void ${u:signal}
}

turbine::defaults
turbine::declare_custom_work_types COASTER
turbine::init $servers "Swift"
turbine::enable_read_refcount
adlb::declare_struct_type 16 s:location [ list "rank" integer "strictness" string "accuracy" string ]
turbine::check_constants "WORKER\[WORKER\]" ${turbine::WORK_TASK} 0 "CONTROL" ${turbine::WORK_TASK} 0 "ADLB_RANK_ANY" ${adlb::RANK_ANY} -100
lassign [ turbine::declare_globals [ list "u:vars" ] [ list [ list container string string 1 1 124 ] ] ] u:vars
adlb::add_debug_symbol 1 "__c:s_alignment" ""
adlb::add_debug_symbol 2 "__c:s_deduplicat" ""
adlb::add_debug_symbol 3 "__c:s_realignmen" ""
adlb::add_debug_symbol 4 "__c:s_recalibrat" ""
adlb::add_debug_symbol 5 "__c:s_sknownSite" ""
adlb::add_debug_symbol 6 "__c:s_sknown_g" ""
adlb::add_debug_symbol 7 "__t:7" "VCPipeline:563:33"
adlb::add_debug_symbol 8 "__t:10" "VCPipeline:567:6"
adlb::add_debug_symbol 9 "__t:13" "VCPipeline:568:6"
adlb::add_debug_symbol 10 "__t:19" "VCPipeline:571:49"
adlb::add_debug_symbol 11 "__t:33" "VCPipeline:591:4"
adlb::add_debug_symbol 12 "__t:65" "VCPipeline:637:4"
adlb::add_debug_symbol 13 "docSampleInfo" "VCPipeline:575:32"
adlb::add_debug_symbol 14 "samplesOutput" "VCPipeline:635:0"
adlb::add_debug_symbol 15 "configFile" "VCPipeline:558:0"
adlb::add_debug_symbol 16 "sampleInfoFile" "VCPipeline:563:0"
adlb::add_debug_symbol 17 "docRunfile" "VCPipeline:571:99"
adlb::add_debug_symbol 18 "__t:3:2" "VCPipeline:mainSampleLoop():309:7"
adlb::add_debug_symbol 19 "__t:5:2" "VCPipeline:mainSampleLoop():309:25"
adlb::add_debug_symbol 20 "__t:7:1" "VCPipeline:mainSampleLoop():309:67"
adlb::add_debug_symbol 21 "__t:36:1" "VCPipeline:mainSampleLoop():345:29"
adlb::add_debug_symbol 22 "__t:39:1" "VCPipeline:mainSampleLoop():345:73"
adlb::add_debug_symbol 23 "__t:67:1" "VCPipeline:mainSampleLoop():380:32"
adlb::add_debug_symbol 24 "__t:71:1" "VCPipeline:mainSampleLoop():381:61"
adlb::add_debug_symbol 25 "__t:2:7" "VCPipeline:alignReads():156:5"
adlb::add_debug_symbol 26 "__t:6:7" "VCPipeline:markDuplicates():188:5"
adlb::add_debug_symbol 27 "__t:41:1" "VCPipeline:mainSampleLoop():345:93"
adlb::add_debug_symbol 28 "__t:38:1" "VCPipeline:mainSampleLoop():345:62"
adlb::add_debug_symbol 29 "__t:75:1" "VCPipeline:mainSampleLoop():384:18"
adlb::add_debug_symbol 30 "__t:79:1" "VCPipeline:mainSampleLoop():384:68"
adlb::add_debug_symbol 31 "__t:1:10" "VCPipeline:alignReads():156:25"
adlb::add_debug_symbol 32 "__t:5:7" "VCPipeline:markDuplicates():188:32"
adlb::add_debug_symbol 33 "keyValuePair" "pipelinefunctions.miscellaneous:getConfigVariables():8:16"
adlb::add_debug_symbol 34 "sampleInfo" "VCPipeline:mainSampleLoop():303:2"
adlb::add_debug_symbol 35 "sampleName" "VCPipeline:mainSampleLoop():304:2"
adlb::add_debug_symbol 36 "rgheader" "VCPipeline:mainSampleLoop():308:2"
adlb::add_debug_symbol 37 "AlignDir" "VCPipeline:mainSampleLoop():320:2"
adlb::add_debug_symbol 38 "VarcallDir" "VCPipeline:mainSampleLoop():323:2"
adlb::add_debug_symbol 39 "RealignDir" "VCPipeline:mainSampleLoop():326:2"
adlb::add_debug_symbol 40 "alignedbam" "VCPipeline:mainSampleLoop():332:49"
adlb::add_debug_symbol 41 "__t:26:1" "VCPipeline:mainSampleLoop():333:24"
adlb::add_debug_symbol 42 "dedupsortedbam" "VCPipeline:mainSampleLoop():333:53"
adlb::add_debug_symbol 43 "flagstats" "VCPipeline:mainSampleLoop():336:69"
adlb::add_debug_symbol 44 "__t:31:1" "VCPipeline:mainSampleLoop():339:20"
adlb::add_debug_symbol 45 "alignedsam" "VCPipeline:mainSampleLoop():339:66"
adlb::add_debug_symbol 46 "stat" "VCPipeline:mainSampleLoop():369:2"
adlb::add_debug_symbol 47 "__t:48:1" "VCPipeline:mainSampleLoop():370:15"
adlb::add_debug_symbol 48 "__t:51:1" "VCPipeline:mainSampleLoop():371:14"
adlb::add_debug_symbol 49 "__t:54:1" "VCPipeline:mainSampleLoop():372:13"
adlb::add_debug_symbol 50 "perc_mapped" "VCPipeline:mainSampleLoop():375:13"
adlb::add_debug_symbol 51 "__t:61:1" "VCPipeline:mainSampleLoop():375:40"
adlb::add_debug_symbol 52 "cutoff_info" "VCPipeline:mainSampleLoop():378:2"
adlb::add_debug_symbol 53 "__t:78:1" "VCPipeline:mainSampleLoop():384:66"
adlb::add_debug_symbol 54 "__t:90:1" "VCPipeline:mainSampleLoop():408:19"
adlb::add_debug_symbol 55 "gvcfSample" "VCPipeline:mainSampleLoop():410:52"
adlb::add_debug_symbol 56 "gvcfChrCollection" "VCPipeline:mainSampleLoop():412:3"
adlb::add_debug_symbol 57 "chrSampleArray" "VCPipeline:mainSampleLoop():528:3"
adlb::add_debug_symbol 58 "__t:185" "VCPipeline:mainSampleLoop():540:29"
adlb::add_debug_symbol 59 "__t:187" "VCPipeline:mainSampleLoop():540:46"
adlb::add_debug_symbol 60 "__t:189" "VCPipeline:mainSampleLoop():541:8"
adlb::add_debug_symbol 61 "__t:190" "VCPipeline:mainSampleLoop():541:15"
adlb::add_debug_symbol 62 "__t:193" "VCPipeline:mainSampleLoop():541:42"
adlb::add_debug_symbol 63 "__t:195" "VCPipeline:mainSampleLoop():542:8"
adlb::add_debug_symbol 64 "__t:199" "VCPipeline:mainSampleLoop():542:42"
adlb::add_debug_symbol 65 "__t:146" "VCPipeline:mainSampleLoop():473:25"
adlb::add_debug_symbol 66 "chr" "VCPipeline:mainSampleLoop():414:28"
adlb::add_debug_symbol 67 "__t:95" "VCPipeline:mainSampleLoop():418:29"
adlb::add_debug_symbol 68 "chrdedupsortedbam" "VCPipeline:mainSampleLoop():419:8"
adlb::add_debug_symbol 69 "recalibratedbam" "VCPipeline:mainSampleLoop():421:68"
adlb::add_debug_symbol 70 "__t:101" "VCPipeline:mainSampleLoop():424:25"
adlb::add_debug_symbol 71 "gvcfSampleChr" "VCPipeline:mainSampleLoop():424:66"
adlb::add_debug_symbol 72 "__t:104" "VCPipeline:mainSampleLoop():426:22"
adlb::add_debug_symbol 73 "recalfiles" "VCPipeline:mainSampleLoop():427:8"
adlb::add_debug_symbol 74 "__t:115" "VCPipeline:mainSampleLoop():434:41"
adlb::add_debug_symbol 75 "recalparmsindels" "VCPipeline:mainSampleLoop():440:4"
adlb::add_debug_symbol 76 "realparms" "VCPipeline:mainSampleLoop():441:4"
adlb::add_debug_symbol 77 "ploidy" "VCPipeline:mainSampleLoop():499:4"
adlb::add_debug_symbol 78 "realignedbam" "VCPipeline:mainSampleLoop():478:11"
adlb::add_debug_symbol 79 "__t:153" "VCPipeline:mainSampleLoop():481:5"
adlb::add_debug_symbol 80 "intervals" "VCPipeline:realignBam():235:59"
adlb::add_debug_symbol 81 "__t:156" "VCPipeline:mainSampleLoop():493:5"
adlb::add_debug_symbol 82 "__t:122" "VCPipeline:mainSampleLoop():448:40"
adlb::add_debug_symbol 83 "__t:131" "VCPipeline:mainSampleLoop():453:28"
adlb::add_debug_symbol 84 "__t:140" "VCPipeline:mainSampleLoop():461:28"
adlb::add_debug_symbol 85 "__t:5:6" "VCPipeline:alignReads():158:22"
adlb::add_debug_symbol 86 "__t:7:5" "VCPipeline:alignReads():158:52"
adlb::add_debug_symbol 87 "__t:9:4" "VCPipeline:alignReads():159:9"
adlb::add_debug_symbol 88 "__t:10:4" "VCPipeline:alignReads():159:9"
adlb::add_debug_symbol 89 "__t:15:4" "VCPipeline:alignReads():164:24"
adlb::add_debug_symbol 90 "__t:17:4" "VCPipeline:alignReads():164:60"
adlb::add_debug_symbol 91 "dedupsam" "VCPipeline:markDuplicates():189:64"
adlb::add_debug_symbol 92 "dedupbam" "VCPipeline:markDuplicates():190:47"
adlb::add_debug_symbol 93 "__t:16:5" "VCPipeline:markDuplicates():193:24"
adlb::add_debug_symbol 94 "__t:26:4" "VCPipeline:markDuplicates():199:28"
adlb::add_debug_symbol 95 "__t:33:4" "VCPipeline:markDuplicates():200:38"
adlb::add_debug_symbol 96 "metricsfile" "VCPipeline:markDuplicates():205:50"
adlb::add_debug_symbol 97 "alignedsortedbam" "VCPipeline:markDuplicates():206:55"
adlb::add_debug_symbol 98 "__t:44:2" "VCPipeline:markDuplicates():209:30"
adlb::add_debug_symbol 99 "__t:51:2" "VCPipeline:markDuplicates():210:25"
adlb::add_debug_symbol 100 "__t:52:2" "VCPipeline:markDuplicates():213:39"
adlb::add_debug_symbol 101 "__t:54:2" "VCPipeline:markDuplicates():213:56"
adlb::add_debug_symbol 102 "__t:58:2" "VCPipeline:markDuplicates():220:28"
adlb::add_debug_symbol 103 "__t:65:2" "VCPipeline:markDuplicates():221:38"
adlb::add_debug_symbol 104 "jointVCF" "VCPipeline:__entry():644:11"
adlb::add_debug_symbol 105 "variantSampleArray" "VCPipeline:__entry():652:2"
adlb::add_debug_symbol 106 "__t:85" "VCPipeline:__entry():660:27"
adlb::add_debug_symbol 107 "__t:87" "VCPipeline:__entry():660:44"
adlb::add_debug_symbol 108 "__t:89" "VCPipeline:__entry():660:61"
adlb::add_debug_symbol 109 "__t:90" "VCPipeline:__entry():660:68"
adlb::add_debug_symbol 110 "__t:93" "VCPipeline:__entry():661:11"
adlb::add_debug_symbol 111 "__t:1" "VCPipeline:recalibrateBam():254:28"
adlb::add_debug_symbol 112 "recalreport" "VCPipeline:recalibrateBam():256:61"
adlb::add_debug_symbol 113 "__t:8" "VCPipeline:recalibrateBam():259:32"
adlb::add_debug_symbol 114 "__t:10" "VCPipeline:recalibrateBam():259:49"
adlb::add_debug_symbol 115 "__t:12" "VCPipeline:recalibrateBam():260:11"
adlb::add_debug_symbol 116 "__t:13" "VCPipeline:recalibrateBam():260:18"
adlb::add_debug_symbol 117 "__t:16" "VCPipeline:recalibrateBam():260:45"
adlb::add_debug_symbol 118 "__t:18" "VCPipeline:recalibrateBam():261:11"
adlb::add_debug_symbol 119 "__t:19" "VCPipeline:recalibrateBam():261:22"
adlb::add_debug_symbol 120 "__t:21" "VCPipeline:recalibrateBam():262:11"
adlb::add_debug_symbol 121 "__t:25" "VCPipeline:recalibrateBam():262:45"
adlb::add_debug_symbol 122 "__t:1" "VCPipeline:checkBam():279:32"
adlb::add_debug_symbol 123 "message" "VCPipeline:checkBam():281:2"
adlb::add_debug_symbol 124 "vars" "VCPipeline:561:0"
turbine::start swift:main swift:constants
turbine::finalize
