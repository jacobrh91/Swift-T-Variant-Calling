
# Generated by stc version 0.7.2
# date                    : 2016/12/14 15:23:09
# Turbine version         : 0.9.1
# Input filename          : /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift
# Output filename         : /ui/ncsa/jacobrh/Swift-Variant-Calling/swift-t-VCcallingPipeline.1Vv.tic
# STC home                : /usr/local/apps/bioapps/swift-t-1.1/stc
# Turbine home            : /usr/local/apps/bioapps/swift-t-1.1/turbine
# Compiler settings:
# stc.auto-declare              : true
# stc.c_preprocess              : true
# stc.checkpointing             : true
# stc.compiler-debug            : true
# stc.debugging                 : COMMENTS
# stc.ic.output-file            : 
# stc.input_filename            : /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift
# stc.log.file                  : 
# stc.log.trace                 : false
# stc.must_pass_wait_vars       : true
# stc.opt.algebra               : true
# stc.opt.array-build           : true
# stc.opt.batch-refcounts       : true
# stc.opt.cancel-refcounts      : true
# stc.opt.constant-fold         : true
# stc.opt.controlflow-fusion    : true
# stc.opt.dataflow-op-inline    : true
# stc.opt.dead-code-elim        : true
# stc.opt.demote-globals        : true
# stc.opt.disable-asserts       : false
# stc.opt.expand-loop-threshold-insts: 256
# stc.opt.expand-loop-threshold-iters: 16
# stc.opt.expand-loops          : false
# stc.opt.finalized-var         : true
# stc.opt.flatten-nested        : true
# stc.opt.full-function-inline  : false
# stc.opt.full-unroll           : false
# stc.opt.function-always-inline-threshold: 5
# stc.opt.function-inline       : true
# stc.opt.function-inline-threshold: 50
# stc.opt.function-signature    : true
# stc.opt.hoist                 : true
# stc.opt.hoist-refcounts       : true
# stc.opt.loop-simplify         : true
# stc.opt.max-iterations        : 10
# stc.opt.merge-refcounts       : true
# stc.opt.piggyback-refcounts   : true
# stc.opt.pipeline              : false
# stc.opt.propagate-aliases     : true
# stc.opt.reorder-insts         : false
# stc.opt.shared-constants      : true
# stc.opt.unroll-loop-threshold-insts: 192
# stc.opt.unroll-loop-threshold-iters: 8
# stc.opt.unroll-loops          : true
# stc.opt.value-number          : true
# stc.opt.wait-coalesce         : true
# stc.output_filename           : /ui/ncsa/jacobrh/Swift-Variant-Calling/swift-t-VCcallingPipeline.1Vv.tic
# stc.preproc.force-cpp         : false
# stc.preproc.force-gcc         : false
# stc.preprocess_only           : false
# stc.profile                   : false
# stc.refcounting               : true
# stc.rpath                     : /ui/ncsa/jacobrh/Swift-Variant-Calling/pipelinefunctions
# stc.stc_home                  : /usr/local/apps/bioapps/swift-t-1.1/stc
# stc.turbine.version           : 0.9.1
# stc.turbine_home              : /usr/local/apps/bioapps/swift-t-1.1/turbine
# stc.version                   : 0.7.2

# Metadata:

# rpath entries
lappend auto_path "/ui/ncsa/jacobrh/Swift-Variant-Calling/pipelinefunctions"
package require turbine 0.9.1
namespace import turbine::*


proc swift:constants {  } {
    turbine::c::log "function:swift:constants"
    global c:s__GATKCombi-2
    turbine::allocate_custom c:s__GATKCombi-2 string 1 1 1 1
    turbine::store_string ${c:s__GATKCombi-2} "*.GATKCombineGVCF.raw.vcf"
    global c:s_sknownSite
    turbine::allocate_custom c:s_sknownSite string 1 1 2 1
    turbine::store_string ${c:s_sknownSite} "s/^/--knownSites /g"
    global c:s_sknown_g
    turbine::allocate_custom c:s_sknown_g string 1 1 3 1
    turbine::store_string ${c:s_sknown_g} "s/^/-known /g"
    global c:s_svariant_g
    turbine::allocate_custom c:s_svariant_g string 1 1 4 1
    turbine::store_string ${c:s_svariant_g} "s/^/--variant /g"
}

package require align 0.2


proc swift:main {  } {
    turbine::c::log "function: __entry"
    # Var: string t:7 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:29:33
    # Var: string t:10 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:34:25
    # Var: string t:13 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:34:49
    # Var: string t:648 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:224:16
    # Var: string t:649 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:224:40
    # Var: string t:657 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:225:27
    # Var: $string v:configFilename VALUE_OF [string:configFilename]
    # Var: int u:samples_processing_done /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:31:0
    # Var: file u:docSampleInfo /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:35:111
    # Var: file u:jointVCF /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:224:80
    # Var: file u:configFile /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:24:0
    # Var: file u:sampleInfoFile /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:29:0
    # Var: string[string] u:vars /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:27:0
    # Var: file u:docRunfile /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:34:99
    # Var: file u:variantFiles /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:225:42
    # Var: $string v:f RENAMED [$string:__v:f]
    # Var: string t:28 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():45:88
    # Var: string t:30 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():45:106
    # Var: string t:32 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():45:148
    # Var: string t:53 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():59:14
    # Var: string t:97 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():71:5
    # Var: string t:320 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():122:31
    # Var: string t:341 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():132:30
    # Var: string t:379 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():150:17
    # Var: $file v:configFile:1 VALUE_OF [file:configFile]
    # Var: $file v:configFile:2 VALUE_OF [file:configFile]
    # Var: $string$[int] v:configFileData VALUE_OF [string[int]:configFileData]
    # Var: boolean t:96 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():71:32
    # Var: float t:340 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():132:17
    # Var: string[int] u:indices /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():150:9
    lassign [ adlb::multicreate [ list string 1 1 5 ] [ list string 3 1 6 ] [ list string 3 1 7 ] [ list string 1 1 8 ] [ list string 2 1 9 ] [ list string 2 1 10 ] [ list integer 1 1 11 ] [ list container string string 16 1 16 ] [ list string 1 1 19 ] [ list string 1 1 20 ] [ list string 1 1 21 ] [ list string 1 1 22 ] [ list string 2 1 23 ] [ list string 1 1 24 ] [ list string 2 1 25 ] [ list string 1 1 26 ] [ list integer 1 1 27 ] [ list float 1 1 28 ] [ list container integer string 1 1 29 ] ] t:7 t:10 t:13 t:648 t:649 t:657 u:samples_processing_done u:vars t:28 t:30 t:32 t:53 t:97 t:320 t:341 t:379 t:96 t:340 u:indices
    turbine::c::log "allocated t:7=<${t:7}> t:10=<${t:10}> t:13=<${t:13}> t:648=<${t:648}> t:649=<${t:649}>"
    turbine::c::log "allocated t:657=<${t:657}> u:samples_processing_done=<${u:samples_processing_done}> u:vars=<${u:vars}> t:28=<${t:28}> t:30=<${t:30}>"
    turbine::c::log "allocated t:32=<${t:32}> t:53=<${t:53}> t:97=<${t:97}> t:320=<${t:320}> t:341=<${t:341}>"
    turbine::c::log "allocated t:379=<${t:379}> t:96=<${t:96}> t:340=<${t:340}> u:indices=<${u:indices}>"
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 0 1 12 ] [ list file 0 1 13 ] [ list file 1 1 14 ] [ list file 1 1 15 ] [ list file 0 1 17 ] [ list file 1 1 18 ] ] [ list 1 1 0 0 1 1 ] ] u:docSampleInfo u:jointVCF u:configFile u:sampleInfoFile u:docRunfile u:variantFiles
    turbine::argv_accept_impl [ list "runfile" ]
    set v:configFilename [ turbine::argv_get_impl "runfile" ]
    set tcltmp:init_rc 1
    set v:configFile:1 [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:configFile:1 ${v:configFilename}
    turbine::store_file ${u:configFile} v:configFile:1 1
    set v:configFile:2 [ turbine::retrieve_file ${u:configFile} ]
    set v:configFileData [ turbine::file_lines_impl ${v:configFile:2} ]
    turbine::container_reference ${u:vars} "SAMPLEINFORMATION" ${t:7} string
    turbine::container_reference ${u:vars} "OUTPUTDIR" ${t:10} string
    turbine::container_reference ${u:vars} "DELIVERYFOLDER" ${t:13} string
    turbine::container_reference ${u:vars} "TMPDIR" ${t:657} string
    set v:f [ file tail ${v:configFilename} ]
    turbine::container_reference ${u:vars} "SAMPLELB" ${t:28} string
    turbine::container_reference ${u:vars} "SAMPLEPL" ${t:30} string
    turbine::container_reference ${u:vars} "SAMPLECN" ${t:32} string
    turbine::container_reference ${u:vars} "MARKDUPLICATESTOOL" ${t:97} string
    turbine::container_reference ${u:vars} "SAMTOOLSDIR" ${t:320} string
    turbine::container_reference ${u:vars} "DUP_CUTOFF" ${t:341} string
    turbine::container_reference ${u:vars} "CHRNAMES" ${t:379} string
    dict for {tcltmp:ignore v:line} ${v:configFileData} {
        # Var: string[int] u:keyValuePair RENAMED [string[int]:keyValuePair] ./pipelinefunctions/miscellaneous.swift:getConfigVariables():8:16
        # Var: $string$[int] v:keyValuePair VALUE_OF [string[int]:keyValuePair]
        # Var: $string v:alias:name VALUE_OF [string:__alias:name]
        # Var: $string v:alias:value VALUE_OF [string:__alias:value]
        lassign [ adlb::multicreate [ list container integer string 1 2 30 ] ] u:keyValuePair
        turbine::c::log "allocated u:keyValuePair=<${u:keyValuePair}>"
        set v:keyValuePair [ turbine::split_impl ${v:line} "=" ]
        turbine::build_rec ${u:keyValuePair} ${v:keyValuePair} [ list container integer string ] 0 1
        set a:name [ adlb::subscript_container ${u:keyValuePair} 0 ]
        set v:alias:name [ turbine::retrieve_string ${a:name} ]
        set a:value [ adlb::subscript_container ${u:keyValuePair} 1 ]
        set v:alias:value [ turbine::retrieve_string ${a:value} CACHED 1 ]
        turbine::container_insert ${u:vars} ${v:alias:name} ${v:alias:value} string 0
        adlb::write_refcount_decr ${u:keyValuePair} 1
    }
    turbine::rule [ list ${u:samples_processing_done} ] "__entry-explicit-wait4 ${t:648} ${t:649} {${u:jointVCF}} ${u:samples_processing_done} {${u:variantFiles}} ${u:vars}"
    turbine::rule [ list ${t:657} ] "__entry-async_op-strcat ${t:657} {${u:variantFiles}}"
    turbine::rule [ list ${t:97} ] "__entry-async_op-eq_string ${t:96} ${t:97}"
    turbine::rule [ list ${t:341} ] "__entry-async_op-parse_float ${t:340} ${t:341}"
    turbine::rule [ list ${t:379} ] "__entry-call_foreign-split ${t:379} ${u:indices}"
    turbine::rule [ list ${t:10} ${t:13} ] [ list __entry-optmerged ${t:10} ${t:13} ${t:53} ${t:648} ${t:649} ${v:f} ${u:configFile} ${u:docRunfile} ${u:jointVCF} ]
    turbine::rule [ list ${t:7} ] "__entry-optmerged-1 ${t:10} ${t:13} ${t:28} ${t:30} ${t:32} ${t:320} ${t:340} ${t:341} ${t:53} ${t:649} ${t:657} ${t:7} ${t:96} ${t:97} {${u:docSampleInfo}} ${u:indices} {${u:sampleInfoFile}} ${u:samples_processing_done} ${u:vars}"
    turbine::decr_local_file_refcount v:configFile:1
    adlb::write_refcount_decr ${u:vars} 1
}


proc __entry-explicit-wait4 { t:648 t:649 u:jointVCF u:samples_processing_done u:variantFiles u:vars } {
    # Var: string c:s__GATKCombi-2 OPT_TEMPORARY
    global c:s__GATKCombi-2
    # Var: string[int] u:varlist /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():229:1
    lassign [ adlb::multicreate [ list container integer string 1 1 31 ] ] u:varlist
    turbine::c::log "allocated u:varlist=<${u:varlist}>"
    f:find_files ${u:variantFiles} ${t:649} ${c:s__GATKCombi-2} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${u:variantFiles} ] ] "__entry-chain24 ${t:648} {${u:jointVCF}} {${u:variantFiles}} ${u:varlist} ${u:vars}"
    turbine::read_refcount_decr ${u:samples_processing_done} 1
    turbine::read_refcount_decr ${t:649} 1
}


proc __entry-chain24 { t:648 u:jointVCF u:variantFiles u:varlist u:vars } {
    # Var: string c:s_svariant_g OPT_TEMPORARY
    global c:s_svariant_g
    # Var: file t:678 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():229:48
    lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 32 ] ] [ list 0 ] ] t:678
    f:sed ${t:678} ${u:variantFiles} ${c:s_svariant_g} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${t:678} ] ] "__entry-call_foreign-read ${t:648} {${t:678}} {${u:jointVCF}} ${u:varlist} ${u:vars}"
    turbine::file_read_refcount_decr ${u:variantFiles} 1
}


proc __entry-call_foreign-read { t:648 t:678 u:jointVCF u:varlist u:vars } {
    # Var: $file v:t:678 VALUE_OF [file:__t:678]
    # Var: $string v:t:677 VALUE_OF [string:__t:677]
    # Var: $int v:n:4 RENAMED [$int:__v:n]
    # Var: $string v:t:676 VALUE_OF [string:__t:676]
    # Var: $string v:o:4 RENAMED [$string:__v:o]
    # Var: $string$[int] v:varlist VALUE_OF [string[int]:varlist]
    # Var: string t:684 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():230:27
    # Var: string t:686 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():230:44
    # Var: string t:689 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():230:61
    # Var: string t:691 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():230:82
    # Var: $string$[int] v:variants:1 RENAMED [$string$[int]:__v:variants] ./pipelinefunctions/joint_vcf.swift:GenotypeGVCFs():3:91
    lassign [ adlb::multicreate [ list string 1 1 33 ] [ list string 1 1 34 ] [ list string 1 1 35 ] [ list string 1 1 36 ] ] t:684 t:686 t:689 t:691
    turbine::c::log "allocated t:684=<${t:684}> t:686=<${t:686}> t:689=<${t:689}> t:691=<${t:691}>"
    set v:t:678 [ turbine::retrieve_file ${t:678} CACHED 1 ]
    set v:t:677 [ turbine::file_read_local ${v:t:678} ]
    set v:n:4 [ string length ${v:t:677} ]
    set v:t:676 [ turbine::replace_all_impl ${v:t:677} "\n" " " 0 ${v:n:4} ]
    set v:o:4 [ string trim ${v:t:676} ]
    set v:varlist [ turbine::split_impl ${v:o:4} " " ]
    turbine::build_rec ${u:varlist} ${v:varlist} [ list container integer string ] 0 1
    turbine::container_reference ${u:vars} "JAVADIR" ${t:684} string
    turbine::container_reference ${u:vars} "GATKDIR" ${t:686} string
    turbine::container_reference ${u:vars} "REFGENOMEDIR" ${t:689} string
    turbine::container_reference ${u:vars} "REFGENOME" ${t:691} string
    set v:variants:1 [ turbine::unpack_args ${u:varlist} 1 string ]
    turbine::rule [ list ${t:648} ${t:684} ${t:686} ${t:689} ${t:691} ] "__entry-async_op-dircat ${t:648} ${t:684} ${t:686} ${t:689} ${t:691} {${v:variants:1}} {${u:jointVCF}}"
    turbine::read_refcount_decr ${u:varlist} 1
}


proc __entry-async_op-dircat { t:648 t:684 t:686 t:689 t:691 v:variants:1 u:jointVCF } {
    # Var: $string v:t:689 VALUE_OF [string:__t:689]
    # Var: $string v:t:691 VALUE_OF [string:__t:691]
    # Var: $string v:t:688 VALUE_OF [string:__t:688]
    # Var: $string v:javadir:7 RENAMED [$string:__v:javadir] ./pipelinefunctions/joint_vcf.swift:GenotypeGVCFs():3:91
    # Var: $string v:gatkdir:6 RENAMED [$string:__v:gatkdir] ./pipelinefunctions/joint_vcf.swift:GenotypeGVCFs():3:91
    # Var: $string v:__filename:outputfile:7 RENAMED [$string:__v:__filename:outputfile] ./pipelinefunctions/joint_vcf.swift:GenotypeGVCFs():3:91
    # Var: $file v:outputfile:7 RENAMED [$file:__v:outputfile] ./pipelinefunctions/joint_vcf.swift:GenotypeGVCFs():3:91
    set v:t:689 [ turbine::retrieve_string ${t:689} CACHED 1 ]
    set v:t:691 [ turbine::retrieve_string ${t:691} CACHED 1 ]
    set v:t:688 "${v:t:689}/${v:t:691}"
    set v:javadir:7 [ turbine::retrieve_string ${t:684} CACHED 1 ]
    set v:gatkdir:6 [ turbine::retrieve_string ${t:686} CACHED 1 ]
    set v:__filename:outputfile:7 [ turbine::retrieve_string ${t:648} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:7 [ turbine::create_local_file_ref ${v:__filename:outputfile:7} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:7 "-Xmx8g" "-jar" ${v:gatkdir:6} "-T" "GenotypeGVCFs" "-R" ${v:t:688} {*}${v:variants:1} "-o" ${v:__filename:outputfile:7} [ dict create ] ]
    turbine::exec_external ${v:javadir:7} [ dict create ] "-Xmx8g" "-jar" ${v:gatkdir:6} "-T" "GenotypeGVCFs" "-R" ${v:t:688} {*}${v:variants:1} "-o" ${v:__filename:outputfile:7}
    turbine::store_file ${u:jointVCF} v:outputfile:7 0
    turbine::decr_local_file_refcount v:outputfile:7
}


proc __entry-async_op-strcat { t:657 u:variantFiles } {
    # Var: $string v:t:657 VALUE_OF [string:__t:657]
    # Var: $string v:t:656 VALUE_OF [string:__t:656]
    set v:t:657 [ turbine::retrieve_string ${t:657} CACHED 1 ]
    set v:t:656 "${v:t:657}/variantFiles.txt"
    turbine::set_filename_val ${u:variantFiles} ${v:t:656}
}


proc __entry-async_op-eq_string { t:96 t:97 } {
    # Var: $string v:t:97 VALUE_OF [string:__t:97]
    # Var: $boolean v:t:96 VALUE_OF [boolean:__t:96]
    set v:t:97 [ turbine::retrieve_string ${t:97} CACHED 1 ]
    set v:t:96 [ string equal ${v:t:97} "SAMBLASTER" ]
    turbine::store_integer ${t:96} ${v:t:96}
}


proc __entry-async_op-parse_float { t:340 t:341 } {
    # Var: $string v:t:341 VALUE_OF [string:__t:341]
    # Var: $float v:t:340 VALUE_OF [float:__t:340]
    set v:t:341 [ turbine::retrieve_string ${t:341} CACHED 1 ]
    set v:t:340 [ turbine::string2float_impl ${v:t:341} ]
    turbine::store_float ${t:340} ${v:t:340}
}


proc __entry-call_foreign-split { t:379 u:indices } {
    # Var: $string v:t:379 VALUE_OF [string:__t:379]
    # Var: $string$[int] v:indices:1 VALUE_OF [string[int]:indices]
    set v:t:379 [ turbine::retrieve_string ${t:379} CACHED 1 ]
    set v:indices:1 [ turbine::split_impl ${v:t:379} ":" ]
    turbine::build_rec ${u:indices} ${v:indices:1} [ list container integer string ] 0 1
}


proc __entry-optmerged { t:10 t:13 t:53 t:648 t:649 v:f u:configFile u:docRunfile u:jointVCF } {
    # Var: $string v:t:10 VALUE_OF [string:__t:10]
    # Var: $string v:t:13 VALUE_OF [string:__t:13]
    # Var: $string v:t:649 VALUE_OF [string:__t:649]
    # Var: $string v:t:9 VALUE_OF [string:__t:9]
    # Var: $string v:t:53 VALUE_OF [string:__t:53]
    # Var: $string v:t:648 VALUE_OF [string:__t:648]
    # Var: $string v:t:661 VALUE_OF [string:__t:661]
    set v:t:10 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:t:13 [ turbine::retrieve_string ${t:13} CACHED 1 ]
    set v:t:649 "${v:t:10}/${v:t:13}"
    turbine::store_string ${t:649} ${v:t:649}
    set v:t:9 "${v:t:10}/${v:t:13}/docs/${v:f}"
    set v:t:53 "${v:t:10}/${v:t:13}/docs/QC_test_results.txt"
    turbine::store_string ${t:53} ${v:t:53}
    set v:t:648 "${v:t:649}/jointVCFs/jointVCFcalled.vcf"
    turbine::store_string ${t:648} ${v:t:648}
    turbine::set_filename_val ${u:jointVCF} ${v:t:648}
    set v:t:661 "${v:t:649}/jointVCFs"
    turbine::set_filename_val ${u:docRunfile} ${v:t:9}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry:wait:configFile ${v:t:9} ${u:configFile} ${u:docRunfile} ]
    turbine::reset_priority
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list mkdir-app-leaf1 ${v:t:661} ]
    turbine::reset_priority
}


proc __entry:wait:configFile { v:t:9 u:configFile u:docRunfile } {
    # Var: $file v:configFile VALUE_OF [file:configFile]
    # Var: $file v:docRunfile VALUE_OF [file:docRunfile]
    set v:configFile [ turbine::retrieve_file ${u:configFile} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:docRunfile [ turbine::create_local_file_ref ${v:t:9} ${tcltmp:init_rc} 1 ]
    turbine::copy_local_file_contents ${v:docRunfile} ${v:configFile}
    turbine::store_file ${u:docRunfile} v:docRunfile 0
}


proc mkdir-app-leaf1 { v:t:661 } {
    # Var: $void v:v:1 RENAMED [$void:__v:v] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:mkdir():65:15
    turbine::c::log [ list exec: "mkdir" "-p" ${v:t:661} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:t:661}
}


proc __entry-optmerged-1 { t:10 t:13 t:28 t:30 t:32 t:320 t:340 t:341 t:53 t:649 t:657 t:7 t:96 t:97 u:docSampleInfo u:indices u:sampleInfoFile u:samples_processing_done u:vars } {
    # Var: $string v:p:1 RENAMED [$string:__v:p]
    # Var: $string v:f:1 RENAMED [$string:__v:f]
    # Var: $file v:sampleInfoFile:1 VALUE_OF [file:sampleInfoFile]
    # Var: $file v:sampleInfoFile:2 VALUE_OF [file:sampleInfoFile]
    # Var: $string$[int] v:sampleLines:1 VALUE_OF [string[int]:sampleLines]
    set v:p:1 [ turbine::retrieve_string ${t:7} CACHED 1 ]
    set v:f:1 [ file tail ${v:p:1} ]
    set tcltmp:init_rc 1
    set v:sampleInfoFile:1 [ turbine::create_local_file_ref "" ${tcltmp:init_rc} 0 ]
    turbine::input_file_local v:sampleInfoFile:1 ${v:p:1}
    turbine::store_file ${u:sampleInfoFile} v:sampleInfoFile:1 1
    set v:sampleInfoFile:2 [ turbine::retrieve_file ${u:sampleInfoFile} ]
    set v:sampleLines:1 [ turbine::file_lines_impl ${v:sampleInfoFile:2} ]
    turbine::rule [ list ${t:10} ${t:13} ] [ list __entry-async_op-strcat-1 ${t:10} ${t:13} ${v:f:1} ${u:docSampleInfo} ${u:sampleInfoFile} ]
    turbine::rule [ list ] "__entry-foreach-wait1 ${t:10} ${t:13} ${t:28} ${t:30} ${t:32} ${t:320} ${t:340} ${t:341} ${t:53} ${t:649} ${t:657} ${t:96} ${t:97} {${v:sampleLines:1}} ${u:indices} ${u:samples_processing_done} ${u:vars}"
    turbine::decr_local_file_refcount v:sampleInfoFile:1
}


proc __entry-async_op-strcat-1 { t:10 t:13 v:f:1 u:docSampleInfo u:sampleInfoFile } {
    # Var: $string v:t:10:8 VALUE_OF [string:__t:10]
    # Var: $string v:t:13:5 VALUE_OF [string:__t:13]
    # Var: $string v:t:17 VALUE_OF [string:__t:17]
    set v:t:10:8 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:t:13:5 [ turbine::retrieve_string ${t:13} CACHED 1 ]
    set v:t:17 "${v:t:10:8}/${v:t:13:5}/docs/${v:f:1}"
    turbine::set_filename_val ${u:docSampleInfo} ${v:t:17}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry:wait:sampleInfoFile ${v:t:17} ${u:docSampleInfo} ${u:sampleInfoFile} ]
    turbine::reset_priority
}


proc __entry:wait:sampleInfoFile { v:t:17 u:docSampleInfo u:sampleInfoFile } {
    # Var: $file v:sampleInfoFile VALUE_OF [file:sampleInfoFile]
    # Var: $file v:docSampleInfo VALUE_OF [file:docSampleInfo]
    set v:sampleInfoFile [ turbine::retrieve_file ${u:sampleInfoFile} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:docSampleInfo [ turbine::create_local_file_ref ${v:t:17} ${tcltmp:init_rc} 1 ]
    turbine::copy_local_file_contents ${v:docSampleInfo} ${v:sampleInfoFile}
    turbine::store_file ${u:docSampleInfo} v:docSampleInfo 0
}


proc __entry-foreach-wait1 { t:10 t:13 t:28 t:30 t:32 t:320 t:340 t:341 t:53 t:649 t:657 t:96 t:97 v:sampleLines:1 u:indices u:samples_processing_done u:vars } {
    set tcltmp:iters [ dict size ${v:sampleLines:1} ]
    turbine::read_refcount_incr ${t:341} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:28} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:320} [ expr { 6 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:340} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:13} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:53} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:97} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:10} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:32} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:96} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:30} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${u:indices} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:657} [ expr { 5 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${u:vars} [ expr { 22 * ${tcltmp:iters} } ]
    turbine::read_refcount_incr ${t:649} [ expr { ${tcltmp:iters} } ]
    dict for {tcltmp:ignore v:sample} ${v:sampleLines:1} {
        # Var: string c:s_svariant_g OPT_TEMPORARY
        global c:s_svariant_g
        # Var: string[int] u:sampleInfo /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():40:1
        # Var: string u:read1 /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():42:1
        # Var: string u:read2 /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():43:1
        # Var: string u:rgheader /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():45:1
        # Var: string u:AlignDir /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():49:1
        # Var: string u:VarcallDir /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():50:1
        # Var: string u:RealignDir /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():51:1
        # Var: string t:47 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():55:23
        # Var: file u:dedupsortedbam /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():55:52
        # Var: string t:49 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():56:15
        # Var: file u:outbam /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():56:46
        # Var: string t:51 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():57:19
        # Var: file u:rawvariant /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():57:50
        # Var: file u:qcfile /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():59:69
        # Var: string t:60 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():60:18
        # Var: file u:mergedbam /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():60:107
        # Var: file u:mergedvariant /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():61:111
        # Var: file u:flagstats /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():64:68
        # Var: string t:81 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():67:19
        # Var: file u:alignedsam /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():67:65
        # Var: file u:chr_bamListfile /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():68:64
        # Var: file u:chr_vcfListfile /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():69:63
        # Var: string[int] u:stat /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():124:1
        # Var: string[int] t:322 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():125:14
        # Var: string[int] t:325 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():126:13
        # Var: string[int] t:328 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():127:12
        # Var: float u:perc_mapped /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():130:12
        # Var: float t:335 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():130:38
        # Var: int u:chromosomes_processing_done /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():151:1
        # Var: string[int] u:chr_bamList /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():208:1
        # Var: string t:611 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():213:38
        # Var: string[int] u:chr_vcfList /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():215:1
        # Var: file t:617 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():215:52
        # Var: $string$[int] v:sampleInfo VALUE_OF [string[int]:sampleInfo]
        # Var: $string v:alias:sampleName VALUE_OF [string:__alias:sampleName]
        # Var: $string v:alias:read1 VALUE_OF [string:__alias:read1]
        # Var: $string v:alias:read2 VALUE_OF [string:__alias:read2]
        lassign [ adlb::multicreate [ list container integer string 1 2 37 ] [ list string 1 1 38 ] [ list string 1 1 39 ] [ list string 1 1 40 ] [ list string 2 1 41 ] [ list string 1 1 42 ] [ list string 1 1 43 ] [ list string 2 1 44 ] [ list string 1 1 46 ] [ list string 1 1 48 ] [ list string 1 1 51 ] [ list string 2 1 55 ] [ list container integer string 3 1 59 ] [ list container integer string 1 1 60 ] [ list container integer string 1 1 61 ] [ list container integer string 1 1 62 ] [ list float 1 1 63 ] [ list float 1 1 64 ] [ list integer 1 1 65 ] [ list container integer string 1 1 66 ] [ list string 1 1 67 ] [ list container integer string 1 1 68 ] ] u:sampleInfo u:read1 u:read2 u:rgheader u:AlignDir u:VarcallDir u:RealignDir t:47 t:49 t:51 t:60 t:81 u:stat t:322 t:325 t:328 u:perc_mapped t:335 u:chromosomes_processing_done u:chr_bamList t:611 u:chr_vcfList
        turbine::c::log "allocated u:sampleInfo=<${u:sampleInfo}> u:read1=<${u:read1}> u:read2=<${u:read2}> u:rgheader=<${u:rgheader}> u:AlignDir=<${u:AlignDir}>"
        turbine::c::log "allocated u:VarcallDir=<${u:VarcallDir}> u:RealignDir=<${u:RealignDir}> t:47=<${t:47}> t:49=<${t:49}> t:51=<${t:51}>"
        turbine::c::log "allocated t:60=<${t:60}> t:81=<${t:81}> u:stat=<${u:stat}> t:322=<${t:322}> t:325=<${t:325}>"
        turbine::c::log "allocated t:328=<${t:328}> u:perc_mapped=<${u:perc_mapped}> t:335=<${t:335}> u:chromosomes_processing_done=<${u:chromosomes_processing_done}> u:chr_bamList=<${u:chr_bamList}>"
        turbine::c::log "allocated t:611=<${t:611}> u:chr_vcfList=<${u:chr_vcfList}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 4 1 45 ] [ list file 1 1 47 ] [ list file 1 1 49 ] [ list file 6 1 50 ] [ list file 1 1 52 ] [ list file 1 1 53 ] [ list file 1 1 54 ] [ list file 2 1 56 ] [ list file 1 1 57 ] [ list file 1 1 58 ] [ list file 1 1 69 ] ] [ list 1 1 1 1 1 1 1 1 1 1 0 ] ] u:dedupsortedbam u:outbam u:rawvariant u:qcfile u:mergedbam u:mergedvariant u:flagstats u:alignedsam u:chr_bamListfile u:chr_vcfListfile t:617
        set v:sampleInfo [ turbine::split_impl ${v:sample} " " ]
        turbine::build_rec ${u:sampleInfo} ${v:sampleInfo} [ list container integer string ] 0 1
        set a:sampleName [ adlb::subscript_container ${u:sampleInfo} 0 ]
        set v:alias:sampleName [ turbine::retrieve_string ${a:sampleName} ]
        set a:read1 [ adlb::subscript_container ${u:sampleInfo} 1 ]
        set v:alias:read1 [ turbine::retrieve_string ${a:read1} ]
        turbine::store_string ${u:read1} ${v:alias:read1}
        set a:read2 [ adlb::subscript_container ${u:sampleInfo} 2 ]
        set v:alias:read2 [ turbine::retrieve_string ${a:read2} CACHED 1 ]
        turbine::store_string ${u:read2} ${v:alias:read2}
        set a:t:323 [ adlb::subscript_container ${u:stat} 4 ]
        set a:tot_mapped [ adlb::subscript_container ${t:322} 0 ]
        set a:t:326 [ adlb::subscript_container ${u:stat} 0 ]
        set a:tot_reads [ adlb::subscript_container ${t:325} 0 ]
        set a:t:329 [ adlb::subscript_container ${u:stat} 3 ]
        set a:tot_dups [ adlb::subscript_container ${t:328} 0 ]
        f:sed ${t:617} ${u:chr_vcfListfile} ${c:s_svariant_g} -100 "HARD" "RANK"
        turbine::rule [ list ${t:96} ] [ list __entry-if1 ${u:AlignDir} ${t:320} ${t:47} ${t:657} ${t:81} ${t:96} ${t:97} ${v:alias:read1} ${v:alias:read2} ${v:alias:sampleName} ${u:alignedsam} ${u:dedupsortedbam} ${u:qcfile} ${u:read1} ${u:read2} ${u:rgheader} ${u:vars} ]
        turbine::rule [ list ${u:chromosomes_processing_done} ] [ list __entry-explicit-wait3 ${u:RealignDir} ${u:VarcallDir} ${t:320} ${t:49} ${t:60} ${t:611} ${t:657} ${v:alias:sampleName} ${u:chr_bamList} ${u:chr_bamListfile} ${u:chr_vcfListfile} ${u:chromosomes_processing_done} ${u:mergedbam} ${u:outbam} ${u:qcfile} ${u:vars} ]
        turbine::rule [ list ${t:28} ${t:30} ${t:32} ] [ list __entry-async_op-sprintf ${t:28} ${t:30} ${t:32} ${v:alias:sampleName} ${u:rgheader} ]
        turbine::rule [ list ${t:53} ] "__entry-copy_in_filename ${t:53} {${u:qcfile}}"
        turbine::rule [ list ${a:t:323} ] "__entry-call_foreign-split-1 {${a:t:323}} ${t:322}"
        turbine::rule [ list ${a:t:326} ] "__entry-call_foreign-split-2 {${a:t:326}} ${t:325}"
        turbine::rule [ list ${a:t:329} ] "__entry-call_foreign-split-3 {${a:t:329}} ${t:328}"
        turbine::rule [ list ${a:tot_reads} ] [ list __entry-async_op-parse_float-1 ${a:tot_dups} ${a:tot_reads} ${t:335} ${t:340} ${t:341} ${v:alias:sampleName} ${u:perc_mapped} ${u:qcfile} ${u:vars} ]
        turbine::rule [ list ${a:tot_mapped} ] "__entry-async_op-parse_float-4 {${a:tot_mapped}} ${t:335}"
        turbine::rule [ list [ turbine::get_file_td ${t:617} ] ] "__entry-call_foreign-read-2 ${t:51} {${t:617}} ${t:649} {${v:sampleLines:1}} ${u:chr_vcfList} {${u:mergedvariant}} {${u:rawvariant}} ${u:samples_processing_done} ${u:vars}"
        turbine::rule [ list ${t:10} ] [ list __entry-optmerged-7 ${u:AlignDir} ${u:RealignDir} ${u:VarcallDir} ${t:10} ${t:13} ${t:320} ${t:47} ${t:49} ${t:51} ${t:60} ${t:611} ${t:657} ${v:alias:sampleName} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:flagstats} ${u:indices} ${u:mergedbam} ${u:mergedvariant} ${u:outbam} ${u:qcfile} ${u:rawvariant} ${u:stat} ${u:vars} ]
        turbine::rule [ list ${t:657} ] [ list __entry-optmerged-13 ${t:657} ${t:81} ${v:alias:sampleName} ${u:alignedsam} ${u:chr_bamListfile} ${u:chr_vcfListfile} ]
        adlb::write_refcount_decr ${u:sampleInfo} 1
    }
    turbine::read_refcount_decr ${t:320} 1
    turbine::read_refcount_decr ${t:340} 1
    turbine::read_refcount_decr ${t:341} 1
    turbine::read_refcount_decr ${t:28} 1
    turbine::read_refcount_decr ${t:10} 1
    turbine::read_refcount_decr ${t:32} 1
    turbine::read_refcount_decr ${t:13} 1
    turbine::read_refcount_decr ${t:30} 1
    turbine::read_refcount_decr ${t:96} 1
    turbine::read_refcount_decr ${t:53} 1
    turbine::read_refcount_decr ${t:97} 1
    turbine::read_refcount_decr ${u:indices} 1
    turbine::read_refcount_decr ${t:657} 1
    turbine::read_refcount_decr ${u:vars} 1
    turbine::read_refcount_decr ${t:649} 1
}


proc __entry-if1 { u:AlignDir t:320 t:47 t:657 t:81 t:96 t:97 v:alias:read1 v:alias:read2 v:alias:sampleName u:alignedsam u:dedupsortedbam u:qcfile u:read1 u:read2 u:rgheader u:vars } {
    # Var: $boolean v:__t:96 VALUE_OF [boolean:__t:96] /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():71:35
    set v:__t:96 [ turbine::retrieve_integer ${t:96} CACHED 1 ]
    if { ${v:__t:96} } {
        # Var: string t:100 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():72:18
        # Var: file u:dedupsam /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():72:64
        # Var: string t:105 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():73:18
        # Var: file u:dedupbam /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():73:47
        # Var: string t:107 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():75:23
        # Var: string t:109 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():75:53
        # Var: string[int] t:111 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():75:72
        # Var: string t:112 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():75:72
        # Var: int t:114 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():75:95
        # Var: string t:115 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():75:106
        # Var: string t:138 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():80:35
        # Var: string t:142 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():81:28
        # Var: string[int] t:149 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():81:105
        lassign [ adlb::multicreate [ list string 1 1 70 ] [ list string 1 1 72 ] [ list string 1 1 74 ] [ list string 1 1 75 ] [ list container integer string 1 1 76 ] [ list string 1 1 77 ] [ list integer 1 1 78 ] [ list string 1 1 79 ] [ list string 1 1 80 ] [ list string 1 1 81 ] [ list container integer string 1 1 82 ] ] t:100 t:105 t:107 t:109 t:111 t:112 t:114 t:115 t:138 t:142 t:149
        turbine::c::log "allocated t:100=<${t:100}> t:105=<${t:105}> t:107=<${t:107}> t:109=<${t:109}> t:111=<${t:111}>"
        turbine::c::log "allocated t:112=<${t:112}> t:114=<${t:114}> t:115=<${t:115}> t:138=<${t:138}> t:142=<${t:142}>"
        turbine::c::log "allocated t:149=<${t:149}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 71 ] [ list file 1 1 73 ] ] [ list 1 1 ] ] u:dedupsam u:dedupbam
        turbine::array_kv_build ${t:149} [ ::adlb::dict_create 0 "--compression" 1 "1" ] 1 integer string
        turbine::container_reference ${u:vars} "BWADIR" ${t:107} string
        turbine::container_reference ${u:vars} "BWAINDEX" ${t:109} string
        turbine::container_reference ${u:vars} "BWAMEMPARAMS" ${t:112} string
        turbine::container_reference ${u:vars} "PBSCORES" ${t:115} string
        f:bwa_mem ${u:alignedsam} ${t:107} ${u:read1} ${u:read2} ${t:109} ${t:111} ${t:114} ${u:rgheader} -100 "HARD" "RANK"
        turbine::container_reference ${u:vars} "NOVOSORTDIR" ${t:142} string
        f:novosort ${u:dedupsortedbam} ${t:142} ${u:dedupbam} ${t:657} ${t:114} ${t:149} -100 "HARD" "RANK"
        turbine::rule [ list [ turbine::get_file_td ${u:alignedsam} ] ] [ list __entry-chain1 ${t:100} ${t:105} ${t:114} ${t:138} ${t:320} ${t:81} ${v:alias:sampleName} ${u:alignedsam} ${u:dedupbam} ${u:dedupsam} ${u:qcfile} ${u:vars} ]
        turbine::rule [ list ${t:657} ] [ list __entry-async_op-strcat-2 ${t:100} ${t:657} ${v:alias:sampleName} ${u:dedupsam} ]
        turbine::rule [ list ${u:AlignDir} ] [ list __entry-async_op-strcat-3 ${u:AlignDir} ${t:105} ${t:138} ${v:alias:sampleName} ${u:dedupbam} ]
        turbine::rule [ list ${t:112} ] "__entry-arr_copy_in_imm ${t:111} ${t:112}"
        turbine::rule [ list ${t:115} ] "__entry-async_op-parse_int ${t:114} ${t:115}"
        turbine::rule [ list ${t:320} ${t:47} [ turbine::get_file_td ${u:dedupsortedbam} ] ] [ list __entry-optmerged-2 ${t:320} ${t:47} ${v:alias:sampleName} ${u:dedupsortedbam} ${u:qcfile} ]
        turbine::read_refcount_decr ${t:111} 1
        turbine::read_refcount_decr ${t:142} 1
        turbine::read_refcount_decr ${t:149} 1
        turbine::read_refcount_decr ${t:109} 1
        turbine::read_refcount_decr ${t:107} 1
    } else {
        # Var: string t:168 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():86:19
        # Var: file u:alignedbam /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():86:48
        lassign [ adlb::multicreate [ list string 2 1 87 ] ] t:168
        turbine::c::log "allocated t:168=<${t:168}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 2 1 88 ] ] [ list 1 ] ] u:alignedbam
        turbine::read_refcount_incr ${u:AlignDir} 1
        turbine::read_refcount_incr ${u:rgheader} 1
        turbine::read_refcount_incr ${u:vars} 2
        turbine::file_read_refcount_incr ${u:qcfile} 1
        turbine::read_refcount_incr ${t:657} 1
        turbine::file_read_refcount_incr ${u:alignedsam} 1
        turbine::read_refcount_incr ${u:read1} 1
        turbine::read_refcount_incr ${t:97} 1
        turbine::read_refcount_incr ${u:read2} 1
        turbine::read_refcount_incr ${t:47} 1
        turbine::read_refcount_incr ${t:320} 1
        turbine::rule [ list ${u:AlignDir} ] [ list __entry-async_op-strcat-4 ${u:AlignDir} ${t:168} ${v:alias:sampleName} ${u:alignedbam} ]
        turbine::rule [ list ${t:97} ] [ list __entry-async_op-eq_string-1 ${u:AlignDir} ${t:168} ${t:320} ${t:47} ${t:657} ${t:81} ${t:97} ${v:alias:read1} ${v:alias:read2} ${v:alias:sampleName} ${u:alignedbam} ${u:alignedsam} ${u:dedupsortedbam} ${u:qcfile} ${u:read1} ${u:read2} ${u:rgheader} ${u:vars} ]
    }
    turbine::read_refcount_decr ${t:320} 1
    turbine::read_refcount_decr ${t:47} 1
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
    turbine::read_refcount_decr ${u:read2} 1
    turbine::read_refcount_decr ${t:97} 1
    turbine::read_refcount_decr ${u:read1} 1
    turbine::read_refcount_decr ${t:81} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::read_refcount_decr ${t:657} 1
    turbine::file_read_refcount_decr ${u:qcfile} 1
    turbine::read_refcount_decr ${u:vars} 1
    turbine::read_refcount_decr ${u:rgheader} 1
    turbine::read_refcount_decr ${u:AlignDir} 1
}


proc __entry-chain1 { t:100 t:105 t:114 t:138 t:320 t:81 v:alias:sampleName u:alignedsam u:dedupbam u:dedupsam u:qcfile u:vars } {
    # Var: string t:117 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():76:24
    lassign [ adlb::multicreate [ list string 1 1 83 ] ] t:117
    turbine::c::log "allocated t:117=<${t:117}>"
    turbine::container_reference ${u:vars} "SAMBLASTERDIR" ${t:117} string
    turbine::rule [ list ${t:100} ${t:117} ${t:81} ] [ list samblaster-app-leaf1 ${t:100} ${t:105} ${t:114} ${t:117} ${t:138} ${t:320} ${t:81} ${v:alias:sampleName} ${u:alignedsam} ${u:dedupbam} ${u:dedupsam} ${u:qcfile} ]
}


proc samblaster-app-leaf1 { t:100 t:105 t:114 t:117 t:138 t:320 t:81 v:alias:sampleName u:alignedsam u:dedupbam u:dedupsam u:qcfile } {
    # Var: $string v:samblasterdir RENAMED [$string:__v:samblasterdir] ./pipelinefunctions/align_dedup.swift:samblaster():27:43
    # Var: $string v:__filename:inputFile RENAMED [$string:__v:__filename:inputFile] ./pipelinefunctions/align_dedup.swift:samblaster():27:43
    # Var: $string v:__filename:output RENAMED [$string:__v:__filename:output] ./pipelinefunctions/align_dedup.swift:samblaster():27:43
    # Var: $file v:inputFile:1 RENAMED [$file:__v:inputFile] ./pipelinefunctions/align_dedup.swift:samblaster():27:43
    # Var: $file v:output RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:samblaster():27:43
    set v:samblasterdir [ turbine::retrieve_string ${t:117} CACHED 1 ]
    set v:__filename:inputFile [ turbine::retrieve_string ${t:81} CACHED 1 ]
    set v:__filename:output [ turbine::retrieve_string ${t:100} CACHED 1 ]
    set v:inputFile:1 [ turbine::retrieve_file ${u:alignedsam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:samblasterdir "-M" "-i" ${v:__filename:inputFile} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external ${v:samblasterdir} [ dict create "stdout" ${v:__filename:output} ] "-M" "-i" ${v:__filename:inputFile}
    turbine::store_file ${u:dedupsam} v:output 0
    turbine::rule [ list ] [ list __entry-chain2 ${t:105} ${t:114} ${t:138} ${t:320} ${v:alias:sampleName} ${u:dedupbam} ${u:dedupsam} ${u:qcfile} ]
    turbine::decr_local_file_refcount v:output
}


proc __entry-chain2 { t:105 t:114 t:138 t:320 v:alias:sampleName u:dedupbam u:dedupsam u:qcfile } {
    # Var: string[int] t:124 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():77:89
    lassign [ adlb::multicreate [ list container integer string 1 1 84 ] ] t:124
    turbine::c::log "allocated t:124=<${t:124}>"
    turbine::array_kv_build ${t:124} [ ::adlb::dict_create 0 "-u" ] 1 integer string
    f:samtools_view ${u:dedupbam} ${t:320} ${u:dedupsam} ${t:114} ${t:124} -100 "HARD" "RANK"
    turbine::rule [ list ${t:105} ${t:320} [ turbine::get_file_td ${u:dedupbam} ] ] [ list __entry-chain3 ${t:105} ${t:138} ${t:320} ${v:alias:sampleName} ${u:dedupbam} ${u:qcfile} ]
    turbine::file_read_refcount_decr ${u:dedupsam} 1
    turbine::read_refcount_decr ${t:124} 1
    turbine::read_refcount_decr ${t:114} 1
}


proc __entry-chain3 { t:105 t:138 t:320 v:alias:sampleName u:dedupbam u:qcfile } {
    # Var: $string v:samtoolsdir RENAMED [$string:__v:samtoolsdir]
    # Var: $string v:inputFile RENAMED [$string:__v:inputFile]
    # Var: $int v:numAlignments RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:129 VALUE_OF [boolean:__t:129]
    # Var: $boolean v:t:136 VALUE_OF [boolean:__t:136]
    set v:samtoolsdir [ turbine::retrieve_string ${t:320} CACHED 1 ]
    set v:inputFile [ turbine::retrieve_string ${t:105} CACHED 1 ]
    set v:numAlignments [ alignment::samtools_view ${v:samtoolsdir} ${v:inputFile} ]
    set v:t:129 [ expr { ${v:numAlignments} == 0 } ]
    set v:t:136 [ expr { ${v:numAlignments} > 0 } ]
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if2 ${v:alias:sampleName} ${v:inputFile} ${v:t:129} ${u:qcfile} ]
    turbine::reset_priority
    turbine::rule [ list ${t:138} ] "__entry-async_op-assert ${t:138} ${v:t:136}"
    turbine::file_read_refcount_decr ${u:dedupbam} 1
}


proc __entry-if2 { v:alias:sampleName v:inputFile v:t:129 u:qcfile } {
    if { ${v:t:129} } {
        # Var: string t:131 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():79:46
        # Var: $string v:t:131 VALUE_OF [string:__t:131]
        lassign [ adlb::multicreate [ list string 1 1 85 ] ] t:131
        turbine::c::log "allocated t:131=<${t:131}>"
        set v:t:131 "${v:alias:sampleName}\tALIGNMENT\tFAIL\tbwa mem command did not produce alignments for ${v:inputFile}\n"
        turbine::store_string ${t:131} ${v:t:131}
        f:echo ${u:qcfile} ${t:131} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:131} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-async_op-assert { t:138 v:t:136 } {
    # Var: $string v:t:138:1 VALUE_OF [string:__t:138]
    # Var: $void v:t:135 VALUE_OF [void:__t:135]
    set v:t:138:1 [ turbine::retrieve_string ${t:138} CACHED 1 ]
    turbine::assert_impl ${v:t:136} ${v:t:138:1}
}


proc __entry-async_op-strcat-2 { t:100 t:657 v:alias:sampleName u:dedupsam } {
    # Var: $string v:t:657:4 VALUE_OF [string:__t:657]
    # Var: $string v:t:100 VALUE_OF [string:__t:100]
    set v:t:657:4 [ turbine::retrieve_string ${t:657} CACHED 1 ]
    set v:t:100 "${v:t:657:4}/align/${v:alias:sampleName}.wdups.sam"
    turbine::store_string ${t:100} ${v:t:100}
    turbine::set_filename_val ${u:dedupsam} ${v:t:100}
}


proc __entry-async_op-strcat-3 { u:AlignDir t:105 t:138 v:alias:sampleName u:dedupbam } {
    # Var: $string v:AlignDir:3 VALUE_OF [string:AlignDir]
    # Var: $string v:t:105 VALUE_OF [string:__t:105]
    # Var: $string v:t:138 VALUE_OF [string:__t:138]
    set v:AlignDir:3 [ turbine::retrieve_string ${u:AlignDir} CACHED 1 ]
    set v:t:105 "${v:AlignDir:3}${v:alias:sampleName}.wdups.bam"
    turbine::store_string ${t:105} ${v:t:105}
    turbine::set_filename_val ${u:dedupbam} ${v:t:105}
    set v:t:138 "bwa mem command did not produce alignments for ${v:t:105} alignment failed"
    turbine::store_string ${t:138} ${v:t:138}
}


proc __entry-arr_copy_in_imm { t:111 t:112 } {
    # Var: $string v:t:112 VALUE_OF [string:__t:112]
    set v:t:112 [ turbine::retrieve_string ${t:112} CACHED 1 ]
    turbine::array_kv_build ${t:111} [ ::adlb::dict_create 0 ${v:t:112} ] 1 integer string
}


proc __entry-async_op-parse_int { t:114 t:115 } {
    # Var: $string v:t:115 VALUE_OF [string:__t:115]
    # Var: $int v:t:114 VALUE_OF [int:__t:114]
    set v:t:115 [ turbine::retrieve_string ${t:115} CACHED 1 ]
    set v:t:114 [ turbine::parse_int_impl ${v:t:115} 10 ]
    turbine::store_integer ${t:114} ${v:t:114}
}


proc __entry-optmerged-2 { t:320 t:47 v:alias:sampleName u:dedupsortedbam u:qcfile } {
    # Var: $string v:t:47:2 VALUE_OF [string:__t:47]
    # Var: $string v:t:164 VALUE_OF [string:__t:164]
    # Var: $string v:samtoolsdir:1 RENAMED [$string:__v:samtoolsdir]
    # Var: $int v:numAlignments:1 RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:155 VALUE_OF [boolean:__t:155]
    # Var: $boolean v:t:162 VALUE_OF [boolean:__t:162]
    # Var: $void v:t:161 VALUE_OF [void:__t:161]
    set v:t:47:2 [ turbine::retrieve_string ${t:47} CACHED 1 ]
    set v:t:164 "novosort command did not produce alignments for ${v:t:47:2} Sorting bam failed"
    set v:samtoolsdir:1 [ turbine::retrieve_string ${t:320} CACHED 1 ]
    set v:numAlignments:1 [ alignment::samtools_view ${v:samtoolsdir:1} ${v:t:47:2} ]
    set v:t:155 [ expr { ${v:numAlignments:1} == 0 } ]
    set v:t:162 [ expr { ${v:numAlignments:1} > 0 } ]
    turbine::assert_impl ${v:t:162} ${v:t:164}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if3 ${v:alias:sampleName} ${v:t:155} ${v:t:47:2} ${u:qcfile} ]
    turbine::reset_priority
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
}


proc __entry-if3 { v:alias:sampleName v:t:155 v:t:47:2 u:qcfile } {
    if { ${v:t:155} } {
        # Var: string t:157 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():83:55
        # Var: $string v:t:157 VALUE_OF [string:__t:157]
        lassign [ adlb::multicreate [ list string 1 1 86 ] ] t:157
        turbine::c::log "allocated t:157=<${t:157}>"
        set v:t:157 "${v:alias:sampleName}\tALIGNMENT\tFAIL\t novosort command did not produce alignments for ${v:t:47:2}\n"
        turbine::store_string ${t:157} ${v:t:157}
        f:echo ${u:qcfile} ${t:157} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:157} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-async_op-strcat-4 { u:AlignDir t:168 v:alias:sampleName u:alignedbam } {
    # Var: $string v:AlignDir:4 VALUE_OF [string:AlignDir]
    # Var: $string v:t:168 VALUE_OF [string:__t:168]
    set v:AlignDir:4 [ turbine::retrieve_string ${u:AlignDir} CACHED 1 ]
    set v:t:168 "${v:AlignDir:4}${v:alias:sampleName}.nodups.bam"
    turbine::store_string ${t:168} ${v:t:168}
    turbine::set_filename_val ${u:alignedbam} ${v:t:168}
}


proc __entry-async_op-eq_string-1 { u:AlignDir t:168 t:320 t:47 t:657 t:81 t:97 v:alias:read1 v:alias:read2 v:alias:sampleName u:alignedbam u:alignedsam u:dedupsortedbam u:qcfile u:read1 u:read2 u:rgheader u:vars } {
    # Var: $string v:t:97:1 VALUE_OF [string:__t:97]
    # Var: $boolean v:t:170 VALUE_OF [boolean:__t:170]
    set v:t:97:1 [ turbine::retrieve_string ${t:97} CACHED 1 ]
    set v:t:170 [ string equal ${v:t:97:1} "PICARD" ]
    if { ${v:t:170} } {
        # Var: file u:alignedsortedbam /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():88:55
        # Var: file u:metricsfile /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():89:50
        # Var: string t:178 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():90:24
        # Var: string t:180 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():90:54
        # Var: string[int] t:182 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():90:73
        # Var: string t:183 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():90:73
        # Var: int t:185 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():90:96
        # Var: string t:186 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():90:107
        # Var: string t:207 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():94:38
        # Var: string t:211 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():95:31
        # Var: string[int] t:218 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():95:96
        # Var: string t:237 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():99:45
        lassign [ adlb::multicreate [ list string 1 1 91 ] [ list string 1 1 92 ] [ list container integer string 1 1 93 ] [ list string 1 1 94 ] [ list integer 1 1 95 ] [ list string 1 1 96 ] [ list string 1 1 97 ] [ list string 1 1 98 ] [ list container integer string 1 1 99 ] [ list string 1 1 100 ] ] t:178 t:180 t:182 t:183 t:185 t:186 t:207 t:211 t:218 t:237
        turbine::c::log "allocated t:178=<${t:178}> t:180=<${t:180}> t:182=<${t:182}> t:183=<${t:183}> t:185=<${t:185}>"
        turbine::c::log "allocated t:186=<${t:186}> t:207=<${t:207}> t:211=<${t:211}> t:218=<${t:218}> t:237=<${t:237}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 89 ] [ list file 0 1 90 ] ] [ list 1 1 ] ] u:alignedsortedbam u:metricsfile
        turbine::read_refcount_incr ${u:AlignDir} 1
        turbine::read_refcount_incr ${t:168} 1
        turbine::read_refcount_incr ${t:47} 1
        turbine::array_kv_build ${t:218} [ ::adlb::dict_create ] 1 integer string
        turbine::container_reference ${u:vars} "BWADIR" ${t:178} string
        turbine::container_reference ${u:vars} "BWAINDEX" ${t:180} string
        turbine::container_reference ${u:vars} "BWAMEMPARAMS" ${t:183} string
        turbine::container_reference ${u:vars} "PBSCORES" ${t:186} string
        f:bwa_mem ${u:alignedsam} ${t:178} ${u:read1} ${u:read2} ${t:180} ${t:182} ${t:185} ${u:rgheader} -100 "HARD" "RANK"
        turbine::container_reference ${u:vars} "NOVOSORTDIR" ${t:211} string
        f:novosort ${u:alignedsortedbam} ${t:211} ${u:alignedbam} ${t:657} ${t:185} ${t:218} -100 "HARD" "RANK"
        turbine::rule [ list [ turbine::get_file_td ${u:alignedsam} ] ] [ list __entry-chain5 ${t:168} ${t:185} ${t:207} ${t:320} ${v:alias:sampleName} ${u:alignedbam} ${u:alignedsam} ${u:qcfile} ]
        turbine::rule [ list ${t:183} ] "__entry-arr_copy_in_imm-1 ${t:182} ${t:183}"
        turbine::rule [ list ${t:186} ] "__entry-async_op-parse_int-1 ${t:185} ${t:186}"
        turbine::rule [ list ${t:168} ] "__entry-async_op-strcat-5 ${t:168} ${t:207}"
        turbine::rule [ list ${t:47} ] "__entry-async_op-strcat-6 ${t:237} ${t:47}"
        turbine::rule [ list ${u:AlignDir} ] [ list __entry-optmerged-3 ${u:AlignDir} ${t:237} ${t:320} ${t:47} ${t:657} ${v:alias:sampleName} ${u:alignedsortedbam} ${u:dedupsortedbam} ${u:metricsfile} ${u:qcfile} ${u:vars} ]
        turbine::read_refcount_decr ${t:178} 1
        turbine::read_refcount_decr ${t:211} 1
        turbine::read_refcount_decr ${t:180} 1
        turbine::read_refcount_decr ${t:218} 1
        turbine::read_refcount_decr ${t:182} 1
    } else {
        # Var: string t:242 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():102:7
        lassign [ adlb::multicreate [ list string 1 1 106 ] ] t:242
        turbine::c::log "allocated t:242=<${t:242}>"
        turbine::read_refcount_incr ${u:rgheader} 1
        turbine::file_read_refcount_incr ${u:alignedsam} 1
        turbine::read_refcount_incr ${t:81} 1
        turbine::read_refcount_incr ${u:read1} 1
        turbine::read_refcount_incr ${u:read2} 1
        turbine::file_read_refcount_incr ${u:alignedbam} 2
        turbine::file_read_refcount_incr ${u:dedupsortedbam} 1
        turbine::read_refcount_incr ${t:320} 2
        turbine::container_reference ${u:vars} "ALIGNERTOOL" ${t:242} string
        turbine::rule [ list [ turbine::get_file_td ${u:alignedbam} ] ] [ list __entry-explicit-wait1 ${t:320} ${t:47} ${t:657} ${v:alias:sampleName} ${u:alignedbam} ${u:dedupsortedbam} ${u:qcfile} ${u:vars} ]
        turbine::rule [ list ${t:242} ] [ list __entry-async_op-eq_string-2 ${t:242} ${t:320} ${t:81} ${v:alias:read1} ${v:alias:read2} ${u:alignedbam} ${u:alignedsam} ${u:read1} ${u:read2} ${u:rgheader} ${u:vars} ]
        turbine::rule [ list ${t:168} ${t:320} ] [ list __entry-optmerged-5 ${t:168} ${t:320} ${v:alias:sampleName} ${u:qcfile} ]
    }
    turbine::read_refcount_decr ${t:320} 1
    turbine::read_refcount_decr ${t:47} 1
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
    turbine::read_refcount_decr ${t:168} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${u:read2} 1
    turbine::read_refcount_decr ${u:read1} 1
    turbine::read_refcount_decr ${t:81} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::read_refcount_decr ${t:657} 1
    turbine::file_read_refcount_decr ${u:qcfile} 1
    turbine::read_refcount_decr ${u:vars} 1
    turbine::read_refcount_decr ${u:rgheader} 1
    turbine::read_refcount_decr ${u:AlignDir} 1
}


proc __entry-chain5 { t:168 t:185 t:207 t:320 v:alias:sampleName u:alignedbam u:alignedsam u:qcfile } {
    # Var: string[int] t:193 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():91:94
    lassign [ adlb::multicreate [ list container integer string 1 1 101 ] ] t:193
    turbine::c::log "allocated t:193=<${t:193}>"
    turbine::array_kv_build ${t:193} [ ::adlb::dict_create 0 "-u" ] 1 integer string
    f:samtools_view ${u:alignedbam} ${t:320} ${u:alignedsam} ${t:185} ${t:193} -100 "HARD" "RANK"
    turbine::rule [ list ${t:168} ${t:320} [ turbine::get_file_td ${u:alignedbam} ] ] [ list __entry-chain6 ${t:168} ${t:207} ${t:320} ${v:alias:sampleName} ${u:alignedbam} ${u:qcfile} ]
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::read_refcount_decr ${t:185} 1
    turbine::read_refcount_decr ${t:193} 1
}


proc __entry-chain6 { t:168 t:207 t:320 v:alias:sampleName u:alignedbam u:qcfile } {
    # Var: $string v:samtoolsdir:2 RENAMED [$string:__v:samtoolsdir]
    # Var: $string v:inputFile:3 RENAMED [$string:__v:inputFile]
    # Var: $int v:numAlignments:2 RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:198 VALUE_OF [boolean:__t:198]
    # Var: $boolean v:t:205 VALUE_OF [boolean:__t:205]
    set v:samtoolsdir:2 [ turbine::retrieve_string ${t:320} CACHED 1 ]
    set v:inputFile:3 [ turbine::retrieve_string ${t:168} CACHED 1 ]
    set v:numAlignments:2 [ alignment::samtools_view ${v:samtoolsdir:2} ${v:inputFile:3} ]
    set v:t:198 [ expr { ${v:numAlignments:2} == 0 } ]
    set v:t:205 [ expr { ${v:numAlignments:2} > 0 } ]
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if5 ${v:alias:sampleName} ${v:inputFile:3} ${v:t:198} ${u:qcfile} ]
    turbine::reset_priority
    turbine::rule [ list ${t:207} ] "__entry-async_op-assert-1 ${t:207} ${v:t:205}"
    turbine::file_read_refcount_decr ${u:alignedbam} 1
}


proc __entry-if5 { v:alias:sampleName v:inputFile:3 v:t:198 u:qcfile } {
    if { ${v:t:198} } {
        # Var: string t:200 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():93:49
        # Var: $string v:t:200 VALUE_OF [string:__t:200]
        lassign [ adlb::multicreate [ list string 1 1 102 ] ] t:200
        turbine::c::log "allocated t:200=<${t:200}>"
        set v:t:200 "${v:alias:sampleName}\tALIGNMENT\tFAIL\tbwa mem command did not produce alignments for ${v:inputFile:3}\n"
        turbine::store_string ${t:200} ${v:t:200}
        f:echo ${u:qcfile} ${t:200} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:200} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-async_op-assert-1 { t:207 v:t:205 } {
    # Var: $string v:t:207:1 VALUE_OF [string:__t:207]
    # Var: $void v:t:204 VALUE_OF [void:__t:204]
    set v:t:207:1 [ turbine::retrieve_string ${t:207} CACHED 1 ]
    turbine::assert_impl ${v:t:205} ${v:t:207:1}
}


proc __entry-arr_copy_in_imm-1 { t:182 t:183 } {
    # Var: $string v:t:183 VALUE_OF [string:__t:183]
    set v:t:183 [ turbine::retrieve_string ${t:183} CACHED 1 ]
    turbine::array_kv_build ${t:182} [ ::adlb::dict_create 0 ${v:t:183} ] 1 integer string
}


proc __entry-async_op-parse_int-1 { t:185 t:186 } {
    # Var: $string v:t:186 VALUE_OF [string:__t:186]
    # Var: $int v:t:185 VALUE_OF [int:__t:185]
    set v:t:186 [ turbine::retrieve_string ${t:186} CACHED 1 ]
    set v:t:185 [ turbine::parse_int_impl ${v:t:186} 10 ]
    turbine::store_integer ${t:185} ${v:t:185}
}


proc __entry-async_op-strcat-5 { t:168 t:207 } {
    # Var: $string v:t:168:2 VALUE_OF [string:__t:168]
    # Var: $string v:t:207 VALUE_OF [string:__t:207]
    set v:t:168:2 [ turbine::retrieve_string ${t:168} CACHED 1 ]
    set v:t:207 "bwa mem command did not produce alignments for ${v:t:168:2} alignment failed"
    turbine::store_string ${t:207} ${v:t:207}
}


proc __entry-async_op-strcat-6 { t:237 t:47 } {
    # Var: $string v:t:47:3 VALUE_OF [string:__t:47]
    # Var: $string v:t:237 VALUE_OF [string:__t:237]
    set v:t:47:3 [ turbine::retrieve_string ${t:47} CACHED 1 ]
    set v:t:237 "picard command did not produce alignments for ${v:t:47:3} deduplication failed"
    turbine::store_string ${t:237} ${v:t:237}
}


proc __entry-optmerged-3 { u:AlignDir t:237 t:320 t:47 t:657 v:alias:sampleName u:alignedsortedbam u:dedupsortedbam u:metricsfile u:qcfile u:vars } {
    # Var: $string v:AlignDir:5 VALUE_OF [string:AlignDir]
    # Var: $string v:t:174 VALUE_OF [string:__t:174]
    # Var: $string v:t:176 VALUE_OF [string:__t:176]
    set v:AlignDir:5 [ turbine::retrieve_string ${u:AlignDir} CACHED 1 ]
    set v:t:174 "${v:AlignDir:5}${v:alias:sampleName}.nodups.sorted.bam"
    set v:t:176 "${v:AlignDir:5}${v:alias:sampleName}.picard.metrics"
    turbine::set_filename_val ${u:alignedsortedbam} ${v:t:174}
    turbine::set_filename_val ${u:metricsfile} ${v:t:176}
    turbine::rule [ list [ turbine::get_file_td ${u:alignedsortedbam} ] ] [ list __entry-chain7 ${t:237} ${t:320} ${t:47} ${t:657} ${v:alias:sampleName} ${v:t:174} ${v:t:176} ${u:alignedsortedbam} ${u:dedupsortedbam} ${u:metricsfile} ${u:qcfile} ${u:vars} ]
}


proc __entry-chain7 { t:237 t:320 t:47 t:657 v:alias:sampleName v:t:174 v:t:176 u:alignedsortedbam u:dedupsortedbam u:metricsfile u:qcfile u:vars } {
    # Var: string t:219 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():96:39
    # Var: string t:221 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():96:56
    lassign [ adlb::multicreate [ list string 1 1 103 ] [ list string 1 1 104 ] ] t:219 t:221
    turbine::c::log "allocated t:219=<${t:219}> t:221=<${t:221}>"
    turbine::container_reference ${u:vars} "JAVADIR" ${t:219} string
    turbine::container_reference ${u:vars} "PICARDDIR" ${t:221} string
    turbine::rule [ list ${t:219} ${t:221} ${t:47} ${t:657} ] [ list picard-app-leaf1 ${t:219} ${t:221} ${t:237} ${t:320} ${t:47} ${t:657} ${v:alias:sampleName} ${v:t:174} ${v:t:176} ${u:alignedsortedbam} ${u:dedupsortedbam} ${u:metricsfile} ${u:qcfile} ]
}


proc picard-app-leaf1 { t:219 t:221 t:237 t:320 t:47 t:657 v:alias:sampleName v:t:174 v:t:176 u:alignedsortedbam u:dedupsortedbam u:metricsfile u:qcfile } {
    # Var: $string v:javadir RENAMED [$string:__v:javadir] ./pipelinefunctions/align_dedup.swift:picard():45:212
    # Var: $string v:picarddir RENAMED [$string:__v:picarddir] ./pipelinefunctions/align_dedup.swift:picard():45:212
    # Var: $string v:__filename:outputfile RENAMED [$string:__v:__filename:outputfile] ./pipelinefunctions/align_dedup.swift:picard():45:212
    # Var: $string v:tmpdir RENAMED [$string:__v:tmpdir] ./pipelinefunctions/align_dedup.swift:picard():45:212
    # Var: $file v:inputFile:5 RENAMED [$file:__v:inputFile] ./pipelinefunctions/align_dedup.swift:picard():45:212
    # Var: $file v:outputfile RENAMED [$file:__v:outputfile] ./pipelinefunctions/align_dedup.swift:picard():45:212
    # Var: $file v:metricsfile RENAMED [$file:__v:metricsfile] ./pipelinefunctions/align_dedup.swift:picard():45:212
    set v:javadir [ turbine::retrieve_string ${t:219} CACHED 1 ]
    set v:picarddir [ turbine::retrieve_string ${t:221} CACHED 1 ]
    set v:__filename:outputfile [ turbine::retrieve_string ${t:47} CACHED 1 ]
    set v:tmpdir [ turbine::retrieve_string ${t:657} CACHED 1 ]
    set v:inputFile:5 [ turbine::retrieve_file ${u:alignedsortedbam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile [ turbine::create_local_file_ref ${v:__filename:outputfile} ${tcltmp:init_rc} 1 ]
    set tcltmp:init_rc 2
    set v:metricsfile [ turbine::create_local_file_ref ${v:t:176} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir "-Xmx8g" "-jar" ${v:picarddir} "MarkDuplicates" "INPUT=" ${v:t:174} "OUTPUT=" ${v:__filename:outputfile} "METRICS_FILE=" ${v:t:176} "TMP_DIR=" ${v:tmpdir} "ASSUME_SORTED=true" "MAX_RECORDS_IN_RAM=null" "CREATE_INDEX=true" "VALIDATION_STRINGENCY=SILENT" [ dict create ] ]
    turbine::exec_external ${v:javadir} [ dict create ] "-Xmx8g" "-jar" ${v:picarddir} "MarkDuplicates" "INPUT=" ${v:t:174} "OUTPUT=" ${v:__filename:outputfile} "METRICS_FILE=" ${v:t:176} "TMP_DIR=" ${v:tmpdir} "ASSUME_SORTED=true" "MAX_RECORDS_IN_RAM=null" "CREATE_INDEX=true" "VALIDATION_STRINGENCY=SILENT"
    turbine::store_file ${u:dedupsortedbam} v:outputfile 0
    turbine::store_file ${u:metricsfile} v:metricsfile 0
    turbine::rule [ list ${t:320} ] [ list __entry-chain8 ${t:237} ${t:320} ${v:__filename:outputfile} ${v:alias:sampleName} ${u:qcfile} ]
    turbine::decr_local_file_refcount v:outputfile
    turbine::decr_local_file_refcount v:metricsfile
}


proc __entry-chain8 { t:237 t:320 v:__filename:outputfile v:alias:sampleName u:qcfile } {
    # Var: $string v:samtoolsdir:3 RENAMED [$string:__v:samtoolsdir]
    # Var: $int v:numAlignments:3 RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:228 VALUE_OF [boolean:__t:228]
    # Var: $boolean v:t:235 VALUE_OF [boolean:__t:235]
    set v:samtoolsdir:3 [ turbine::retrieve_string ${t:320} CACHED 1 ]
    set v:numAlignments:3 [ alignment::samtools_view ${v:samtoolsdir:3} ${v:__filename:outputfile} ]
    set v:t:228 [ expr { ${v:numAlignments:3} == 0 } ]
    set v:t:235 [ expr { ${v:numAlignments:3} > 0 } ]
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if6 ${v:__filename:outputfile} ${v:alias:sampleName} ${v:t:228} ${u:qcfile} ]
    turbine::reset_priority
    turbine::rule [ list ${t:237} ] "__entry-async_op-assert-2 ${t:237} ${v:t:235}"
}


proc __entry-if6 { v:__filename:outputfile v:alias:sampleName v:t:228 u:qcfile } {
    if { ${v:t:228} } {
        # Var: string t:230 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():98:56
        # Var: $string v:t:230 VALUE_OF [string:__t:230]
        lassign [ adlb::multicreate [ list string 1 1 105 ] ] t:230
        turbine::c::log "allocated t:230=<${t:230}>"
        set v:t:230 "${v:alias:sampleName}\tALIGNMENT\tFAIL\t picard command did not produce alignments for ${v:__filename:outputfile}\n"
        turbine::store_string ${t:230} ${v:t:230}
        f:echo ${u:qcfile} ${t:230} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:230} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-async_op-assert-2 { t:237 v:t:235 } {
    # Var: $string v:t:237:1 VALUE_OF [string:__t:237]
    # Var: $void v:t:234 VALUE_OF [void:__t:234]
    set v:t:237:1 [ turbine::retrieve_string ${t:237} CACHED 1 ]
    turbine::assert_impl ${v:t:235} ${v:t:237:1}
}


proc __entry-explicit-wait1 { t:320 t:47 t:657 v:alias:sampleName u:alignedbam u:dedupsortedbam u:qcfile u:vars } {
    # Var: string t:295 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():113:30
    # Var: int t:299 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():113:78
    # Var: string t:300 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():113:89
    # Var: string[int] t:302 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():113:109
    lassign [ adlb::multicreate [ list string 1 1 107 ] [ list integer 1 1 108 ] [ list string 1 1 109 ] [ list container integer string 1 1 110 ] ] t:295 t:299 t:300 t:302
    turbine::c::log "allocated t:295=<${t:295}> t:299=<${t:299}> t:300=<${t:300}> t:302=<${t:302}>"
    turbine::array_kv_build ${t:302} [ ::adlb::dict_create 0 "--markDuplicates" ] 1 integer string
    turbine::container_reference ${u:vars} "NOVOSORTDIR" ${t:295} string
    turbine::container_reference ${u:vars} "PBSCORES" ${t:300} string
    f:novosort ${u:dedupsortedbam} ${t:295} ${u:alignedbam} ${t:657} ${t:299} ${t:302} -100 "HARD" "RANK"
    turbine::rule [ list ${t:300} ] "__entry-async_op-parse_int-2 ${t:299} ${t:300}"
    turbine::rule [ list ${t:320} ${t:47} [ turbine::get_file_td ${u:dedupsortedbam} ] ] [ list __entry-optmerged-4 ${t:320} ${t:47} ${v:alias:sampleName} ${u:dedupsortedbam} ${u:qcfile} ]
    turbine::read_refcount_decr ${t:299} 1
    turbine::read_refcount_decr ${t:302} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${t:657} 1
    turbine::read_refcount_decr ${t:295} 1
}


proc __entry-async_op-parse_int-2 { t:299 t:300 } {
    # Var: $string v:t:300 VALUE_OF [string:__t:300]
    # Var: $int v:t:299 VALUE_OF [int:__t:299]
    set v:t:300 [ turbine::retrieve_string ${t:300} CACHED 1 ]
    set v:t:299 [ turbine::parse_int_impl ${v:t:300} 10 ]
    turbine::store_integer ${t:299} ${v:t:299}
}


proc __entry-optmerged-4 { t:320 t:47 v:alias:sampleName u:dedupsortedbam u:qcfile } {
    # Var: $string v:t:47:4 VALUE_OF [string:__t:47]
    # Var: $string v:t:316 VALUE_OF [string:__t:316]
    # Var: $string v:samtoolsdir:4 RENAMED [$string:__v:samtoolsdir]
    # Var: $int v:numAlignments:4 RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:307 VALUE_OF [boolean:__t:307]
    # Var: $boolean v:t:314 VALUE_OF [boolean:__t:314]
    # Var: $void v:t:313 VALUE_OF [void:__t:313]
    set v:t:47:4 [ turbine::retrieve_string ${t:47} CACHED 1 ]
    set v:t:316 "novosort command did not produce alignments for ${v:t:47:4}sorting and deduplication failed"
    set v:samtoolsdir:4 [ turbine::retrieve_string ${t:320} CACHED 1 ]
    set v:numAlignments:4 [ alignment::samtools_view ${v:samtoolsdir:4} ${v:t:47:4} ]
    set v:t:307 [ expr { ${v:numAlignments:4} == 0 } ]
    set v:t:314 [ expr { ${v:numAlignments:4} > 0 } ]
    turbine::assert_impl ${v:t:314} ${v:t:316}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if9 ${v:alias:sampleName} ${v:t:307} ${v:t:47:4} ${u:qcfile} ]
    turbine::reset_priority
    turbine::file_read_refcount_decr ${u:dedupsortedbam} 1
}


proc __entry-if9 { v:alias:sampleName v:t:307 v:t:47:4 u:qcfile } {
    if { ${v:t:307} } {
        # Var: string t:309 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():115:57
        # Var: $string v:t:309 VALUE_OF [string:__t:309]
        lassign [ adlb::multicreate [ list string 1 1 111 ] ] t:309
        turbine::c::log "allocated t:309=<${t:309}>"
        set v:t:309 "${v:alias:sampleName}\tALIGNMENT\tFAIL\tnovosort command did not produce alignments for ${v:t:47:4}\n"
        turbine::store_string ${t:309} ${v:t:309}
        f:echo ${u:qcfile} ${t:309} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:309} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-async_op-eq_string-2 { t:242 t:320 t:81 v:alias:read1 v:alias:read2 u:alignedbam u:alignedsam u:read1 u:read2 u:rgheader u:vars } {
    # Var: $string v:t:242 VALUE_OF [string:__t:242]
    # Var: $boolean v:t:241 VALUE_OF [boolean:__t:241]
    set v:t:242 [ turbine::retrieve_string ${t:242} CACHED 1 ]
    set v:t:241 [ string equal ${v:t:242} "BWAMEM" ]
    if { ${v:t:241} } {
        # Var: string t:245 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():103:25
        # Var: string t:247 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():103:55
        # Var: string[int] t:249 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():103:74
        # Var: string t:250 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():103:74
        # Var: int t:252 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():103:97
        # Var: string t:253 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():103:108
        lassign [ adlb::multicreate [ list string 1 1 112 ] [ list string 1 1 113 ] [ list container integer string 1 1 114 ] [ list string 1 1 115 ] [ list integer 1 1 116 ] [ list string 1 1 117 ] ] t:245 t:247 t:249 t:250 t:252 t:253
        turbine::c::log "allocated t:245=<${t:245}> t:247=<${t:247}> t:249=<${t:249}> t:250=<${t:250}> t:252=<${t:252}>"
        turbine::c::log "allocated t:253=<${t:253}>"
        turbine::read_refcount_incr ${u:vars} 1
        turbine::container_reference ${u:vars} "BWADIR" ${t:245} string
        turbine::container_reference ${u:vars} "BWAINDEX" ${t:247} string
        turbine::container_reference ${u:vars} "BWAMEMPARAMS" ${t:250} string
        turbine::container_reference ${u:vars} "PBSCORES" ${t:253} string
        f:bwa_mem ${u:alignedsam} ${t:245} ${u:read1} ${u:read2} ${t:247} ${t:249} ${t:252} ${u:rgheader} -100 "HARD" "RANK"
        turbine::rule [ list [ turbine::get_file_td ${u:alignedsam} ] ] "__entry-chain9 ${t:252} ${t:320} {${u:alignedbam}} {${u:alignedsam}}"
        turbine::rule [ list ${t:250} ] "__entry-arr_copy_in_imm-2 ${t:249} ${t:250}"
        turbine::rule [ list ${t:253} ] "__entry-async_op-parse_int-3 ${t:252} ${t:253}"
        turbine::read_refcount_decr ${t:247} 1
        turbine::read_refcount_decr ${t:245} 1
        turbine::read_refcount_decr ${t:249} 1
    } else {
        # Var: string t:262 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():106:27
        # Var: string t:264 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():106:63
        # Var: int t:269 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():106:114
        # Var: string t:270 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():106:125
        lassign [ adlb::multicreate [ list string 1 1 119 ] [ list string 1 1 120 ] [ list integer 1 1 121 ] [ list string 1 1 122 ] ] t:262 t:264 t:269 t:270
        turbine::c::log "allocated t:262=<${t:262}> t:264=<${t:264}> t:269=<${t:269}> t:270=<${t:270}>"
        turbine::read_refcount_incr ${u:rgheader} 1
        turbine::read_refcount_incr ${t:81} 1
        turbine::container_reference ${u:vars} "NOVOALIGNDIR" ${t:262} string
        turbine::container_reference ${u:vars} "NOVOALIGNINDEX" ${t:264} string
        turbine::container_reference ${u:vars} "PBSCORES" ${t:270} string
        turbine::rule [ list ${t:270} ] [ list __entry-async_op-parse_int-4 ${t:262} ${t:264} ${t:269} ${t:270} ${t:320} ${t:81} ${v:alias:read1} ${v:alias:read2} ${u:alignedbam} ${u:alignedsam} ${u:rgheader} ]
    }
    turbine::read_refcount_decr ${t:320} 1
    turbine::read_refcount_decr ${t:81} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${u:vars} 1
    turbine::read_refcount_decr ${u:rgheader} 1
    turbine::read_refcount_decr ${u:read2} 1
    turbine::read_refcount_decr ${u:read1} 1
}


proc __entry-chain9 { t:252 t:320 u:alignedbam u:alignedsam } {
    # Var: string[int] t:260 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():104:94
    lassign [ adlb::multicreate [ list container integer string 1 1 118 ] ] t:260
    turbine::c::log "allocated t:260=<${t:260}>"
    turbine::array_kv_build ${t:260} [ ::adlb::dict_create 0 "-u" ] 1 integer string
    f:samtools_view ${u:alignedbam} ${t:320} ${u:alignedsam} ${t:252} ${t:260} -100 "HARD" "RANK"
    turbine::read_refcount_decr ${t:320} 1
    turbine::read_refcount_decr ${t:252} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
    turbine::read_refcount_decr ${t:260} 1
}


proc __entry-arr_copy_in_imm-2 { t:249 t:250 } {
    # Var: $string v:t:250 VALUE_OF [string:__t:250]
    set v:t:250 [ turbine::retrieve_string ${t:250} CACHED 1 ]
    turbine::array_kv_build ${t:249} [ ::adlb::dict_create 0 ${v:t:250} ] 1 integer string
}


proc __entry-async_op-parse_int-3 { t:252 t:253 } {
    # Var: $string v:t:253 VALUE_OF [string:__t:253]
    # Var: $int v:t:252 VALUE_OF [int:__t:252]
    set v:t:253 [ turbine::retrieve_string ${t:253} CACHED 1 ]
    set v:t:252 [ turbine::parse_int_impl ${v:t:253} 10 ]
    turbine::store_integer ${t:252} ${v:t:252}
}


proc __entry-async_op-parse_int-4 { t:262 t:264 t:269 t:270 t:320 t:81 v:alias:read1 v:alias:read2 u:alignedbam u:alignedsam u:rgheader } {
    # Var: $string v:t:270 VALUE_OF [string:__t:270]
    # Var: $int v:t:269 VALUE_OF [int:__t:269]
    set v:t:270 [ turbine::retrieve_string ${t:270} CACHED 1 ]
    set v:t:269 [ turbine::parse_int_impl ${v:t:270} 10 ]
    turbine::store_integer ${t:269} ${v:t:269}
    turbine::rule [ list ${t:262} ${t:264} ${t:269} ${t:81} ${u:rgheader} ] [ list novoalign-app-leaf1 ${t:262} ${t:264} ${t:269} ${t:320} ${t:81} ${v:alias:read1} ${v:alias:read2} ${u:alignedbam} ${u:alignedsam} ${u:rgheader} ]
}


proc novoalign-app-leaf1 { t:262 t:264 t:269 t:320 t:81 v:alias:read1 v:alias:read2 u:alignedbam u:alignedsam u:rgheader } {
    # Var: $string v:novoaligndir RENAMED [$string:__v:novoaligndir] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $int v:PBSCORES RENAMED [$int:__v:PBSCORES] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $string v:INDEX RENAMED [$string:__v:INDEX] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $string v:rgheader RENAMED [$string:__v:rgheader] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $string v:__filename:output:1 RENAMED [$string:__v:__filename:output] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    # Var: $file v:output:1 RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:novoalign():9:84
    set v:novoaligndir [ turbine::retrieve_string ${t:262} CACHED 1 ]
    set v:PBSCORES [ turbine::retrieve_integer ${t:269} ]
    set v:INDEX [ turbine::retrieve_string ${t:264} CACHED 1 ]
    set v:rgheader [ turbine::retrieve_string ${u:rgheader} CACHED 1 ]
    set v:__filename:output:1 [ turbine::retrieve_string ${t:81} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output:1 [ turbine::create_local_file_ref ${v:__filename:output:1} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:novoaligndir "-c" ${v:PBSCORES} "-d" ${v:INDEX} "-f" ${v:alias:read1} ${v:alias:read2} "-o" "SAM" ${v:rgheader} [ dict create "stdout" ${v:__filename:output:1} ] ]
    turbine::exec_external ${v:novoaligndir} [ dict create "stdout" ${v:__filename:output:1} ] "-c" ${v:PBSCORES} "-d" ${v:INDEX} "-f" ${v:alias:read1} ${v:alias:read2} "-o" "SAM" ${v:rgheader}
    turbine::store_file ${u:alignedsam} v:output:1 0
    turbine::rule [ list ] "__entry-chain10 ${t:269} ${t:320} {${u:alignedbam}} {${u:alignedsam}}"
    turbine::decr_local_file_refcount v:output:1
}


proc __entry-chain10 { t:269 t:320 u:alignedbam u:alignedsam } {
    # Var: string[int] t:277 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():107:95
    lassign [ adlb::multicreate [ list container integer string 1 1 123 ] ] t:277
    turbine::c::log "allocated t:277=<${t:277}>"
    turbine::array_kv_build ${t:277} [ ::adlb::dict_create 0 "-u" ] 1 integer string
    f:samtools_view ${u:alignedbam} ${t:320} ${u:alignedsam} ${t:269} ${t:277} -100 "HARD" "RANK"
    turbine::read_refcount_decr ${t:320} 1
    turbine::read_refcount_decr ${t:277} 1
    turbine::read_refcount_decr ${t:269} 1
    turbine::file_read_refcount_decr ${u:alignedsam} 1
    turbine::file_read_refcount_decr ${u:alignedbam} 1
}


proc __entry-optmerged-5 { t:168 t:320 v:alias:sampleName u:qcfile } {
    # Var: $string v:t:168:3 VALUE_OF [string:__t:168]
    # Var: $string v:t:291 VALUE_OF [string:__t:291]
    # Var: $string v:samtoolsdir:5 RENAMED [$string:__v:samtoolsdir]
    # Var: $int v:numAlignments:5 RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:282 VALUE_OF [boolean:__t:282]
    # Var: $boolean v:t:289 VALUE_OF [boolean:__t:289]
    # Var: $void v:t:288 VALUE_OF [void:__t:288]
    set v:t:168:3 [ turbine::retrieve_string ${t:168} CACHED 1 ]
    set v:t:291 "bwa mem command did not produce alignments for ${v:t:168:3} alignment failed"
    set v:samtoolsdir:5 [ turbine::retrieve_string ${t:320} CACHED 1 ]
    set v:numAlignments:5 [ alignment::samtools_view ${v:samtoolsdir:5} ${v:t:168:3} ]
    set v:t:282 [ expr { ${v:numAlignments:5} == 0 } ]
    set v:t:289 [ expr { ${v:numAlignments:5} > 0 } ]
    turbine::assert_impl ${v:t:289} ${v:t:291}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if8 ${v:alias:sampleName} ${v:t:168:3} ${v:t:282} ${u:qcfile} ]
    turbine::reset_priority
}


proc __entry-if8 { v:alias:sampleName v:t:168:3 v:t:282 u:qcfile } {
    if { ${v:t:282} } {
        # Var: string t:284 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():110:49
        # Var: $string v:t:284 VALUE_OF [string:__t:284]
        lassign [ adlb::multicreate [ list string 1 1 124 ] ] t:284
        turbine::c::log "allocated t:284=<${t:284}>"
        set v:t:284 "${v:alias:sampleName}\tALIGNMENT\tFAIL\tbwa mem or novoalign command did not produce alignments for ${v:t:168:3}\n"
        turbine::store_string ${t:284} ${v:t:284}
        f:echo ${u:qcfile} ${t:284} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:284} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-explicit-wait3 { u:RealignDir u:VarcallDir t:320 t:49 t:60 t:611 t:657 v:alias:sampleName u:chr_bamList u:chr_bamListfile u:chr_vcfListfile u:chromosomes_processing_done u:mergedbam u:outbam u:qcfile u:vars } {
    # Var: string t:580 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():203:44
    # Var: string t:582 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():204:44
    # Var: $string v:t:580 VALUE_OF [string:__t:580]
    # Var: $string v:t:582 VALUE_OF [string:__t:582]
    lassign [ adlb::multicreate [ list string 1 1 125 ] [ list string 1 1 126 ] ] t:580 t:582
    turbine::c::log "allocated t:580=<${t:580}> t:582=<${t:582}>"
    set v:t:580 "${v:alias:sampleName}.*.recalibrated.bam"
    turbine::store_string ${t:580} ${v:t:580}
    f:find_files ${u:chr_bamListfile} ${u:RealignDir} ${t:580} -100 "HARD" "RANK"
    set v:t:582 "${v:alias:sampleName}.*.raw.g.vcf"
    turbine::store_string ${t:582} ${v:t:582}
    f:find_files ${u:chr_vcfListfile} ${u:VarcallDir} ${t:582} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${u:chr_bamListfile} ] ] [ list __entry-call_foreign-read-1 ${t:320} ${t:49} ${t:60} ${t:611} ${t:657} ${v:alias:sampleName} ${u:chr_bamList} ${u:chr_bamListfile} ${u:mergedbam} ${u:outbam} ${u:qcfile} ${u:vars} ]
    turbine::read_refcount_decr ${u:chromosomes_processing_done} 1
    turbine::read_refcount_decr ${t:582} 1
    turbine::file_read_refcount_decr ${u:chr_vcfListfile} 1
    turbine::read_refcount_decr ${t:580} 1
    turbine::read_refcount_decr ${u:VarcallDir} 1
    turbine::read_refcount_decr ${u:RealignDir} 1
}


proc __entry-call_foreign-read-1 { t:320 t:49 t:60 t:611 t:657 v:alias:sampleName u:chr_bamList u:chr_bamListfile u:mergedbam u:outbam u:qcfile u:vars } {
    # Var: $file v:chr_bamListfile VALUE_OF [file:chr_bamListfile]
    # Var: $string v:t:586 VALUE_OF [string:__t:586]
    # Var: $int v:n:2 RENAMED [$int:__v:n]
    # Var: $string v:t:585 VALUE_OF [string:__t:585]
    # Var: $string v:o:2 RENAMED [$string:__v:o]
    # Var: $string$[int] v:chr_bamList VALUE_OF [string[int]:chr_bamList]
    # Var: string t:591 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():209:20
    # Var: string t:596 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():209:81
    lassign [ adlb::multicreate [ list string 1 1 127 ] [ list string 1 1 128 ] ] t:591 t:596
    turbine::c::log "allocated t:591=<${t:591}> t:596=<${t:596}>"
    set v:chr_bamListfile [ turbine::retrieve_file ${u:chr_bamListfile} CACHED 1 ]
    set v:t:586 [ turbine::file_read_local ${v:chr_bamListfile} ]
    set v:n:2 [ string length ${v:t:586} ]
    set v:t:585 [ turbine::replace_all_impl ${v:t:586} "\n" " " 0 ${v:n:2} ]
    set v:o:2 [ string trim ${v:t:585} ]
    set v:chr_bamList [ turbine::split_impl ${v:o:2} " " ]
    turbine::build_rec ${u:chr_bamList} ${v:chr_bamList} [ list container integer string ] 0 1
    turbine::container_reference ${u:vars} "NOVOSORTDIR" ${t:591} string
    turbine::container_reference ${u:vars} "PBSCORES" ${t:596} string
    turbine::rule [ list ${t:49} ${t:591} ${t:596} ${t:657} ] [ list __entry-async_op-parse_int-5 ${t:320} ${t:49} ${t:591} ${t:596} ${t:60} ${t:611} ${t:657} ${v:alias:sampleName} ${u:chr_bamList} ${u:mergedbam} ${u:outbam} ${u:qcfile} ]
}


proc __entry-async_op-parse_int-5 { t:320 t:49 t:591 t:596 t:60 t:611 t:657 v:alias:sampleName u:chr_bamList u:mergedbam u:outbam u:qcfile } {
    # Var: $string v:t:596 VALUE_OF [string:__t:596]
    # Var: $int v:t:595 VALUE_OF [int:__t:595]
    # Var: $string v:novosortdir RENAMED [$string:__v:novosortdir] ./pipelinefunctions/align_dedup.swift:novosort():40:72
    # Var: $string v:tmpdir:1 RENAMED [$string:__v:tmpdir] ./pipelinefunctions/align_dedup.swift:novosort():40:72
    # Var: $string$[int] v:inputFile:17 RENAMED [$string$[int]:__v:inputFile] ./pipelinefunctions/align_dedup.swift:novosort():40:72
    # Var: $string v:__filename:output:2 RENAMED [$string:__v:__filename:output] ./pipelinefunctions/align_dedup.swift:novosort():40:72
    # Var: $file v:output:2 RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:novosort():40:72
    set v:t:596 [ turbine::retrieve_string ${t:596} CACHED 1 ]
    set v:t:595 [ turbine::parse_int_impl ${v:t:596} 10 ]
    set v:novosortdir [ turbine::retrieve_string ${t:591} CACHED 1 ]
    set v:tmpdir:1 [ turbine::retrieve_string ${t:657} CACHED 1 ]
    set v:inputFile:17 [ turbine::unpack_args ${u:chr_bamList} 1 string ]
    set v:__filename:output:2 [ turbine::retrieve_string ${t:49} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output:2 [ turbine::create_local_file_ref ${v:__filename:output:2} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:novosortdir "--index" "--tmpdir" ${v:tmpdir:1} "--threads" ${v:t:595} {*}${v:inputFile:17} "-o" ${v:__filename:output:2} [ dict create ] ]
    turbine::exec_external ${v:novosortdir} [ dict create ] "--index" "--tmpdir" ${v:tmpdir:1} "--threads" ${v:t:595} {*}${v:inputFile:17} "-o" ${v:__filename:output:2}
    turbine::store_file ${u:outbam} v:output:2 0
    turbine::rule [ list ] [ list __entry-chain19 ${t:320} ${t:60} ${t:611} ${v:alias:sampleName} ${u:mergedbam} ${u:outbam} ${u:qcfile} ]
    turbine::decr_local_file_refcount v:output:2
    turbine::read_refcount_decr ${u:chr_bamList} 1
}


proc __entry-chain19 { t:320 t:60 t:611 v:alias:sampleName u:mergedbam u:outbam u:qcfile } {
    f:cp ${u:mergedbam} ${u:outbam} -100 "HARD" "RANK"
    turbine::rule [ list ${t:320} ${t:60} [ turbine::get_file_td ${u:mergedbam} ] ] [ list __entry-chain20 ${t:320} ${t:60} ${t:611} ${v:alias:sampleName} ${u:mergedbam} ${u:qcfile} ]
    turbine::file_read_refcount_decr ${u:outbam} 1
}


proc __entry-chain20 { t:320 t:60 t:611 v:alias:sampleName u:mergedbam u:qcfile } {
    # Var: $string v:samtoolsdir:10 RENAMED [$string:__v:samtoolsdir]
    # Var: $string v:inputFile:16 RENAMED [$string:__v:inputFile]
    # Var: $int v:numAlignments:9 RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:602 VALUE_OF [boolean:__t:602]
    # Var: $boolean v:t:609 VALUE_OF [boolean:__t:609]
    set v:samtoolsdir:10 [ turbine::retrieve_string ${t:320} CACHED 1 ]
    set v:inputFile:16 [ turbine::retrieve_string ${t:60} CACHED 1 ]
    set v:numAlignments:9 [ alignment::samtools_view ${v:samtoolsdir:10} ${v:inputFile:16} ]
    set v:t:602 [ expr { ${v:numAlignments:9} == 0 } ]
    set v:t:609 [ expr { ${v:numAlignments:9} > 0 } ]
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if17 ${v:alias:sampleName} ${v:inputFile:16} ${v:t:602} ${u:qcfile} ]
    turbine::reset_priority
    turbine::rule [ list ${t:611} ] "__entry-async_op-assert-3 ${t:611} ${v:t:609}"
    turbine::file_read_refcount_decr ${u:mergedbam} 1
}


proc __entry-if17 { v:alias:sampleName v:inputFile:16 v:t:602 u:qcfile } {
    if { ${v:t:602} } {
        # Var: string t:604 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():212:49
        # Var: $string v:t:604 VALUE_OF [string:__t:604]
        lassign [ adlb::multicreate [ list string 1 1 129 ] ] t:604
        turbine::c::log "allocated t:604=<${t:604}>"
        set v:t:604 "${v:alias:sampleName}\tMERGE\tFAIL\tnovosort command did not produce alignments for ${v:inputFile:16}\n"
        turbine::store_string ${t:604} ${v:t:604}
        f:echo ${u:qcfile} ${t:604} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:604} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-async_op-assert-3 { t:611 v:t:609 } {
    # Var: $string v:t:611:1 VALUE_OF [string:__t:611]
    # Var: $void v:t:608 VALUE_OF [void:__t:608]
    set v:t:611:1 [ turbine::retrieve_string ${t:611} CACHED 1 ]
    turbine::assert_impl ${v:t:609} ${v:t:611:1}
}


proc __entry-async_op-sprintf { t:28 t:30 t:32 v:alias:sampleName u:rgheader } {
    # Var: $string v:t:28 VALUE_OF [string:__t:28]
    # Var: $string v:t:30 VALUE_OF [string:__t:30]
    # Var: $string v:t:32 VALUE_OF [string:__t:32]
    # Var: $string v:rgheader:1 VALUE_OF [string:rgheader]
    set v:t:28 [ turbine::retrieve_string ${t:28} CACHED 1 ]
    set v:t:30 [ turbine::retrieve_string ${t:30} CACHED 1 ]
    set v:t:32 [ turbine::retrieve_string ${t:32} CACHED 1 ]
    set v:rgheader:1 [ eval format [ list "@RG\tID:%s\tLB:%s\tPL:%s\tPU:%s\tSM:%s\tCN:%s" ${v:alias:sampleName} ${v:t:28} ${v:t:30} ${v:alias:sampleName} ${v:alias:sampleName} ${v:t:32} ] ]
    turbine::store_string ${u:rgheader} ${v:rgheader:1}
}


proc __entry-copy_in_filename { t:53 u:qcfile } {
    # Var: $string v:t:53:1 VALUE_OF [string:__t:53]
    set v:t:53:1 [ turbine::retrieve_string ${t:53} CACHED 1 ]
    turbine::set_filename_val ${u:qcfile} ${v:t:53:1}
}


proc __entry-call_foreign-split-1 { a:t:323 t:322 } {
    # Var: $string v:alias:t:323 VALUE_OF [string:__alias:t:323]
    # Var: $string$[int] v:t:322 VALUE_OF [string[int]:__t:322]
    set v:alias:t:323 [ turbine::retrieve_string ${a:t:323} CACHED 1 ]
    set v:t:322 [ turbine::split_impl ${v:alias:t:323} " " ]
    turbine::build_rec ${t:322} ${v:t:322} [ list container integer string ] 0 1
}


proc __entry-call_foreign-split-2 { a:t:326 t:325 } {
    # Var: $string v:alias:t:326 VALUE_OF [string:__alias:t:326]
    # Var: $string$[int] v:t:325 VALUE_OF [string[int]:__t:325]
    set v:alias:t:326 [ turbine::retrieve_string ${a:t:326} CACHED 1 ]
    set v:t:325 [ turbine::split_impl ${v:alias:t:326} " " ]
    turbine::build_rec ${t:325} ${v:t:325} [ list container integer string ] 0 1
}


proc __entry-call_foreign-split-3 { a:t:329 t:328 } {
    # Var: $string v:alias:t:329 VALUE_OF [string:__alias:t:329]
    # Var: $string$[int] v:t:328 VALUE_OF [string[int]:__t:328]
    set v:alias:t:329 [ turbine::retrieve_string ${a:t:329} CACHED 1 ]
    set v:t:328 [ turbine::split_impl ${v:alias:t:329} " " ]
    turbine::build_rec ${t:328} ${v:t:328} [ list container integer string ] 0 1
}


proc __entry-async_op-parse_float-1 { a:tot_dups a:tot_reads t:335 t:340 t:341 v:alias:sampleName u:perc_mapped u:qcfile u:vars } {
    # Var: $string v:alias:tot_reads VALUE_OF [string:__alias:tot_reads]
    # Var: $float v:t:334 VALUE_OF [float:__t:334]
    set v:alias:tot_reads [ turbine::retrieve_string ${a:tot_reads} CACHED 1 ]
    set v:t:334 [ turbine::string2float_impl ${v:alias:tot_reads} ]
    turbine::rule [ list ${t:335} ] "__entry-async_op-div_float ${t:335} ${v:t:334} ${u:perc_mapped}"
    turbine::rule [ list ${a:tot_dups} ${t:340} ] [ list __entry-async_op-parse_float-2 ${a:tot_dups} ${t:340} ${t:341} ${v:alias:sampleName} ${v:t:334} ${u:perc_mapped} ${u:qcfile} ${u:vars} ]
}


proc __entry-async_op-div_float { t:335 v:t:334 u:perc_mapped } {
    # Var: $float v:t:335:1 VALUE_OF [float:__t:335]
    # Var: $float v:perc_mapped VALUE_OF [float:perc_mapped]
    set v:t:335:1 [ turbine::retrieve_float ${t:335} CACHED 1 ]
    set v:perc_mapped [ expr { ${v:t:335:1} / ${v:t:334} } ]
    turbine::store_float ${u:perc_mapped} ${v:perc_mapped}
}


proc __entry-async_op-parse_float-2 { a:tot_dups t:340 t:341 v:alias:sampleName v:t:334 u:perc_mapped u:qcfile u:vars } {
    # Var: $string v:alias:tot_dups VALUE_OF [string:__alias:tot_dups]
    # Var: $float v:t:332 VALUE_OF [float:__t:332]
    # Var: $float v:t:331 VALUE_OF [float:__t:331]
    # Var: $float v:perc_dup VALUE_OF [float:perc_dup]
    # Var: $float v:t:340:1 VALUE_OF [float:__t:340]
    # Var: $boolean v:t:339 VALUE_OF [boolean:__t:339]
    set v:alias:tot_dups [ turbine::retrieve_string ${a:tot_dups} CACHED 1 ]
    set v:t:332 [ turbine::string2float_impl ${v:alias:tot_dups} ]
    set v:t:331 [ expr { ${v:t:332} * 100.0 } ]
    set v:perc_dup [ expr { ${v:t:331} / ${v:t:334} } ]
    set v:t:340:1 [ turbine::retrieve_float ${t:340} CACHED 1 ]
    set v:t:339 [ expr { ${v:perc_dup} < ${v:t:340:1} } ]
    if { ${v:t:339} } {
        # Var: string t:345 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():133:34
        lassign [ adlb::multicreate [ list string 1 1 130 ] ] t:345
        turbine::c::log "allocated t:345=<${t:345}>"
        turbine::read_refcount_incr ${u:vars} 1
        turbine::file_read_refcount_incr ${u:qcfile} 1
        turbine::read_refcount_incr ${u:perc_mapped} 1
        turbine::read_refcount_incr ${t:341} 2
        turbine::container_reference ${u:vars} "MAP_CUTOFF" ${t:345} string
        turbine::rule [ list ${t:345} ${u:perc_mapped} ] [ list __entry-async_op-parse_float-3 ${t:341} ${t:345} ${v:alias:sampleName} ${v:perc_dup} ${u:perc_mapped} ${u:qcfile} ]
    }
    turbine::read_refcount_decr ${t:341} 1
    turbine::read_refcount_decr ${u:perc_mapped} 1
    turbine::file_read_refcount_decr ${u:qcfile} 1
    turbine::read_refcount_decr ${u:vars} 1
}


proc __entry-async_op-parse_float-3 { t:341 t:345 v:alias:sampleName v:perc_dup u:perc_mapped u:qcfile } {
    # Var: $string v:t:345 VALUE_OF [string:__t:345]
    # Var: $float v:t:344 VALUE_OF [float:__t:344]
    # Var: $float v:perc_mapped:1 VALUE_OF [float:perc_mapped]
    # Var: $boolean v:t:343 VALUE_OF [boolean:__t:343]
    set v:t:345 [ turbine::retrieve_string ${t:345} CACHED 1 ]
    set v:t:344 [ turbine::string2float_impl ${v:t:345} ]
    set v:perc_mapped:1 [ turbine::retrieve_float ${u:perc_mapped} CACHED 1 ]
    set v:t:343 [ expr { ${v:perc_mapped:1} > ${v:t:344} } ]
    if { ${v:t:343} } {
        # Var: string t:347 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():134:205
        # Var: $string v:t:354 VALUE_OF [string:__t:354]
        # Var: $string v:t:353 VALUE_OF [string:__t:353]
        # Var: $string v:t:352 VALUE_OF [string:__t:352]
        lassign [ adlb::multicreate [ list string 1 1 131 ] ] t:347
        turbine::c::log "allocated t:347=<${t:347}>"
        set v:t:354 "${v:alias:sampleName}\tQCTEST\tPASS\n\trule1 ok: percent_duplication="
        f:echo ${u:qcfile} ${t:347} -100 "HARD" "RANK"
        set v:t:353 "${v:t:354}${v:perc_dup}"
        set v:t:352 "${v:t:353}<? duplication_cutoff="
        turbine::rule [ list ${t:341} ] [ list __entry-async_op-strcat-7 ${t:341} ${t:347} ${v:perc_mapped:1} ${v:t:345} ${v:t:352} ]
        turbine::read_refcount_decr ${t:347} 1
    } else {
        # Var: string t:363 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():136:209
        # Var: $string v:t:370 VALUE_OF [string:__t:370]
        # Var: $string v:t:369 VALUE_OF [string:__t:369]
        # Var: $string v:t:368 VALUE_OF [string:__t:368]
        lassign [ adlb::multicreate [ list string 1 1 132 ] ] t:363
        turbine::c::log "allocated t:363=<${t:363}>"
        set v:t:370 "${v:alias:sampleName}\tQCTEST\tFAIL\n\trule1 ok: percent_duplication="
        f:echo ${u:qcfile} ${t:363} -100 "HARD" "RANK"
        set v:t:369 "${v:t:370}${v:perc_dup}"
        set v:t:368 "${v:t:369}<? duplication_cutoff="
        turbine::rule [ list ${t:341} ] [ list __entry-async_op-strcat-8 ${t:341} ${t:363} ${v:perc_mapped:1} ${v:t:345} ${v:t:368} ]
        turbine::read_refcount_decr ${t:363} 1
    }
    turbine::read_refcount_decr ${t:341} 1
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc __entry-async_op-strcat-7 { t:341 t:347 v:perc_mapped:1 v:t:345 v:t:352 } {
    # Var: $string v:t:341:1 VALUE_OF [string:__t:341]
    # Var: $string v:t:351 VALUE_OF [string:__t:351]
    # Var: $string v:t:350 VALUE_OF [string:__t:350]
    # Var: $string v:t:349 VALUE_OF [string:__t:349]
    # Var: $string v:t:348 VALUE_OF [string:__t:348]
    # Var: $string v:t:347 VALUE_OF [string:__t:347]
    set v:t:341:1 [ turbine::retrieve_string ${t:341} CACHED 1 ]
    set v:t:351 "${v:t:352}${v:t:341:1}"
    set v:t:350 "${v:t:351}\n\trule2 ok: percent_mapped="
    set v:t:349 "${v:t:350}${v:perc_mapped:1}"
    set v:t:348 "${v:t:349}>? mapping_cutoff="
    set v:t:347 "${v:t:348}${v:t:345}"
    turbine::store_string ${t:347} ${v:t:347}
}


proc __entry-async_op-strcat-8 { t:341 t:363 v:perc_mapped:1 v:t:345 v:t:368 } {
    # Var: $string v:t:341:2 VALUE_OF [string:__t:341]
    # Var: $string v:t:367 VALUE_OF [string:__t:367]
    # Var: $string v:t:366 VALUE_OF [string:__t:366]
    # Var: $string v:t:365 VALUE_OF [string:__t:365]
    # Var: $string v:t:364 VALUE_OF [string:__t:364]
    # Var: $string v:t:363 VALUE_OF [string:__t:363]
    set v:t:341:2 [ turbine::retrieve_string ${t:341} CACHED 1 ]
    set v:t:367 "${v:t:368}${v:t:341:2}"
    set v:t:366 "${v:t:367}\n\trule2 not ok: percent_mapped="
    set v:t:365 "${v:t:366}${v:perc_mapped:1}"
    set v:t:364 "${v:t:365}>? mapping_cutoff="
    set v:t:363 "${v:t:364}${v:t:345}"
    turbine::store_string ${t:363} ${v:t:363}
}


proc __entry-async_op-parse_float-4 { a:tot_mapped t:335 } {
    # Var: $string v:alias:tot_mapped VALUE_OF [string:__alias:tot_mapped]
    # Var: $float v:t:336 VALUE_OF [float:__t:336]
    # Var: $float v:t:335 VALUE_OF [float:__t:335]
    set v:alias:tot_mapped [ turbine::retrieve_string ${a:tot_mapped} CACHED 1 ]
    set v:t:336 [ turbine::string2float_impl ${v:alias:tot_mapped} ]
    set v:t:335 [ expr { ${v:t:336} * 100.0 } ]
    turbine::store_float ${t:335} ${v:t:335}
}


proc __entry-call_foreign-read-2 { t:51 t:617 t:649 v:sampleLines:1 u:chr_vcfList u:mergedvariant u:rawvariant u:samples_processing_done u:vars } {
    # Var: $file v:t:617 VALUE_OF [file:__t:617]
    # Var: $string v:t:616 VALUE_OF [string:__t:616]
    # Var: $int v:n:3 RENAMED [$int:__v:n]
    # Var: $string v:t:615 VALUE_OF [string:__t:615]
    # Var: $string v:o:3 RENAMED [$string:__v:o]
    # Var: $string$[int] v:chr_vcfList VALUE_OF [string[int]:chr_vcfList]
    # Var: string t:623 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():216:28
    # Var: string t:625 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():216:45
    # Var: string t:628 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():216:62
    # Var: string t:630 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():216:83
    # Var: string t:635 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():216:123
    # Var: $string$[int] v:variants RENAMED [$string$[int]:__v:variants] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    lassign [ adlb::multicreate [ list string 1 1 133 ] [ list string 1 1 134 ] [ list string 1 1 135 ] [ list string 1 1 136 ] [ list string 1 1 137 ] ] t:623 t:625 t:628 t:630 t:635
    turbine::c::log "allocated t:623=<${t:623}> t:625=<${t:625}> t:628=<${t:628}> t:630=<${t:630}> t:635=<${t:635}>"
    set v:t:617 [ turbine::retrieve_file ${t:617} CACHED 1 ]
    set v:t:616 [ turbine::file_read_local ${v:t:617} ]
    set v:n:3 [ string length ${v:t:616} ]
    set v:t:615 [ turbine::replace_all_impl ${v:t:616} "\n" " " 0 ${v:n:3} ]
    set v:o:3 [ string trim ${v:t:615} ]
    set v:chr_vcfList [ turbine::split_impl ${v:o:3} " " ]
    turbine::build_rec ${u:chr_vcfList} ${v:chr_vcfList} [ list container integer string ] 0 1
    turbine::container_reference ${u:vars} "JAVADIR" ${t:623} string
    turbine::container_reference ${u:vars} "GATKDIR" ${t:625} string
    turbine::container_reference ${u:vars} "REFGENOMEDIR" ${t:628} string
    turbine::container_reference ${u:vars} "REFGENOME" ${t:630} string
    turbine::container_reference ${u:vars} "DBSNP" ${t:635} string
    set v:variants [ turbine::unpack_args ${u:chr_vcfList} 1 string ]
    turbine::rule [ list ${t:51} ${t:623} ${t:625} ${t:628} ${t:630} ${t:635} ] "__entry-optmerged-6 ${t:51} ${t:623} ${t:625} ${t:628} ${t:630} ${t:635} ${t:649} {${v:sampleLines:1}} {${v:variants}} {${u:mergedvariant}} {${u:rawvariant}} ${u:samples_processing_done}"
    turbine::read_refcount_decr ${u:chr_vcfList} 1
}


proc __entry-optmerged-6 { t:51 t:623 t:625 t:628 t:630 t:635 t:649 v:sampleLines:1 v:variants u:mergedvariant u:rawvariant u:samples_processing_done } {
    # Var: $string v:t:628 VALUE_OF [string:__t:628]
    # Var: $string v:t:635 VALUE_OF [string:__t:635]
    # Var: $string v:t:632 VALUE_OF [string:__t:632]
    # Var: $string v:t:630 VALUE_OF [string:__t:630]
    # Var: $string v:t:627 VALUE_OF [string:__t:627]
    # Var: $string v:javadir:6 RENAMED [$string:__v:javadir] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    # Var: $string v:gatkdir:5 RENAMED [$string:__v:gatkdir] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    # Var: $string v:__filename:outputfile:6 RENAMED [$string:__v:__filename:outputfile] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    # Var: $file v:outputfile:6 RENAMED [$file:__v:outputfile] ./pipelinefunctions/merge_vcf.swift:CombineGVCFs():3:105
    set v:t:628 [ turbine::retrieve_string ${t:628} CACHED 1 ]
    set v:t:635 [ turbine::retrieve_string ${t:635} CACHED 1 ]
    set v:t:632 "${v:t:628}/${v:t:635}"
    set v:t:630 [ turbine::retrieve_string ${t:630} CACHED 1 ]
    set v:t:627 "${v:t:628}/${v:t:630}"
    set v:javadir:6 [ turbine::retrieve_string ${t:623} CACHED 1 ]
    set v:gatkdir:5 [ turbine::retrieve_string ${t:625} CACHED 1 ]
    set v:__filename:outputfile:6 [ turbine::retrieve_string ${t:51} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:6 [ turbine::create_local_file_ref ${v:__filename:outputfile:6} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:6 "-Xmx8g" "-jar" ${v:gatkdir:5} "-T" "CombineGVCFs" "-R" ${v:t:627} "--dbsnp" ${v:t:632} {*}${v:variants} "-o" ${v:__filename:outputfile:6} [ dict create ] ]
    turbine::exec_external ${v:javadir:6} [ dict create ] "-Xmx8g" "-jar" ${v:gatkdir:5} "-T" "CombineGVCFs" "-R" ${v:t:627} "--dbsnp" ${v:t:632} {*}${v:variants} "-o" ${v:__filename:outputfile:6}
    turbine::store_file ${u:rawvariant} v:outputfile:6 0
    turbine::rule [ list ] "__entry-chain22 ${t:649} {${v:sampleLines:1}} {${u:mergedvariant}} {${u:rawvariant}} ${u:samples_processing_done}"
    turbine::decr_local_file_refcount v:outputfile:6
}


proc __entry-chain22 { t:649 v:sampleLines:1 u:mergedvariant u:rawvariant u:samples_processing_done } {
    f:cp ${u:mergedvariant} ${u:rawvariant} -100 "HARD" "RANK"
    turbine::rule [ list [ turbine::get_file_td ${u:mergedvariant} ] ] "__entry-chain23 ${t:649} {${v:sampleLines:1}} {${u:mergedvariant}} ${u:samples_processing_done}"
    turbine::file_read_refcount_decr ${u:rawvariant} 1
}


proc __entry-chain23 { t:649 v:sampleLines:1 u:mergedvariant u:samples_processing_done } {
    # Var: *rw(file)[int] t:640 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():218:32
    # Var: string t:641 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():218:37
    # Var: $int v:t:638 VALUE_OF [int:__t:638]
    lassign [ adlb::multicreate [ list container integer file_ref 1 1 138 ] [ list string 1 1 139 ] ] t:640 t:641
    turbine::c::log "allocated t:640=<${t:640}> t:641=<${t:641}>"
    set v:t:638 [ dict size ${v:sampleLines:1} ]
    turbine::glob [ list ${t:640} ] [ list ${t:641} ]
    turbine::rule [ list ${t:649} ] "__entry-async_op-strcat-9 ${t:641} ${t:649}"
    turbine::rule [ list ${t:640} ] "__entry-call_foreign-size ${t:640} ${v:t:638} ${u:samples_processing_done}"
    turbine::file_read_refcount_decr ${u:mergedvariant} 1
}


proc __entry-async_op-strcat-9 { t:641 t:649 } {
    # Var: $string v:t:649:3 VALUE_OF [string:__t:649]
    # Var: $string v:t:641 VALUE_OF [string:__t:641]
    set v:t:649:3 [ turbine::retrieve_string ${t:649} CACHED 1 ]
    set v:t:641 "${v:t:649:3}/*.GATKCombineGVCF.raw.vcf"
    turbine::store_string ${t:641} ${v:t:641}
}


proc __entry-call_foreign-size { t:640 v:t:638 u:samples_processing_done } {
    # Var: file$[int] v:t:640 VALUE_OF [*rw(file)[int]:__t:640]
    # Var: $int v:t:639 VALUE_OF [int:__t:639]
    # Var: $boolean v:t:637 VALUE_OF [boolean:__t:637]
    set v:t:640 [ adlb::enumerate ${t:640} dict all 0 0 ]
    set v:t:639 [ dict size ${v:t:640} ]
    set v:t:637 [ expr { ${v:t:638} == ${v:t:639} } ]
    if { ${v:t:637} } {
        turbine::store_integer ${u:samples_processing_done} 1
    }
    turbine::read_refcount_decr ${t:640} 1
}


proc __entry-optmerged-7 { u:AlignDir u:RealignDir u:VarcallDir t:10 t:13 t:320 t:47 t:49 t:51 t:60 t:611 t:657 v:alias:sampleName u:chromosomes_processing_done u:dedupsortedbam u:flagstats u:indices u:mergedbam u:mergedvariant u:outbam u:qcfile u:rawvariant u:stat u:vars } {
    # Var: $string v:t:10:3 VALUE_OF [string:__t:10]
    # Var: $string v:AlignDir VALUE_OF [string:AlignDir]
    # Var: $string v:VarcallDir VALUE_OF [string:VarcallDir]
    # Var: $string v:RealignDir VALUE_OF [string:RealignDir]
    # Var: $string v:t:47 VALUE_OF [string:__t:47]
    # Var: $string v:t:78 VALUE_OF [string:__t:78]
    # Var: $string v:t:51 VALUE_OF [string:__t:51]
    # Var: $string v:t:49 VALUE_OF [string:__t:49]
    set v:t:10:3 [ turbine::retrieve_string ${t:10} CACHED 1 ]
    set v:AlignDir "${v:t:10:3}/${v:alias:sampleName}/align/"
    turbine::store_string ${u:AlignDir} ${v:AlignDir}
    set v:VarcallDir "${v:t:10:3}/${v:alias:sampleName}/variant/"
    turbine::store_string ${u:VarcallDir} ${v:VarcallDir}
    set v:RealignDir "${v:t:10:3}/${v:alias:sampleName}/realign/"
    turbine::store_string ${u:RealignDir} ${v:RealignDir}
    set v:t:47 "${v:AlignDir}${v:alias:sampleName}.wdups.sorted.bam"
    turbine::store_string ${t:47} ${v:t:47}
    turbine::set_filename_val ${u:dedupsortedbam} ${v:t:47}
    set v:t:78 "${v:AlignDir}${v:alias:sampleName}.wdups.sorted.bam.flagstats"
    turbine::set_filename_val ${u:flagstats} ${v:t:78}
    set v:t:51 "${v:VarcallDir}${v:alias:sampleName}.GATKCombineGVCF.raw.vcf"
    turbine::store_string ${t:51} ${v:t:51}
    turbine::set_filename_val ${u:rawvariant} ${v:t:51}
    set v:t:49 "${v:RealignDir}${v:alias:sampleName}.recalibrated.bam"
    turbine::store_string ${t:49} ${v:t:49}
    turbine::set_filename_val ${u:outbam} ${v:t:49}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list mkdir-app-leaf1-1 ${v:VarcallDir} ]
    turbine::reset_priority
    turbine::rule [ list ${t:13} ] [ list __entry-optmerged-8 ${t:13} ${t:60} ${t:611} ${v:alias:sampleName} ${v:t:10:3} ${u:mergedbam} ${u:mergedvariant} ]
    turbine::rule [ list [ turbine::get_file_td ${u:dedupsortedbam} ] ] [ list __entry-optmerged-9 ${t:320} ${t:657} ${v:RealignDir} ${v:VarcallDir} ${v:alias:sampleName} ${v:t:47} ${v:t:78} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:flagstats} ${u:indices} ${u:qcfile} ${u:stat} ${u:vars} ]
}


proc mkdir-app-leaf1-1 { v:VarcallDir } {
    # Var: $void v:v RENAMED [$void:__v:v] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:mkdir():65:15
    turbine::c::log [ list exec: "mkdir" "-p" ${v:VarcallDir} [ dict create ] ]
    turbine::exec_external "mkdir" [ dict create ] "-p" ${v:VarcallDir}
}


proc __entry-optmerged-8 { t:13 t:60 t:611 v:alias:sampleName v:t:10:3 u:mergedbam u:mergedvariant } {
    # Var: $string v:t:13:3 VALUE_OF [string:__t:13]
    # Var: $string v:t:60 VALUE_OF [string:__t:60]
    # Var: $string v:t:69 VALUE_OF [string:__t:69]
    # Var: $string v:t:611 VALUE_OF [string:__t:611]
    set v:t:13:3 [ turbine::retrieve_string ${t:13} CACHED 1 ]
    set v:t:60 "${v:t:10:3}/${v:t:13:3}/${v:alias:sampleName}/${v:alias:sampleName}.recalibrated.bam"
    turbine::store_string ${t:60} ${v:t:60}
    set v:t:69 "${v:t:10:3}/${v:t:13:3}/${v:alias:sampleName}/${v:alias:sampleName}.GATKCombineGVCF.raw.vcf"
    set v:t:611 "novosort command did not produce alignments for ${v:t:60}"
    turbine::store_string ${t:611} ${v:t:611}
    turbine::set_filename_val ${u:mergedbam} ${v:t:60}
    turbine::set_filename_val ${u:mergedvariant} ${v:t:69}
}


proc __entry-optmerged-9 { t:320 t:657 v:RealignDir v:VarcallDir v:alias:sampleName v:t:47 v:t:78 u:chromosomes_processing_done u:dedupsortedbam u:flagstats u:indices u:qcfile u:stat u:vars } {
    # Var: string t:417 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():169:85
    # Var: string t:439 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():174:35
    # Var: string t:441 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():174:56
    # Var: string t:489 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():186:34
    # Var: string t:491 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():186:51
    # Var: string t:496 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():186:89
    # Var: string t:528 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():190:192
    lassign [ adlb::multicreate [ list string 1 1 140 ] [ list string 1 1 141 ] [ list string 1 1 142 ] [ list string 1 1 143 ] [ list string 1 1 144 ] [ list string 1 1 145 ] [ list string 1 1 146 ] ] t:417 t:439 t:441 t:489 t:491 t:496 t:528
    turbine::c::log "allocated t:417=<${t:417}> t:439=<${t:439}> t:441=<${t:441}> t:489=<${t:489}> t:491=<${t:491}>"
    turbine::c::log "allocated t:496=<${t:496}> t:528=<${t:528}>"
    turbine::container_reference ${u:vars} "PBSCORES" ${t:417} string
    turbine::container_reference ${u:vars} "REFGENOMEDIR" ${t:439} string
    turbine::container_reference ${u:vars} "INDELDIR" ${t:441} string
    turbine::container_reference ${u:vars} "JAVADIR" ${t:489} string
    turbine::container_reference ${u:vars} "GATKDIR" ${t:491} string
    turbine::container_reference ${u:vars} "REFGENOME" ${t:496} string
    turbine::container_reference ${u:vars} "DBSNP" ${t:528} string
    turbine::rule [ list ${u:indices} ] [ list __entry-explicit-wait2 ${t:320} ${t:417} ${t:439} ${t:441} ${t:489} ${t:491} ${t:496} ${t:528} ${t:657} ${v:RealignDir} ${v:VarcallDir} ${v:alias:sampleName} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:indices} ${u:qcfile} ]
    turbine::rule [ list ${t:320} ] [ list samtools_flagstat-app-leaf1 ${t:320} ${v:t:47} ${v:t:78} ${u:dedupsortedbam} ${u:flagstats} ${u:stat} ]
}


proc __entry-explicit-wait2 { t:320 t:417 t:439 t:441 t:489 t:491 t:496 t:528 t:657 v:RealignDir v:VarcallDir v:alias:sampleName u:chromosomes_processing_done u:dedupsortedbam u:indices u:qcfile } {
    # Var: int t:416 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():169:74
    # Var: string t:493 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():186:88
    # Var: string t:525 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():190:191
    # Var: string t:437 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():174:28
    lassign [ adlb::multicreate [ list integer 1 1 147 ] [ list string 1 1 148 ] [ list string 1 1 149 ] [ list string 1 1 150 ] ] t:416 t:493 t:525 t:437
    turbine::c::log "allocated t:416=<${t:416}> t:493=<${t:493}> t:525=<${t:525}> t:437=<${t:437}>"
    set tcltmp:container_sz [ adlb::enumerate ${u:indices} count all 0 ]
    set tcltmp:iters ${tcltmp:container_sz}
    turbine::read_refcount_incr ${t:320} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:493} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${u:indices} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::file_read_refcount_incr ${u:dedupsortedbam} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:489} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:437} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:525} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:657} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::file_read_refcount_incr ${u:qcfile} [ expr { 3 * ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:416} [ expr { ${tcltmp:iters} - 1 } ]
    turbine::read_refcount_incr ${t:491} [ expr { ${tcltmp:iters} - 1 } ]
    __entry-foreach2:outer ${t:320} ${t:416} ${t:437} ${t:489} ${t:491} ${t:493} ${t:525} ${t:657} ${v:RealignDir} ${v:VarcallDir} ${v:alias:sampleName} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:indices} ${u:qcfile} 0 [ expr { ${tcltmp:container_sz} - 1 } ] 1
    turbine::rule [ list ${t:417} ] "__entry-async_op-parse_int-6 ${t:416} ${t:417}"
    turbine::rule [ list ${t:439} ] "__entry-optmerged-12 ${t:437} ${t:439} ${t:441} ${t:493} ${t:496} ${t:525} ${t:528}"
}


proc __entry-foreach2:outer { t:320 t:416 t:437 t:489 t:491 t:493 t:525 t:657 v:RealignDir v:VarcallDir v:alias:sampleName u:chromosomes_processing_done u:dedupsortedbam u:indices u:qcfile tcltmp:lo tcltmp:hi tcltmp:inc } {
    if { [ expr { ${tcltmp:lo} > ${tcltmp:hi} } ] } {
        return
    }
    while {1} {
        set tcltmp:itersleft [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
        if { [ expr { ${tcltmp:itersleft} <= 64 } ] } {
            __entry-foreach2:inner ${t:320} ${t:416} ${t:437} ${t:489} ${t:491} ${t:493} ${t:525} ${t:657} ${v:RealignDir} ${v:VarcallDir} ${v:alias:sampleName} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:indices} ${u:qcfile} ${tcltmp:lo} ${tcltmp:hi} ${tcltmp:inc}
            return
        } else {
            set tcltmp:skip [ expr { ${tcltmp:inc} * max(64,((${tcltmp:itersleft} - 1) / 16) + 1) } ]
            for { set tcltmp:splitstart [ expr { ${tcltmp:lo} + ${tcltmp:skip} } ] } { ${tcltmp:splitstart} <= ${tcltmp:hi} } { incr tcltmp:splitstart ${tcltmp:skip} } {
                set tcltmp:splitend [ expr { min(${tcltmp:hi},${tcltmp:splitstart} + ${tcltmp:skip} - 1) } ]
                set tcltmp:prio [ turbine::get_priority ]
                turbine::set_priority ${tcltmp:prio}
                adlb::spawn 0 [ list __entry-foreach2:outer ${t:320} ${t:416} ${t:437} ${t:489} ${t:491} ${t:493} ${t:525} ${t:657} ${v:RealignDir} ${v:VarcallDir} ${v:alias:sampleName} ${u:chromosomes_processing_done} ${u:dedupsortedbam} ${u:indices} ${u:qcfile} ${tcltmp:splitstart} ${tcltmp:splitend} ${tcltmp:inc} ]
                turbine::reset_priority
            }
            set tcltmp:hi [ expr { ${tcltmp:lo} + ${tcltmp:skip} - 1 } ]
        }
    }
}


proc __entry-foreach2:inner { t:320 t:416 t:437 t:489 t:491 t:493 t:525 t:657 v:RealignDir v:VarcallDir v:alias:sampleName u:chromosomes_processing_done u:dedupsortedbam u:indices u:qcfile tcltmp:lo tcltmp:hi tcltmp:inc } {
    set tcltmp:splitlen [ expr { ${tcltmp:hi} - ${tcltmp:lo} + 1 } ]
    set tcltmp:contents [ adlb::enumerate ${u:indices} members ${tcltmp:splitlen} ${tcltmp:lo} ]
    foreach v:chr ${tcltmp:contents} {
        # Var: string c:s_sknownSite OPT_TEMPORARY
        global c:s_sknownSite
        # Var: string c:s_sknown_g OPT_TEMPORARY
        global c:s_sknown_g
        # Var: file u:chrdedupsortedbam /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():156:68
        # Var: file u:realignedbam /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():158:63
        # Var: file u:recalibratedbam /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():159:66
        # Var: file u:intervals /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():160:61
        # Var: file u:recalreport /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():161:63
        # Var: file u:gvcfvariant /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():162:62
        # Var: file u:recalfiles /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():164:71
        # Var: file u:realfiles /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():165:70
        # Var: int u:ploidy /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():167:3
        # Var: string[int] t:419 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():169:105
        # Var: string t:444 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():174:80
        # Var: string[int] u:recalparmsindels /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():175:3
        # Var: file t:450 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():175:59
        # Var: string[int] u:realparms /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():178:3
        # Var: file t:469 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():178:52
        # Var: $boolean v:t:412 VALUE_OF [boolean:__t:412]
        # Var: $string v:t:420 VALUE_OF [string:__t:420]
        # Var: $string v:t:444 VALUE_OF [string:__t:444]
        # Var: $string v:t:397 VALUE_OF [string:__t:397]
        # Var: $string v:t:382 VALUE_OF [string:__t:382]
        # Var: $string v:t:385 VALUE_OF [string:__t:385]
        # Var: $string v:t:388 VALUE_OF [string:__t:388]
        # Var: $string v:t:391 VALUE_OF [string:__t:391]
        # Var: $string v:t:394 VALUE_OF [string:__t:394]
        # Var: $string v:t:433 VALUE_OF [string:__t:433]
        # Var: $string v:t:510 VALUE_OF [string:__t:510]
        # Var: $string v:t:554 VALUE_OF [string:__t:554]
        lassign [ adlb::multicreate [ list integer 1 1 159 ] [ list container integer string 1 1 160 ] [ list string 1 1 161 ] [ list container integer string 1 1 162 ] [ list container integer string 1 1 164 ] ] u:ploidy t:419 t:444 u:recalparmsindels u:realparms
        turbine::c::log "allocated u:ploidy=<${u:ploidy}> t:419=<${t:419}> t:444=<${t:444}> u:recalparmsindels=<${u:recalparmsindels}> u:realparms=<${u:realparms}>"
        lassign [ turbine::make_file_tds [ adlb::multicreate [ list file 1 1 151 ] [ list file 1 1 152 ] [ list file 1 1 153 ] [ list file 1 1 154 ] [ list file 1 1 155 ] [ list file 0 1 156 ] [ list file 1 1 157 ] [ list file 1 1 158 ] [ list file 1 1 163 ] [ list file 1 1 165 ] ] [ list 1 1 1 1 1 1 1 1 0 0 ] ] u:chrdedupsortedbam u:realignedbam u:recalibratedbam u:intervals u:recalreport u:gvcfvariant u:recalfiles u:realfiles t:450 t:469
        set v:t:412 [ string equal ${v:chr} "M" ]
        set v:t:420 "${v:chr}"
        turbine::array_kv_build ${t:419} [ ::adlb::dict_create 0 ${v:t:420} ] 1 integer string
        f:samtools_view ${u:chrdedupsortedbam} ${t:320} ${u:dedupsortedbam} ${t:416} ${t:419} -100 "HARD" "RANK"
        set v:t:444 "*${v:chr}.vcf"
        turbine::store_string ${t:444} ${v:t:444}
        f:find_files ${u:recalfiles} ${t:437} ${t:444} -100 "HARD" "RANK"
        f:sed ${t:450} ${u:recalfiles} ${c:s_sknownSite} -100 "HARD" "RANK"
        f:find_files ${u:realfiles} ${t:437} ${t:444} -100 "HARD" "RANK"
        f:sed ${t:469} ${u:recalfiles} ${c:s_sknown_g} -100 "HARD" "RANK"
        if { ${v:t:412} } {
            turbine::store_integer ${u:ploidy} 1
        } else {
            turbine::store_integer ${u:ploidy} 2
        }
        set v:t:397 "${v:VarcallDir}${v:alias:sampleName}.${v:chr}.raw.g.vcf"
        turbine::set_filename_val ${u:gvcfvariant} ${v:t:397}
        set v:t:382 "${v:RealignDir}${v:alias:sampleName}.${v:chr}.wdups.sorted.bam"
        set v:t:385 "${v:RealignDir}${v:alias:sampleName}.${v:chr}.realigned.bam"
        set v:t:388 "${v:RealignDir}${v:alias:sampleName}.${v:chr}.recalibrated.bam"
        set v:t:391 "${v:RealignDir}${v:alias:sampleName}.${v:chr}.realignTargetCreator.intervals"
        set v:t:394 "${v:RealignDir}${v:alias:sampleName}.${v:chr}.recal_report.grp"
        turbine::set_filename_val ${u:chrdedupsortedbam} ${v:t:382}
        set v:t:433 "samtools command did not produce alignments for ${v:t:382}splitting by chromosome failed"
        set v:t:510 "GATK IndelRealigner command did not produce alignments for ${v:t:385}"
        turbine::set_filename_val ${u:realignedbam} ${v:t:385}
        set v:t:554 "GATK BQSR Recalibrator command did not produce alignments for ${v:t:388}"
        turbine::set_filename_val ${u:recalibratedbam} ${v:t:388}
        turbine::set_filename_val ${u:intervals} ${v:t:391}
        turbine::set_filename_val ${u:recalreport} ${v:t:394}
        turbine::rule [ list [ turbine::get_file_td ${t:450} ] ] "__entry-call_foreign-read-3 {${t:450}} ${u:recalparmsindels}"
        turbine::rule [ list [ turbine::get_file_td ${t:469} ] ] "__entry-call_foreign-read-4 {${t:469}} ${u:realparms}"
        turbine::rule [ list ${t:657} ] [ list __entry-optmerged-10 ${t:657} ${v:alias:sampleName} ${v:chr} ${u:realfiles} ${u:recalfiles} ]
        turbine::rule [ list ${t:320} [ turbine::get_file_td ${u:chrdedupsortedbam} ] ] [ list __entry-optmerged-11 ${t:320} ${t:416} ${t:489} ${t:491} ${t:493} ${t:525} ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:t:382} ${v:t:385} ${v:t:388} ${v:t:391} ${v:t:394} ${v:t:397} ${v:t:433} ${v:t:510} ${v:t:554} ${u:chrdedupsortedbam} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:intervals} ${u:ploidy} ${u:qcfile} ${u:realignedbam} ${u:realparms} ${u:recalibratedbam} ${u:recalparmsindels} ${u:recalreport} ]
        turbine::file_read_refcount_decr ${u:realfiles} 1
        turbine::read_refcount_decr ${t:419} 1
        turbine::file_read_refcount_decr ${u:recalfiles} 1
        turbine::read_refcount_decr ${t:444} 1
    }
    set tcltmp:iters [ expr { max(0,(${tcltmp:hi} - ${tcltmp:lo}) / ${tcltmp:inc} + 1) } ]
    turbine::file_read_refcount_decr ${u:dedupsortedbam} [ expr { ${tcltmp:iters} } ]
    turbine::read_refcount_decr ${t:437} [ expr { ${tcltmp:iters} } ]
}


proc __entry-call_foreign-read-3 { t:450 u:recalparmsindels } {
    # Var: $file v:t:450 VALUE_OF [file:__t:450]
    # Var: $string v:t:449 VALUE_OF [string:__t:449]
    # Var: $int v:n RENAMED [$int:__v:n]
    # Var: $string v:t:448 VALUE_OF [string:__t:448]
    # Var: $string v:o RENAMED [$string:__v:o]
    # Var: $string$[int] v:recalparmsindels VALUE_OF [string[int]:recalparmsindels]
    set v:t:450 [ turbine::retrieve_file ${t:450} CACHED 1 ]
    set v:t:449 [ turbine::file_read_local ${v:t:450} ]
    set v:n [ string length ${v:t:449} ]
    set v:t:448 [ turbine::replace_all_impl ${v:t:449} "\n" " " 0 ${v:n} ]
    set v:o [ string trim ${v:t:448} ]
    set v:recalparmsindels [ turbine::split_impl ${v:o} " " ]
    turbine::build_rec ${u:recalparmsindels} ${v:recalparmsindels} [ list container integer string ] 0 1
}


proc __entry-call_foreign-read-4 { t:469 u:realparms } {
    # Var: $file v:t:469 VALUE_OF [file:__t:469]
    # Var: $string v:t:468 VALUE_OF [string:__t:468]
    # Var: $int v:n:1 RENAMED [$int:__v:n]
    # Var: $string v:t:467 VALUE_OF [string:__t:467]
    # Var: $string v:o:1 RENAMED [$string:__v:o]
    # Var: $string$[int] v:realparms VALUE_OF [string[int]:realparms]
    set v:t:469 [ turbine::retrieve_file ${t:469} CACHED 1 ]
    set v:t:468 [ turbine::file_read_local ${v:t:469} ]
    set v:n:1 [ string length ${v:t:468} ]
    set v:t:467 [ turbine::replace_all_impl ${v:t:468} "\n" " " 0 ${v:n:1} ]
    set v:o:1 [ string trim ${v:t:467} ]
    set v:realparms [ turbine::split_impl ${v:o:1} " " ]
    turbine::build_rec ${u:realparms} ${v:realparms} [ list container integer string ] 0 1
}


proc __entry-optmerged-10 { t:657 v:alias:sampleName v:chr u:realfiles u:recalfiles } {
    # Var: $string v:t:657:5 VALUE_OF [string:__t:657]
    # Var: $string v:t:400 VALUE_OF [string:__t:400]
    # Var: $string v:t:406 VALUE_OF [string:__t:406]
    set v:t:657:5 [ turbine::retrieve_string ${t:657} CACHED 1 ]
    set v:t:400 "${v:t:657:5}/${v:alias:sampleName}.${v:chr}.recal_foundfiles.txt"
    set v:t:406 "${v:t:657:5}/${v:alias:sampleName}.${v:chr}.real_foundfiles.txt"
    turbine::set_filename_val ${u:recalfiles} ${v:t:400}
    turbine::set_filename_val ${u:realfiles} ${v:t:406}
}


proc __entry-optmerged-11 { t:320 t:416 t:489 t:491 t:493 t:525 v:VarcallDir v:alias:sampleName v:chr v:t:382 v:t:385 v:t:388 v:t:391 v:t:394 v:t:397 v:t:433 v:t:510 v:t:554 u:chrdedupsortedbam u:chromosomes_processing_done u:gvcfvariant u:indices u:intervals u:ploidy u:qcfile u:realignedbam u:realparms u:recalibratedbam u:recalparmsindels u:recalreport } {
    # Var: $string v:samtoolsdir:6 RENAMED [$string:__v:samtoolsdir]
    set v:samtoolsdir:6 [ turbine::retrieve_string ${t:320} CACHED 1 ]
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-chain12 ${v:alias:sampleName} ${v:samtoolsdir:6} ${v:t:382} ${v:t:433} ${u:qcfile} ]
    turbine::reset_priority
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list samtools_index-app-leaf1 ${t:416} ${t:489} ${t:491} ${t:493} ${t:525} ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:samtoolsdir:6} ${v:t:382} ${v:t:385} ${v:t:388} ${v:t:391} ${v:t:394} ${v:t:397} ${v:t:510} ${v:t:554} ${u:chrdedupsortedbam} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:intervals} ${u:ploidy} ${u:qcfile} ${u:realignedbam} ${u:realparms} ${u:recalibratedbam} ${u:recalparmsindels} ${u:recalreport} ]
    turbine::reset_priority
}


proc __entry-chain12 { v:alias:sampleName v:samtoolsdir:6 v:t:382 v:t:433 u:qcfile } {
    # Var: $int v:numAlignments:6 RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:424 VALUE_OF [boolean:__t:424]
    # Var: $boolean v:t:431 VALUE_OF [boolean:__t:431]
    # Var: $void v:t:430 VALUE_OF [void:__t:430]
    set v:numAlignments:6 [ alignment::samtools_view ${v:samtoolsdir:6} ${v:t:382} ]
    set v:t:424 [ expr { ${v:numAlignments:6} == 0 } ]
    set v:t:431 [ expr { ${v:numAlignments:6} > 0 } ]
    turbine::assert_impl ${v:t:431} ${v:t:433}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if13 ${v:alias:sampleName} ${v:t:382} ${v:t:424} ${u:qcfile} ]
    turbine::reset_priority
}


proc __entry-if13 { v:alias:sampleName v:t:382 v:t:424 u:qcfile } {
    if { ${v:t:424} } {
        # Var: string t:426 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():171:59
        # Var: $string v:t:426 VALUE_OF [string:__t:426]
        lassign [ adlb::multicreate [ list string 1 1 166 ] ] t:426
        turbine::c::log "allocated t:426=<${t:426}>"
        set v:t:426 "${v:alias:sampleName}\tREALIGNMENT\tFAIL\tsamtools command did not produce alignments for ${v:t:382}\n"
        turbine::store_string ${t:426} ${v:t:426}
        f:echo ${u:qcfile} ${t:426} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:426} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc samtools_index-app-leaf1 { t:416 t:489 t:491 t:493 t:525 v:VarcallDir v:alias:sampleName v:chr v:samtoolsdir:6 v:t:382 v:t:385 v:t:388 v:t:391 v:t:394 v:t:397 v:t:510 v:t:554 u:chrdedupsortedbam u:chromosomes_processing_done u:gvcfvariant u:indices u:intervals u:ploidy u:qcfile u:realignedbam u:realparms u:recalibratedbam u:recalparmsindels u:recalreport } {
    # Var: $file v:inputFilename RENAMED [$file:__v:inputFilename] ./pipelinefunctions/realign_varcall_by_chr.swift:samtools_index():4:21
    # Var: $void v:signal RENAMED [$void:__v:signal] ./pipelinefunctions/realign_varcall_by_chr.swift:samtools_index():4:21
    set v:inputFilename [ turbine::retrieve_file ${u:chrdedupsortedbam} ]
    turbine::c::log [ list exec: __v:samtoolsdir:6 "index" ${v:t:382} [ dict create ] ]
    turbine::exec_external ${v:samtoolsdir:6} [ dict create ] "index" ${v:t:382}
    turbine::rule [ list ${t:416} ${t:489} ${t:491} ${t:493} ${u:realparms} ] [ list __entry-chain13 ${t:416} ${t:489} ${t:491} ${t:493} ${t:525} ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:samtoolsdir:6} ${v:t:382} ${v:t:385} ${v:t:388} ${v:t:391} ${v:t:394} ${v:t:397} ${v:t:510} ${v:t:554} ${u:chrdedupsortedbam} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:intervals} ${u:ploidy} ${u:qcfile} ${u:realignedbam} ${u:realparms} ${u:recalibratedbam} ${u:recalparmsindels} ${u:recalreport} ]
}


proc __entry-chain13 { t:416 t:489 t:491 t:493 t:525 v:VarcallDir v:alias:sampleName v:chr v:samtoolsdir:6 v:t:382 v:t:385 v:t:388 v:t:391 v:t:394 v:t:397 v:t:510 v:t:554 u:chrdedupsortedbam u:chromosomes_processing_done u:gvcfvariant u:indices u:intervals u:ploidy u:qcfile u:realignedbam u:realparms u:recalibratedbam u:recalparmsindels u:recalreport } {
    # Var: $string v:javadir:1 RENAMED [$string:__v:javadir] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():9:121
    # Var: $string v:gatkdir RENAMED [$string:__v:gatkdir] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():9:121
    # Var: $string v:reference RENAMED [$string:__v:reference] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():9:121
    # Var: $string$[int] v:known RENAMED [$string$[int]:__v:known] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():9:121
    # Var: $int v:thr RENAMED [$int:__v:thr] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():9:121
    # Var: $file v:inputFile:9 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():9:121
    # Var: $file v:outputfile:1 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:RealignerTargetCreator():9:121
    set v:javadir:1 [ turbine::retrieve_string ${t:489} CACHED 1 ]
    set v:gatkdir [ turbine::retrieve_string ${t:491} CACHED 1 ]
    set v:reference [ turbine::retrieve_string ${t:493} CACHED 1 ]
    set v:known [ turbine::unpack_args ${u:realparms} 1 string ]
    set v:thr [ turbine::retrieve_integer ${t:416} CACHED 1 ]
    set v:inputFile:9 [ turbine::retrieve_file ${u:chrdedupsortedbam} ]
    set tcltmp:init_rc 2
    set v:outputfile:1 [ turbine::create_local_file_ref ${v:t:391} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx8g" "-jar" ${v:gatkdir} "-T" "RealignerTargetCreator" "-R" ${v:reference} "-I" ${v:t:382} {*}${v:known} "-nt" ${v:thr} "-o" ${v:t:391} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx8g" "-jar" ${v:gatkdir} "-T" "RealignerTargetCreator" "-R" ${v:reference} "-I" ${v:t:382} {*}${v:known} "-nt" ${v:thr} "-o" ${v:t:391}
    turbine::store_file ${u:intervals} v:outputfile:1 0
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list IndelRealigner-app-leaf1 ${t:525} ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:gatkdir} ${v:javadir:1} ${v:known} ${v:reference} ${v:samtoolsdir:6} ${v:t:382} ${v:t:385} ${v:t:388} ${v:t:391} ${v:t:394} ${v:t:397} ${v:t:510} ${v:t:554} ${v:thr} ${u:chrdedupsortedbam} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:intervals} ${u:ploidy} ${u:qcfile} ${u:realignedbam} ${u:recalibratedbam} ${u:recalparmsindels} ${u:recalreport} ]
    turbine::reset_priority
    turbine::decr_local_file_refcount v:outputfile:1
    turbine::read_refcount_decr ${u:realparms} 1
}


proc IndelRealigner-app-leaf1 { t:525 v:VarcallDir v:alias:sampleName v:chr v:gatkdir v:javadir:1 v:known v:reference v:samtoolsdir:6 v:t:382 v:t:385 v:t:388 v:t:391 v:t:394 v:t:397 v:t:510 v:t:554 v:thr u:chrdedupsortedbam u:chromosomes_processing_done u:gvcfvariant u:indices u:intervals u:ploidy u:qcfile u:realignedbam u:recalibratedbam u:recalparmsindels u:recalreport } {
    # Var: $file v:inputFile:13 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:IndelRealigner():14:133
    # Var: $file v:intervals RENAMED [$file:__v:intervals] ./pipelinefunctions/realign_varcall_by_chr.swift:IndelRealigner():14:133
    # Var: $file v:outputfile:3 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:IndelRealigner():14:133
    set v:inputFile:13 [ turbine::retrieve_file ${u:chrdedupsortedbam} CACHED 1 ]
    set v:intervals [ turbine::retrieve_file ${u:intervals} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:3 [ turbine::create_local_file_ref ${v:t:385} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx8g" "-jar" ${v:gatkdir} "-T" "IndelRealigner" "-R" ${v:reference} "-I" ${v:t:382} {*}${v:known} "--targetIntervals" ${v:t:391} "-o" ${v:t:385} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx8g" "-jar" ${v:gatkdir} "-T" "IndelRealigner" "-R" ${v:reference} "-I" ${v:t:382} {*}${v:known} "--targetIntervals" ${v:t:391} "-o" ${v:t:385}
    turbine::store_file ${u:realignedbam} v:outputfile:3 0
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-chain14 ${v:alias:sampleName} ${v:samtoolsdir:6} ${v:t:385} ${v:t:510} ${u:qcfile} ]
    turbine::reset_priority
    turbine::rule [ list ${t:525} ${u:recalparmsindels} ] [ list BaseRecalibrator-app-leaf1 ${t:525} ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:gatkdir} ${v:javadir:1} ${v:reference} ${v:samtoolsdir:6} ${v:t:385} ${v:t:388} ${v:t:394} ${v:t:397} ${v:t:554} ${v:thr} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:ploidy} ${u:qcfile} ${u:realignedbam} ${u:recalibratedbam} ${u:recalparmsindels} ${u:recalreport} ]
    turbine::decr_local_file_refcount v:outputfile:3
}


proc __entry-chain14 { v:alias:sampleName v:samtoolsdir:6 v:t:385 v:t:510 u:qcfile } {
    # Var: $int v:numAlignments:7 RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:501 VALUE_OF [boolean:__t:501]
    # Var: $boolean v:t:508 VALUE_OF [boolean:__t:508]
    # Var: $void v:t:507 VALUE_OF [void:__t:507]
    set v:numAlignments:7 [ alignment::samtools_view ${v:samtoolsdir:6} ${v:t:385} ]
    set v:t:501 [ expr { ${v:numAlignments:7} == 0 } ]
    set v:t:508 [ expr { ${v:numAlignments:7} > 0 } ]
    turbine::assert_impl ${v:t:508} ${v:t:510}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if14 ${v:alias:sampleName} ${v:t:385} ${v:t:501} ${u:qcfile} ]
    turbine::reset_priority
}


proc __entry-if14 { v:alias:sampleName v:t:385 v:t:501 u:qcfile } {
    if { ${v:t:501} } {
        # Var: string t:503 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():188:54
        # Var: $string v:t:503 VALUE_OF [string:__t:503]
        lassign [ adlb::multicreate [ list string 1 1 167 ] ] t:503
        turbine::c::log "allocated t:503=<${t:503}>"
        set v:t:503 "${v:alias:sampleName}\tREALIGNMENT\tFAIL\tGATK IndelRealigner command did not produce alignments for ${v:t:385}\n"
        turbine::store_string ${t:503} ${v:t:503}
        f:echo ${u:qcfile} ${t:503} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:503} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc BaseRecalibrator-app-leaf1 { t:525 v:VarcallDir v:alias:sampleName v:chr v:gatkdir v:javadir:1 v:reference v:samtoolsdir:6 v:t:385 v:t:388 v:t:394 v:t:397 v:t:554 v:thr u:chromosomes_processing_done u:gvcfvariant u:indices u:ploidy u:qcfile u:realignedbam u:recalibratedbam u:recalparmsindels u:recalreport } {
    # Var: $string v:dbsnp RENAMED [$string:__v:dbsnp] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():19:143
    # Var: $string$[int] v:knownindels RENAMED [$string$[int]:__v:knownindels] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():19:143
    # Var: $file v:inputFile:14 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():19:143
    # Var: $file v:outputfile:4 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:BaseRecalibrator():19:143
    set v:dbsnp [ turbine::retrieve_string ${t:525} CACHED 1 ]
    set v:knownindels [ turbine::unpack_args ${u:recalparmsindels} 1 string ]
    set v:inputFile:14 [ turbine::retrieve_file ${u:realignedbam} ]
    set tcltmp:init_rc 2
    set v:outputfile:4 [ turbine::create_local_file_ref ${v:t:394} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx16g" "-jar" ${v:gatkdir} "-T" "BaseRecalibrator" "-R" ${v:reference} "-I" ${v:t:385} "-knownSites" ${v:dbsnp} {*}${v:knownindels} "-nct" ${v:thr} "-o" ${v:t:394} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx16g" "-jar" ${v:gatkdir} "-T" "BaseRecalibrator" "-R" ${v:reference} "-I" ${v:t:385} "-knownSites" ${v:dbsnp} {*}${v:knownindels} "-nct" ${v:thr} "-o" ${v:t:394}
    turbine::store_file ${u:recalreport} v:outputfile:4 0
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-chain15 ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:dbsnp} ${v:gatkdir} ${v:javadir:1} ${v:reference} ${v:samtoolsdir:6} ${v:t:385} ${v:t:388} ${v:t:394} ${v:t:397} ${v:t:554} ${v:thr} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:ploidy} ${u:qcfile} ${u:realignedbam} ${u:recalibratedbam} ${u:recalreport} ]
    turbine::reset_priority
    turbine::decr_local_file_refcount v:outputfile:4
    turbine::read_refcount_decr ${u:recalparmsindels} 1
}


proc __entry-chain15 { v:VarcallDir v:alias:sampleName v:chr v:dbsnp v:gatkdir v:javadir:1 v:reference v:samtoolsdir:6 v:t:385 v:t:388 v:t:394 v:t:397 v:t:554 v:thr u:chromosomes_processing_done u:gvcfvariant u:indices u:ploidy u:qcfile u:realignedbam u:recalibratedbam u:recalreport } {
    # Var: $file v:inputFile:12 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:PrintReads():24:129
    # Var: $file v:recalreport RENAMED [$file:__v:recalreport] ./pipelinefunctions/realign_varcall_by_chr.swift:PrintReads():24:129
    # Var: $file v:outputfile:2 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:PrintReads():24:129
    # Var: $int v:ploidy RENAMED [$int:__v:ploidy] ./pipelinefunctions/realign_varcall_by_chr.swift:HaplotypeCaller():29:455
    set v:inputFile:12 [ turbine::retrieve_file ${u:realignedbam} CACHED 1 ]
    set v:recalreport [ turbine::retrieve_file ${u:recalreport} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:2 [ turbine::create_local_file_ref ${v:t:388} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx16g" "-jar" ${v:gatkdir} "-T" "PrintReads" "-R" ${v:reference} "-I" ${v:t:385} "-BQSR" ${v:t:394} "-nct" ${v:thr} "--out" ${v:t:388} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx16g" "-jar" ${v:gatkdir} "-T" "PrintReads" "-R" ${v:reference} "-I" ${v:t:385} "-BQSR" ${v:t:394} "-nct" ${v:thr} "--out" ${v:t:388}
    turbine::store_file ${u:recalibratedbam} v:outputfile:2 0
    set v:ploidy [ turbine::retrieve_integer ${u:ploidy} CACHED 1 ]
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-chain16 ${v:alias:sampleName} ${v:samtoolsdir:6} ${v:t:388} ${v:t:554} ${u:qcfile} ]
    turbine::reset_priority
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list HaplotypeCaller-app-leaf1 ${v:VarcallDir} ${v:alias:sampleName} ${v:chr} ${v:dbsnp} ${v:gatkdir} ${v:javadir:1} ${v:ploidy} ${v:reference} ${v:t:388} ${v:t:397} ${v:thr} ${u:chromosomes_processing_done} ${u:gvcfvariant} ${u:indices} ${u:recalibratedbam} ]
    turbine::reset_priority
    turbine::decr_local_file_refcount v:outputfile:2
}


proc __entry-chain16 { v:alias:sampleName v:samtoolsdir:6 v:t:388 v:t:554 u:qcfile } {
    # Var: $int v:numAlignments:8 RENAMED [$int:__v:numAlignments]
    # Var: $boolean v:t:545 VALUE_OF [boolean:__t:545]
    # Var: $boolean v:t:552 VALUE_OF [boolean:__t:552]
    # Var: $void v:t:551 VALUE_OF [void:__t:551]
    set v:numAlignments:8 [ alignment::samtools_view ${v:samtoolsdir:6} ${v:t:388} ]
    set v:t:545 [ expr { ${v:numAlignments:8} == 0 } ]
    set v:t:552 [ expr { ${v:numAlignments:8} > 0 } ]
    turbine::assert_impl ${v:t:552} ${v:t:554}
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 [ list __entry-if15 ${v:alias:sampleName} ${v:t:388} ${v:t:545} ${u:qcfile} ]
    turbine::reset_priority
}


proc __entry-if15 { v:alias:sampleName v:t:388 v:t:545 u:qcfile } {
    if { ${v:t:545} } {
        # Var: string t:547 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():193:57
        # Var: $string v:t:547 VALUE_OF [string:__t:547]
        lassign [ adlb::multicreate [ list string 1 1 168 ] ] t:547
        turbine::c::log "allocated t:547=<${t:547}>"
        set v:t:547 "${v:alias:sampleName}\tRECALIBRATION\tFAIL\tGATK BQSR Recalibration command did not produce alignments for ${v:t:388}\n"
        turbine::store_string ${t:547} ${v:t:547}
        f:echo ${u:qcfile} ${t:547} -100 "HARD" "RANK"
        turbine::read_refcount_decr ${t:547} 1
    }
    turbine::file_read_refcount_decr ${u:qcfile} 1
}


proc HaplotypeCaller-app-leaf1 { v:VarcallDir v:alias:sampleName v:chr v:dbsnp v:gatkdir v:javadir:1 v:ploidy v:reference v:t:388 v:t:397 v:thr u:chromosomes_processing_done u:gvcfvariant u:indices u:recalibratedbam } {
    # Var: $file v:inputFile:15 RENAMED [$file:__v:inputFile] ./pipelinefunctions/realign_varcall_by_chr.swift:HaplotypeCaller():29:455
    # Var: $file v:outputfile:5 RENAMED [$file:__v:outputfile] ./pipelinefunctions/realign_varcall_by_chr.swift:HaplotypeCaller():29:455
    # Var: *rw(file)[int] t:577 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():196:30
    # Var: string t:578 EXPR_TEMPORARY /ui/ncsa/jacobrh/Swift-Variant-Calling/VCcallingPipeline.swift:__entry():196:35
    # Var: $string$[int] v:indices VALUE_OF [string[int]:indices]
    # Var: $int v:t:575 VALUE_OF [int:__t:575]
    # Var: $string v:t:578 VALUE_OF [string:__t:578]
    lassign [ adlb::multicreate [ list container integer file_ref 1 1 169 ] [ list string 1 1 170 ] ] t:577 t:578
    turbine::c::log "allocated t:577=<${t:577}> t:578=<${t:578}>"
    set v:inputFile:15 [ turbine::retrieve_file ${u:recalibratedbam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:outputfile:5 [ turbine::create_local_file_ref ${v:t:397} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:javadir:1 "-Xmx8g" "-jar" ${v:gatkdir} "-T" "HaplotypeCaller" "-R" ${v:reference} "-I" ${v:t:388} "--dbsnp" ${v:dbsnp} "-o" ${v:t:397} "--emitRefConfidence" "GVCF" "-gt_mode" "DISCOVERY" "-A" "Coverage" "-A" "FisherStrand" "-A" "StrandOddsRatio" "-A" "HaplotypeScore" "-A" "MappingQualityRankSumTest" "-A" "QualByDepth" "-A" "RMSMappingQuality" "-A" "ReadPosRankSumTest" "-stand_call_conf" 30 "-stand_emit_conf" 30 "--sample_ploidy" ${v:ploidy} "-nt" 1 "-nct" ${v:thr} "-L" ${v:chr} [ dict create ] ]
    turbine::exec_external ${v:javadir:1} [ dict create ] "-Xmx8g" "-jar" ${v:gatkdir} "-T" "HaplotypeCaller" "-R" ${v:reference} "-I" ${v:t:388} "--dbsnp" ${v:dbsnp} "-o" ${v:t:397} "--emitRefConfidence" "GVCF" "-gt_mode" "DISCOVERY" "-A" "Coverage" "-A" "FisherStrand" "-A" "StrandOddsRatio" "-A" "HaplotypeScore" "-A" "MappingQualityRankSumTest" "-A" "QualByDepth" "-A" "RMSMappingQuality" "-A" "ReadPosRankSumTest" "-stand_call_conf" 30 "-stand_emit_conf" 30 "--sample_ploidy" ${v:ploidy} "-nt" 1 "-nct" ${v:thr} "-L" ${v:chr}
    turbine::store_file ${u:gvcfvariant} v:outputfile:5 0
    set v:indices [ adlb::enumerate ${u:indices} dict all 0 1 ]
    set v:t:575 [ dict size ${v:indices} ]
    turbine::glob [ list ${t:577} ] [ list ${t:578} ]
    set v:t:578 "${v:VarcallDir}${v:alias:sampleName}.*.raw.g.vcf"
    turbine::store_string ${t:578} ${v:t:578}
    turbine::rule [ list ${t:577} ] "__entry-call_foreign-size-1 ${t:577} ${v:t:575} ${u:chromosomes_processing_done}"
    turbine::decr_local_file_refcount v:outputfile:5
}


proc __entry-call_foreign-size-1 { t:577 v:t:575 u:chromosomes_processing_done } {
    # Var: file$[int] v:t:577 VALUE_OF [*rw(file)[int]:__t:577]
    # Var: $int v:t:576 VALUE_OF [int:__t:576]
    # Var: $boolean v:t:574 VALUE_OF [boolean:__t:574]
    set v:t:577 [ adlb::enumerate ${t:577} dict all 0 0 ]
    set v:t:576 [ dict size ${v:t:577} ]
    set v:t:574 [ expr { ${v:t:575} == ${v:t:576} } ]
    if { ${v:t:574} } {
        turbine::store_integer ${u:chromosomes_processing_done} 1
    }
    turbine::read_refcount_decr ${t:577} 1
}


proc __entry-async_op-parse_int-6 { t:416 t:417 } {
    # Var: $string v:t:417 VALUE_OF [string:__t:417]
    # Var: $int v:t:416 VALUE_OF [int:__t:416]
    set v:t:417 [ turbine::retrieve_string ${t:417} CACHED 1 ]
    set v:t:416 [ turbine::parse_int_impl ${v:t:417} 10 ]
    turbine::store_integer ${t:416} ${v:t:416}
}


proc __entry-optmerged-12 { t:437 t:439 t:441 t:493 t:496 t:525 t:528 } {
    # Var: $string v:t:439 VALUE_OF [string:__t:439]
    set v:t:439 [ turbine::retrieve_string ${t:439} CACHED 1 ]
    turbine::rule [ list ${t:441} ] [ list __entry-async_op-dircat-1 ${t:437} ${t:441} ${v:t:439} ]
    turbine::rule [ list ${t:496} ] [ list __entry-async_op-dircat-2 ${t:493} ${t:496} ${v:t:439} ]
    turbine::rule [ list ${t:528} ] [ list __entry-async_op-dircat-3 ${t:525} ${t:528} ${v:t:439} ]
}


proc __entry-async_op-dircat-1 { t:437 t:441 v:t:439 } {
    # Var: $string v:t:441 VALUE_OF [string:__t:441]
    # Var: $string v:t:438 VALUE_OF [string:__t:438]
    # Var: $string v:t:437 VALUE_OF [string:__t:437]
    set v:t:441 [ turbine::retrieve_string ${t:441} CACHED 1 ]
    set v:t:438 "${v:t:439}/${v:t:441}"
    set v:t:437 "${v:t:438}/"
    turbine::store_string ${t:437} ${v:t:437}
}


proc __entry-async_op-dircat-2 { t:493 t:496 v:t:439 } {
    # Var: $string v:t:496 VALUE_OF [string:__t:496]
    # Var: $string v:t:493 VALUE_OF [string:__t:493]
    set v:t:496 [ turbine::retrieve_string ${t:496} CACHED 1 ]
    set v:t:493 "${v:t:439}/${v:t:496}"
    turbine::store_string ${t:493} ${v:t:493}
}


proc __entry-async_op-dircat-3 { t:525 t:528 v:t:439 } {
    # Var: $string v:t:528 VALUE_OF [string:__t:528]
    # Var: $string v:t:525 VALUE_OF [string:__t:525]
    set v:t:528 [ turbine::retrieve_string ${t:528} CACHED 1 ]
    set v:t:525 "${v:t:439}/${v:t:528}"
    turbine::store_string ${t:525} ${v:t:525}
}


proc samtools_flagstat-app-leaf1 { t:320 v:t:47 v:t:78 u:dedupsortedbam u:flagstats u:stat } {
    # Var: $string v:samtoolsdir:11 RENAMED [$string:__v:samtoolsdir] ./pipelinefunctions/align_dedup.swift:samtools_flagstat():51:42
    # Var: $file v:inputFile:18 RENAMED [$file:__v:inputFile] ./pipelinefunctions/align_dedup.swift:samtools_flagstat():51:42
    # Var: $file v:output:3 RENAMED [$file:__v:output] ./pipelinefunctions/align_dedup.swift:samtools_flagstat():51:42
    # Var: $file v:flagstats VALUE_OF [file:flagstats]
    # Var: $string$[int] v:stat VALUE_OF [string[int]:stat]
    set v:samtoolsdir:11 [ turbine::retrieve_string ${t:320} CACHED 1 ]
    set v:inputFile:18 [ turbine::retrieve_file ${u:dedupsortedbam} CACHED 1 ]
    set tcltmp:init_rc 2
    set v:output:3 [ turbine::create_local_file_ref ${v:t:78} ${tcltmp:init_rc} 1 ]
    turbine::c::log [ list exec: __v:samtoolsdir:11 "flagstat" ${v:t:47} [ dict create "stdout" ${v:t:78} ] ]
    turbine::exec_external ${v:samtoolsdir:11} [ dict create "stdout" ${v:t:78} ] "flagstat" ${v:t:47}
    turbine::store_file ${u:flagstats} v:output:3 0
    set v:flagstats [ turbine::retrieve_file ${u:flagstats} CACHED 1 ]
    set v:stat [ turbine::file_lines_impl ${v:flagstats} ]
    turbine::build_rec ${u:stat} ${v:stat} [ list container integer string ] 0 1
    turbine::decr_local_file_refcount v:output:3
}


proc __entry-optmerged-13 { t:657 t:81 v:alias:sampleName u:alignedsam u:chr_bamListfile u:chr_vcfListfile } {
    # Var: $string v:t:657:1 VALUE_OF [string:__t:657]
    # Var: $string v:t:81 VALUE_OF [string:__t:81]
    # Var: $string v:t:86 VALUE_OF [string:__t:86]
    # Var: $string v:t:91 VALUE_OF [string:__t:91]
    set v:t:657:1 [ turbine::retrieve_string ${t:657} CACHED 1 ]
    set v:t:81 "${v:t:657:1}/align/${v:alias:sampleName}.nodups.sam"
    turbine::store_string ${t:81} ${v:t:81}
    set v:t:86 "${v:t:657:1}/${v:alias:sampleName}.chr_bamList.txt"
    set v:t:91 "${v:t:657:1}/${v:alias:sampleName}.chr_vcfList.txt"
    turbine::set_filename_val ${u:alignedsam} ${v:t:81}
    turbine::set_filename_val ${u:chr_bamListfile} ${v:t:86}
    turbine::set_filename_val ${u:chr_vcfListfile} ${v:t:91}
}


proc f:cp { u:o u:i v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: cp"
    # Var: $boolean v:mapped_o OPT_TEMPORARY
    turbine::file_read_refcount_incr ${u:o} 1
    turbine::file_read_refcount_incr ${u:i} 2
    set filename:i [ turbine::get_file_path ${u:i} ]
    set v:mapped_o [ turbine::is_file_mapped ${u:o} ]
    set filename:o [ turbine::get_file_path ${u:o} ]
    if { ${v:mapped_o} } {
    } else {
        # Var: $string optf:o FILENAME_OF [file:o]
        set optf:o [ turbine::mktemp ]
        turbine::set_filename_val ${u:o} ${optf:o}
    }
    turbine::rule [ list ${filename:i} ${filename:o} [ turbine::get_file_td ${u:i} ] ] "cp-app-leaf1 {${filename:i}} {${filename:o}} ${v:mapped_o} {${u:i}} {${u:o}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc cp-app-leaf1 { filename:i filename:o v:mapped_o u:i u:o } {
    # Var: $string v:__filename:i VALUE_OF [string:__filename:i] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:cp():24:9
    # Var: $string v:__filename:o VALUE_OF [string:__filename:o] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:cp():24:9
    # Var: $file v:i VALUE_OF [file:i] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:cp():24:9
    # Var: $file v:o VALUE_OF [file:o] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:cp():24:9
    # Var: $boolean v:3 EXPR_TEMPORARY /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:cp():24:9
    set v:__filename:i [ turbine::retrieve_string ${filename:i} ]
    set v:__filename:o [ turbine::retrieve_string ${filename:o} CACHED 1 ]
    set v:i [ turbine::retrieve_file ${u:i} CACHED 2 ]
    if { ${v:mapped_o} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:o [ turbine::create_local_file_ref ${v:__filename:o} ${tcltmp:init_rc} ${v:mapped_o} ]
    turbine::c::log [ list exec: "cp" ${v:__filename:i} ${v:__filename:o} [ dict create ] ]
    turbine::exec_external "cp" [ dict create ] ${v:__filename:i} ${v:__filename:o}
    set v:3 [ expr { ! ${v:mapped_o} } ]
    turbine::store_file ${u:o} v:o ${v:3}
    turbine::decr_local_file_refcount v:o
}


proc f:sed { u:o u:i u:command v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: sed"
    # Var: $boolean v:mapped_o OPT_TEMPORARY
    turbine::read_refcount_incr ${u:command} 1
    turbine::file_read_refcount_incr ${u:o} 1
    turbine::file_read_refcount_incr ${u:i} 2
    set filename:i [ turbine::get_file_path ${u:i} ]
    set v:mapped_o [ turbine::is_file_mapped ${u:o} ]
    set filename:o [ turbine::get_file_path ${u:o} ]
    if { ${v:mapped_o} } {
    } else {
        # Var: $string optf:o FILENAME_OF [file:o]
        set optf:o [ turbine::mktemp ]
        turbine::set_filename_val ${u:o} ${optf:o}
    }
    turbine::rule [ list ${filename:i} ${filename:o} ${u:command} [ turbine::get_file_td ${u:i} ] ] "sed-app-leaf1 {${filename:i}} {${filename:o}} ${v:mapped_o} {${u:command}} {${u:i}} {${u:o}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc sed-app-leaf1 { filename:i filename:o v:mapped_o u:command u:i u:o } {
    # Var: $string v:command VALUE_OF [string:command] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    # Var: $string v:__filename:i VALUE_OF [string:__filename:i] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    # Var: $string v:__filename:o VALUE_OF [string:__filename:o] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    # Var: $file v:i VALUE_OF [file:i] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    # Var: $file v:o VALUE_OF [file:o] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    # Var: $boolean v:3 EXPR_TEMPORARY /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:sed():40:26
    set v:command [ turbine::retrieve_string ${u:command} CACHED 1 ]
    set v:__filename:i [ turbine::retrieve_string ${filename:i} ]
    set v:__filename:o [ turbine::retrieve_string ${filename:o} CACHED 1 ]
    set v:i [ turbine::retrieve_file ${u:i} CACHED 2 ]
    if { ${v:mapped_o} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:o [ turbine::create_local_file_ref ${v:__filename:o} ${tcltmp:init_rc} ${v:mapped_o} ]
    turbine::c::log [ list exec: "sed" ${v:command} ${v:__filename:i} [ dict create "stdout" ${v:__filename:o} ] ]
    turbine::exec_external "sed" [ dict create "stdout" ${v:__filename:o} ] ${v:command} ${v:__filename:i}
    set v:3 [ expr { ! ${v:mapped_o} } ]
    turbine::store_file ${u:o} v:o ${v:3}
    turbine::decr_local_file_refcount v:o
}


proc f:echo { u:o u:s v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: echo"
    # Var: $boolean v:mapped_o OPT_TEMPORARY
    turbine::file_read_refcount_incr ${u:o} 1
    turbine::read_refcount_incr ${u:s} 1
    set v:mapped_o [ turbine::is_file_mapped ${u:o} ]
    set filename:o [ turbine::get_file_path ${u:o} ]
    if { ${v:mapped_o} } {
    } else {
        # Var: $string optf:o FILENAME_OF [file:o]
        set optf:o [ turbine::mktemp ]
        turbine::set_filename_val ${u:o} ${optf:o}
    }
    turbine::rule [ list ${filename:o} ${u:s} ] "echo-app-leaf1 {${filename:o}} ${v:mapped_o} {${u:o}} {${u:s}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc echo-app-leaf1 { filename:o v:mapped_o u:o u:s } {
    # Var: $string v:s VALUE_OF [string:s] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:echo():55:19
    # Var: $string v:__filename:o VALUE_OF [string:__filename:o] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:echo():55:19
    # Var: $file v:o VALUE_OF [file:o] /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:echo():55:19
    # Var: $boolean v:3 EXPR_TEMPORARY /usr/local/apps/bioapps/swift-t-1.1/turbine/export/unix.swift:echo():55:19
    set v:s [ turbine::retrieve_string ${u:s} CACHED 1 ]
    set v:__filename:o [ turbine::retrieve_string ${filename:o} CACHED 1 ]
    if { ${v:mapped_o} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:o [ turbine::create_local_file_ref ${v:__filename:o} ${tcltmp:init_rc} ${v:mapped_o} ]
    turbine::c::log [ list exec: "echo" ${v:s} [ dict create "stdout" ${v:__filename:o} ] ]
    turbine::exec_external "echo" [ dict create "stdout" ${v:__filename:o} ] ${v:s}
    set v:3 [ expr { ! ${v:mapped_o} } ]
    turbine::store_file ${u:o} v:o ${v:3}
    turbine::decr_local_file_refcount v:o
}


proc f:bwa_mem { u:output u:bwadir u:read1 u:read2 u:INDEX u:bwamemparams u:PBSCORES u:rgheader v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: bwa_mem"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::read_refcount_incr ${u:read1} 1
    turbine::read_refcount_incr ${u:read2} 1
    turbine::read_refcount_incr ${u:bwamemparams} 1
    turbine::read_refcount_incr ${u:rgheader} 1
    turbine::read_refcount_incr ${u:INDEX} 1
    turbine::read_refcount_incr ${u:bwadir} 1
    turbine::read_refcount_incr ${u:PBSCORES} 1
    turbine::file_read_refcount_incr ${u:output} 1
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${u:INDEX} ${u:PBSCORES} ${filename:output} ${u:bwadir} ${u:bwamemparams} ${u:read1} ${u:read2} ${u:rgheader} ] "bwa_mem-app-leaf1 {${u:INDEX}} {${u:PBSCORES}} {${filename:output}} ${v:mapped_output} {${u:bwadir}} {${u:bwamemparams}} {${u:output}} {${u:read1}} {${u:read2}} {${u:rgheader}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc bwa_mem-app-leaf1 { u:INDEX u:PBSCORES filename:output v:mapped_output u:bwadir u:bwamemparams u:output u:read1 u:read2 u:rgheader } {
    # Var: $string v:bwadir VALUE_OF [string:bwadir] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string$[int] v:bwamemparams VALUE_OF [string[int]:bwamemparams] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $int v:PBSCORES VALUE_OF [int:PBSCORES] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:rgheader VALUE_OF [string:rgheader] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:INDEX VALUE_OF [string:INDEX] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:read1 VALUE_OF [string:read1] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:read2 VALUE_OF [string:read2] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $file v:output VALUE_OF [file:output] ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    # Var: $boolean v:3 EXPR_TEMPORARY ./pipelinefunctions/align_dedup.swift:bwa_mem():4:86
    set v:bwadir [ turbine::retrieve_string ${u:bwadir} CACHED 1 ]
    set v:bwamemparams [ turbine::unpack_args ${u:bwamemparams} 1 string ]
    set v:PBSCORES [ turbine::retrieve_integer ${u:PBSCORES} CACHED 1 ]
    set v:rgheader [ turbine::retrieve_string ${u:rgheader} CACHED 1 ]
    set v:INDEX [ turbine::retrieve_string ${u:INDEX} CACHED 1 ]
    set v:read1 [ turbine::retrieve_string ${u:read1} CACHED 1 ]
    set v:read2 [ turbine::retrieve_string ${u:read2} CACHED 1 ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: __v:bwadir "mem" "-M" {*}${v:bwamemparams} "-t" ${v:PBSCORES} "-R" ${v:rgheader} ${v:INDEX} ${v:read1} ${v:read2} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external ${v:bwadir} [ dict create "stdout" ${v:__filename:output} ] "mem" "-M" {*}${v:bwamemparams} "-t" ${v:PBSCORES} "-R" ${v:rgheader} ${v:INDEX} ${v:read1} ${v:read2}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
    turbine::read_refcount_decr ${u:bwamemparams} 1
}


proc f:samtools_view { u:output u:samtoolsdir u:inputFile u:thr u:args v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: samtools_view"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::read_refcount_incr ${u:thr} 1
    turbine::file_read_refcount_incr ${u:inputFile} 2
    turbine::file_read_refcount_incr ${u:output} 1
    turbine::read_refcount_incr ${u:samtoolsdir} 1
    turbine::read_refcount_incr ${u:args} 1
    set filename:inputFile [ turbine::get_file_path ${u:inputFile} ]
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${filename:inputFile} ${filename:output} ${u:args} [ turbine::get_file_td ${u:inputFile} ] ${u:samtoolsdir} ${u:thr} ] "samtools_view-app-leaf1 {${filename:inputFile}} {${filename:output}} ${v:mapped_output} {${u:args}} {${u:inputFile}} {${u:output}} {${u:samtoolsdir}} {${u:thr}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc samtools_view-app-leaf1 { filename:inputFile filename:output v:mapped_output u:args u:inputFile u:output u:samtoolsdir u:thr } {
    # Var: $string v:samtoolsdir VALUE_OF [string:samtoolsdir] ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    # Var: $int v:thr VALUE_OF [int:thr] ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    # Var: $string v:__filename:inputFile VALUE_OF [string:__filename:inputFile] ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    # Var: $string$[int] v:args VALUE_OF [string[int]:args] ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    # Var: $file v:inputFile VALUE_OF [file:inputFile] ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    # Var: $file v:output VALUE_OF [file:output] ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    # Var: $boolean v:3 EXPR_TEMPORARY ./pipelinefunctions/align_dedup.swift:samtools_view():15:58
    set v:samtoolsdir [ turbine::retrieve_string ${u:samtoolsdir} CACHED 1 ]
    set v:thr [ turbine::retrieve_integer ${u:thr} CACHED 1 ]
    set v:__filename:inputFile [ turbine::retrieve_string ${filename:inputFile} ]
    set v:args [ turbine::unpack_args ${u:args} 1 string ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    set v:inputFile [ turbine::retrieve_file ${u:inputFile} CACHED 2 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: __v:samtoolsdir "view" "-@" ${v:thr} "-bS" ${v:__filename:inputFile} {*}${v:args} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external ${v:samtoolsdir} [ dict create "stdout" ${v:__filename:output} ] "view" "-@" ${v:thr} "-bS" ${v:__filename:inputFile} {*}${v:args}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
    turbine::read_refcount_decr ${u:args} 1
}


proc f:novosort { u:output u:novosortdir u:inputFile u:tmpdir u:thr u:sortoptions v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: novosort"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::read_refcount_incr ${u:thr} 1
    turbine::read_refcount_incr ${u:novosortdir} 1
    turbine::read_refcount_incr ${u:tmpdir} 1
    turbine::read_refcount_incr ${u:sortoptions} 1
    turbine::file_read_refcount_incr ${u:inputFile} 2
    turbine::file_read_refcount_incr ${u:output} 1
    set filename:inputFile [ turbine::get_file_path ${u:inputFile} ]
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${filename:inputFile} ${filename:output} [ turbine::get_file_td ${u:inputFile} ] ${u:novosortdir} ${u:sortoptions} ${u:thr} ${u:tmpdir} ] "novosort-app-leaf1 {${filename:inputFile}} {${filename:output}} ${v:mapped_output} {${u:inputFile}} {${u:novosortdir}} {${u:output}} {${u:sortoptions}} {${u:thr}} {${u:tmpdir}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc novosort-app-leaf1 { filename:inputFile filename:output v:mapped_output u:inputFile u:novosortdir u:output u:sortoptions u:thr u:tmpdir } {
    # Var: $string v:novosortdir VALUE_OF [string:novosortdir] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $string v:tmpdir VALUE_OF [string:tmpdir] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $int v:thr VALUE_OF [int:thr] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $string v:__filename:inputFile VALUE_OF [string:__filename:inputFile] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $string$[int] v:sortoptions VALUE_OF [string[int]:sortoptions] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $file v:inputFile VALUE_OF [file:inputFile] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $file v:output VALUE_OF [file:output] ./pipelinefunctions/align_dedup.swift:novosort():33:79
    # Var: $boolean v:3 EXPR_TEMPORARY ./pipelinefunctions/align_dedup.swift:novosort():33:79
    set v:novosortdir [ turbine::retrieve_string ${u:novosortdir} CACHED 1 ]
    set v:tmpdir [ turbine::retrieve_string ${u:tmpdir} CACHED 1 ]
    set v:thr [ turbine::retrieve_integer ${u:thr} CACHED 1 ]
    set v:__filename:inputFile [ turbine::retrieve_string ${filename:inputFile} ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    set v:sortoptions [ turbine::unpack_args ${u:sortoptions} 1 string ]
    set v:inputFile [ turbine::retrieve_file ${u:inputFile} CACHED 2 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: __v:novosortdir "--index" "--tmpdir" ${v:tmpdir} "--threads" ${v:thr} ${v:__filename:inputFile} "-o" ${v:__filename:output} {*}${v:sortoptions} [ dict create ] ]
    turbine::exec_external ${v:novosortdir} [ dict create ] "--index" "--tmpdir" ${v:tmpdir} "--threads" ${v:thr} ${v:__filename:inputFile} "-o" ${v:__filename:output} {*}${v:sortoptions}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
    turbine::read_refcount_decr ${u:sortoptions} 1
}


proc f:find_files { u:output u:dir u:pattern v:loc_rank v:loc_strictness v:loc_accuracy } {
    turbine::c::log "function: find_files"
    # Var: $boolean v:mapped_output OPT_TEMPORARY
    turbine::read_refcount_incr ${u:dir} 1
    turbine::read_refcount_incr ${u:pattern} 1
    turbine::file_read_refcount_incr ${u:output} 1
    set v:mapped_output [ turbine::is_file_mapped ${u:output} ]
    set filename:output [ turbine::get_file_path ${u:output} ]
    if { ${v:mapped_output} } {
    } else {
        # Var: $string optf:output FILENAME_OF [file:output]
        set optf:output [ turbine::mktemp ]
        turbine::set_filename_val ${u:output} ${optf:output}
    }
    turbine::rule [ list ${filename:output} ${u:dir} ${u:pattern} ] "find_files-app-leaf1 {${filename:output}} ${v:mapped_output} {${u:dir}} {${u:output}} {${u:pattern}}" target ${v:loc_rank} strictness ${v:loc_strictness} accuracy ${v:loc_accuracy}
}


proc find_files-app-leaf1 { filename:output v:mapped_output u:dir u:output u:pattern } {
    # Var: $string v:dir VALUE_OF [string:dir] ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    # Var: $string v:pattern VALUE_OF [string:pattern] ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    # Var: $string v:__filename:output VALUE_OF [string:__filename:output] ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    # Var: $file v:output VALUE_OF [file:output] ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    # Var: $boolean v:3 EXPR_TEMPORARY ./pipelinefunctions/miscellaneous.swift:find_files():17:43
    set v:dir [ turbine::retrieve_string ${u:dir} CACHED 1 ]
    set v:pattern [ turbine::retrieve_string ${u:pattern} CACHED 1 ]
    set v:__filename:output [ turbine::retrieve_string ${filename:output} CACHED 1 ]
    if { ${v:mapped_output} } {
        set tcltmp:init_rc 2
    } else {
        set tcltmp:init_rc 1
    }
    set v:output [ turbine::create_local_file_ref ${v:__filename:output} ${tcltmp:init_rc} ${v:mapped_output} ]
    turbine::c::log [ list exec: "find" ${v:dir} "-name" ${v:pattern} [ dict create "stdout" ${v:__filename:output} ] ]
    turbine::exec_external "find" [ dict create "stdout" ${v:__filename:output} ] ${v:dir} "-name" ${v:pattern}
    set v:3 [ expr { ! ${v:mapped_output} } ]
    turbine::store_file ${u:output} v:output ${v:3}
    turbine::decr_local_file_refcount v:output
}

turbine::defaults
turbine::declare_custom_work_types COASTER
turbine::init $servers "Swift"
turbine::enable_read_refcount
adlb::declare_struct_type 16 s:location [ list "rank" integer "strictness" string "accuracy" string ]
turbine::check_constants "WORKER\[WORKER\]" ${turbine::WORK_TASK} 0 "CONTROL" ${turbine::WORK_TASK} 0 "ADLB_RANK_ANY" ${adlb::RANK_ANY} -100
adlb::add_debug_symbol 1 "__c:s__GATKCombi-2" ""
adlb::add_debug_symbol 2 "__c:s_sknownSite" ""
adlb::add_debug_symbol 3 "__c:s_sknown_g" ""
adlb::add_debug_symbol 4 "__c:s_svariant_g" ""
adlb::add_debug_symbol 5 "__t:7" "VCcallingPipeline:29:33"
adlb::add_debug_symbol 6 "__t:10" "VCcallingPipeline:34:25"
adlb::add_debug_symbol 7 "__t:13" "VCcallingPipeline:34:49"
adlb::add_debug_symbol 8 "__t:648" "VCcallingPipeline:224:16"
adlb::add_debug_symbol 9 "__t:649" "VCcallingPipeline:224:40"
adlb::add_debug_symbol 10 "__t:657" "VCcallingPipeline:225:27"
adlb::add_debug_symbol 11 "samples_processing_done" "VCcallingPipeline:31:0"
adlb::add_debug_symbol 12 "docSampleInfo" "VCcallingPipeline:35:111"
adlb::add_debug_symbol 13 "jointVCF" "VCcallingPipeline:224:80"
adlb::add_debug_symbol 14 "configFile" "VCcallingPipeline:24:0"
adlb::add_debug_symbol 15 "sampleInfoFile" "VCcallingPipeline:29:0"
adlb::add_debug_symbol 16 "vars" "VCcallingPipeline:27:0"
adlb::add_debug_symbol 17 "docRunfile" "VCcallingPipeline:34:99"
adlb::add_debug_symbol 18 "variantFiles" "VCcallingPipeline:225:42"
adlb::add_debug_symbol 19 "__t:28" "VCcallingPipeline:__entry():45:88"
adlb::add_debug_symbol 20 "__t:30" "VCcallingPipeline:__entry():45:106"
adlb::add_debug_symbol 21 "__t:32" "VCcallingPipeline:__entry():45:148"
adlb::add_debug_symbol 22 "__t:53" "VCcallingPipeline:__entry():59:14"
adlb::add_debug_symbol 23 "__t:97" "VCcallingPipeline:__entry():71:5"
adlb::add_debug_symbol 24 "__t:320" "VCcallingPipeline:__entry():122:31"
adlb::add_debug_symbol 25 "__t:341" "VCcallingPipeline:__entry():132:30"
adlb::add_debug_symbol 26 "__t:379" "VCcallingPipeline:__entry():150:17"
adlb::add_debug_symbol 27 "__t:96" "VCcallingPipeline:__entry():71:32"
adlb::add_debug_symbol 28 "__t:340" "VCcallingPipeline:__entry():132:17"
adlb::add_debug_symbol 29 "indices" "VCcallingPipeline:__entry():150:9"
adlb::add_debug_symbol 30 "keyValuePair" "pipelinefunctions.miscellaneous:getConfigVariables():8:16"
adlb::add_debug_symbol 31 "varlist" "VCcallingPipeline:__entry():229:1"
adlb::add_debug_symbol 32 "__t:678" "VCcallingPipeline:__entry():229:48"
adlb::add_debug_symbol 33 "__t:684" "VCcallingPipeline:__entry():230:27"
adlb::add_debug_symbol 34 "__t:686" "VCcallingPipeline:__entry():230:44"
adlb::add_debug_symbol 35 "__t:689" "VCcallingPipeline:__entry():230:61"
adlb::add_debug_symbol 36 "__t:691" "VCcallingPipeline:__entry():230:82"
adlb::add_debug_symbol 37 "sampleInfo" "VCcallingPipeline:__entry():40:1"
adlb::add_debug_symbol 38 "read1" "VCcallingPipeline:__entry():42:1"
adlb::add_debug_symbol 39 "read2" "VCcallingPipeline:__entry():43:1"
adlb::add_debug_symbol 40 "rgheader" "VCcallingPipeline:__entry():45:1"
adlb::add_debug_symbol 41 "AlignDir" "VCcallingPipeline:__entry():49:1"
adlb::add_debug_symbol 42 "VarcallDir" "VCcallingPipeline:__entry():50:1"
adlb::add_debug_symbol 43 "RealignDir" "VCcallingPipeline:__entry():51:1"
adlb::add_debug_symbol 44 "__t:47" "VCcallingPipeline:__entry():55:23"
adlb::add_debug_symbol 45 "dedupsortedbam" "VCcallingPipeline:__entry():55:52"
adlb::add_debug_symbol 46 "__t:49" "VCcallingPipeline:__entry():56:15"
adlb::add_debug_symbol 47 "outbam" "VCcallingPipeline:__entry():56:46"
adlb::add_debug_symbol 48 "__t:51" "VCcallingPipeline:__entry():57:19"
adlb::add_debug_symbol 49 "rawvariant" "VCcallingPipeline:__entry():57:50"
adlb::add_debug_symbol 50 "qcfile" "VCcallingPipeline:__entry():59:69"
adlb::add_debug_symbol 51 "__t:60" "VCcallingPipeline:__entry():60:18"
adlb::add_debug_symbol 52 "mergedbam" "VCcallingPipeline:__entry():60:107"
adlb::add_debug_symbol 53 "mergedvariant" "VCcallingPipeline:__entry():61:111"
adlb::add_debug_symbol 54 "flagstats" "VCcallingPipeline:__entry():64:68"
adlb::add_debug_symbol 55 "__t:81" "VCcallingPipeline:__entry():67:19"
adlb::add_debug_symbol 56 "alignedsam" "VCcallingPipeline:__entry():67:65"
adlb::add_debug_symbol 57 "chr_bamListfile" "VCcallingPipeline:__entry():68:64"
adlb::add_debug_symbol 58 "chr_vcfListfile" "VCcallingPipeline:__entry():69:63"
adlb::add_debug_symbol 59 "stat" "VCcallingPipeline:__entry():124:1"
adlb::add_debug_symbol 60 "__t:322" "VCcallingPipeline:__entry():125:14"
adlb::add_debug_symbol 61 "__t:325" "VCcallingPipeline:__entry():126:13"
adlb::add_debug_symbol 62 "__t:328" "VCcallingPipeline:__entry():127:12"
adlb::add_debug_symbol 63 "perc_mapped" "VCcallingPipeline:__entry():130:12"
adlb::add_debug_symbol 64 "__t:335" "VCcallingPipeline:__entry():130:38"
adlb::add_debug_symbol 65 "chromosomes_processing_done" "VCcallingPipeline:__entry():151:1"
adlb::add_debug_symbol 66 "chr_bamList" "VCcallingPipeline:__entry():208:1"
adlb::add_debug_symbol 67 "__t:611" "VCcallingPipeline:__entry():213:38"
adlb::add_debug_symbol 68 "chr_vcfList" "VCcallingPipeline:__entry():215:1"
adlb::add_debug_symbol 69 "__t:617" "VCcallingPipeline:__entry():215:52"
adlb::add_debug_symbol 70 "__t:100" "VCcallingPipeline:__entry():72:18"
adlb::add_debug_symbol 71 "dedupsam" "VCcallingPipeline:__entry():72:64"
adlb::add_debug_symbol 72 "__t:105" "VCcallingPipeline:__entry():73:18"
adlb::add_debug_symbol 73 "dedupbam" "VCcallingPipeline:__entry():73:47"
adlb::add_debug_symbol 74 "__t:107" "VCcallingPipeline:__entry():75:23"
adlb::add_debug_symbol 75 "__t:109" "VCcallingPipeline:__entry():75:53"
adlb::add_debug_symbol 76 "__t:111" "VCcallingPipeline:__entry():75:72"
adlb::add_debug_symbol 77 "__t:112" "VCcallingPipeline:__entry():75:72"
adlb::add_debug_symbol 78 "__t:114" "VCcallingPipeline:__entry():75:95"
adlb::add_debug_symbol 79 "__t:115" "VCcallingPipeline:__entry():75:106"
adlb::add_debug_symbol 80 "__t:138" "VCcallingPipeline:__entry():80:35"
adlb::add_debug_symbol 81 "__t:142" "VCcallingPipeline:__entry():81:28"
adlb::add_debug_symbol 82 "__t:149" "VCcallingPipeline:__entry():81:105"
adlb::add_debug_symbol 83 "__t:117" "VCcallingPipeline:__entry():76:24"
adlb::add_debug_symbol 84 "__t:124" "VCcallingPipeline:__entry():77:89"
adlb::add_debug_symbol 85 "__t:131" "VCcallingPipeline:__entry():79:46"
adlb::add_debug_symbol 86 "__t:157" "VCcallingPipeline:__entry():83:55"
adlb::add_debug_symbol 87 "__t:168" "VCcallingPipeline:__entry():86:19"
adlb::add_debug_symbol 88 "alignedbam" "VCcallingPipeline:__entry():86:48"
adlb::add_debug_symbol 89 "alignedsortedbam" "VCcallingPipeline:__entry():88:55"
adlb::add_debug_symbol 90 "metricsfile" "VCcallingPipeline:__entry():89:50"
adlb::add_debug_symbol 91 "__t:178" "VCcallingPipeline:__entry():90:24"
adlb::add_debug_symbol 92 "__t:180" "VCcallingPipeline:__entry():90:54"
adlb::add_debug_symbol 93 "__t:182" "VCcallingPipeline:__entry():90:73"
adlb::add_debug_symbol 94 "__t:183" "VCcallingPipeline:__entry():90:73"
adlb::add_debug_symbol 95 "__t:185" "VCcallingPipeline:__entry():90:96"
adlb::add_debug_symbol 96 "__t:186" "VCcallingPipeline:__entry():90:107"
adlb::add_debug_symbol 97 "__t:207" "VCcallingPipeline:__entry():94:38"
adlb::add_debug_symbol 98 "__t:211" "VCcallingPipeline:__entry():95:31"
adlb::add_debug_symbol 99 "__t:218" "VCcallingPipeline:__entry():95:96"
adlb::add_debug_symbol 100 "__t:237" "VCcallingPipeline:__entry():99:45"
adlb::add_debug_symbol 101 "__t:193" "VCcallingPipeline:__entry():91:94"
adlb::add_debug_symbol 102 "__t:200" "VCcallingPipeline:__entry():93:49"
adlb::add_debug_symbol 103 "__t:219" "VCcallingPipeline:__entry():96:39"
adlb::add_debug_symbol 104 "__t:221" "VCcallingPipeline:__entry():96:56"
adlb::add_debug_symbol 105 "__t:230" "VCcallingPipeline:__entry():98:56"
adlb::add_debug_symbol 106 "__t:242" "VCcallingPipeline:__entry():102:7"
adlb::add_debug_symbol 107 "__t:295" "VCcallingPipeline:__entry():113:30"
adlb::add_debug_symbol 108 "__t:299" "VCcallingPipeline:__entry():113:78"
adlb::add_debug_symbol 109 "__t:300" "VCcallingPipeline:__entry():113:89"
adlb::add_debug_symbol 110 "__t:302" "VCcallingPipeline:__entry():113:109"
adlb::add_debug_symbol 111 "__t:309" "VCcallingPipeline:__entry():115:57"
adlb::add_debug_symbol 112 "__t:245" "VCcallingPipeline:__entry():103:25"
adlb::add_debug_symbol 113 "__t:247" "VCcallingPipeline:__entry():103:55"
adlb::add_debug_symbol 114 "__t:249" "VCcallingPipeline:__entry():103:74"
adlb::add_debug_symbol 115 "__t:250" "VCcallingPipeline:__entry():103:74"
adlb::add_debug_symbol 116 "__t:252" "VCcallingPipeline:__entry():103:97"
adlb::add_debug_symbol 117 "__t:253" "VCcallingPipeline:__entry():103:108"
adlb::add_debug_symbol 118 "__t:260" "VCcallingPipeline:__entry():104:94"
adlb::add_debug_symbol 119 "__t:262" "VCcallingPipeline:__entry():106:27"
adlb::add_debug_symbol 120 "__t:264" "VCcallingPipeline:__entry():106:63"
adlb::add_debug_symbol 121 "__t:269" "VCcallingPipeline:__entry():106:114"
adlb::add_debug_symbol 122 "__t:270" "VCcallingPipeline:__entry():106:125"
adlb::add_debug_symbol 123 "__t:277" "VCcallingPipeline:__entry():107:95"
adlb::add_debug_symbol 124 "__t:284" "VCcallingPipeline:__entry():110:49"
adlb::add_debug_symbol 125 "__t:580" "VCcallingPipeline:__entry():203:44"
adlb::add_debug_symbol 126 "__t:582" "VCcallingPipeline:__entry():204:44"
adlb::add_debug_symbol 127 "__t:591" "VCcallingPipeline:__entry():209:20"
adlb::add_debug_symbol 128 "__t:596" "VCcallingPipeline:__entry():209:81"
adlb::add_debug_symbol 129 "__t:604" "VCcallingPipeline:__entry():212:49"
adlb::add_debug_symbol 130 "__t:345" "VCcallingPipeline:__entry():133:34"
adlb::add_debug_symbol 131 "__t:347" "VCcallingPipeline:__entry():134:205"
adlb::add_debug_symbol 132 "__t:363" "VCcallingPipeline:__entry():136:209"
adlb::add_debug_symbol 133 "__t:623" "VCcallingPipeline:__entry():216:28"
adlb::add_debug_symbol 134 "__t:625" "VCcallingPipeline:__entry():216:45"
adlb::add_debug_symbol 135 "__t:628" "VCcallingPipeline:__entry():216:62"
adlb::add_debug_symbol 136 "__t:630" "VCcallingPipeline:__entry():216:83"
adlb::add_debug_symbol 137 "__t:635" "VCcallingPipeline:__entry():216:123"
adlb::add_debug_symbol 138 "__t:640" "VCcallingPipeline:__entry():218:32"
adlb::add_debug_symbol 139 "__t:641" "VCcallingPipeline:__entry():218:37"
adlb::add_debug_symbol 140 "__t:417" "VCcallingPipeline:__entry():169:85"
adlb::add_debug_symbol 141 "__t:439" "VCcallingPipeline:__entry():174:35"
adlb::add_debug_symbol 142 "__t:441" "VCcallingPipeline:__entry():174:56"
adlb::add_debug_symbol 143 "__t:489" "VCcallingPipeline:__entry():186:34"
adlb::add_debug_symbol 144 "__t:491" "VCcallingPipeline:__entry():186:51"
adlb::add_debug_symbol 145 "__t:496" "VCcallingPipeline:__entry():186:89"
adlb::add_debug_symbol 146 "__t:528" "VCcallingPipeline:__entry():190:192"
adlb::add_debug_symbol 147 "__t:416" "VCcallingPipeline:__entry():169:74"
adlb::add_debug_symbol 148 "__t:493" "VCcallingPipeline:__entry():186:88"
adlb::add_debug_symbol 149 "__t:525" "VCcallingPipeline:__entry():190:191"
adlb::add_debug_symbol 150 "__t:437" "VCcallingPipeline:__entry():174:28"
adlb::add_debug_symbol 151 "chrdedupsortedbam" "VCcallingPipeline:__entry():156:68"
adlb::add_debug_symbol 152 "realignedbam" "VCcallingPipeline:__entry():158:63"
adlb::add_debug_symbol 153 "recalibratedbam" "VCcallingPipeline:__entry():159:66"
adlb::add_debug_symbol 154 "intervals" "VCcallingPipeline:__entry():160:61"
adlb::add_debug_symbol 155 "recalreport" "VCcallingPipeline:__entry():161:63"
adlb::add_debug_symbol 156 "gvcfvariant" "VCcallingPipeline:__entry():162:62"
adlb::add_debug_symbol 157 "recalfiles" "VCcallingPipeline:__entry():164:71"
adlb::add_debug_symbol 158 "realfiles" "VCcallingPipeline:__entry():165:70"
adlb::add_debug_symbol 159 "ploidy" "VCcallingPipeline:__entry():167:3"
adlb::add_debug_symbol 160 "__t:419" "VCcallingPipeline:__entry():169:105"
adlb::add_debug_symbol 161 "__t:444" "VCcallingPipeline:__entry():174:80"
adlb::add_debug_symbol 162 "recalparmsindels" "VCcallingPipeline:__entry():175:3"
adlb::add_debug_symbol 163 "__t:450" "VCcallingPipeline:__entry():175:59"
adlb::add_debug_symbol 164 "realparms" "VCcallingPipeline:__entry():178:3"
adlb::add_debug_symbol 165 "__t:469" "VCcallingPipeline:__entry():178:52"
adlb::add_debug_symbol 166 "__t:426" "VCcallingPipeline:__entry():171:59"
adlb::add_debug_symbol 167 "__t:503" "VCcallingPipeline:__entry():188:54"
adlb::add_debug_symbol 168 "__t:547" "VCcallingPipeline:__entry():193:57"
adlb::add_debug_symbol 169 "__t:577" "VCcallingPipeline:__entry():196:30"
adlb::add_debug_symbol 170 "__t:578" "VCcallingPipeline:__entry():196:35"
turbine::start swift:main swift:constants
turbine::finalize
